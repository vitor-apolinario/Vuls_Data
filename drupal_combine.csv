sourcecode,crashes,severity
"T_OPEN_TAG T_INCLUDE_ONCE ; T_STRING ( T_STRING ) ; T_STRING ( ) ;",0,0
"T_OPEN_TAG T_FUNCTION(actions_do) ( T_VARIABLE($action_ids) , & T_VARIABLE($object) , T_VARIABLE($context) = T_STRING , T_VARIABLE($a1) = T_STRING , T_VARIABLE($a2) = T_STRING ) { T_STATIC T_VARIABLE($stack) ; T_VARIABLE($stack) T_INC ; T_IF ( T_VARIABLE($stack) > T_STRING ( , T_LNUMBER ) ) { T_STRING ( , , T_STRING ) ; T_RETURN ; } T_VARIABLE($actions) = T_ARRAY ( ) ; T_VARIABLE($available_actions) = T_STRING ( ) ; T_VARIABLE($result) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($action_ids) ) ) { T_VARIABLE($where) = T_ARRAY ( ) ; T_VARIABLE($where_values) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($action_ids) T_AS T_VARIABLE($action_id) ) { T_IF ( T_STRING ( T_VARIABLE($action_id) ) ) { T_VARIABLE($where) [ ] = ; T_VARIABLE($where_values) [ ] = T_VARIABLE($action_id) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($available_actions) [ T_VARIABLE($action_id) ] ) ) { T_VARIABLE($actions) [ T_VARIABLE($action_id) ] = T_VARIABLE($available_actions) [ T_VARIABLE($action_id) ] ; } } T_IF ( T_VARIABLE($where) ) { T_VARIABLE($where_clause) = T_STRING ( , T_VARIABLE($where) ) ; T_VARIABLE($where_clause) = . T_STRING ( T_VARIABLE($where_clause) , ) . ; T_VARIABLE($result_db) = T_STRING ( . T_VARIABLE($where_clause) , T_VARIABLE($where_values) ) ; T_WHILE ( T_VARIABLE($action) = T_STRING ( T_VARIABLE($result_db) ) ) { T_VARIABLE($actions) [ T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ? T_STRING ( T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) : T_ARRAY ( ) ; T_VARIABLE($actions) [ T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($actions) [ T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ; } } T_FOREACH ( T_VARIABLE($actions) T_AS T_VARIABLE($action_id) T_DOUBLE_ARROW T_VARIABLE($params) ) { T_IF ( T_STRING ( T_VARIABLE($action_id) ) ) { T_VARIABLE($function) = T_VARIABLE($params) [ ] ; T_VARIABLE($context) = T_STRING ( T_VARIABLE($context) , T_VARIABLE($params) ) ; T_VARIABLE($result) [ T_VARIABLE($action_id) ] = T_VARIABLE($function) ( T_VARIABLE($object) , T_VARIABLE($context) , T_VARIABLE($a1) , T_VARIABLE($a2) ) ; } T_ELSE { T_VARIABLE($result) [ T_VARIABLE($action_id) ] = T_VARIABLE($action_id) ( T_VARIABLE($object) , T_VARIABLE($context) , T_VARIABLE($a1) , T_VARIABLE($a2) ) ; } } } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($action_ids) ) ) { T_VARIABLE($action) = T_STRING ( T_STRING ( , T_VARIABLE($action_ids) ) ) ; T_VARIABLE($function) = T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($context) = T_STRING ( T_VARIABLE($context) , T_STRING ( T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($result) [ T_VARIABLE($action_ids) ] = T_VARIABLE($function) ( T_VARIABLE($object) , T_VARIABLE($context) , T_VARIABLE($a1) , T_VARIABLE($a2) ) ; } T_ELSE { T_VARIABLE($result) [ T_VARIABLE($action_ids) ] = T_VARIABLE($action_ids) ( T_VARIABLE($object) , T_VARIABLE($context) , T_VARIABLE($a1) , T_VARIABLE($a2) ) ; } } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(actions_list) ( T_VARIABLE($reset) = T_STRING ) { T_STATIC T_VARIABLE($actions) ; T_IF ( ! T_ISSET ( T_VARIABLE($actions) ) T_BOOLEAN_OR T_VARIABLE($reset) ) { T_VARIABLE($actions) = T_STRING ( ) ; T_STRING ( , T_VARIABLE($actions) ) ; } T_RETURN T_ARRAY_CAST T_VARIABLE($actions) ; } T_FUNCTION(actions_get_all_actions) ( ) { T_VARIABLE($actions) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($action) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($actions) [ T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_BOOL_CAST T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING , ) ; } T_RETURN T_VARIABLE($actions) ; } T_FUNCTION(actions_actions_map) ( T_VARIABLE($actions) ) { T_VARIABLE($actions_map) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($actions) T_AS T_VARIABLE($callback) T_DOUBLE_ARROW T_VARIABLE($array) ) { T_VARIABLE($key) = T_STRING ( T_VARIABLE($callback) ) ; T_VARIABLE($actions_map) [ T_VARIABLE($key) ] [ ] = T_ISSET ( T_VARIABLE($array) [ ] ) ? T_VARIABLE($array) [ ] : T_VARIABLE($callback) ; T_VARIABLE($actions_map) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($array) [ ] ; T_VARIABLE($actions_map) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($array) [ ] ; T_VARIABLE($actions_map) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($array) [ ] ; } T_RETURN T_VARIABLE($actions_map) ; } T_FUNCTION(actions_function_lookup) ( T_VARIABLE($hash) ) { T_VARIABLE($actions_list) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($actions_list) T_AS T_VARIABLE($function) T_DOUBLE_ARROW T_VARIABLE($array) ) { T_IF ( T_STRING ( T_VARIABLE($function) ) T_IS_EQUAL T_VARIABLE($hash) ) { T_RETURN T_VARIABLE($function) ; } } T_VARIABLE($aid) = T_STRING ( T_STRING ( , T_VARIABLE($hash) ) ) ; T_RETURN T_VARIABLE($aid) ; } T_FUNCTION(actions_synchronize) ( T_VARIABLE($actions_in_code) = T_ARRAY ( ) , T_VARIABLE($delete_orphans) = T_STRING ) { T_IF ( ! T_VARIABLE($actions_in_code) ) { T_VARIABLE($actions_in_code) = T_STRING ( ) ; } T_VARIABLE($actions_in_db) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($action) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($actions_in_db) [ T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) ; } T_FOREACH ( T_VARIABLE($actions_in_code) T_AS T_VARIABLE($callback) T_DOUBLE_ARROW T_VARIABLE($array) ) { T_IF ( ! T_VARIABLE($array) [ ] ) { T_IF ( T_STRING ( T_VARIABLE($callback) , T_VARIABLE($actions_in_db) ) ) { T_UNSET ( T_VARIABLE($actions_in_db) [ T_VARIABLE($callback) ] ) ; } T_ELSE { T_STRING ( , T_VARIABLE($callback) , T_VARIABLE($array) [ ] , T_VARIABLE($callback) , , T_VARIABLE($array) [ ] ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($array) [ ] ) ) ) ; } } } T_IF ( T_VARIABLE($actions_in_db) ) { T_VARIABLE($orphaned) = T_ARRAY ( ) ; T_VARIABLE($placeholder) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($actions_in_db) T_AS T_VARIABLE($callback) T_DOUBLE_ARROW T_VARIABLE($array) ) { T_VARIABLE($orphaned) [ ] = T_VARIABLE($callback) ; T_VARIABLE($placeholder) [ ] = ; } T_VARIABLE($orphans) = T_STRING ( , T_VARIABLE($orphaned) ) ; T_IF ( T_VARIABLE($delete_orphans) ) { T_VARIABLE($placeholders) = T_STRING ( , T_VARIABLE($placeholder) ) ; T_VARIABLE($results) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($placeholders) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($orphaned) ) ; T_WHILE ( T_VARIABLE($action) = T_STRING ( T_VARIABLE($results) ) ) { T_STRING ( T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } T_ELSE { T_VARIABLE($link) = T_STRING ( T_STRING ( ) , ) ; T_VARIABLE($count) = T_STRING ( T_VARIABLE($actions_in_db) ) ; T_STRING ( , T_STRING ( T_VARIABLE($count) , , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($count) , T_DOUBLE_ARROW T_VARIABLE($orphans) , T_DOUBLE_ARROW T_VARIABLE($link) ) , ) ) ; } } } T_FUNCTION(actions_save) ( T_VARIABLE($function) , T_VARIABLE($type) , T_VARIABLE($params) , T_VARIABLE($desc) , T_VARIABLE($aid) = T_STRING ) { T_VARIABLE($serialized) = T_STRING ( T_VARIABLE($params) ) ; T_IF ( T_VARIABLE($aid) ) { T_STRING ( , T_VARIABLE($function) , T_VARIABLE($type) , T_VARIABLE($serialized) , T_VARIABLE($desc) , T_VARIABLE($aid) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($desc) ) ) ; } T_ELSE { T_STRING ( ) ; T_VARIABLE($aid) = T_STRING ( , ) ; T_STRING ( , T_VARIABLE($aid) , T_VARIABLE($function) , T_VARIABLE($type) , T_VARIABLE($serialized) , T_VARIABLE($desc) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($desc) ) ) ; } T_RETURN T_VARIABLE($aid) ; } T_FUNCTION(actions_load) ( T_VARIABLE($aid) ) { T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($aid) ) ) ; } T_FUNCTION(actions_delete) ( T_VARIABLE($aid) ) { T_STRING ( , T_VARIABLE($aid) ) ; T_STRING ( , T_VARIABLE($aid) ) ; }",13,1
"T_OPEN_TAG T_FUNCTION(_batch_page) ( ) { T_VARIABLE($batch) = & T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) T_BOOLEAN_AND T_VARIABLE($data) = T_STRING ( T_STRING ( , T_VARIABLE($_REQUEST) [ ] , T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ) ) { T_VARIABLE($batch) = T_STRING ( T_VARIABLE($data) ) ; } T_ELSE { T_RETURN T_STRING ; } T_STRING ( ) ; T_VARIABLE($op) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : ; T_VARIABLE($output) = T_STRING ; T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($output) = T_STRING ( ) ; T_BREAK ; T_CASE : T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($output) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($output) = T_STRING ( ) ; T_BREAK ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_batch_start) ( ) { T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ ] ) T_BOOLEAN_AND T_VARIABLE($_COOKIE) [ ] ) { T_RETURN T_STRING ( ) ; } T_ELSE { T_RETURN T_STRING ( ) ; } } T_FUNCTION(_batch_progress_page_js) ( ) { T_VARIABLE($batch) = T_STRING ( ) ; T_VARIABLE($current_set) = T_STRING ( ) ; T_STRING ( T_VARIABLE($current_set) [ ] ) ; T_STRING ( , , , T_STRING , T_STRING ) ; T_VARIABLE($url) = T_STRING ( T_VARIABLE($batch) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($batch) [ ] ) ) ) ; T_VARIABLE($js_setting) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($current_set) [ ] . . T_VARIABLE($batch) [ ] , T_DOUBLE_ARROW T_VARIABLE($current_set) [ ] , T_DOUBLE_ARROW T_VARIABLE($url) , ) , ) ; T_STRING ( T_VARIABLE($js_setting) , ) ; T_STRING ( , , , T_STRING , T_STRING ) ; T_VARIABLE($output) = ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_batch_do) ( ) { T_IF ( T_VARIABLE($_SERVER) [ ] T_IS_NOT_EQUAL ) { T_STRING ( T_STRING ( ) , ) ; T_STRING ( T_STRING ( ) ) ; T_RETURN ; } T_LIST ( T_VARIABLE($percentage) , T_VARIABLE($message) ) = T_STRING ( ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($percentage) , T_DOUBLE_ARROW T_VARIABLE($message) ) ) ; } T_FUNCTION(_batch_progress_page_nojs) ( ) { T_VARIABLE($batch) = & T_STRING ( ) ; T_VARIABLE($current_set) = T_STRING ( ) ; T_STRING ( T_VARIABLE($current_set) [ ] ) ; T_VARIABLE($new_op) = ; T_IF ( ! T_ISSET ( T_VARIABLE($batch) [ ] ) ) { T_VARIABLE($percentage) = T_LNUMBER ; T_VARIABLE($message) = T_VARIABLE($current_set) [ ] ; T_VARIABLE($batch) [ ] = T_STRING ; } T_ELSE { T_STRING ( ) ; T_VARIABLE($fallback) = T_VARIABLE($current_set) [ ] . . T_VARIABLE($batch) [ ] ; T_VARIABLE($fallback) = T_STRING ( , T_VARIABLE($fallback) , T_STRING , T_STRING ) ; T_LIST ( T_VARIABLE($fallback) ) = T_STRING ( , T_VARIABLE($fallback) ) ; T_PRINT T_VARIABLE($fallback) ; T_LIST ( T_VARIABLE($percentage) , T_VARIABLE($message) ) = T_STRING ( T_VARIABLE($batch) ) ; T_IF ( T_VARIABLE($percentage) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($new_op) = ; } T_STRING ( ) ; } T_VARIABLE($url) = T_STRING ( T_VARIABLE($batch) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($batch) [ ] , T_DOUBLE_ARROW T_VARIABLE($new_op) ) ) ) ; T_STRING ( . T_VARIABLE($url) . ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($percentage) , T_VARIABLE($message) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_batch_process) ( ) { T_VARIABLE($batch) = & T_STRING ( ) ; T_VARIABLE($current_set) = & T_STRING ( ) ; T_VARIABLE($set_changed) = T_STRING ; T_IF ( T_VARIABLE($batch) [ ] ) { T_STRING ( ) ; } T_WHILE ( ! T_VARIABLE($current_set) [ ] ) { T_IF ( T_VARIABLE($set_changed) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($current_set) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($current_set) [ ] ) ) { T_INCLUDE_ONCE ( T_VARIABLE($current_set) [ ] ) ; } T_VARIABLE($finished) = T_LNUMBER ; T_VARIABLE($task_message) = ; T_IF ( ( T_LIST ( T_VARIABLE($function) , T_VARIABLE($args) ) = T_STRING ( T_VARIABLE($current_set) [ ] ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($batch_context) = T_ARRAY ( T_DOUBLE_ARROW & T_VARIABLE($current_set) [ ] , T_DOUBLE_ARROW & T_VARIABLE($current_set) [ ] , T_DOUBLE_ARROW & T_VARIABLE($finished) , T_DOUBLE_ARROW & T_VARIABLE($task_message) ) ; T_STRING ( T_VARIABLE($function) , T_STRING ( T_VARIABLE($args) , T_ARRAY ( & T_VARIABLE($batch_context) ) ) ) ; } T_IF ( T_VARIABLE($finished) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($finished) = T_LNUMBER ; T_STRING ( T_VARIABLE($current_set) [ ] ) ; T_VARIABLE($current_set) [ ] = T_ARRAY ( ) ; } T_VARIABLE($set_changed) = T_STRING ; T_VARIABLE($old_set) = T_VARIABLE($current_set) ; T_WHILE ( T_EMPTY ( T_VARIABLE($current_set) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($current_set) [ ] = T_STRING ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($current_set) = & T_STRING ( ) ; T_VARIABLE($set_changed) = T_STRING ; } T_IF ( T_VARIABLE($batch) [ ] T_BOOLEAN_AND T_STRING ( ) > T_LNUMBER ) { T_BREAK ; } } T_IF ( T_VARIABLE($batch) [ ] ) { T_IF ( T_VARIABLE($set_changed) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($current_set) [ ] ) ) { T_VARIABLE($remaining) = T_STRING ( T_VARIABLE($current_set) [ ] ) ; T_VARIABLE($total) = T_VARIABLE($current_set) [ ] ; T_VARIABLE($progress_message) = T_VARIABLE($current_set) [ ] ; T_VARIABLE($task_message) = ; } T_ELSE { T_VARIABLE($remaining) = T_STRING ( T_VARIABLE($old_set) [ ] ) ; T_VARIABLE($total) = T_VARIABLE($old_set) [ ] ; T_VARIABLE($progress_message) = T_VARIABLE($old_set) [ ] ; } T_VARIABLE($current) = T_VARIABLE($total) - T_VARIABLE($remaining) + T_VARIABLE($finished) ; T_VARIABLE($percentage) = T_VARIABLE($total) ? T_STRING ( T_VARIABLE($current) / T_VARIABLE($total) * T_LNUMBER ) : T_LNUMBER ; T_VARIABLE($values) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($remaining) , T_DOUBLE_ARROW T_VARIABLE($total) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($current) ) , T_DOUBLE_ARROW T_VARIABLE($percentage) , ) ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($progress_message) , T_VARIABLE($values) ) . ; T_VARIABLE($message) T_CONCAT_EQUAL T_VARIABLE($task_message) ? T_VARIABLE($task_message) : ; T_RETURN T_ARRAY ( T_VARIABLE($percentage) , T_VARIABLE($message) ) ; } T_ELSE { T_RETURN T_STRING ( ) ; } } T_FUNCTION(& _batch_current_set) ( ) { T_VARIABLE($batch) = & T_STRING ( ) ; T_RETURN T_VARIABLE($batch) [ ] [ T_VARIABLE($batch) [ ] ] ; } T_FUNCTION(_batch_next_set) ( ) { T_VARIABLE($batch) = & T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($batch) [ ] [ T_VARIABLE($batch) [ ] + T_LNUMBER ] ) ) { T_VARIABLE($batch) [ ] T_INC ; T_VARIABLE($current_set) = & T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($current_set) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($function) = T_VARIABLE($current_set) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($function) ( T_VARIABLE($batch) [ ] , T_VARIABLE($batch) [ ] ) ; } T_RETURN T_STRING ; } } T_FUNCTION(_batch_finished) ( ) { T_VARIABLE($batch) = & T_STRING ( ) ; T_FOREACH ( T_VARIABLE($batch) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($batch_set) ) { T_IF ( T_ISSET ( T_VARIABLE($batch_set) [ ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($batch_set) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($batch_set) [ ] ) ) { T_INCLUDE_ONCE ( T_VARIABLE($batch_set) [ ] ) ; } T_IF ( T_STRING ( T_VARIABLE($batch_set) [ ] ) ) { T_VARIABLE($batch_set) [ ] ( T_VARIABLE($batch_set) [ ] , T_VARIABLE($batch_set) [ ] , T_VARIABLE($batch_set) [ ] ) ; } } } T_IF ( T_VARIABLE($batch) [ ] ) { T_STRING ( , T_VARIABLE($batch) [ ] ) ; } T_VARIABLE($_batch) = T_VARIABLE($batch) ; T_VARIABLE($batch) = T_STRING ; T_IF ( T_VARIABLE($_batch) [ ] ) { T_IF ( T_ISSET ( T_VARIABLE($_batch) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_batch) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($_batch) [ ] [ ] ) ) { T_VARIABLE($redirect) = T_VARIABLE($_batch) [ ] [ ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_batch) [ ] ) ) { T_VARIABLE($redirect) = T_VARIABLE($_batch) [ ] ; } T_ELSE { T_VARIABLE($redirect) = T_VARIABLE($_batch) [ ] ; } T_VARIABLE($form) = T_ISSET ( T_VARIABLE($batch) [ ] ) ? T_VARIABLE($batch) [ ] : T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($_batch) [ ] [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_batch) [ ] [ ] ) ) { T_STRING ( T_VARIABLE($form) , T_VARIABLE($redirect) ) ; } T_VARIABLE($_SESSION) [ ] = T_VARIABLE($_batch) [ ] ; T_STRING ( T_VARIABLE($_batch) [ ] ) ; } } T_FUNCTION(_batch_shutdown) ( ) { T_IF ( T_VARIABLE($batch) = T_STRING ( ) ) { T_STRING ( , T_STRING ( T_VARIABLE($batch) ) , T_VARIABLE($batch) [ ] ) ; } }",13,0
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , - T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(timer_start) ( T_VARIABLE($name) ) { T_GLOBAL T_VARIABLE($timers) ; T_LIST ( T_VARIABLE($usec) , T_VARIABLE($sec) ) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($timers) [ T_VARIABLE($name) ] [ ] = T_DOUBLE_CAST T_VARIABLE($usec) + T_DOUBLE_CAST T_VARIABLE($sec) ; T_VARIABLE($timers) [ T_VARIABLE($name) ] [ ] = T_ISSET ( T_VARIABLE($timers) [ T_VARIABLE($name) ] [ ] ) ? T_INC T_VARIABLE($timers) [ T_VARIABLE($name) ] [ ] : T_LNUMBER ; } T_FUNCTION(timer_read) ( T_VARIABLE($name) ) { T_GLOBAL T_VARIABLE($timers) ; T_IF ( T_ISSET ( T_VARIABLE($timers) [ T_VARIABLE($name) ] [ ] ) ) { T_LIST ( T_VARIABLE($usec) , T_VARIABLE($sec) ) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($stop) = T_DOUBLE_CAST T_VARIABLE($usec) + T_DOUBLE_CAST T_VARIABLE($sec) ; T_VARIABLE($diff) = T_STRING ( ( T_VARIABLE($stop) - T_VARIABLE($timers) [ T_VARIABLE($name) ] [ ] ) * T_LNUMBER , T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($timers) [ T_VARIABLE($name) ] [ ] ) ) { T_VARIABLE($diff) T_PLUS_EQUAL T_VARIABLE($timers) [ T_VARIABLE($name) ] [ ] ; } T_RETURN T_VARIABLE($diff) ; } } T_FUNCTION(timer_stop) ( T_VARIABLE($name) ) { T_GLOBAL T_VARIABLE($timers) ; T_VARIABLE($timers) [ T_VARIABLE($name) ] [ ] = T_STRING ( T_VARIABLE($name) ) ; T_UNSET ( T_VARIABLE($timers) [ T_VARIABLE($name) ] [ ] ) ; T_RETURN T_VARIABLE($timers) [ T_VARIABLE($name) ] ; } T_FUNCTION(conf_path) ( T_VARIABLE($require_settings) = T_STRING , T_VARIABLE($reset) = T_STRING ) { T_STATIC T_VARIABLE($conf) = ; T_IF ( T_VARIABLE($conf) T_BOOLEAN_AND ! T_VARIABLE($reset) ) { T_RETURN T_VARIABLE($conf) ; } T_VARIABLE($confdir) = ; T_VARIABLE($uri) = T_STRING ( , T_VARIABLE($_SERVER) [ ] ? T_VARIABLE($_SERVER) [ ] : T_VARIABLE($_SERVER) [ ] ) ; T_VARIABLE($server) = T_STRING ( , T_STRING ( , T_STRING ( T_STRING ( , T_STRING ( T_VARIABLE($_SERVER) [ ] , ) ) ) ) ) ; T_FOR ( T_VARIABLE($i) = T_STRING ( T_VARIABLE($uri) ) - T_LNUMBER ; T_VARIABLE($i) > T_LNUMBER ; T_VARIABLE($i) T_DEC ) { T_FOR ( T_VARIABLE($j) = T_STRING ( T_VARIABLE($server) ) ; T_VARIABLE($j) > T_LNUMBER ; T_VARIABLE($j) T_DEC ) { T_VARIABLE($dir) = T_STRING ( , T_STRING ( T_VARIABLE($server) , - T_VARIABLE($j) ) ) . T_STRING ( , T_STRING ( T_VARIABLE($uri) , T_LNUMBER , T_VARIABLE($i) ) ) ; T_IF ( T_STRING ( T_VARIABLE($confdir) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($dir) T_ENCAPSED_AND_WHITESPACE ) T_BOOLEAN_OR ( ! T_VARIABLE($require_settings) T_BOOLEAN_AND T_STRING ( T_VARIABLE($confdir) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($dir) ) ) ) { T_VARIABLE($conf) = T_VARIABLE($confdir) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($dir) ; T_RETURN T_VARIABLE($conf) ; } } } T_VARIABLE($conf) = T_VARIABLE($confdir) T_ENCAPSED_AND_WHITESPACE ; T_RETURN T_VARIABLE($conf) ; } T_FUNCTION(drupal_unset_globals) ( ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($allowed) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($GLOBALS) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ! T_ISSET ( T_VARIABLE($allowed) [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($GLOBALS) [ T_VARIABLE($key) ] ) ; } } } } T_FUNCTION(conf_init) ( ) { T_GLOBAL T_VARIABLE($base_url) , T_VARIABLE($base_path) , T_VARIABLE($base_root) ; T_GLOBAL T_VARIABLE($db_url) , T_VARIABLE($db_prefix) , T_VARIABLE($cookie_domain) , T_VARIABLE($conf) , T_VARIABLE($installed_profile) , T_VARIABLE($update_free_access) ; T_VARIABLE($conf) = T_ARRAY ( ) ; T_IF ( T_STRING ( . T_STRING ( ) . ) ) { T_INCLUDE_ONCE . T_STRING ( ) . ; } T_IF ( T_ISSET ( T_VARIABLE($base_url) ) ) { T_VARIABLE($parts) = T_STRING ( T_VARIABLE($base_url) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($parts) [ ] ) ) { T_VARIABLE($parts) [ ] = ; } T_VARIABLE($base_path) = T_VARIABLE($parts) [ ] . ; T_VARIABLE($base_root) = T_STRING ( T_VARIABLE($base_url) , T_LNUMBER , T_STRING ( T_VARIABLE($base_url) ) - T_STRING ( T_VARIABLE($parts) [ ] ) ) ; } T_ELSE { T_VARIABLE($base_root) = ( T_ISSET ( T_VARIABLE($_SERVER) [ ] ) T_BOOLEAN_AND T_VARIABLE($_SERVER) [ ] T_IS_EQUAL ) ? : ; T_VARIABLE($base_url) = T_VARIABLE($base_root) T_CONCAT_EQUAL . T_STRING ( , , T_VARIABLE($_SERVER) [ ] ) ; T_IF ( T_VARIABLE($dir) = T_STRING ( T_STRING ( T_VARIABLE($_SERVER) [ ] ) , ) ) { T_VARIABLE($base_path) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($dir) ; T_VARIABLE($base_url) T_CONCAT_EQUAL T_VARIABLE($base_path) ; T_VARIABLE($base_path) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($base_path) = ; } } T_IF ( T_VARIABLE($cookie_domain) ) { T_VARIABLE($session_name) = T_VARIABLE($cookie_domain) ; } T_ELSE { T_LIST ( , T_VARIABLE($session_name) ) = T_STRING ( , T_VARIABLE($base_url) , T_LNUMBER ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_SERVER) [ ] ) ) { T_VARIABLE($cookie_domain) = T_STRING ( T_VARIABLE($_SERVER) [ ] ) ; } } T_VARIABLE($cookie_domain) = T_STRING ( T_VARIABLE($cookie_domain) , ) ; T_IF ( T_STRING ( T_VARIABLE($cookie_domain) , ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($cookie_domain) = T_STRING ( T_VARIABLE($cookie_domain) , T_LNUMBER ) ; } T_VARIABLE($cookie_domain) = T_STRING ( , T_VARIABLE($cookie_domain) ) ; T_VARIABLE($cookie_domain) = . T_VARIABLE($cookie_domain) [ T_LNUMBER ] ; T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($cookie_domain) ) ) > T_LNUMBER T_BOOLEAN_AND ! T_STRING ( T_STRING ( , , T_VARIABLE($cookie_domain) ) ) ) { T_STRING ( , T_VARIABLE($cookie_domain) ) ; } T_STRING ( . T_STRING ( T_VARIABLE($session_name) ) ) ; } T_FUNCTION(drupal_get_filename) ( T_VARIABLE($type) , T_VARIABLE($name) , T_VARIABLE($filename) = T_STRING ) { T_STATIC T_VARIABLE($files) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($type) ] ) ) { T_VARIABLE($files) [ T_VARIABLE($type) ] = T_ARRAY ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($filename) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($filename) ) ) { T_VARIABLE($files) [ T_VARIABLE($type) ] [ T_VARIABLE($name) ] = T_VARIABLE($filename) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($type) ] [ T_VARIABLE($name) ] ) ) { } T_ELSEIF ( T_STRING ( ) T_BOOLEAN_AND ( ( T_VARIABLE($file) = T_STRING ( T_STRING ( , T_VARIABLE($name) , T_VARIABLE($type) ) ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file) ) ) ) { T_VARIABLE($files) [ T_VARIABLE($type) ] [ T_VARIABLE($name) ] = T_VARIABLE($file) ; } T_ELSE { T_VARIABLE($config) = T_STRING ( ) ; T_VARIABLE($dir) = ( ( T_VARIABLE($type) T_IS_EQUAL ) ? : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME } T_ENCAPSED_AND_WHITESPACE ) ; T_VARIABLE($file) = ( ( T_VARIABLE($type) T_IS_EQUAL ) ? T_VARIABLE($name) T_ENCAPSED_AND_WHITESPACE : T_VARIABLE($name) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($type) ) ; T_FOREACH ( T_ARRAY ( T_VARIABLE($config) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($dir) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) , T_VARIABLE($config) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($dir) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($name) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) , T_VARIABLE($dir) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) , T_VARIABLE($dir) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($name) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) ) T_AS T_VARIABLE($file) ) { T_IF ( T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($files) [ T_VARIABLE($type) ] [ T_VARIABLE($name) ] = T_VARIABLE($file) ; T_BREAK ; } } } T_IF ( T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($type) ] [ T_VARIABLE($name) ] ) ) { T_RETURN T_VARIABLE($files) [ T_VARIABLE($type) ] [ T_VARIABLE($name) ] ; } } T_FUNCTION(variable_init) ( T_VARIABLE($conf) = T_ARRAY ( ) ) { T_IF ( T_VARIABLE($cached) = T_STRING ( , ) ) { T_VARIABLE($variables) = T_VARIABLE($cached) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($variable) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($variables) [ T_VARIABLE($variable) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($variable) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( , T_VARIABLE($variables) ) ; } T_FOREACH ( T_VARIABLE($conf) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($variables) [ T_VARIABLE($name) ] = T_VARIABLE($value) ; } T_RETURN T_VARIABLE($variables) ; } T_FUNCTION(variable_get) ( T_VARIABLE($name) , T_VARIABLE($default) ) { T_GLOBAL T_VARIABLE($conf) ; T_RETURN T_ISSET ( T_VARIABLE($conf) [ T_VARIABLE($name) ] ) ? T_VARIABLE($conf) [ T_VARIABLE($name) ] : T_VARIABLE($default) ; } T_FUNCTION(variable_set) ( T_VARIABLE($name) , T_VARIABLE($value) ) { T_GLOBAL T_VARIABLE($conf) ; T_VARIABLE($serialized_value) = T_STRING ( T_VARIABLE($value) ) ; T_STRING ( , T_VARIABLE($serialized_value) , T_VARIABLE($name) ) ; T_IF ( ! T_STRING ( ) ) { @ T_STRING ( , T_VARIABLE($name) , T_VARIABLE($serialized_value) ) ; } T_STRING ( , ) ; T_VARIABLE($conf) [ T_VARIABLE($name) ] = T_VARIABLE($value) ; } T_FUNCTION(variable_del) ( T_VARIABLE($name) ) { T_GLOBAL T_VARIABLE($conf) ; T_STRING ( , T_VARIABLE($name) ) ; T_STRING ( , ) ; T_UNSET ( T_VARIABLE($conf) [ T_VARIABLE($name) ] ) ; } T_FUNCTION(page_get_cache) ( T_VARIABLE($status_only) = T_STRING ) { T_STATIC T_VARIABLE($status) = T_STRING ; T_GLOBAL T_VARIABLE($user) , T_VARIABLE($base_root) ; T_IF ( T_VARIABLE($status_only) ) { T_RETURN T_VARIABLE($status) ; } T_VARIABLE($cache) = T_STRING ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($_SERVER) [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_STRING ( ) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($cache) = T_STRING ( T_VARIABLE($base_root) . T_STRING ( ) , ) ; T_IF ( T_EMPTY ( T_VARIABLE($cache) ) ) { T_STRING ( ) ; T_VARIABLE($status) = T_STRING ; } } T_RETURN T_VARIABLE($cache) ; } T_FUNCTION(bootstrap_invoke_all) ( T_VARIABLE($hook) ) { T_FOREACH ( T_STRING ( T_STRING , T_STRING ) T_AS T_VARIABLE($module) ) { T_STRING ( , T_VARIABLE($module) ) ; T_STRING ( T_VARIABLE($module) , T_VARIABLE($hook) ) ; } } T_FUNCTION(drupal_load) ( T_VARIABLE($type) , T_VARIABLE($name) ) { T_STATIC T_VARIABLE($files) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($type) ] [ T_VARIABLE($name) ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($filename) = T_STRING ( T_VARIABLE($type) , T_VARIABLE($name) ) ; T_IF ( T_VARIABLE($filename) ) { T_INCLUDE_ONCE T_ENCAPSED_AND_WHITESPACE T_VARIABLE($filename) ; T_VARIABLE($files) [ T_VARIABLE($type) ] [ T_VARIABLE($name) ] = T_STRING ; T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(drupal_page_header) ( ) { T_STRING ( ) ; T_STRING ( . T_STRING ( ) . ) ; T_STRING ( ) ; T_STRING ( , T_STRING ) ; } T_FUNCTION(drupal_page_cache_header) ( T_VARIABLE($cache) ) { T_VARIABLE($last_modified) = T_STRING ( , T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) . ; T_VARIABLE($etag) = . T_STRING ( T_VARIABLE($last_modified) ) . ; T_VARIABLE($if_modified_since) = T_ISSET ( T_VARIABLE($_SERVER) [ ] ) ? T_STRING ( T_VARIABLE($_SERVER) [ ] ) : T_STRING ; T_VARIABLE($if_none_match) = T_ISSET ( T_VARIABLE($_SERVER) [ ] ) ? T_STRING ( T_VARIABLE($_SERVER) [ ] ) : T_STRING ; T_IF ( T_VARIABLE($if_modified_since) T_BOOLEAN_AND T_VARIABLE($if_none_match) T_BOOLEAN_AND T_VARIABLE($if_none_match) T_IS_EQUAL T_VARIABLE($etag) T_BOOLEAN_AND T_VARIABLE($if_modified_since) T_IS_EQUAL T_VARIABLE($last_modified) ) { T_STRING ( ) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($etag) ) ; T_EXIT ( ) ; } T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($last_modified) ) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($etag) ) ; T_STRING ( ) ; T_STRING ( ) ; T_IF ( T_STRING ( , T_STRING ) ) { T_IF ( @ T_STRING ( T_VARIABLE($_SERVER) [ ] , ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) , T_LNUMBER , - T_LNUMBER ) ) ; } T_ELSEIF ( T_STRING ( ) ) { T_STRING ( ) ; } } T_VARIABLE($headers) = T_STRING ( , T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($headers) T_AS T_VARIABLE($header) ) { T_STRING ( T_VARIABLE($header) ) ; } T_PRINT T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(bootstrap_hooks) ( ) { T_RETURN T_ARRAY ( , ) ; } T_FUNCTION(drupal_unpack) ( T_VARIABLE($obj) , T_VARIABLE($field) = ) { T_IF ( T_VARIABLE($obj) T_OBJECT_OPERATOR T_VARIABLE($field) T_BOOLEAN_AND T_VARIABLE($data) = T_STRING ( T_VARIABLE($obj) T_OBJECT_OPERATOR T_VARIABLE($field) ) ) { T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ! T_ISSET ( T_VARIABLE($obj) T_OBJECT_OPERATOR T_VARIABLE($key) ) ) { T_VARIABLE($obj) T_OBJECT_OPERATOR T_VARIABLE($key) = T_VARIABLE($value) ; } } } T_RETURN T_VARIABLE($obj) ; } T_FUNCTION(referer_uri) ( ) { T_IF ( T_ISSET ( T_VARIABLE($_SERVER) [ ] ) ) { T_RETURN T_VARIABLE($_SERVER) [ ] ; } } T_FUNCTION(check_plain) ( T_VARIABLE($text) ) { T_RETURN T_STRING ( T_VARIABLE($text) ) ? T_STRING ( T_VARIABLE($text) , T_STRING ) : ; } T_FUNCTION(drupal_validate_utf8) ( T_VARIABLE($text) ) { T_IF ( T_STRING ( T_VARIABLE($text) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_RETURN ( T_STRING ( , T_VARIABLE($text) ) T_IS_EQUAL T_LNUMBER ) ; } T_FUNCTION(request_uri) ( ) { T_IF ( T_ISSET ( T_VARIABLE($_SERVER) [ ] ) ) { T_VARIABLE($uri) = T_VARIABLE($_SERVER) [ ] ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($_SERVER) [ ] ) ) { T_VARIABLE($uri) = T_VARIABLE($_SERVER) [ ] . . T_VARIABLE($_SERVER) [ ] [ T_LNUMBER ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_SERVER) [ ] ) ) { T_VARIABLE($uri) = T_VARIABLE($_SERVER) [ ] . . T_VARIABLE($_SERVER) [ ] ; } T_ELSE { T_VARIABLE($uri) = T_VARIABLE($_SERVER) [ ] ; } } T_RETURN T_VARIABLE($uri) ; } T_FUNCTION(watchdog) ( T_VARIABLE($type) , T_VARIABLE($message) , T_VARIABLE($variables) = T_ARRAY ( ) , T_VARIABLE($severity) = T_STRING , T_VARIABLE($link) = T_STRING ) { T_GLOBAL T_VARIABLE($user) , T_VARIABLE($base_root) ; T_VARIABLE($log_message) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) , T_DOUBLE_ARROW T_VARIABLE($message) , T_DOUBLE_ARROW T_VARIABLE($variables) , T_DOUBLE_ARROW T_VARIABLE($severity) , T_DOUBLE_ARROW T_VARIABLE($link) , T_DOUBLE_ARROW T_VARIABLE($user) , T_DOUBLE_ARROW T_VARIABLE($base_root) . T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_FOREACH ( T_STRING ( , T_STRING ) T_AS T_VARIABLE($module) ) { T_STRING ( T_VARIABLE($module) , , T_VARIABLE($log_message) ) ; } } T_FUNCTION(drupal_set_message) ( T_VARIABLE($message) = T_STRING , T_VARIABLE($type) = , T_VARIABLE($repeat) = T_STRING ) { T_IF ( T_VARIABLE($message) ) { T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($type) ] ) ) { T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($type) ] = T_ARRAY ( ) ; } T_IF ( T_VARIABLE($repeat) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($message) , T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($type) ] ) ) { T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($type) ] [ ] = T_VARIABLE($message) ; } } T_RETURN T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ? T_VARIABLE($_SESSION) [ ] : T_STRING ; } T_FUNCTION(drupal_get_messages) ( T_VARIABLE($type) = T_STRING , T_VARIABLE($clear_queue) = T_STRING ) { T_IF ( T_VARIABLE($messages) = T_STRING ( ) ) { T_IF ( T_VARIABLE($type) ) { T_IF ( T_VARIABLE($clear_queue) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($type) ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($messages) [ T_VARIABLE($type) ] ) ) { T_RETURN T_ARRAY ( T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($messages) [ T_VARIABLE($type) ] ) ; } } T_ELSE { T_IF ( T_VARIABLE($clear_queue) ) { T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } T_RETURN T_VARIABLE($messages) ; } } T_RETURN T_ARRAY ( ) ; } T_FUNCTION(drupal_is_denied) ( T_VARIABLE($type) , T_VARIABLE($mask) ) { T_VARIABLE($sql) = ; T_RETURN T_STRING ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($type) , T_VARIABLE($mask) , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) T_BOOLEAN_AND ! T_STRING ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($type) , T_VARIABLE($mask) , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ; } T_FUNCTION(drupal_anonymous_user) ( T_VARIABLE($session) = ) { T_VARIABLE($user) = T_NEW T_STRING ( ) ; T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_STRING ] = ; T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($session) ; T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_RETURN T_VARIABLE($user) ; } T_FUNCTION(drupal_bootstrap) ( T_VARIABLE($phase) ) { T_STATIC T_VARIABLE($phases) = T_ARRAY ( T_STRING , T_STRING , T_STRING , T_STRING , T_STRING , T_STRING , T_STRING , T_STRING , T_STRING ) , T_VARIABLE($phase_index) = T_LNUMBER ; T_WHILE ( T_VARIABLE($phase) T_IS_GREATER_OR_EQUAL T_VARIABLE($phase_index) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($phases) [ T_VARIABLE($phase_index) ] ) ) { T_VARIABLE($current_phase) = T_VARIABLE($phases) [ T_VARIABLE($phase_index) ] ; T_UNSET ( T_VARIABLE($phases) [ T_VARIABLE($phase_index) T_INC ] ) ; T_STRING ( T_VARIABLE($current_phase) ) ; } } T_FUNCTION(_drupal_bootstrap) ( T_VARIABLE($phase) ) { T_GLOBAL T_VARIABLE($conf) ; T_SWITCH ( T_VARIABLE($phase) ) { T_CASE T_STRING : T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_REQUIRE_ONCE T_STRING ( , ) ; T_IF ( T_STRING ( , T_STRING ) T_BOOLEAN_AND T_STRING ( ) ) { T_EXIT ; } T_BREAK ; T_CASE T_STRING : T_REQUIRE_ONCE ; T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_IF ( T_STRING ( , T_STRING ( ) ) ) { T_STRING ( ) ; T_PRINT . T_STRING ( T_STRING ( ) ) . ; T_EXIT ( ) ; } T_BREAK ; T_CASE T_STRING : T_REQUIRE_ONCE T_STRING ( , ) ; T_STRING ( , , , , , ) ; T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($conf) = T_STRING ( T_ISSET ( T_VARIABLE($conf) ) ? T_VARIABLE($conf) : T_ARRAY ( ) ) ; T_REQUIRE_ONCE ; T_VARIABLE($cache_mode) = T_STRING ( , T_STRING ) ; T_VARIABLE($cache) = T_VARIABLE($cache_mode) T_IS_EQUAL T_STRING ? : T_STRING ( ) ; T_IF ( T_VARIABLE($cache_mode) T_IS_NOT_EQUAL T_STRING ) { T_STRING ( ) ; } T_IF ( T_VARIABLE($cache) ) { T_STRING ( T_VARIABLE($cache) ) ; T_IF ( T_VARIABLE($cache_mode) T_IS_NOT_EQUAL T_STRING ) { T_STRING ( ) ; } T_EXIT ; } T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_REQUIRE_ONCE ; T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_REQUIRE_ONCE ; T_STRING ( ) ; T_BREAK ; } } T_FUNCTION(drupal_maintenance_theme) ( ) { T_REQUIRE_ONCE ; T_STRING ( ) ; } T_FUNCTION(get_t) ( ) { T_STATIC T_VARIABLE($t) ; T_IF ( T_STRING ( T_VARIABLE($t) ) ) { T_VARIABLE($t) = T_STRING ( ) ? : ; } T_RETURN T_VARIABLE($t) ; } T_FUNCTION(drupal_init_language) ( ) { T_GLOBAL T_VARIABLE($language) , T_VARIABLE($user) ; T_IF ( T_STRING ( , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($language) = T_STRING ( ) ; } T_ELSE { T_INCLUDE_ONCE ; T_VARIABLE($language) = T_STRING ( ) ; } } T_FUNCTION(language_list) ( T_VARIABLE($field) = , T_VARIABLE($reset) = T_STRING ) { T_STATIC T_VARIABLE($languages) = T_STRING ; T_IF ( T_VARIABLE($reset) ) { T_VARIABLE($languages) = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($languages) ) ) { T_IF ( T_STRING ( , T_LNUMBER ) > T_LNUMBER T_BOOLEAN_OR T_STRING ( ) ) { T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($languages) [ ] [ T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($row) ; } } T_ELSE { T_VARIABLE($default) = T_STRING ( ) ; T_VARIABLE($languages) [ ] [ T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($default) ; } } T_IF ( ! T_ISSET ( T_VARIABLE($languages) [ T_VARIABLE($field) ] ) ) { T_VARIABLE($languages) [ T_VARIABLE($field) ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($languages) [ ] T_AS T_VARIABLE($lang) ) { T_IF ( T_STRING ( T_VARIABLE($field) , T_ARRAY ( , ) ) ) { T_VARIABLE($languages) [ T_VARIABLE($field) ] [ T_VARIABLE($lang) T_OBJECT_OPERATOR T_VARIABLE($field) ] [ T_VARIABLE($lang) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($lang) ; } T_ELSE { T_VARIABLE($languages) [ T_VARIABLE($field) ] [ T_VARIABLE($lang) T_OBJECT_OPERATOR T_VARIABLE($field) ] = T_VARIABLE($lang) ; } } } T_RETURN T_VARIABLE($languages) [ T_VARIABLE($field) ] ; } T_FUNCTION(language_default) ( T_VARIABLE($property) = T_STRING ) { T_VARIABLE($language) = T_STRING ( , T_OBJECT_CAST T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ) ; T_RETURN T_VARIABLE($property) ? T_VARIABLE($language) T_OBJECT_OPERATOR T_VARIABLE($property) : T_VARIABLE($language) ; } T_FUNCTION(ip_address) ( ) { T_STATIC T_VARIABLE($ip_address) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($ip_address) ) ) { T_VARIABLE($ip_address) = T_VARIABLE($_SERVER) [ ] ; T_IF ( T_STRING ( , T_LNUMBER ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($_SERVER) ) ) { T_VARIABLE($reverse_proxy_addresses) = T_STRING ( , T_ARRAY ( ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($reverse_proxy_addresses) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($ip_address) , T_VARIABLE($reverse_proxy_addresses) , T_STRING ) ) { T_VARIABLE($ip_address) = T_STRING ( T_STRING ( , T_VARIABLE($_SERVER) [ ] ) ) ; } } } T_RETURN T_VARIABLE($ip_address) ; }",13,1
"T_OPEN_TAG T_FUNCTION(cache_get) ( T_VARIABLE($key) , T_VARIABLE($table) = ) { T_RETURN T_STRING ; } T_FUNCTION(cache_set) ( T_VARIABLE($cid) , T_VARIABLE($data) , T_VARIABLE($table) = , T_VARIABLE($expire) = T_STRING , T_VARIABLE($headers) = T_STRING ) { T_RETURN ; } T_FUNCTION(cache_clear_all) ( T_VARIABLE($cid) = T_STRING , T_VARIABLE($table) = T_STRING , T_VARIABLE($wildcard) = T_STRING ) { T_RETURN ; }",2,0
"T_OPEN_TAG T_FUNCTION(cache_get) ( T_VARIABLE($cid) , T_VARIABLE($table) = ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($cache_flush) = T_STRING ( , T_LNUMBER ) ; T_IF ( T_VARIABLE($cache_flush) T_BOOLEAN_AND ( T_VARIABLE($cache_flush) + T_STRING ( , T_LNUMBER ) T_IS_SMALLER_OR_EQUAL T_STRING ( ) ) ) { T_STRING ( , T_LNUMBER ) ; T_STRING ( . T_VARIABLE($table) . , T_STRING , T_VARIABLE($cache_flush) ) ; } T_VARIABLE($cache) = T_STRING ( T_STRING ( . T_VARIABLE($table) . , T_VARIABLE($cid) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_BOOLEAN_OR ! T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ; } } T_ELSE { T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING > T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_LNUMBER ; } T_ELSE { T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ; } } } T_RETURN T_VARIABLE($cache) ; } T_RETURN T_LNUMBER ; } T_FUNCTION(cache_set) ( T_VARIABLE($cid) , T_VARIABLE($data) , T_VARIABLE($table) = , T_VARIABLE($expire) = T_STRING , T_VARIABLE($headers) = T_STRING ) { T_VARIABLE($serialized) = T_LNUMBER ; T_IF ( T_STRING ( T_VARIABLE($data) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($data) ) ) { T_VARIABLE($data) = T_STRING ( T_VARIABLE($data) ) ; T_VARIABLE($serialized) = T_LNUMBER ; } T_VARIABLE($created) = T_STRING ( ) ; T_STRING ( . T_VARIABLE($table) . , T_VARIABLE($data) , T_VARIABLE($created) , T_VARIABLE($expire) , T_VARIABLE($headers) , T_VARIABLE($serialized) , T_VARIABLE($cid) ) ; T_IF ( ! T_STRING ( ) ) { @ T_STRING ( . T_VARIABLE($table) . , T_VARIABLE($cid) , T_VARIABLE($data) , T_VARIABLE($created) , T_VARIABLE($expire) , T_VARIABLE($headers) , T_VARIABLE($serialized) ) ; } } T_FUNCTION(cache_clear_all) ( T_VARIABLE($cid) = T_STRING , T_VARIABLE($table) = T_STRING , T_VARIABLE($wildcard) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( ! T_ISSET ( T_VARIABLE($cid) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($table) ) ) { T_STRING ( T_STRING , ) ; T_STRING ( T_STRING , ) ; T_RETURN ; } T_IF ( T_EMPTY ( T_VARIABLE($cid) ) ) { T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_VARIABLE($cache_flush) = T_STRING ( , T_LNUMBER ) ; T_IF ( T_VARIABLE($cache_flush) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; } T_ELSE T_IF ( T_STRING ( ) > ( T_VARIABLE($cache_flush) + T_STRING ( , T_LNUMBER ) ) ) { T_STRING ( . T_VARIABLE($table) . , T_STRING , T_STRING ( ) ) ; T_STRING ( , T_LNUMBER ) ; } } T_ELSE { T_STRING ( . T_VARIABLE($table) . , T_STRING , T_STRING ( ) ) ; } } T_ELSE { T_IF ( T_VARIABLE($wildcard) ) { T_IF ( T_VARIABLE($cid) T_IS_EQUAL ) { T_STRING ( . T_VARIABLE($table) . ) ; } T_ELSE { T_STRING ( . T_VARIABLE($table) . , T_VARIABLE($cid) ) ; } } T_ELSE { T_STRING ( . T_VARIABLE($table) . , T_VARIABLE($cid) ) ; } } }",10,0
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(drupal_set_content) ( T_VARIABLE($region) = T_STRING , T_VARIABLE($data) = T_STRING ) { T_STATIC T_VARIABLE($content) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($region) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($data) ) ) { T_VARIABLE($content) [ T_VARIABLE($region) ] [ ] = T_VARIABLE($data) ; } T_RETURN T_VARIABLE($content) ; } T_FUNCTION(drupal_get_content) ( T_VARIABLE($region) = T_STRING , T_VARIABLE($delimiter) = ) { T_VARIABLE($content) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($region) ) ) { T_IF ( T_ISSET ( T_VARIABLE($content) [ T_VARIABLE($region) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($content) [ T_VARIABLE($region) ] ) ) { T_RETURN T_STRING ( T_VARIABLE($delimiter) , T_VARIABLE($content) [ T_VARIABLE($region) ] ) ; } } T_ELSE { T_FOREACH ( T_STRING ( T_VARIABLE($content) ) T_AS T_VARIABLE($region) ) { T_IF ( T_STRING ( T_VARIABLE($content) [ T_VARIABLE($region) ] ) ) { T_VARIABLE($content) [ T_VARIABLE($region) ] = T_STRING ( T_VARIABLE($delimiter) , T_VARIABLE($content) [ T_VARIABLE($region) ] ) ; } } T_RETURN T_VARIABLE($content) ; } } T_FUNCTION(drupal_set_breadcrumb) ( T_VARIABLE($breadcrumb) = T_STRING ) { T_STATIC T_VARIABLE($stored_breadcrumb) ; T_IF ( ! T_STRING ( T_VARIABLE($breadcrumb) ) ) { T_VARIABLE($stored_breadcrumb) = T_VARIABLE($breadcrumb) ; } T_RETURN T_VARIABLE($stored_breadcrumb) ; } T_FUNCTION(drupal_get_breadcrumb) ( ) { T_VARIABLE($breadcrumb) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($breadcrumb) ) ) { T_VARIABLE($breadcrumb) = T_STRING ( ) ; } T_RETURN T_VARIABLE($breadcrumb) ; } T_FUNCTION(drupal_set_html_head) ( T_VARIABLE($data) = T_STRING ) { T_STATIC T_VARIABLE($stored_head) = ; T_IF ( ! T_STRING ( T_VARIABLE($data) ) ) { T_VARIABLE($stored_head) T_CONCAT_EQUAL T_VARIABLE($data) . ; } T_RETURN T_VARIABLE($stored_head) ; } T_FUNCTION(drupal_get_html_head) ( ) { T_VARIABLE($output) = ; T_RETURN T_VARIABLE($output) . T_STRING ( ) ; } T_FUNCTION(drupal_clear_path_cache) ( ) { T_STRING ( ) ; } T_FUNCTION(drupal_set_header) ( T_VARIABLE($header) = T_STRING ) { T_STATIC T_VARIABLE($stored_headers) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($header) ) ) { T_STRING ( T_VARIABLE($header) ) ; T_VARIABLE($stored_headers) [ ] = T_VARIABLE($header) ; } T_RETURN T_STRING ( , T_VARIABLE($stored_headers) ) ; } T_FUNCTION(drupal_get_headers) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(drupal_add_feed) ( T_VARIABLE($url) = T_STRING , T_VARIABLE($title) = ) { T_STATIC T_VARIABLE($stored_feed_links) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($url) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($stored_feed_links) [ T_VARIABLE($url) ] ) ) { T_VARIABLE($stored_feed_links) [ T_VARIABLE($url) ] = T_STRING ( , T_VARIABLE($url) , T_VARIABLE($title) ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($title) , T_DOUBLE_ARROW T_VARIABLE($url) ) ) ; } T_RETURN T_VARIABLE($stored_feed_links) ; } T_FUNCTION(drupal_get_feeds) ( T_VARIABLE($delimiter) = ) { T_VARIABLE($feeds) = T_STRING ( ) ; T_RETURN T_STRING ( T_VARIABLE($feeds) , T_VARIABLE($delimiter) ) ; } T_FUNCTION(drupal_query_string_encode) ( T_VARIABLE($query) , T_VARIABLE($exclude) = T_ARRAY ( ) , T_VARIABLE($parent) = ) { T_VARIABLE($params) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($query) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($key) = T_STRING ( T_VARIABLE($key) ) ; T_IF ( T_VARIABLE($parent) ) { T_VARIABLE($key) = T_VARIABLE($parent) . . T_VARIABLE($key) . ; } T_IF ( T_STRING ( T_VARIABLE($key) , T_VARIABLE($exclude) ) ) { T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($params) [ ] = T_STRING ( T_VARIABLE($value) , T_VARIABLE($exclude) , T_VARIABLE($key) ) ; } T_ELSE { T_VARIABLE($params) [ ] = T_VARIABLE($key) . . T_STRING ( T_VARIABLE($value) ) ; } } T_RETURN T_STRING ( , T_VARIABLE($params) ) ; } T_FUNCTION(drupal_get_destination) ( ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_RETURN . T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSE { T_VARIABLE($path) = T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_VARIABLE($_GET) [ ] : ; T_VARIABLE($query) = T_STRING ( T_VARIABLE($_GET) , T_ARRAY ( ) ) ; T_IF ( T_VARIABLE($query) T_IS_NOT_EQUAL ) { T_VARIABLE($path) T_CONCAT_EQUAL . T_VARIABLE($query) ; } T_RETURN . T_STRING ( T_VARIABLE($path) ) ; } } T_FUNCTION(drupal_goto) ( T_VARIABLE($path) = , T_VARIABLE($query) = T_STRING , T_VARIABLE($fragment) = T_STRING , T_VARIABLE($http_response_code) = T_LNUMBER ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($_REQUEST) [ ] ) ) ) ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] ) ) { T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($_REQUEST) [ ] [ ] ) ) ) ; } T_VARIABLE($url) = T_STRING ( T_VARIABLE($path) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($fragment) , T_DOUBLE_ARROW T_STRING ) ) ; T_VARIABLE($url) = T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($url) ) ; T_IF ( ! T_STRING ( ) T_BOOLEAN_OR T_STRING T_IS_NOT_EQUAL ) { T_STRING ( , T_VARIABLE($url) ) ; } T_STRING ( ) ; T_STRING ( . T_VARIABLE($url) , T_STRING , T_VARIABLE($http_response_code) ) ; T_EXIT ( ) ; } T_FUNCTION(drupal_site_offline) ( ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_PRINT T_STRING ( , T_STRING ( T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , ) ) ) ) ) ) ; } T_FUNCTION(drupal_not_found) ( ) { T_STRING ( ) ; T_STRING ( , T_STRING ( T_VARIABLE($_GET) [ ] ) , T_STRING , T_STRING ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_GET) [ ] ; } T_VARIABLE($path) = T_STRING ( T_STRING ( , ) ) ; T_IF ( T_VARIABLE($path) T_BOOLEAN_AND T_VARIABLE($path) T_IS_NOT_EQUAL T_VARIABLE($_GET) [ ] ) { T_STRING ( T_VARIABLE($path) ) ; T_VARIABLE($return) = T_STRING ( T_VARIABLE($path) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($return) ) T_BOOLEAN_OR T_VARIABLE($return) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($return) T_IS_EQUAL T_STRING ) { T_STRING ( T_STRING ( ) ) ; T_VARIABLE($return) = T_STRING ( ) ; } T_PRINT T_STRING ( , T_VARIABLE($return) , T_STRING ) ; } T_FUNCTION(drupal_access_denied) ( ) { T_STRING ( ) ; T_STRING ( , T_STRING ( T_VARIABLE($_GET) [ ] ) , T_STRING , T_STRING ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($_REQUEST) [ ] = T_VARIABLE($_GET) [ ] ; } T_VARIABLE($path) = T_STRING ( T_STRING ( , ) ) ; T_IF ( T_VARIABLE($path) T_BOOLEAN_AND T_VARIABLE($path) T_IS_NOT_EQUAL T_VARIABLE($_GET) [ ] ) { T_STRING ( T_VARIABLE($path) ) ; T_VARIABLE($return) = T_STRING ( T_VARIABLE($path) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($return) ) T_BOOLEAN_OR T_VARIABLE($return) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($return) T_IS_EQUAL T_STRING ) { T_STRING ( T_STRING ( ) ) ; T_VARIABLE($return) = T_STRING ( ) ; } T_PRINT T_STRING ( , T_VARIABLE($return) ) ; } T_FUNCTION(drupal_http_request) ( T_VARIABLE($url) , T_VARIABLE($headers) = T_ARRAY ( ) , T_VARIABLE($method) = , T_VARIABLE($data) = T_STRING , T_VARIABLE($retry) = T_LNUMBER ) { T_STATIC T_VARIABLE($self_test) = T_STRING ; T_VARIABLE($result) = T_NEW T_STRING ( ) ; T_IF ( ! T_VARIABLE($self_test) T_BOOLEAN_AND T_STRING ( , T_STRING ) ) { T_VARIABLE($self_test) = T_STRING ; T_VARIABLE($works) = T_STRING ( , ) ; T_VARIABLE($self_test) = T_STRING ; T_IF ( ! T_VARIABLE($works) ) { T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_RETURN T_VARIABLE($result) ; } } T_VARIABLE($uri) = T_STRING ( T_VARIABLE($url) ) ; T_SWITCH ( T_VARIABLE($uri) [ ] ) { T_CASE : T_VARIABLE($port) = T_ISSET ( T_VARIABLE($uri) [ ] ) ? T_VARIABLE($uri) [ ] : T_LNUMBER ; T_VARIABLE($host) = T_VARIABLE($uri) [ ] . ( T_VARIABLE($port) T_IS_NOT_EQUAL T_LNUMBER ? . T_VARIABLE($port) : ) ; T_VARIABLE($fp) = @ T_STRING ( T_VARIABLE($uri) [ ] , T_VARIABLE($port) , T_VARIABLE($errno) , T_VARIABLE($errstr) , T_LNUMBER ) ; T_BREAK ; T_CASE : T_VARIABLE($port) = T_ISSET ( T_VARIABLE($uri) [ ] ) ? T_VARIABLE($uri) [ ] : T_LNUMBER ; T_VARIABLE($host) = T_VARIABLE($uri) [ ] . ( T_VARIABLE($port) T_IS_NOT_EQUAL T_LNUMBER ? . T_VARIABLE($port) : ) ; T_VARIABLE($fp) = @ T_STRING ( . T_VARIABLE($uri) [ ] , T_VARIABLE($port) , T_VARIABLE($errno) , T_VARIABLE($errstr) , T_LNUMBER ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = . T_VARIABLE($uri) [ ] ; T_RETURN T_VARIABLE($result) ; } T_IF ( ! T_VARIABLE($fp) ) { T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = - T_VARIABLE($errno) ; T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($errstr) ) ; T_RETURN T_VARIABLE($result) ; } T_VARIABLE($path) = T_ISSET ( T_VARIABLE($uri) [ ] ) ? T_VARIABLE($uri) [ ] : ; T_IF ( T_ISSET ( T_VARIABLE($uri) [ ] ) ) { T_VARIABLE($path) T_CONCAT_EQUAL . T_VARIABLE($uri) [ ] ; } T_VARIABLE($defaults) = T_ARRAY ( T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($host) , T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_STRING ( T_VARIABLE($data) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($uri) [ ] ) ) { T_VARIABLE($defaults) [ ] = . T_STRING ( T_VARIABLE($uri) [ ] . ( ! T_EMPTY ( T_VARIABLE($uri) [ ] ) ? . T_VARIABLE($uri) [ ] : ) ) ; } T_FOREACH ( T_VARIABLE($headers) T_AS T_VARIABLE($header) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($defaults) [ T_VARIABLE($header) ] = T_VARIABLE($header) . . T_VARIABLE($value) ; } T_VARIABLE($request) = T_VARIABLE($method) . . T_VARIABLE($path) . ; T_VARIABLE($request) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($defaults) ) ; T_VARIABLE($request) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($data) ) { T_VARIABLE($request) T_CONCAT_EQUAL T_VARIABLE($data) . ; } T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($request) ; T_STRING ( T_VARIABLE($fp) , T_VARIABLE($request) ) ; T_VARIABLE($response) = ; T_WHILE ( ! T_STRING ( T_VARIABLE($fp) ) T_BOOLEAN_AND T_VARIABLE($chunk) = T_STRING ( T_VARIABLE($fp) , T_LNUMBER ) ) { T_VARIABLE($response) T_CONCAT_EQUAL T_VARIABLE($chunk) ; } T_STRING ( T_VARIABLE($fp) ) ; T_LIST ( T_VARIABLE($split) , T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) = T_STRING ( , T_VARIABLE($response) , T_LNUMBER ) ; T_VARIABLE($split) = T_STRING ( , T_VARIABLE($split) ) ; T_LIST ( T_VARIABLE($protocol) , T_VARIABLE($code) , T_VARIABLE($text) ) = T_STRING ( , T_STRING ( T_STRING ( T_VARIABLE($split) ) ) , T_LNUMBER ) ; T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($line) = T_STRING ( T_STRING ( T_VARIABLE($split) ) ) ) { T_LIST ( T_VARIABLE($header) , T_VARIABLE($value) ) = T_STRING ( , T_VARIABLE($line) , T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($header) ] ) T_BOOLEAN_AND T_VARIABLE($header) T_IS_EQUAL ) { T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($header) ] T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($value) ) ; } T_ELSE { T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($header) ] = T_STRING ( T_VARIABLE($value) ) ; } } T_VARIABLE($responses) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW ) ; T_IF ( ! T_ISSET ( T_VARIABLE($responses) [ T_VARIABLE($code) ] ) ) { T_VARIABLE($code) = T_STRING ( T_VARIABLE($code) / T_LNUMBER ) * T_LNUMBER ; } T_SWITCH ( T_VARIABLE($code) ) { T_CASE T_LNUMBER : T_CASE T_LNUMBER : T_BREAK ; T_CASE T_LNUMBER : T_CASE T_LNUMBER : T_CASE T_LNUMBER : T_VARIABLE($location) = T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ ] ; T_IF ( T_VARIABLE($retry) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ ] , T_VARIABLE($headers) , T_VARIABLE($method) , T_VARIABLE($data) , T_DEC T_VARIABLE($retry) ) ; T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($location) ; T_BREAK ; T_DEFAULT : T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($text) ; } T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($code) ; T_RETURN T_VARIABLE($result) ; } T_FUNCTION(drupal_error_handler) ( T_VARIABLE($errno) , T_VARIABLE($message) , T_VARIABLE($filename) , T_VARIABLE($line) , T_VARIABLE($context) ) { T_IF ( T_STRING ( ) T_IS_EQUAL T_LNUMBER ) { T_RETURN ; } T_IF ( T_VARIABLE($errno) & ( T_STRING ^ T_STRING ) ) { T_VARIABLE($types) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW ) ; T_IF ( T_ISSET ( T_VARIABLE($context) [ T_STRING ] ) ) { T_VARIABLE($backtrace) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($query_functions) = T_ARRAY ( , , , , ) ; T_FOREACH ( T_VARIABLE($backtrace) T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($function) ) { T_IF ( T_STRING ( T_VARIABLE($function) [ ] , T_VARIABLE($query_functions) ) ) { T_VARIABLE($line) = T_VARIABLE($backtrace) [ T_VARIABLE($index) ] [ ] ; T_VARIABLE($filename) = T_VARIABLE($backtrace) [ T_VARIABLE($index) ] [ ] ; T_BREAK ; } } } T_VARIABLE($entry) = T_VARIABLE($types) [ T_VARIABLE($errno) ] . . T_VARIABLE($message) . . T_VARIABLE($filename) . . T_VARIABLE($line) . ; T_IF ( T_STRING ( , T_LNUMBER ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_VARIABLE($_SERVER) [ ] , ) ) { T_STRING ( T_VARIABLE($entry) , ) ; } T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($types) [ T_VARIABLE($errno) ] , T_DOUBLE_ARROW T_VARIABLE($message) , T_DOUBLE_ARROW T_VARIABLE($filename) , T_DOUBLE_ARROW T_VARIABLE($line) ) , T_STRING ) ; } } T_FUNCTION(_fix_gpc_magic) ( & T_VARIABLE($item) ) { T_IF ( T_STRING ( T_VARIABLE($item) ) ) { T_STRING ( T_VARIABLE($item) , ) ; } T_ELSE { T_VARIABLE($item) = T_STRING ( T_VARIABLE($item) ) ; } } T_FUNCTION(_fix_gpc_magic_files) ( & T_VARIABLE($item) , T_VARIABLE($key) ) { T_IF ( T_VARIABLE($key) T_IS_NOT_EQUAL ) { T_IF ( T_STRING ( T_VARIABLE($item) ) ) { T_STRING ( T_VARIABLE($item) , ) ; } T_ELSE { T_VARIABLE($item) = T_STRING ( T_VARIABLE($item) ) ; } } } T_FUNCTION(fix_gpc_magic) ( ) { T_STATIC T_VARIABLE($fixed) = T_STRING ; T_IF ( ! T_VARIABLE($fixed) T_BOOLEAN_AND T_STRING ( ) ) { T_STRING ( T_VARIABLE($_GET) , ) ; T_STRING ( T_VARIABLE($_POST) , ) ; T_STRING ( T_VARIABLE($_COOKIE) , ) ; T_STRING ( T_VARIABLE($_REQUEST) , ) ; T_STRING ( T_VARIABLE($_FILES) , ) ; T_VARIABLE($fixed) = T_STRING ; } } T_FUNCTION(t) ( T_VARIABLE($string) , T_VARIABLE($args) = T_ARRAY ( ) , T_VARIABLE($langcode) = T_STRING ) { T_GLOBAL T_VARIABLE($language) ; T_STATIC T_VARIABLE($custom_strings) ; T_VARIABLE($langcode) = T_ISSET ( T_VARIABLE($langcode) ) ? T_VARIABLE($langcode) : T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($custom_strings) [ T_VARIABLE($langcode) ] ) ) { T_VARIABLE($custom_strings) [ T_VARIABLE($langcode) ] = T_STRING ( . T_VARIABLE($langcode) , T_ARRAY ( ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($custom_strings) [ T_VARIABLE($langcode) ] [ T_VARIABLE($string) ] ) ) { T_VARIABLE($string) = T_VARIABLE($custom_strings) [ T_VARIABLE($langcode) ] [ T_VARIABLE($string) ] ; } T_ELSEIF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($langcode) T_IS_NOT_EQUAL ) { T_VARIABLE($string) = T_STRING ( T_VARIABLE($string) , T_VARIABLE($langcode) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($args) ) ) { T_RETURN T_VARIABLE($string) ; } T_ELSE { T_FOREACH ( T_VARIABLE($args) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_SWITCH ( T_VARIABLE($key) [ T_LNUMBER ] ) { T_CASE : T_VARIABLE($args) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($value) ) ; T_BREAK ; T_CASE : T_DEFAULT : T_VARIABLE($args) [ T_VARIABLE($key) ] = T_STRING ( , T_VARIABLE($value) ) ; T_BREAK ; T_CASE : } } T_RETURN T_STRING ( T_VARIABLE($string) , T_VARIABLE($args) ) ; } } T_FUNCTION(valid_email_address) ( T_VARIABLE($mail) ) { T_VARIABLE($user) = ; T_VARIABLE($domain) = ; T_VARIABLE($ipv4) = ; T_VARIABLE($ipv6) = ; T_RETURN T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($user) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($domain) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($ipv4) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($ipv6) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($mail) ) ; } T_FUNCTION(valid_url) ( T_VARIABLE($url) , T_VARIABLE($absolute) = T_STRING ) { T_VARIABLE($allowed_characters) = ; T_IF ( T_VARIABLE($absolute) ) { T_RETURN T_STRING ( . T_VARIABLE($allowed_characters) . , T_VARIABLE($url) ) ; } T_ELSE { T_RETURN T_STRING ( . T_VARIABLE($allowed_characters) . , T_VARIABLE($url) ) ; } } T_FUNCTION(flood_register_event) ( T_VARIABLE($name) ) { T_STRING ( , T_VARIABLE($name) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(flood_is_allowed) ( T_VARIABLE($name) , T_VARIABLE($threshold) ) { T_VARIABLE($number) = T_STRING ( T_STRING ( , T_VARIABLE($name) , T_STRING ( ) , T_STRING ( ) - T_LNUMBER ) ) ; T_RETURN ( T_VARIABLE($number) < T_VARIABLE($threshold) ? T_STRING : T_STRING ) ; } T_FUNCTION(check_file) ( T_VARIABLE($filename) ) { T_RETURN T_STRING ( T_VARIABLE($filename) ) ; } T_FUNCTION(check_url) ( T_VARIABLE($uri) ) { T_RETURN T_STRING ( T_VARIABLE($uri) , T_STRING ) ; } T_FUNCTION(format_rss_channel) ( T_VARIABLE($title) , T_VARIABLE($link) , T_VARIABLE($description) , T_VARIABLE($items) , T_VARIABLE($langcode) = T_STRING , T_VARIABLE($args) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($language) ; T_VARIABLE($langcode) = T_VARIABLE($langcode) ? T_VARIABLE($langcode) : T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($title) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($link) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($description) ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($langcode) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($items) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(format_rss_item) ( T_VARIABLE($title) , T_VARIABLE($link) , T_VARIABLE($description) , T_VARIABLE($args) = T_ARRAY ( ) ) { T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($title) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($link) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($description) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(format_xml_elements) ( T_VARIABLE($array) ) { T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($key) ) ) { T_IF ( T_VARIABLE($value) [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($value) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($value) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($value) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($value) [ ] ) ; } T_IF ( T_VARIABLE($value) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($output) T_CONCAT_EQUAL . ( T_STRING ( T_VARIABLE($value) [ ] ) ? T_STRING ( T_VARIABLE($value) [ ] ) : T_STRING ( T_VARIABLE($value) [ ] ) ) . . T_VARIABLE($value) [ ] . ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL ; } } } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($key) . . ( T_STRING ( T_VARIABLE($value) ) ? T_STRING ( T_VARIABLE($value) ) : T_STRING ( T_VARIABLE($value) ) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE ; } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(format_plural) ( T_VARIABLE($count) , T_VARIABLE($singular) , T_VARIABLE($plural) , T_VARIABLE($args) = T_ARRAY ( ) , T_VARIABLE($langcode) = T_STRING ) { T_VARIABLE($args) [ ] = T_VARIABLE($count) ; T_IF ( T_VARIABLE($count) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($singular) , T_VARIABLE($args) , T_VARIABLE($langcode) ) ; } T_VARIABLE($index) = ( T_STRING ( ) ) ? T_STRING ( T_VARIABLE($count) , T_VARIABLE($langcode) ) : - T_LNUMBER ; T_IF ( T_VARIABLE($index) < T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($plural) , T_VARIABLE($args) , T_VARIABLE($langcode) ) ; } T_ELSE { T_SWITCH ( T_VARIABLE($index) ) { T_CASE : T_RETURN T_STRING ( T_VARIABLE($singular) , T_VARIABLE($args) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($plural) , T_VARIABLE($args) , T_VARIABLE($langcode) ) ; T_DEFAULT : T_UNSET ( T_VARIABLE($args) [ ] ) ; T_VARIABLE($args) [ . T_VARIABLE($index) . ] = T_VARIABLE($count) ; T_RETURN T_STRING ( T_STRING ( T_VARIABLE($plural) , T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($index) . ) ) , T_VARIABLE($args) , T_VARIABLE($langcode) ) ; } } } T_FUNCTION(parse_size) ( T_VARIABLE($size) ) { T_VARIABLE($suffixes) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_STRING ( , T_VARIABLE($size) , T_VARIABLE($match) ) ) { T_RETURN T_VARIABLE($match) [ T_LNUMBER ] * T_VARIABLE($suffixes) [ T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ] ; } } T_FUNCTION(format_size) ( T_VARIABLE($size) , T_VARIABLE($langcode) = T_STRING ) { T_IF ( T_VARIABLE($size) < T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($size) , , , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_ELSE { T_VARIABLE($size) = T_STRING ( T_VARIABLE($size) / T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($suffix) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; T_IF ( T_VARIABLE($size) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($size) = T_STRING ( T_VARIABLE($size) / T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($suffix) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($size) , T_DOUBLE_ARROW T_VARIABLE($suffix) ) , T_VARIABLE($langcode) ) ; } } T_FUNCTION(format_interval) ( T_VARIABLE($timestamp) , T_VARIABLE($granularity) = T_LNUMBER , T_VARIABLE($langcode) = T_STRING ) { T_VARIABLE($units) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($units) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($key) = T_STRING ( , T_VARIABLE($key) ) ; T_IF ( T_VARIABLE($timestamp) T_IS_GREATER_OR_EQUAL T_VARIABLE($value) ) { T_VARIABLE($output) T_CONCAT_EQUAL ( T_VARIABLE($output) ? : ) . T_STRING ( T_STRING ( T_VARIABLE($timestamp) / T_VARIABLE($value) ) , T_VARIABLE($key) [ T_LNUMBER ] , T_VARIABLE($key) [ T_LNUMBER ] , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; T_VARIABLE($timestamp) T_MOD_EQUAL T_VARIABLE($value) ; T_VARIABLE($granularity) T_DEC ; } T_IF ( T_VARIABLE($granularity) T_IS_EQUAL T_LNUMBER ) { T_BREAK ; } } T_RETURN T_VARIABLE($output) ? T_VARIABLE($output) : T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_FUNCTION(format_date) ( T_VARIABLE($timestamp) , T_VARIABLE($type) = , T_VARIABLE($format) = , T_VARIABLE($timezone) = T_STRING , T_VARIABLE($langcode) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($timezone) ) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_STRING ( , T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($timezone) = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($timezone) = T_STRING ( , T_LNUMBER ) ; } } T_VARIABLE($timestamp) T_PLUS_EQUAL T_VARIABLE($timezone) ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_VARIABLE($format) = T_STRING ( , ) ; T_BREAK ; T_CASE : T_VARIABLE($format) = T_STRING ( , ) ; T_BREAK ; T_CASE : T_BREAK ; T_CASE : T_DEFAULT : T_VARIABLE($format) = T_STRING ( , ) ; } T_VARIABLE($max) = T_STRING ( T_VARIABLE($format) ) ; T_VARIABLE($date) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($max) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($c) = T_VARIABLE($format) [ T_VARIABLE($i) ] ; T_IF ( T_STRING ( , T_VARIABLE($c) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($date) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($c) , T_VARIABLE($timestamp) ) , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_ELSE T_IF ( T_VARIABLE($c) T_IS_EQUAL ) { T_VARIABLE($date) T_CONCAT_EQUAL T_STRING ( T_STRING ( . T_STRING ( T_VARIABLE($c) , T_VARIABLE($timestamp) ) , T_ARRAY ( T_DOUBLE_ARROW ) , T_VARIABLE($langcode) ) ) ; } T_ELSE T_IF ( T_STRING ( , T_VARIABLE($c) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($date) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($c) , T_VARIABLE($timestamp) ) ; } T_ELSE T_IF ( T_VARIABLE($c) T_IS_EQUAL ) { T_VARIABLE($date) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($timestamp) - T_VARIABLE($timezone) , , , T_VARIABLE($timezone) , T_VARIABLE($langcode) ) ; } T_ELSE T_IF ( T_VARIABLE($c) T_IS_EQUAL ) { T_VARIABLE($date) T_CONCAT_EQUAL T_STRING ( , ( T_VARIABLE($timezone) < T_LNUMBER ? : ) , T_STRING ( T_VARIABLE($timezone) / T_LNUMBER ) , T_STRING ( T_VARIABLE($timezone) \% T_LNUMBER ) / T_LNUMBER ) ; } T_ELSE T_IF ( T_VARIABLE($c) T_IS_EQUAL ) { T_VARIABLE($date) T_CONCAT_EQUAL T_VARIABLE($timezone) ; } T_ELSE T_IF ( T_VARIABLE($c) T_IS_EQUAL ) { T_VARIABLE($date) T_CONCAT_EQUAL T_VARIABLE($format) [ T_INC T_VARIABLE($i) ] ; } T_ELSE { T_VARIABLE($date) T_CONCAT_EQUAL T_VARIABLE($c) ; } } T_RETURN T_VARIABLE($date) ; } T_FUNCTION(url) ( T_VARIABLE($path) = T_STRING , T_VARIABLE($options) = T_ARRAY ( ) ) { T_VARIABLE($options) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ; T_IF ( ! T_ISSET ( T_VARIABLE($options) [ ] ) ) { T_VARIABLE($colonpos) = T_STRING ( T_VARIABLE($path) , ) ; T_VARIABLE($options) [ ] = ( T_VARIABLE($colonpos) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND ! T_STRING ( , T_STRING ( T_VARIABLE($path) , T_LNUMBER , T_VARIABLE($colonpos) ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($path) , T_STRING ) T_IS_EQUAL T_STRING ( T_VARIABLE($path) ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($path) , T_VARIABLE($options) ) ; } T_IF ( T_VARIABLE($options) [ ] ) { T_VARIABLE($options) [ ] = . T_VARIABLE($options) [ ] ; } T_IF ( T_STRING ( T_VARIABLE($options) [ ] ) ) { T_VARIABLE($options) [ ] = T_STRING ( T_VARIABLE($options) [ ] ) ; } T_IF ( T_VARIABLE($options) [ ] ) { T_IF ( T_STRING ( T_VARIABLE($path) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_LIST ( T_VARIABLE($path) , T_VARIABLE($old_fragment) ) = T_STRING ( , T_VARIABLE($path) , T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($old_fragment) ) T_BOOLEAN_AND ! T_VARIABLE($options) [ ] ) { T_VARIABLE($options) [ ] = . T_VARIABLE($old_fragment) ; } } T_IF ( T_VARIABLE($options) [ ] ) { T_VARIABLE($path) T_CONCAT_EQUAL ( T_STRING ( T_VARIABLE($path) , ) T_IS_NOT_IDENTICAL T_STRING ? : ) . T_VARIABLE($options) [ ] ; } T_RETURN T_VARIABLE($path) . T_VARIABLE($options) [ ] ; } T_GLOBAL T_VARIABLE($base_url) ; T_STATIC T_VARIABLE($script) ; T_STATIC T_VARIABLE($clean_url) ; T_IF ( ! T_ISSET ( T_VARIABLE($script) ) ) { T_VARIABLE($script) = ( T_STRING ( T_VARIABLE($_SERVER) [ ] , ) T_IS_IDENTICAL T_STRING ) ? : ; } T_IF ( ! T_ISSET ( T_VARIABLE($clean_url) ) ) { T_VARIABLE($clean_url) = T_BOOL_CAST T_STRING ( , ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($options) [ ] ) ) { T_VARIABLE($options) [ ] = T_VARIABLE($base_url) ; } T_VARIABLE($original_path) = T_VARIABLE($path) ; T_IF ( T_VARIABLE($path) T_IS_EQUAL ) { T_VARIABLE($path) = ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($path) ) T_BOOLEAN_AND ! T_VARIABLE($options) [ ] ) { T_VARIABLE($path) = T_STRING ( T_VARIABLE($path) , T_ISSET ( T_VARIABLE($options) [ ] ) ? T_VARIABLE($options) [ ] T_OBJECT_OPERATOR T_STRING : ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($path) , T_VARIABLE($options) , T_VARIABLE($original_path) ) ; } T_VARIABLE($base) = T_VARIABLE($options) [ ] ? T_VARIABLE($options) [ ] . : T_STRING ( ) ; T_VARIABLE($prefix) = T_EMPTY ( T_VARIABLE($path) ) ? T_STRING ( T_VARIABLE($options) [ ] , ) : T_VARIABLE($options) [ ] ; T_VARIABLE($path) = T_STRING ( T_VARIABLE($prefix) . T_VARIABLE($path) ) ; T_IF ( T_VARIABLE($clean_url) ) { T_IF ( T_VARIABLE($options) [ ] ) { T_RETURN T_VARIABLE($base) . T_VARIABLE($path) . . T_VARIABLE($options) [ ] . T_VARIABLE($options) [ ] ; } T_ELSE { T_RETURN T_VARIABLE($base) . T_VARIABLE($path) . T_VARIABLE($options) [ ] ; } } T_ELSE { T_VARIABLE($variables) = T_ARRAY ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($path) ) ) { T_VARIABLE($variables) [ ] = . T_VARIABLE($path) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($options) [ ] ) ) { T_VARIABLE($variables) [ ] = T_VARIABLE($options) [ ] ; } T_IF ( T_VARIABLE($query) = T_STRING ( , T_VARIABLE($variables) ) ) { T_RETURN T_VARIABLE($base) . T_VARIABLE($script) . . T_VARIABLE($query) . T_VARIABLE($options) [ ] ; } T_ELSE { T_RETURN T_VARIABLE($base) . T_VARIABLE($options) [ ] ; } } } T_FUNCTION(drupal_attributes) ( T_VARIABLE($attributes) = T_ARRAY ( ) ) { T_IF ( T_STRING ( T_VARIABLE($attributes) ) ) { T_VARIABLE($t) = ; T_FOREACH ( T_VARIABLE($attributes) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($t) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE . . T_STRING ( T_VARIABLE($value) ) . ; } T_RETURN T_VARIABLE($t) ; } } T_FUNCTION(l) ( T_VARIABLE($text) , T_VARIABLE($path) , T_VARIABLE($options) = T_ARRAY ( ) ) { T_VARIABLE($options) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_IF ( T_VARIABLE($path) T_IS_EQUAL T_VARIABLE($_GET) [ ] T_BOOLEAN_OR ( T_VARIABLE($path) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( ) ) ) { T_IF ( T_ISSET ( T_VARIABLE($options) [ ] [ ] ) ) { T_VARIABLE($options) [ ] [ ] T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($options) [ ] [ ] = ; } } T_IF ( T_ISSET ( T_VARIABLE($options) [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($options) [ ] [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($options) [ ] [ ] = T_STRING ( T_VARIABLE($options) [ ] [ ] ) ; } T_RETURN . T_STRING ( T_STRING ( T_VARIABLE($path) , T_VARIABLE($options) ) ) . . T_STRING ( T_VARIABLE($options) [ ] ) . . ( T_VARIABLE($options) [ ] ? T_VARIABLE($text) : T_STRING ( T_VARIABLE($text) ) ) . ; } T_FUNCTION(drupal_page_footer) ( ) { T_IF ( T_STRING ( , T_STRING ) T_IS_NOT_EQUAL T_STRING ) { T_STRING ( ) ; } T_STRING ( ) ; } T_FUNCTION(drupal_map_assoc) ( T_VARIABLE($array) , T_VARIABLE($function) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($function) ) ) { T_VARIABLE($result) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($value) ) { T_VARIABLE($result) [ T_VARIABLE($value) ] = T_VARIABLE($value) ; } T_RETURN T_VARIABLE($result) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($result) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($value) ) { T_VARIABLE($result) [ T_VARIABLE($value) ] = T_VARIABLE($function) ( T_VARIABLE($value) ) ; } T_RETURN T_VARIABLE($result) ; } } T_FUNCTION(drupal_eval) ( T_VARIABLE($code) ) { T_GLOBAL T_VARIABLE($theme_path) , T_VARIABLE($theme_info) , T_VARIABLE($conf) ; T_VARIABLE($old_theme_path) = T_VARIABLE($theme_path) ; T_IF ( ! T_ISSET ( T_VARIABLE($theme_info) ) ) { T_VARIABLE($theme_path) = T_STRING ( , T_VARIABLE($conf) [ ] ) ; } T_ELSE { T_VARIABLE($theme_path) = T_STRING ( T_VARIABLE($theme_info) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( ) ; T_PRINT T_EVAL ( . T_VARIABLE($code) ) ; T_VARIABLE($output) = T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($theme_path) = T_VARIABLE($old_theme_path) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(drupal_get_path) ( T_VARIABLE($type) , T_VARIABLE($name) ) { T_RETURN T_STRING ( T_STRING ( T_VARIABLE($type) , T_VARIABLE($name) ) ) ; } T_FUNCTION(base_path) ( ) { T_RETURN T_VARIABLE($GLOBALS) [ ] ; } T_FUNCTION(drupal_clone) ( T_VARIABLE($object) ) { T_RETURN T_STRING ( T_STRING ( ) , ) < T_LNUMBER ? T_VARIABLE($object) : T_CLONE ( T_VARIABLE($object) ) ; } T_FUNCTION(drupal_add_link) ( T_VARIABLE($attributes) ) { T_STRING ( . T_STRING ( T_VARIABLE($attributes) ) . ) ; } T_FUNCTION(drupal_add_css) ( T_VARIABLE($path) = T_STRING , T_VARIABLE($type) = , T_VARIABLE($media) = , T_VARIABLE($preprocess) = T_STRING ) { T_STATIC T_VARIABLE($css) = T_ARRAY ( ) ; T_GLOBAL T_VARIABLE($language) ; T_IF ( T_ISSET ( T_VARIABLE($path) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($css) [ T_VARIABLE($media) ] ) ) { T_VARIABLE($css) [ T_VARIABLE($media) ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_FOREACH ( T_VARIABLE($css) [ T_VARIABLE($media) ] [ ] T_AS T_VARIABLE($old_path) T_DOUBLE_ARROW T_VARIABLE($old_preprocess) ) { T_IF ( T_STRING ( T_VARIABLE($path) ) T_IS_EQUAL T_STRING ( T_VARIABLE($old_path) ) ) { T_UNSET ( T_VARIABLE($css) [ T_VARIABLE($media) ] [ ] [ T_VARIABLE($old_path) ] ) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) { T_VARIABLE($rtl_old_path) = T_STRING ( , , T_VARIABLE($old_path) ) ; T_IF ( T_ISSET ( T_VARIABLE($css) [ T_VARIABLE($media) ] [ ] [ T_VARIABLE($rtl_old_path) ] ) ) { T_UNSET ( T_VARIABLE($css) [ T_VARIABLE($media) ] [ ] [ T_VARIABLE($rtl_old_path) ] ) ; } } T_VARIABLE($preprocess) = T_VARIABLE($old_preprocess) ; T_BREAK ; } } } T_VARIABLE($css) [ T_VARIABLE($media) ] [ T_VARIABLE($type) ] [ T_VARIABLE($path) ] = T_VARIABLE($preprocess) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) { T_VARIABLE($rtl_path) = T_STRING ( , , T_VARIABLE($path) ) ; T_IF ( T_STRING ( T_VARIABLE($rtl_path) ) ) { T_VARIABLE($css) [ T_VARIABLE($media) ] [ T_VARIABLE($type) ] [ T_VARIABLE($rtl_path) ] = T_VARIABLE($preprocess) ; } } } T_RETURN T_VARIABLE($css) ; } T_FUNCTION(drupal_get_css) ( T_VARIABLE($css) = T_STRING ) { T_VARIABLE($output) = ; T_IF ( ! T_ISSET ( T_VARIABLE($css) ) ) { T_VARIABLE($css) = T_STRING ( ) ; } T_VARIABLE($no_module_preprocess) = ; T_VARIABLE($no_theme_preprocess) = ; T_VARIABLE($preprocess_css) = ( T_STRING ( , T_STRING ) T_BOOLEAN_AND ( ! T_STRING ( ) T_BOOLEAN_OR T_STRING T_IS_NOT_EQUAL ) ) ; T_VARIABLE($directory) = T_STRING ( ) ; T_VARIABLE($is_writable) = T_STRING ( T_VARIABLE($directory) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($directory) ) T_BOOLEAN_AND ( T_STRING ( , T_STRING ) T_IS_EQUAL T_STRING ) ; T_VARIABLE($query_string) = . T_STRING ( T_STRING ( , ) , T_LNUMBER , T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($css) T_AS T_VARIABLE($media) T_DOUBLE_ARROW T_VARIABLE($types) ) { T_FOREACH ( T_VARIABLE($types) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($files) ) { T_FOREACH ( T_VARIABLE($types) [ T_VARIABLE($type) ] T_AS T_VARIABLE($file) T_DOUBLE_ARROW T_VARIABLE($preprocess) ) { T_IF ( ! T_VARIABLE($preprocess) T_BOOLEAN_OR ! ( T_VARIABLE($is_writable) T_BOOLEAN_AND T_VARIABLE($preprocess_css) ) ) { T_IF ( ! T_VARIABLE($preprocess) T_BOOLEAN_AND T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($no_module_preprocess) T_CONCAT_EQUAL . T_VARIABLE($media) . . T_STRING ( ) . T_VARIABLE($file) . T_VARIABLE($query_string) . . ; } T_ELSE T_IF ( ! T_VARIABLE($preprocess) T_BOOLEAN_AND T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($no_theme_preprocess) T_CONCAT_EQUAL . T_VARIABLE($media) . . T_STRING ( ) . T_VARIABLE($file) . T_VARIABLE($query_string) . . ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($media) . . T_STRING ( ) . T_VARIABLE($file) . T_VARIABLE($query_string) . . ; } } } } T_IF ( T_VARIABLE($is_writable) T_BOOLEAN_AND T_VARIABLE($preprocess_css) ) { T_VARIABLE($filename) = T_STRING ( T_STRING ( T_VARIABLE($types) ) . T_VARIABLE($query_string) ) . ; T_VARIABLE($preprocess_file) = T_STRING ( T_VARIABLE($types) , T_VARIABLE($filename) ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($media) . . T_STRING ( ) . T_VARIABLE($preprocess_file) . . ; } } T_RETURN T_VARIABLE($no_module_preprocess) . T_VARIABLE($output) . T_VARIABLE($no_theme_preprocess) ; } T_FUNCTION(drupal_build_css_cache) ( T_VARIABLE($types) , T_VARIABLE($filename) ) { T_VARIABLE($data) = ; T_VARIABLE($csspath) = T_STRING ( ) ; T_STRING ( T_VARIABLE($csspath) , T_STRING ) ; T_IF ( ! T_STRING ( T_VARIABLE($csspath) . . T_VARIABLE($filename) ) ) { T_FOREACH ( T_VARIABLE($types) T_AS T_VARIABLE($type) ) { T_FOREACH ( T_VARIABLE($type) T_AS T_VARIABLE($file) T_DOUBLE_ARROW T_VARIABLE($cache) ) { T_IF ( T_VARIABLE($cache) ) { T_VARIABLE($contents) = T_STRING ( T_VARIABLE($file) , T_STRING ) ; T_VARIABLE($base) = T_STRING ( ) . T_STRING ( T_VARIABLE($file) ) . ; T_STRING ( T_STRING , T_VARIABLE($base) ) ; T_VARIABLE($data) T_CONCAT_EQUAL T_STRING ( , , T_VARIABLE($contents) ) ; } } } T_VARIABLE($regexp) = ; T_STRING ( T_VARIABLE($regexp) , T_VARIABLE($data) , T_VARIABLE($matches) ) ; T_VARIABLE($data) = T_STRING ( T_VARIABLE($regexp) , , T_VARIABLE($data) ) ; T_VARIABLE($data) = T_STRING ( , T_VARIABLE($matches) [ T_LNUMBER ] ) . T_VARIABLE($data) ; T_STRING ( T_VARIABLE($data) , T_VARIABLE($csspath) . . T_VARIABLE($filename) , T_STRING ) ; } T_RETURN T_VARIABLE($csspath) . . T_VARIABLE($filename) ; } T_FUNCTION(_drupal_build_css_path) ( T_VARIABLE($matches) , T_VARIABLE($base) = T_STRING ) { T_STATIC T_VARIABLE($_base) ; T_IF ( T_ISSET ( T_VARIABLE($base) ) ) { T_VARIABLE($_base) = T_VARIABLE($base) ; } T_VARIABLE($path) = T_VARIABLE($_base) . T_VARIABLE($matches) [ T_LNUMBER ] ; T_VARIABLE($last) = ; T_WHILE ( T_VARIABLE($path) T_IS_NOT_EQUAL T_VARIABLE($last) ) { T_VARIABLE($last) = T_VARIABLE($path) ; T_VARIABLE($path) = T_STRING ( , , T_VARIABLE($path) ) ; } T_RETURN . T_VARIABLE($path) . ; } T_FUNCTION(drupal_load_stylesheet) ( T_VARIABLE($file) , T_VARIABLE($optimize) = T_STRING ) { T_STATIC T_VARIABLE($_optimize) ; T_IF ( T_ISSET ( T_VARIABLE($optimize) ) ) { T_VARIABLE($_optimize) = T_VARIABLE($optimize) ; } T_VARIABLE($contents) = ; T_IF ( T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($contents) = T_STRING ( T_VARIABLE($file) ) ; T_VARIABLE($cwd) = T_STRING ( ) ; T_STRING ( T_STRING ( T_VARIABLE($file) ) ) ; T_VARIABLE($contents) = T_STRING ( , , T_VARIABLE($contents) ) ; T_VARIABLE($contents) = T_STRING ( , , T_VARIABLE($contents) ) ; T_IF ( T_VARIABLE($_optimize) ) { T_VARIABLE($contents) = T_STRING ( , , T_VARIABLE($contents) ) ; } T_STRING ( T_VARIABLE($cwd) ) ; } T_RETURN T_VARIABLE($contents) ; } T_FUNCTION(_drupal_load_stylesheet) ( T_VARIABLE($matches) ) { T_VARIABLE($filename) = T_VARIABLE($matches) [ T_LNUMBER ] ; T_VARIABLE($file) = T_STRING ( T_VARIABLE($filename) ) ; T_RETURN T_STRING ( , . T_STRING ( T_VARIABLE($filename) ) . , T_VARIABLE($file) ) ; } T_FUNCTION(drupal_clear_css_cache) ( ) { T_STRING ( T_STRING ( ) , , T_ARRAY ( , , ) , , T_STRING ) ; } T_FUNCTION(drupal_add_js) ( T_VARIABLE($data) = T_STRING , T_VARIABLE($type) = , T_VARIABLE($scope) = , T_VARIABLE($defer) = T_STRING , T_VARIABLE($cache) = T_STRING , T_VARIABLE($preprocess) = T_STRING ) { T_STATIC T_VARIABLE($javascript) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($data) ) ) { T_IF ( T_EMPTY ( T_VARIABLE($javascript) ) ) { T_VARIABLE($javascript) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } T_IF ( T_ISSET ( T_VARIABLE($scope) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($javascript) [ T_VARIABLE($scope) ] ) ) { T_VARIABLE($javascript) [ T_VARIABLE($scope) ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($type) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($scope) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($javascript) [ T_VARIABLE($scope) ] [ T_VARIABLE($type) ] ) ) { T_VARIABLE($javascript) [ T_VARIABLE($scope) ] [ T_VARIABLE($type) ] = T_ARRAY ( ) ; } T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_VARIABLE($javascript) [ T_VARIABLE($scope) ] [ T_VARIABLE($type) ] [ ] = T_VARIABLE($data) ; T_BREAK ; T_CASE : T_VARIABLE($javascript) [ T_VARIABLE($scope) ] [ T_VARIABLE($type) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($data) , T_DOUBLE_ARROW T_VARIABLE($defer) ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($javascript) [ T_VARIABLE($scope) ] [ T_VARIABLE($type) ] [ T_VARIABLE($data) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($cache) , T_DOUBLE_ARROW T_VARIABLE($defer) , T_DOUBLE_ARROW ( ! T_VARIABLE($cache) ? T_STRING : T_VARIABLE($preprocess) ) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($scope) ) ) { T_IF ( T_ISSET ( T_VARIABLE($javascript) [ T_VARIABLE($scope) ] ) ) { T_RETURN T_VARIABLE($javascript) [ T_VARIABLE($scope) ] ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } T_ELSE { T_RETURN T_VARIABLE($javascript) ; } } T_FUNCTION(drupal_get_js) ( T_VARIABLE($scope) = , T_VARIABLE($javascript) = T_STRING ) { T_IF ( ( ! T_STRING ( ) T_BOOLEAN_OR T_STRING T_IS_NOT_EQUAL ) T_BOOLEAN_AND T_STRING ( ) ) { T_STRING ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($javascript) ) ) { T_VARIABLE($javascript) = T_STRING ( T_STRING , T_STRING , T_VARIABLE($scope) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($javascript) ) ) { T_RETURN ; } T_VARIABLE($output) = ; T_VARIABLE($preprocessed) = ; T_VARIABLE($no_preprocess) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($files) = T_ARRAY ( ) ; T_VARIABLE($preprocess_js) = ( T_STRING ( , T_STRING ) T_BOOLEAN_AND ( ! T_STRING ( ) T_BOOLEAN_OR T_STRING T_IS_NOT_EQUAL ) ) ; T_VARIABLE($directory) = T_STRING ( ) ; T_VARIABLE($is_writable) = T_STRING ( T_VARIABLE($directory) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($directory) ) T_BOOLEAN_AND ( T_STRING ( , T_STRING ) T_IS_EQUAL T_STRING ) ; T_VARIABLE($query_string) = . T_STRING ( T_STRING ( , ) , T_LNUMBER , T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($javascript) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($data) ) { T_IF ( ! T_VARIABLE($data) ) T_CONTINUE ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( , T_VARIABLE($data) ) ) . ; T_BREAK ; T_CASE : T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($info) ) { T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($info) [ ] ? : ) . . T_VARIABLE($info) [ ] . ; } T_BREAK ; T_DEFAULT : T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($path) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_IF ( ! T_VARIABLE($info) [ ] T_BOOLEAN_OR ! T_VARIABLE($is_writable) T_BOOLEAN_OR ! T_VARIABLE($preprocess_js) ) { T_VARIABLE($no_preprocess) [ T_VARIABLE($type) ] T_CONCAT_EQUAL . ( T_VARIABLE($info) [ ] ? : ) . . T_STRING ( ) . T_VARIABLE($path) . ( T_VARIABLE($info) [ ] ? T_VARIABLE($query_string) : . T_STRING ( ) ) . ; } T_ELSE { T_VARIABLE($files) [ T_VARIABLE($path) ] = T_VARIABLE($info) ; } } } } T_IF ( T_VARIABLE($is_writable) T_BOOLEAN_AND T_VARIABLE($preprocess_js) T_BOOLEAN_AND T_STRING ( T_VARIABLE($files) ) > T_LNUMBER ) { T_VARIABLE($filename) = T_STRING ( T_STRING ( T_VARIABLE($files) ) . T_VARIABLE($query_string) ) . ; T_VARIABLE($preprocess_file) = T_STRING ( T_VARIABLE($files) , T_VARIABLE($filename) ) ; T_VARIABLE($preprocessed) T_CONCAT_EQUAL . T_STRING ( ) . T_VARIABLE($preprocess_file) . . ; } T_VARIABLE($output) = T_VARIABLE($preprocessed) . T_STRING ( , T_VARIABLE($no_preprocess) ) . T_VARIABLE($output) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(drupal_add_tabledrag) ( T_VARIABLE($table_id) , T_VARIABLE($action) , T_VARIABLE($relationship) , T_VARIABLE($group) , T_VARIABLE($subgroup) = T_STRING , T_VARIABLE($source) = T_STRING , T_VARIABLE($hidden) = T_STRING , T_VARIABLE($limit) = T_LNUMBER ) { T_STATIC T_VARIABLE($js_added) = T_STRING ; T_IF ( ! T_VARIABLE($js_added) ) { T_STRING ( , ) ; T_VARIABLE($js_added) = T_STRING ; } T_VARIABLE($target) = T_ISSET ( T_VARIABLE($subgroup) ) ? T_VARIABLE($subgroup) : T_VARIABLE($group) ; T_VARIABLE($source) = T_ISSET ( T_VARIABLE($source) ) ? T_VARIABLE($source) : T_VARIABLE($target) ; T_VARIABLE($settings) [ ] [ T_VARIABLE($table_id) ] [ T_VARIABLE($group) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($target) , T_DOUBLE_ARROW T_VARIABLE($source) , T_DOUBLE_ARROW T_VARIABLE($relationship) , T_DOUBLE_ARROW T_VARIABLE($action) , T_DOUBLE_ARROW T_VARIABLE($hidden) , T_DOUBLE_ARROW T_VARIABLE($limit) , ) ; T_STRING ( T_VARIABLE($settings) , ) ; } T_FUNCTION(drupal_build_js_cache) ( T_VARIABLE($files) , T_VARIABLE($filename) ) { T_VARIABLE($contents) = ; T_VARIABLE($jspath) = T_STRING ( ) ; T_STRING ( T_VARIABLE($jspath) , T_STRING ) ; T_IF ( ! T_STRING ( T_VARIABLE($jspath) . . T_VARIABLE($filename) ) ) { T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($path) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_IF ( T_VARIABLE($info) [ ] ) { T_VARIABLE($contents) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($path) ) . ; } } T_STRING ( T_VARIABLE($contents) , T_VARIABLE($jspath) . . T_VARIABLE($filename) , T_STRING ) ; } T_RETURN T_VARIABLE($jspath) . . T_VARIABLE($filename) ; } T_FUNCTION(drupal_clear_js_cache) ( ) { T_STRING ( T_STRING ( ) , , T_ARRAY ( , , ) , , T_STRING ) ; T_STRING ( , T_ARRAY ( ) ) ; } T_FUNCTION(drupal_to_js) ( T_VARIABLE($var) ) { T_SWITCH ( T_STRING ( T_VARIABLE($var) ) ) { T_CASE : T_RETURN T_VARIABLE($var) ? : ; T_CASE : T_CASE : T_RETURN T_VARIABLE($var) ; T_CASE : T_CASE : T_RETURN . T_STRING ( T_ARRAY ( , , , , ) , T_ARRAY ( , , , , ) , T_STRING ( T_VARIABLE($var) ) ) . ; T_CASE : T_IF ( T_EMPTY ( T_VARIABLE($var) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($var) ) T_IS_IDENTICAL T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($var) ) - T_LNUMBER ) ) { T_VARIABLE($output) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($var) T_AS T_VARIABLE($v) ) { T_VARIABLE($output) [ ] = T_STRING ( T_VARIABLE($v) ) ; } T_RETURN . T_STRING ( , T_VARIABLE($output) ) . ; } T_CASE : T_VARIABLE($output) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($var) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($output) [ ] = T_STRING ( T_STRING ( T_VARIABLE($k) ) ) . . T_STRING ( T_VARIABLE($v) ) ; } T_RETURN . T_STRING ( , T_VARIABLE($output) ) . ; T_DEFAULT : T_RETURN ; } } T_FUNCTION(drupal_json) ( T_VARIABLE($var) = T_STRING ) { T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($var) ) ) { T_ECHO T_STRING ( T_VARIABLE($var) ) ; } } T_FUNCTION(drupal_urlencode) ( T_VARIABLE($text) ) { T_IF ( T_STRING ( , ) ) { T_RETURN T_STRING ( T_ARRAY ( , , , ) , T_ARRAY ( , , , ) , T_STRING ( T_VARIABLE($text) ) ) ; } T_ELSE { T_RETURN T_STRING ( , , T_STRING ( T_VARIABLE($text) ) ) ; } } T_FUNCTION(drupal_get_private_key) ( ) { T_IF ( ! ( T_VARIABLE($key) = T_STRING ( , T_LNUMBER ) ) ) { T_VARIABLE($key) = T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ) ) . T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ) ) ; T_STRING ( , T_VARIABLE($key) ) ; } T_RETURN T_VARIABLE($key) ; } T_FUNCTION(drupal_get_token) ( T_VARIABLE($value) = ) { T_VARIABLE($private_key) = T_STRING ( ) ; T_RETURN T_STRING ( T_STRING ( ) . T_VARIABLE($value) . T_VARIABLE($private_key) ) ; } T_FUNCTION(drupal_valid_token) ( T_VARIABLE($token) , T_VARIABLE($value) = , T_VARIABLE($skip_anonymous) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_RETURN ( ( T_VARIABLE($skip_anonymous) T_BOOLEAN_AND T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) T_BOOLEAN_OR ( T_VARIABLE($token) T_IS_EQUAL T_STRING ( T_STRING ( ) . T_VARIABLE($value) . T_STRING ( , ) ) ) ) ; } T_FUNCTION(xmlrpc) ( T_VARIABLE($url) ) { T_REQUIRE_ONCE ; T_VARIABLE($args) = T_STRING ( ) ; T_RETURN T_STRING ( , T_VARIABLE($args) ) ; } T_FUNCTION(_drupal_bootstrap_full) ( ) { T_STATIC T_VARIABLE($called) ; T_IF ( T_VARIABLE($called) ) { T_RETURN ; } T_VARIABLE($called) = T_LNUMBER ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_IF ( ! T_STRING ( ) T_BOOLEAN_OR T_STRING T_IS_NOT_EQUAL ) { T_STRING ( ) ; } } T_FUNCTION(page_set_cache) ( ) { T_GLOBAL T_VARIABLE($user) , T_VARIABLE($base_root) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($_SERVER) [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_STRING ) ) { T_IF ( T_VARIABLE($data) = T_STRING ( ) ) { T_VARIABLE($cache) = T_STRING ; T_IF ( T_STRING ( , T_STRING ) T_BOOLEAN_AND T_STRING ( ) ) { T_IF ( T_STRING ( ) T_IS_EQUAL ) { T_VARIABLE($cache) = T_STRING ; } T_ELSE T_IF ( T_STRING ( ) T_IS_EQUAL T_STRING ) { T_VARIABLE($data) = T_STRING ( T_VARIABLE($data) , T_LNUMBER , T_STRING ) ; } } T_STRING ( ) ; T_IF ( T_VARIABLE($cache) T_BOOLEAN_AND T_VARIABLE($data) ) { T_STRING ( T_VARIABLE($base_root) . T_STRING ( ) , T_VARIABLE($data) , , T_STRING , T_STRING ( ) ) ; } } } } T_FUNCTION(drupal_cron_run) ( ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( T_LNUMBER ) ; } T_VARIABLE($semaphore) = T_STRING ( , T_STRING ) ; T_IF ( T_VARIABLE($semaphore) ) { T_IF ( T_STRING ( ) - T_VARIABLE($semaphore) > T_LNUMBER ) { T_STRING ( , , T_ARRAY ( ) , T_STRING ) ; T_STRING ( ) ; } T_ELSE { T_STRING ( , , T_ARRAY ( ) , T_STRING ) ; } } T_ELSE { T_STRING ( ) ; T_STRING ( , T_STRING ( ) ) ; T_STRING ( ) ; T_STRING ( , T_STRING ( ) ) ; T_STRING ( , , T_ARRAY ( ) , T_STRING ) ; T_STRING ( ) ; T_RETURN T_STRING ; } } T_FUNCTION(drupal_cron_cleanup) ( ) { T_IF ( T_STRING ( , T_STRING ) ) { T_STRING ( , , T_ARRAY ( ) , T_STRING ) ; T_STRING ( ) ; } } T_FUNCTION(drupal_system_listing) ( T_VARIABLE($mask) , T_VARIABLE($directory) , T_VARIABLE($key) = , T_VARIABLE($min_depth) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($profile) ; T_VARIABLE($config) = T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($profile) ) ) { T_VARIABLE($profile) = T_STRING ( , ) ; } T_VARIABLE($searchdir) = T_ARRAY ( T_VARIABLE($directory) ) ; T_VARIABLE($files) = T_ARRAY ( ) ; T_VARIABLE($searchdir) [ ] = . T_VARIABLE($directory) ; T_IF ( T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($directory) ) ) { T_VARIABLE($searchdir) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($directory) ; } T_IF ( T_STRING ( T_VARIABLE($config) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($directory) ) ) { T_VARIABLE($searchdir) [ ] = T_VARIABLE($config) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($directory) ; } T_FOREACH ( T_VARIABLE($searchdir) T_AS T_VARIABLE($dir) ) { T_VARIABLE($files) = T_STRING ( T_VARIABLE($files) , T_STRING ( T_VARIABLE($dir) , T_VARIABLE($mask) , T_ARRAY ( , , ) , T_LNUMBER , T_STRING , T_VARIABLE($key) , T_VARIABLE($min_depth) ) ) ; } T_RETURN T_VARIABLE($files) ; } T_FUNCTION(drupal_alter) ( T_VARIABLE($type) , & T_VARIABLE($data) ) { T_IF ( T_STRING ( T_VARIABLE($data) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($data) [ ] ) ) { T_VARIABLE($by_ref_parameters) = T_VARIABLE($data) [ ] ; T_UNSET ( T_VARIABLE($data) [ ] ) ; } T_VARIABLE($args) = T_ARRAY ( & T_VARIABLE($data) ) ; T_IF ( T_ISSET ( T_VARIABLE($by_ref_parameters) ) ) { T_VARIABLE($args) = T_STRING ( T_VARIABLE($args) , T_VARIABLE($by_ref_parameters) ) ; } T_VARIABLE($additional_args) = T_STRING ( ) ; T_STRING ( T_VARIABLE($additional_args) ) ; T_STRING ( T_VARIABLE($additional_args) ) ; T_VARIABLE($args) = T_STRING ( T_VARIABLE($args) , T_VARIABLE($additional_args) ) ; T_FOREACH ( T_STRING ( T_VARIABLE($type) . ) T_AS T_VARIABLE($module) ) { T_VARIABLE($function) = T_VARIABLE($module) . . T_VARIABLE($type) . ; T_STRING ( T_VARIABLE($function) , T_VARIABLE($args) ) ; } } T_FUNCTION(drupal_render) ( & T_VARIABLE($elements) ) { T_IF ( ! T_ISSET ( T_VARIABLE($elements) ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($elements) [ ] ) T_BOOLEAN_AND ! T_VARIABLE($elements) [ ] ) ) { T_RETURN T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($elements) [ ] ) T_BOOLEAN_OR ! T_VARIABLE($elements) [ ] ) { T_IF ( ( ! T_EMPTY ( T_VARIABLE($elements) [ ] ) ) T_BOOLEAN_AND ( T_VARIABLE($info) = T_STRING ( T_VARIABLE($elements) [ ] ) ) ) { T_VARIABLE($elements) T_PLUS_EQUAL T_VARIABLE($info) ; } } T_IF ( T_ISSET ( T_VARIABLE($elements) [ ] ) ) { T_FOREACH ( T_VARIABLE($elements) [ ] T_AS T_VARIABLE($function) ) { T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($elements) = T_VARIABLE($function) ( T_VARIABLE($elements) ) ; } } } T_VARIABLE($content) = ; T_IF ( ! T_ISSET ( T_VARIABLE($elements) [ ] ) ) { T_STRING ( T_VARIABLE($elements) , ) ; } T_VARIABLE($elements) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) ; T_IF ( ! T_ISSET ( T_VARIABLE($elements) [ ] ) ) { T_VARIABLE($children) = T_STRING ( T_VARIABLE($elements) ) ; T_IF ( T_ISSET ( T_VARIABLE($elements) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($elements) [ ] ) ) { T_VARIABLE($elements) [ ] = T_STRING ; T_VARIABLE($previous) = T_ARRAY ( ) ; T_FOREACH ( T_ARRAY ( , , , ) T_AS T_VARIABLE($key) ) { T_VARIABLE($previous) [ T_VARIABLE($key) ] = T_ISSET ( T_VARIABLE($elements) [ T_VARIABLE($key) ] ) ? T_VARIABLE($elements) [ T_VARIABLE($key) ] : T_STRING ; } T_IF ( T_EMPTY ( T_VARIABLE($children) ) ) { T_VARIABLE($elements) [ ] = T_STRING ; } T_ELSE { T_VARIABLE($elements) [ ] = ; } T_VARIABLE($elements) [ ] = ; T_UNSET ( T_VARIABLE($elements) [ ] , T_VARIABLE($elements) [ ] ) ; T_VARIABLE($content) = T_STRING ( T_VARIABLE($elements) [ ] , T_VARIABLE($elements) ) ; T_FOREACH ( T_ARRAY ( , , , ) T_AS T_VARIABLE($key) ) { T_VARIABLE($elements) [ T_VARIABLE($key) ] = T_ISSET ( T_VARIABLE($previous) [ T_VARIABLE($key) ] ) ? T_VARIABLE($previous) [ T_VARIABLE($key) ] : T_STRING ; } } T_IF ( ! T_ISSET ( T_VARIABLE($content) ) T_BOOLEAN_OR T_VARIABLE($content) T_IS_IDENTICAL ) { T_FOREACH ( T_VARIABLE($children) T_AS T_VARIABLE($key) ) { T_VARIABLE($content) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($elements) [ T_VARIABLE($key) ] ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($content) ) T_BOOLEAN_AND T_VARIABLE($content) T_IS_NOT_IDENTICAL ) { T_VARIABLE($elements) [ ] = T_VARIABLE($content) ; } T_IF ( ! T_ISSET ( T_VARIABLE($elements) [ ] ) ) { T_VARIABLE($content) = T_STRING ( ! T_EMPTY ( T_VARIABLE($elements) [ ] ) ? T_VARIABLE($elements) [ ] : , T_VARIABLE($elements) ) ; T_VARIABLE($elements) [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($content) ) T_BOOLEAN_AND T_VARIABLE($content) T_IS_NOT_IDENTICAL ) { T_IF ( T_ISSET ( T_VARIABLE($elements) [ ] ) ) { T_FOREACH ( T_VARIABLE($elements) [ ] T_AS T_VARIABLE($function) ) { T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($content) = T_VARIABLE($function) ( T_VARIABLE($content) , T_VARIABLE($elements) ) ; } } } T_VARIABLE($prefix) = T_ISSET ( T_VARIABLE($elements) [ ] ) ? T_VARIABLE($elements) [ ] : ; T_VARIABLE($suffix) = T_ISSET ( T_VARIABLE($elements) [ ] ) ? T_VARIABLE($elements) [ ] : ; T_RETURN T_VARIABLE($prefix) . T_VARIABLE($content) . T_VARIABLE($suffix) ; } } T_FUNCTION(element_sort) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_VARIABLE($a_weight) = ( T_STRING ( T_VARIABLE($a) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($a) [ ] ) ) ? T_VARIABLE($a) [ ] : T_LNUMBER ; T_VARIABLE($b_weight) = ( T_STRING ( T_VARIABLE($b) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($b) [ ] ) ) ? T_VARIABLE($b) [ ] : T_LNUMBER ; T_IF ( T_VARIABLE($a_weight) T_IS_EQUAL T_VARIABLE($b_weight) ) { T_RETURN T_LNUMBER ; } T_RETURN ( T_VARIABLE($a_weight) < T_VARIABLE($b_weight) ) ? - T_LNUMBER : T_LNUMBER ; } T_FUNCTION(element_property) ( T_VARIABLE($key) ) { T_RETURN T_VARIABLE($key) [ T_LNUMBER ] T_IS_EQUAL ; } T_FUNCTION(element_properties) ( T_VARIABLE($element) ) { T_RETURN T_STRING ( T_STRING ( T_ARRAY_CAST T_VARIABLE($element) ) , ) ; } T_FUNCTION(element_child) ( T_VARIABLE($key) ) { T_RETURN ! T_ISSET ( T_VARIABLE($key) [ T_LNUMBER ] ) T_BOOLEAN_OR T_VARIABLE($key) [ T_LNUMBER ] T_IS_NOT_EQUAL ; } T_FUNCTION(element_children) ( T_VARIABLE($element) ) { T_RETURN T_STRING ( T_STRING ( T_ARRAY_CAST T_VARIABLE($element) ) , ) ; } T_FUNCTION(drupal_common_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(drupal_get_schema) ( T_VARIABLE($table) = T_STRING , T_VARIABLE($rebuild) = T_STRING ) { T_STATIC T_VARIABLE($schema) = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($schema) ) T_BOOLEAN_OR T_VARIABLE($rebuild) ) { T_IF ( ! T_VARIABLE($rebuild) T_BOOLEAN_AND T_VARIABLE($cached) = T_STRING ( ) ) { T_VARIABLE($schema) = T_VARIABLE($cached) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($schema) = T_ARRAY ( ) ; T_STRING ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_VARIABLE($current) = T_STRING ( T_VARIABLE($module) , ) ; T_STRING ( T_VARIABLE($module) , T_VARIABLE($current) ) ; T_VARIABLE($schema) = T_STRING ( T_VARIABLE($schema) , T_VARIABLE($current) ) ; } T_STRING ( , T_VARIABLE($schema) ) ; T_STRING ( , T_VARIABLE($schema) ) ; } } T_IF ( ! T_ISSET ( T_VARIABLE($table) ) ) { T_RETURN T_VARIABLE($schema) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($schema) [ T_VARIABLE($table) ] ) ) { T_RETURN T_VARIABLE($schema) [ T_VARIABLE($table) ] ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(drupal_install_schema) ( T_VARIABLE($module) ) { T_VARIABLE($schema) = T_STRING ( T_VARIABLE($module) ) ; T_STRING ( T_VARIABLE($module) , T_VARIABLE($schema) ) ; T_VARIABLE($ret) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($schema) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($table) ) { T_STRING ( T_VARIABLE($ret) , T_VARIABLE($name) , T_VARIABLE($table) ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(drupal_uninstall_schema) ( T_VARIABLE($module) ) { T_VARIABLE($schema) = T_STRING ( T_VARIABLE($module) ) ; T_STRING ( T_VARIABLE($module) , T_VARIABLE($schema) ) ; T_VARIABLE($ret) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($schema) T_AS T_VARIABLE($table) ) { T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) [ ] ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(drupal_get_schema_unprocessed) ( T_VARIABLE($module) , T_VARIABLE($table) = T_STRING ) { T_STRING ( , T_VARIABLE($module) ) ; T_VARIABLE($schema) = T_STRING ( T_VARIABLE($module) , ) ; T_IF ( ! T_STRING ( T_VARIABLE($table) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($schema) [ T_VARIABLE($table) ] ) ) { T_RETURN T_VARIABLE($schema) [ T_VARIABLE($table) ] ; } T_ELSE { T_RETURN T_VARIABLE($schema) ; } } T_FUNCTION(_drupal_initialize_schema) ( T_VARIABLE($module) , & T_VARIABLE($schema) ) { T_FOREACH ( T_VARIABLE($schema) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($table) ) { T_IF ( T_EMPTY ( T_VARIABLE($table) [ ] ) ) { T_VARIABLE($schema) [ T_VARIABLE($name) ] [ ] = T_VARIABLE($module) ; } T_IF ( ! T_ISSET ( T_VARIABLE($table) [ ] ) ) { T_VARIABLE($schema) [ T_VARIABLE($name) ] [ ] = T_VARIABLE($name) ; } } } T_FUNCTION(drupal_schema_fields_sql) ( T_VARIABLE($table) , T_VARIABLE($prefix) = T_STRING ) { T_VARIABLE($schema) = T_STRING ( T_VARIABLE($table) ) ; T_VARIABLE($fields) = T_STRING ( T_VARIABLE($schema) [ ] ) ; T_IF ( T_VARIABLE($prefix) ) { T_VARIABLE($columns) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($field) ) { T_VARIABLE($columns) [ ] = T_VARIABLE($prefix) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field) ; } T_RETURN T_VARIABLE($columns) ; } T_ELSE { T_RETURN T_VARIABLE($fields) ; } } T_FUNCTION(drupal_write_record) ( T_VARIABLE($table) , & T_VARIABLE($object) , T_VARIABLE($update) = T_ARRAY ( ) ) { T_IF ( T_STRING ( T_VARIABLE($update) ) ) { T_VARIABLE($update) = T_ARRAY ( T_VARIABLE($update) ) ; } T_IF ( T_STRING ( T_VARIABLE($object) ) ) { T_VARIABLE($object) = T_OBJECT_CAST T_VARIABLE($object) ; T_VARIABLE($array) = T_STRING ; } T_ELSE { T_VARIABLE($array) = T_STRING ; } T_VARIABLE($schema) = T_STRING ( T_VARIABLE($table) ) ; T_IF ( T_EMPTY ( T_VARIABLE($schema) ) ) { T_RETURN T_STRING ; } T_VARIABLE($fields) = T_VARIABLE($defs) = T_VARIABLE($values) = T_VARIABLE($serials) = T_VARIABLE($placeholders) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($schema) [ ] T_AS T_VARIABLE($field) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_IF ( T_VARIABLE($info) [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($update) ) ) { T_CONTINUE ; } T_IF ( ! T_ISSET ( T_VARIABLE($object) T_OBJECT_OPERATOR T_VARIABLE($field) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($update) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($object) T_OBJECT_OPERATOR T_VARIABLE($field) = T_VARIABLE($info) [ ] ; } T_IF ( T_VARIABLE($info) [ ] T_IS_EQUAL ) { T_VARIABLE($serials) [ ] = T_VARIABLE($field) ; T_UNSET ( T_VARIABLE($object) T_OBJECT_OPERATOR T_VARIABLE($field) ) ; } T_IF ( T_ISSET ( T_VARIABLE($object) T_OBJECT_OPERATOR T_VARIABLE($field) ) ) { T_VARIABLE($fields) [ ] = T_VARIABLE($field) ; T_VARIABLE($placeholders) [ ] = T_STRING ( T_VARIABLE($info) [ ] ) ; T_IF ( T_EMPTY ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($values) [ ] = T_VARIABLE($object) T_OBJECT_OPERATOR T_VARIABLE($field) ; } T_ELSE { T_VARIABLE($values) [ ] = T_STRING ( T_VARIABLE($object) T_OBJECT_OPERATOR T_VARIABLE($field) ) ; } } } T_VARIABLE($query) = ; T_IF ( ! T_STRING ( T_VARIABLE($update) ) ) { T_VARIABLE($query) = . T_VARIABLE($table) . . T_STRING ( , T_VARIABLE($fields) ) . . T_STRING ( , T_VARIABLE($placeholders) ) . ; T_VARIABLE($return) = T_STRING ; } T_ELSE { T_VARIABLE($query) = ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($field) ) { T_IF ( T_VARIABLE($query) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($field) . . T_VARIABLE($placeholders) [ T_VARIABLE($id) ] ; } T_FOREACH ( T_VARIABLE($update) T_AS T_VARIABLE($key) ) { T_VARIABLE($conditions) [ ] = T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE . T_STRING ( T_VARIABLE($schema) [ ] [ T_VARIABLE($key) ] [ ] ) ; T_VARIABLE($values) [ ] = T_VARIABLE($object) T_OBJECT_OPERATOR T_VARIABLE($key) ; } T_VARIABLE($query) = . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($query) T_ENCAPSED_AND_WHITESPACE . T_STRING ( , T_VARIABLE($conditions) ) ; T_VARIABLE($return) = T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($query) , T_VARIABLE($values) ) ) { T_IF ( T_VARIABLE($serials) ) { T_FOREACH ( T_VARIABLE($serials) T_AS T_VARIABLE($field) ) { T_VARIABLE($object) T_OBJECT_OPERATOR T_VARIABLE($field) = T_STRING ( T_VARIABLE($table) , T_VARIABLE($field) ) ; } } T_IF ( T_VARIABLE($array) ) { T_VARIABLE($object) = T_ARRAY_CAST T_VARIABLE($object) ; } T_RETURN T_VARIABLE($return) ; } T_RETURN T_STRING ; } T_FUNCTION(drupal_parse_info_file) ( T_VARIABLE($filename) ) { T_VARIABLE($info) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($filename) ) ) { T_RETURN T_VARIABLE($info) ; } T_VARIABLE($data) = T_STRING ( T_VARIABLE($filename) ) ; T_IF ( T_STRING ( , T_VARIABLE($data) , T_VARIABLE($matches) , T_STRING ) ) { T_FOREACH ( T_VARIABLE($matches) T_AS T_VARIABLE($match) ) { T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_ARRAY ( , , , ) T_AS T_VARIABLE($var) ) { $ T_VARIABLE($var) = T_ISSET ( T_VARIABLE($match) [ T_INC T_VARIABLE($i) ] ) ? T_VARIABLE($match) [ T_VARIABLE($i) ] : ; } T_VARIABLE($value) = T_STRING ( T_STRING ( T_VARIABLE($value1) , T_LNUMBER , - T_LNUMBER ) ) . T_STRING ( T_STRING ( T_VARIABLE($value2) , T_LNUMBER , - T_LNUMBER ) ) . T_VARIABLE($value3) ; T_VARIABLE($keys) = T_STRING ( , T_STRING ( T_VARIABLE($key) , ) ) ; T_VARIABLE($last) = T_STRING ( T_VARIABLE($keys) ) ; T_VARIABLE($parent) = & T_VARIABLE($info) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) ) { T_IF ( T_VARIABLE($key) T_IS_EQUAL ) { T_VARIABLE($key) = T_STRING ( T_VARIABLE($parent) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($parent) [ T_VARIABLE($key) ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($parent) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($parent) [ T_VARIABLE($key) ] = T_ARRAY ( ) ; } T_VARIABLE($parent) = & T_VARIABLE($parent) [ T_VARIABLE($key) ] ; } T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($value) = T_STRING ( T_VARIABLE($value) ) ; } T_IF ( T_VARIABLE($last) T_IS_EQUAL ) { T_VARIABLE($last) = T_STRING ( T_VARIABLE($parent) ) ; } T_VARIABLE($parent) [ T_VARIABLE($last) ] = T_VARIABLE($value) ; } } T_RETURN T_VARIABLE($info) ; } T_FUNCTION(watchdog_severity_levels) ( ) { T_RETURN T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_FUNCTION(drupal_explode_tags) ( T_VARIABLE($tags) ) { T_VARIABLE($regexp) = ; T_STRING ( T_VARIABLE($regexp) , T_VARIABLE($tags) , T_VARIABLE($matches) ) ; T_VARIABLE($typed_tags) = T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) ; T_VARIABLE($tags) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($typed_tags) T_AS T_VARIABLE($tag) ) { T_VARIABLE($tag) = T_STRING ( T_STRING ( , , T_STRING ( , , T_VARIABLE($tag) ) ) ) ; T_IF ( T_VARIABLE($tag) T_IS_NOT_EQUAL ) { T_VARIABLE($tags) [ ] = T_VARIABLE($tag) ; } } T_RETURN T_VARIABLE($tags) ; } T_FUNCTION(drupal_implode_tags) ( T_VARIABLE($tags) ) { T_VARIABLE($encoded_tags) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tags) T_AS T_VARIABLE($tag) ) { T_IF ( T_STRING ( T_VARIABLE($tag) , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_OR T_STRING ( T_VARIABLE($tag) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($tag) = . T_STRING ( , , T_VARIABLE($tag) ) . ; } T_VARIABLE($encoded_tags) [ ] = T_VARIABLE($tag) ; } T_RETURN T_STRING ( , T_VARIABLE($encoded_tags) ) ; } T_FUNCTION(drupal_flush_all_caches) ( ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($core) = T_ARRAY ( , , , ) ; T_VARIABLE($cache_tables) = T_STRING ( T_STRING ( ) , T_VARIABLE($core) ) ; T_FOREACH ( T_VARIABLE($cache_tables) T_AS T_VARIABLE($table) ) { T_STRING ( , T_VARIABLE($table) , T_STRING ) ; } } T_FUNCTION(_drupal_flush_css_js) ( ) { T_VARIABLE($string_history) = T_STRING ( , ) ; T_VARIABLE($new_character) = T_VARIABLE($string_history) [ T_LNUMBER ] ; T_VARIABLE($characters) = ; T_WHILE ( T_STRING ( T_VARIABLE($string_history) , T_VARIABLE($new_character) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($new_character) = T_VARIABLE($characters) [ T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($characters) ) - T_LNUMBER ) ] ; } T_STRING ( , T_VARIABLE($new_character) . T_STRING ( T_VARIABLE($string_history) , T_LNUMBER , T_LNUMBER ) ) ; }",13,1
"T_OPEN_TAG T_STRING ( , ) ; T_FUNCTION(update_sql) ( T_VARIABLE($sql) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($result) T_IS_NOT_IDENTICAL T_STRING , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($sql) ) ) ; } T_FUNCTION(db_prefix_tables) ( T_VARIABLE($sql) ) { T_GLOBAL T_VARIABLE($db_prefix) ; T_IF ( T_STRING ( T_VARIABLE($db_prefix) ) ) { T_IF ( T_STRING ( , T_VARIABLE($db_prefix) ) ) { T_VARIABLE($tmp) = T_VARIABLE($db_prefix) ; T_UNSET ( T_VARIABLE($tmp) [ ] ) ; T_FOREACH ( T_VARIABLE($tmp) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) , T_ARRAY ( . T_VARIABLE($key) . T_DOUBLE_ARROW T_VARIABLE($val) . T_VARIABLE($key) ) ) ; } T_RETURN T_STRING ( T_VARIABLE($sql) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db_prefix) [ ] , T_DOUBLE_ARROW ) ) ; } T_ELSE { T_FOREACH ( T_VARIABLE($db_prefix) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) , T_ARRAY ( . T_VARIABLE($key) . T_DOUBLE_ARROW T_VARIABLE($val) . T_VARIABLE($key) ) ) ; } T_RETURN T_STRING ( T_VARIABLE($sql) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; } } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($sql) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db_prefix) , T_DOUBLE_ARROW ) ) ; } } T_FUNCTION(db_set_active) ( T_VARIABLE($name) = ) { T_GLOBAL T_VARIABLE($db_url) , T_VARIABLE($db_type) , T_VARIABLE($active_db) ; T_STATIC T_VARIABLE($db_conns) , T_VARIABLE($active_name) = T_STRING ; T_IF ( T_EMPTY ( T_VARIABLE($db_url) ) ) { T_INCLUDE_ONCE ; T_STRING ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($db_conns) [ T_VARIABLE($name) ] ) ) { T_IF ( T_STRING ( T_VARIABLE($db_url) ) ) { T_VARIABLE($connect_url) = T_STRING ( T_VARIABLE($name) , T_VARIABLE($db_url) ) ? T_VARIABLE($db_url) [ T_VARIABLE($name) ] : T_VARIABLE($db_url) [ ] ; } T_ELSE { T_VARIABLE($connect_url) = T_VARIABLE($db_url) ; } T_VARIABLE($db_type) = T_STRING ( T_VARIABLE($connect_url) , T_LNUMBER , T_STRING ( T_VARIABLE($connect_url) , ) ) ; T_VARIABLE($handler) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db_type) T_ENCAPSED_AND_WHITESPACE ; T_IF ( T_STRING ( T_VARIABLE($handler) ) ) { T_INCLUDE_ONCE T_VARIABLE($handler) ; } T_ELSE { T_STRING ( . T_VARIABLE($db_type) . ) ; } T_VARIABLE($db_conns) [ T_VARIABLE($name) ] = T_STRING ( T_VARIABLE($connect_url) ) ; } T_VARIABLE($previous_name) = T_VARIABLE($active_name) ; T_VARIABLE($active_name) = T_VARIABLE($name) ; T_VARIABLE($active_db) = T_VARIABLE($db_conns) [ T_VARIABLE($name) ] ; T_RETURN T_VARIABLE($previous_name) ; } T_FUNCTION(_db_error_page) ( T_VARIABLE($error) = ) { T_GLOBAL T_VARIABLE($db_type) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($message) = ; T_VARIABLE($message) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($error) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($db_type) ) . . T_STRING ( , T_VARIABLE($error) ) . ; } T_PRINT T_STRING ( , T_VARIABLE($message) ) ; T_EXIT ; } T_FUNCTION(db_is_active) ( ) { T_GLOBAL T_VARIABLE($active_db) ; T_RETURN ! T_EMPTY ( T_VARIABLE($active_db) ) ; } T_FUNCTION(_db_query_callback) ( T_VARIABLE($match) , T_VARIABLE($init) = T_STRING ) { T_STATIC T_VARIABLE($args) = T_STRING ; T_IF ( T_VARIABLE($init) ) { T_VARIABLE($args) = T_VARIABLE($match) ; T_RETURN ; } T_SWITCH ( T_VARIABLE($match) [ T_LNUMBER ] ) { T_CASE : T_RETURN T_INT_CAST T_STRING ( T_VARIABLE($args) ) ; T_CASE : T_RETURN T_STRING ( T_STRING ( T_VARIABLE($args) ) ) ; T_CASE : T_RETURN ; T_CASE : T_RETURN T_DOUBLE_CAST T_STRING ( T_VARIABLE($args) ) ; T_CASE : T_RETURN T_STRING ( T_STRING ( T_VARIABLE($args) ) ) ; } } T_FUNCTION(db_placeholders) ( T_VARIABLE($arguments) , T_VARIABLE($type) = ) { T_VARIABLE($placeholder) = T_STRING ( T_VARIABLE($type) ) ; T_RETURN T_STRING ( , T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($arguments) ) , T_VARIABLE($placeholder) ) ) ; } T_STRING ( , ) ; T_FUNCTION(_db_rewrite_sql) ( T_VARIABLE($query) = , T_VARIABLE($primary_table) = , T_VARIABLE($primary_field) = , T_VARIABLE($args) = T_ARRAY ( ) ) { T_VARIABLE($where) = T_ARRAY ( ) ; T_VARIABLE($join) = T_ARRAY ( ) ; T_VARIABLE($distinct) = T_STRING ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($module) , , T_VARIABLE($query) , T_VARIABLE($primary_table) , T_VARIABLE($primary_field) , T_VARIABLE($args) ) ; T_IF ( T_ISSET ( T_VARIABLE($result) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_ISSET ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($where) [ ] = T_VARIABLE($result) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($join) [ ] = T_VARIABLE($result) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_VARIABLE($result) [ ] ) { T_VARIABLE($distinct) = T_STRING ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($result) ) ) { T_VARIABLE($where) [ ] = T_VARIABLE($result) ; } } T_VARIABLE($where) = T_EMPTY ( T_VARIABLE($where) ) ? : . T_STRING ( , T_VARIABLE($where) ) . ; T_VARIABLE($join) = T_EMPTY ( T_VARIABLE($join) ) ? : T_STRING ( , T_VARIABLE($join) ) ; T_RETURN T_ARRAY ( T_VARIABLE($join) , T_VARIABLE($where) , T_VARIABLE($distinct) ) ; } T_FUNCTION(db_rewrite_sql) ( T_VARIABLE($query) , T_VARIABLE($primary_table) = , T_VARIABLE($primary_field) = , T_VARIABLE($args) = T_ARRAY ( ) ) { T_LIST ( T_VARIABLE($join) , T_VARIABLE($where) , T_VARIABLE($distinct) ) = T_STRING ( T_VARIABLE($query) , T_VARIABLE($primary_table) , T_VARIABLE($primary_field) , T_VARIABLE($args) ) ; T_IF ( T_VARIABLE($distinct) ) { T_VARIABLE($query) = T_STRING ( T_VARIABLE($primary_table) , T_VARIABLE($primary_field) , T_VARIABLE($query) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($where) ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($join) ) ) { T_VARIABLE($pattern) = ; T_STRING ( T_VARIABLE($pattern) , T_VARIABLE($query) , T_VARIABLE($matches) ) ; T_IF ( ! T_VARIABLE($where) ) { T_VARIABLE($where) = ; } T_IF ( T_VARIABLE($matches) ) { T_VARIABLE($n) = T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) ; T_VARIABLE($second_part) = T_STRING ( T_VARIABLE($query) , T_VARIABLE($n) ) ; T_VARIABLE($first_part) = T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] , T_LNUMBER , T_VARIABLE($n) - T_LNUMBER ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($join) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($where) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($haystack_reverse) = T_STRING ( T_VARIABLE($second_part) ) ; } T_ELSE { T_VARIABLE($haystack_reverse) = T_STRING ( T_VARIABLE($query) ) ; } T_FOREACH ( T_ARRAY ( , , ) T_AS T_VARIABLE($needle_reverse) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($haystack_reverse) , T_VARIABLE($needle_reverse) ) ; T_IF ( T_VARIABLE($pos) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($pos) T_PLUS_EQUAL T_LNUMBER ; T_BREAK ; } } T_IF ( T_VARIABLE($matches) ) { T_IF ( T_VARIABLE($pos) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($query) = T_VARIABLE($first_part) . T_VARIABLE($second_part) . ; } T_ELSE { T_VARIABLE($query) = T_VARIABLE($first_part) . T_STRING ( T_VARIABLE($second_part) , T_LNUMBER , - T_VARIABLE($pos) ) . . T_STRING ( T_VARIABLE($second_part) , - T_VARIABLE($pos) ) ; } } T_ELSEIF ( T_VARIABLE($pos) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($query) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($join) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($where) ; } T_ELSE { T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) , T_LNUMBER , - T_VARIABLE($pos) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($join) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($where) T_ENCAPSED_AND_WHITESPACE . T_STRING ( T_VARIABLE($query) , - T_VARIABLE($pos) ) ; } } T_RETURN T_VARIABLE($query) ; } T_FUNCTION(db_escape_table) ( T_VARIABLE($string) ) { T_RETURN T_STRING ( , , T_VARIABLE($string) ) ; } T_FUNCTION(db_create_table) ( & T_VARIABLE($ret) , T_VARIABLE($name) , T_VARIABLE($table) ) { T_VARIABLE($statements) = T_STRING ( T_VARIABLE($name) , T_VARIABLE($table) ) ; T_FOREACH ( T_VARIABLE($statements) T_AS T_VARIABLE($statement) ) { T_VARIABLE($ret) [ ] = T_STRING ( T_VARIABLE($statement) ) ; } } T_FUNCTION(db_field_names) ( T_VARIABLE($fields) ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($field) ) { T_IF ( T_STRING ( T_VARIABLE($field) ) ) { T_VARIABLE($ret) [ ] = T_VARIABLE($field) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($ret) [ ] = T_VARIABLE($field) ; } } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(db_type_placeholder) ( T_VARIABLE($type) ) { T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_CASE : T_CASE : T_CASE : T_RETURN ; T_CASE : T_RETURN ; T_CASE : T_CASE : T_RETURN ; T_CASE : T_RETURN ; T_CASE : T_RETURN ; } T_RETURN . T_VARIABLE($type) . ; }",12,1
"T_OPEN_TAG T_FUNCTION(db_query) ( T_VARIABLE($query) ) { T_VARIABLE($args) = T_STRING ( ) ; T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_LOGICAL_AND T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($args) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($args) , T_STRING ) ; T_VARIABLE($query) = T_STRING ( T_STRING , , T_VARIABLE($query) ) ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } T_FUNCTION(db_create_table_sql) ( T_VARIABLE($name) , T_VARIABLE($table) ) { T_IF ( T_EMPTY ( T_VARIABLE($table) [ ] ) ) { T_VARIABLE($table) [ ] = ; } T_VARIABLE($sql) = . T_VARIABLE($name) . ; T_FOREACH ( T_VARIABLE($table) [ ] T_AS T_VARIABLE($field_name) T_DOUBLE_ARROW T_VARIABLE($field) ) { T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($field_name) , T_STRING ( T_VARIABLE($field) ) ) . ; } T_VARIABLE($keys) = T_STRING ( T_VARIABLE($table) ) ; T_IF ( T_STRING ( T_VARIABLE($keys) ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($keys) ) . ; } T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , - T_LNUMBER ) . ; T_VARIABLE($sql) T_CONCAT_EQUAL T_VARIABLE($table) [ ] ; T_RETURN T_ARRAY ( T_VARIABLE($sql) ) ; } T_FUNCTION(_db_create_keys_sql) ( T_VARIABLE($spec) ) { T_VARIABLE($keys) = T_ARRAY ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($keys) [ ] = . T_STRING ( T_VARIABLE($spec) [ ] ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($spec) [ ] ) ) { T_FOREACH ( T_VARIABLE($spec) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($fields) ) { T_VARIABLE($keys) [ ] = . T_VARIABLE($key) . . T_STRING ( T_VARIABLE($fields) ) . ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($spec) [ ] ) ) { T_FOREACH ( T_VARIABLE($spec) [ ] T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($fields) ) { T_VARIABLE($keys) [ ] = . T_VARIABLE($index) . . T_STRING ( T_VARIABLE($fields) ) . ; } } T_RETURN T_VARIABLE($keys) ; } T_FUNCTION(_db_create_key_sql) ( T_VARIABLE($fields) ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($field) ) { T_IF ( T_STRING ( T_VARIABLE($field) ) ) { T_VARIABLE($ret) [ ] = T_VARIABLE($field) [ T_LNUMBER ] . . T_VARIABLE($field) [ T_LNUMBER ] . ; } T_ELSE { T_VARIABLE($ret) [ ] = T_VARIABLE($field) ; } } T_RETURN T_STRING ( , T_VARIABLE($ret) ) ; } T_FUNCTION(_db_process_field) ( T_VARIABLE($field) ) { T_IF ( ! T_ISSET ( T_VARIABLE($field) [ ] ) ) { T_VARIABLE($field) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($field) [ ] ) ) { T_VARIABLE($map) = T_STRING ( ) ; T_VARIABLE($field) [ ] = T_VARIABLE($map) [ T_VARIABLE($field) [ ] . . T_VARIABLE($field) [ ] ] ; } T_IF ( T_VARIABLE($field) [ ] T_IS_EQUAL ) { T_VARIABLE($field) [ ] = T_STRING ; } T_RETURN T_VARIABLE($field) ; } T_FUNCTION(_db_create_field_sql) ( T_VARIABLE($name) , T_VARIABLE($spec) ) { T_VARIABLE($sql) = . T_VARIABLE($name) . . T_VARIABLE($spec) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_VARIABLE($spec) [ ] . ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($spec) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_VARIABLE($spec) [ ] . . T_VARIABLE($spec) [ ] . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_IF ( ! T_EMPTY ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_IF ( ! T_EMPTY ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_IF ( T_ISSET ( T_VARIABLE($spec) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($spec) [ ] = . T_VARIABLE($spec) [ ] . ; } T_VARIABLE($sql) T_CONCAT_EQUAL . T_VARIABLE($spec) [ ] ; } T_IF ( T_EMPTY ( T_VARIABLE($spec) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($sql) ; } T_FUNCTION(db_type_map) ( ) { T_VARIABLE($map) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($map) ; } T_FUNCTION(db_rename_table) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($new_name) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($new_name) . ) ; } T_FUNCTION(db_drop_table) ( & T_VARIABLE($ret) , T_VARIABLE($table) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . ) ; } T_FUNCTION(db_add_field) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($spec) , T_VARIABLE($keys_new) = T_ARRAY ( ) ) { T_VARIABLE($fixnull) = T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($spec) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($fixnull) = T_STRING ; T_VARIABLE($spec) [ ] = T_STRING ; } T_VARIABLE($query) = . T_VARIABLE($table) . ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($field) , T_STRING ( T_VARIABLE($spec) ) ) ; T_IF ( T_STRING ( T_VARIABLE($keys_new) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( , T_STRING ( T_VARIABLE($keys_new) ) ) ; } T_VARIABLE($ret) [ ] = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_ISSET ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($sql) = . T_VARIABLE($table) . . T_VARIABLE($field) . . T_STRING ( T_VARIABLE($spec) [ ] ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($spec) [ ] ) ; T_VARIABLE($ret) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($result) T_IS_NOT_IDENTICAL T_STRING , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($sql) . . T_VARIABLE($spec) [ ] . ) ) ; } T_IF ( T_VARIABLE($fixnull) ) { T_VARIABLE($spec) [ ] = T_STRING ; T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($field) , T_VARIABLE($spec) ) ; } } T_FUNCTION(db_drop_field) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($field) ) ; } T_FUNCTION(db_field_set_default) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($default) ) { T_IF ( T_VARIABLE($default) T_IS_EQUAL T_STRING ) { T_VARIABLE($default) = ; } T_ELSE { T_VARIABLE($default) = T_STRING ( T_VARIABLE($default) ) ? T_ENCAPSED_AND_WHITESPACE T_VARIABLE($default) T_ENCAPSED_AND_WHITESPACE : T_VARIABLE($default) ; } T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($field) . . T_VARIABLE($default) ) ; } T_FUNCTION(db_field_set_no_default) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($field) . ) ; } T_FUNCTION(db_add_primary_key) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($fields) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_STRING ( T_VARIABLE($fields) ) . ) ; } T_FUNCTION(db_drop_primary_key) ( & T_VARIABLE($ret) , T_VARIABLE($table) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . ) ; } T_FUNCTION(db_add_unique_key) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($name) , T_VARIABLE($fields) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($name) . . T_STRING ( T_VARIABLE($fields) ) . ) ; } T_FUNCTION(db_drop_unique_key) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($name) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($name) ) ; } T_FUNCTION(db_add_index) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($name) , T_VARIABLE($fields) ) { T_VARIABLE($query) = . T_VARIABLE($table) . . T_VARIABLE($name) . . T_STRING ( T_VARIABLE($fields) ) . ; T_VARIABLE($ret) [ ] = T_STRING ( T_VARIABLE($query) ) ; } T_FUNCTION(db_drop_index) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($name) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($name) ) ; } T_FUNCTION(db_change_field) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($field_new) , T_VARIABLE($spec) , T_VARIABLE($keys_new) = T_ARRAY ( ) ) { T_VARIABLE($sql) = . T_VARIABLE($table) . . T_VARIABLE($field) . . T_STRING ( T_VARIABLE($field_new) , T_STRING ( T_VARIABLE($spec) ) ) ; T_IF ( T_STRING ( T_VARIABLE($keys_new) ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_STRING ( , T_STRING ( T_VARIABLE($keys_new) ) ) ; } T_VARIABLE($ret) [ ] = T_STRING ( T_VARIABLE($sql) ) ; } T_FUNCTION(db_last_insert_id) ( T_VARIABLE($table) , T_VARIABLE($field) ) { T_RETURN T_STRING ( T_STRING ( ) ) ; }",12,0
"T_OPEN_TAG T_REQUIRE_ONCE ; T_FUNCTION(db_status_report) ( T_VARIABLE($phase) ) { T_VARIABLE($t) = T_STRING ( ) ; T_VARIABLE($version) = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW ( T_VARIABLE($phase) T_IS_EQUAL ) ? T_STRING ( T_VARIABLE($version) , ) : T_VARIABLE($version) , ) ; T_IF ( T_STRING ( T_VARIABLE($version) , T_STRING ) < T_LNUMBER ) { T_VARIABLE($form) [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] [ ] = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(db_version) ( ) { T_LIST ( T_VARIABLE($version) ) = T_STRING ( , T_STRING ( ) ) ; T_RETURN T_VARIABLE($version) ; } T_FUNCTION(db_connect) ( T_VARIABLE($url) ) { T_VARIABLE($url) = T_STRING ( T_VARIABLE($url) ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( ) ; } T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($url) [ ] = T_ISSET ( T_VARIABLE($url) [ ] ) ? T_STRING ( T_VARIABLE($url) [ ] ) : ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($url) [ ] = T_VARIABLE($url) [ ] . . T_VARIABLE($url) [ ] ; } T_VARIABLE($connection) = @ T_STRING ( T_VARIABLE($url) [ ] , T_VARIABLE($url) [ ] , T_VARIABLE($url) [ ] , T_STRING , T_LNUMBER ) ; T_IF ( ! T_VARIABLE($connection) T_BOOLEAN_OR ! T_STRING ( T_STRING ( T_VARIABLE($url) [ ] , T_LNUMBER ) ) ) { T_STRING ( T_STRING ( ) ) ; } T_STRING ( , T_VARIABLE($connection) ) ; T_RETURN T_VARIABLE($connection) ; } T_FUNCTION(_db_query) ( T_VARIABLE($query) , T_VARIABLE($debug) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($active_db) , T_VARIABLE($queries) , T_VARIABLE($user) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_LIST ( T_VARIABLE($usec) , T_VARIABLE($sec) ) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($timer) = T_DOUBLE_CAST T_VARIABLE($usec) + T_DOUBLE_CAST T_VARIABLE($sec) ; T_VARIABLE($bt) = T_STRING ( ) ; T_VARIABLE($name) = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : T_STRING ( , ) ; T_VARIABLE($name) = T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($name) ) ; T_VARIABLE($query) = . T_VARIABLE($name) . . T_VARIABLE($bt) [ T_LNUMBER ] [ ] . . T_VARIABLE($query) ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) , T_VARIABLE($active_db) ) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($query) = T_VARIABLE($bt) [ T_LNUMBER ] [ ] . . T_VARIABLE($query) ; T_LIST ( T_VARIABLE($usec) , T_VARIABLE($sec) ) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($stop) = T_DOUBLE_CAST T_VARIABLE($usec) + T_DOUBLE_CAST T_VARIABLE($sec) ; T_VARIABLE($diff) = T_VARIABLE($stop) - T_VARIABLE($timer) ; T_VARIABLE($queries) [ ] = T_ARRAY ( T_VARIABLE($query) , T_VARIABLE($diff) ) ; } T_IF ( T_VARIABLE($debug) ) { T_PRINT . T_VARIABLE($query) . . T_STRING ( T_VARIABLE($active_db) ) . ; } T_IF ( ! T_STRING ( T_VARIABLE($active_db) ) ) { T_RETURN T_VARIABLE($result) ; } T_ELSE { $ { T_STRING } = T_STRING ; T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($active_db) ) . . T_VARIABLE($query) ) , T_STRING ) ; T_RETURN T_STRING ; } } T_FUNCTION(db_fetch_object) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) ) ; } } T_FUNCTION(db_fetch_array) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) , T_STRING ) ; } } T_FUNCTION(db_result) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) ) > T_LNUMBER ) { T_VARIABLE($array) = T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($array) [ T_LNUMBER ] ; } T_RETURN T_STRING ; } T_FUNCTION(db_error) ( ) { T_GLOBAL T_VARIABLE($active_db) ; T_RETURN T_STRING ( T_VARIABLE($active_db) ) ; } T_FUNCTION(db_affected_rows) ( ) { T_GLOBAL T_VARIABLE($active_db) ; T_RETURN T_STRING ( T_VARIABLE($active_db) ) ; } T_FUNCTION(db_query_range) ( T_VARIABLE($query) ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($count) = T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($from) = T_STRING ( T_VARIABLE($args) ) ; T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_LOGICAL_AND T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($args) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($args) , T_STRING ) ; T_VARIABLE($query) = T_STRING ( T_STRING , , T_VARIABLE($query) ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_INT_CAST T_VARIABLE($from) . . T_INT_CAST T_VARIABLE($count) ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } T_FUNCTION(db_query_temporary) ( T_VARIABLE($query) ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($tablename) = T_STRING ( T_VARIABLE($args) ) ; T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($query) = T_STRING ( , . T_VARIABLE($tablename) . , T_STRING ( T_VARIABLE($query) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_LOGICAL_AND T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($args) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($args) , T_STRING ) ; T_VARIABLE($query) = T_STRING ( T_STRING , , T_VARIABLE($query) ) ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } T_FUNCTION(db_encode_blob) ( T_VARIABLE($data) ) { T_GLOBAL T_VARIABLE($active_db) ; T_RETURN . T_STRING ( T_VARIABLE($data) , T_VARIABLE($active_db) ) . ; } T_FUNCTION(db_decode_blob) ( T_VARIABLE($data) ) { T_RETURN T_VARIABLE($data) ; } T_FUNCTION(db_escape_string) ( T_VARIABLE($text) ) { T_GLOBAL T_VARIABLE($active_db) ; T_RETURN T_STRING ( T_VARIABLE($text) , T_VARIABLE($active_db) ) ; } T_FUNCTION(db_lock_table) ( T_VARIABLE($table) ) { T_STRING ( . T_STRING ( T_VARIABLE($table) ) . ) ; } T_FUNCTION(db_unlock_tables) ( ) { T_STRING ( ) ; } T_FUNCTION(db_table_exists) ( T_VARIABLE($table) ) { T_RETURN T_BOOL_CAST T_STRING ( T_STRING ( . T_STRING ( T_VARIABLE($table) ) . ) ) ; } T_FUNCTION(db_column_exists) ( T_VARIABLE($table) , T_VARIABLE($column) ) { T_RETURN T_BOOL_CAST T_STRING ( T_STRING ( . T_STRING ( T_VARIABLE($table) ) . . T_STRING ( T_VARIABLE($column) ) . ) ) ; } T_FUNCTION(db_distinct_field) ( T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($query) ) { T_VARIABLE($field_to_select) = . T_VARIABLE($table) . . T_VARIABLE($field) . ; T_RETURN T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($table) . . T_VARIABLE($field) . , . T_VARIABLE($field_to_select) . , T_VARIABLE($query) ) ; }",12,0
"T_OPEN_TAG T_REQUIRE_ONCE ; T_FUNCTION(db_status_report) ( T_VARIABLE($phase) ) { T_VARIABLE($t) = T_STRING ( ) ; T_VARIABLE($version) = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW ( T_VARIABLE($phase) T_IS_EQUAL ) ? T_STRING ( T_VARIABLE($version) , ) : T_VARIABLE($version) , ) ; T_IF ( T_STRING ( T_VARIABLE($version) , T_STRING ) < T_LNUMBER ) { T_VARIABLE($form) [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] [ ] = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(db_version) ( ) { T_GLOBAL T_VARIABLE($active_db) ; T_LIST ( T_VARIABLE($version) ) = T_STRING ( , T_STRING ( T_VARIABLE($active_db) ) ) ; T_RETURN T_VARIABLE($version) ; } T_FUNCTION(db_connect) ( T_VARIABLE($url) ) { T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_STRING ( ) ; } T_VARIABLE($url) = T_STRING ( T_VARIABLE($url) ) ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($url) [ ] = T_ISSET ( T_VARIABLE($url) [ ] ) ? T_STRING ( T_VARIABLE($url) [ ] ) : ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_IF ( ! T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($url) [ ] = T_STRING ; } T_VARIABLE($connection) = T_STRING ( ) ; @ T_STRING ( T_VARIABLE($connection) , T_VARIABLE($url) [ ] , T_VARIABLE($url) [ ] , T_VARIABLE($url) [ ] , T_STRING ( T_VARIABLE($url) [ ] , T_LNUMBER ) , T_VARIABLE($url) [ ] , T_STRING , T_STRING ) ; T_IF ( T_STRING ( ) > T_LNUMBER ) { T_STRING ( T_STRING ( ) ) ; } T_STRING ( T_VARIABLE($connection) , ) ; T_RETURN T_VARIABLE($connection) ; } T_FUNCTION(_db_query) ( T_VARIABLE($query) , T_VARIABLE($debug) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($active_db) , T_VARIABLE($queries) , T_VARIABLE($user) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_LIST ( T_VARIABLE($usec) , T_VARIABLE($sec) ) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($timer) = T_DOUBLE_CAST T_VARIABLE($usec) + T_DOUBLE_CAST T_VARIABLE($sec) ; T_VARIABLE($bt) = T_STRING ( ) ; T_VARIABLE($name) = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : T_STRING ( , ) ; T_VARIABLE($name) = T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($name) ) ; T_VARIABLE($query) = . T_VARIABLE($name) . . T_VARIABLE($bt) [ T_LNUMBER ] [ ] . . T_VARIABLE($query) ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($active_db) , T_VARIABLE($query) ) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($query) = T_VARIABLE($bt) [ T_LNUMBER ] [ ] . . T_VARIABLE($query) ; T_LIST ( T_VARIABLE($usec) , T_VARIABLE($sec) ) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($stop) = T_DOUBLE_CAST T_VARIABLE($usec) + T_DOUBLE_CAST T_VARIABLE($sec) ; T_VARIABLE($diff) = T_VARIABLE($stop) - T_VARIABLE($timer) ; T_VARIABLE($queries) [ ] = T_ARRAY ( T_VARIABLE($query) , T_VARIABLE($diff) ) ; } T_IF ( T_VARIABLE($debug) ) { T_PRINT . T_VARIABLE($query) . . T_STRING ( T_VARIABLE($active_db) ) . ; } T_IF ( ! T_STRING ( T_VARIABLE($active_db) ) ) { T_RETURN T_VARIABLE($result) ; } T_ELSE { $ { T_STRING } = T_STRING ; T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($active_db) ) . . T_VARIABLE($query) ) , T_STRING ) ; T_RETURN T_STRING ; } } T_FUNCTION(db_fetch_object) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) ) { T_VARIABLE($object) = T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_ISSET ( T_VARIABLE($object) ) ? T_VARIABLE($object) : T_STRING ; } } T_FUNCTION(db_fetch_array) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) ) { T_VARIABLE($array) = T_STRING ( T_VARIABLE($result) , T_STRING ) ; T_RETURN T_ISSET ( T_VARIABLE($array) ) ? T_VARIABLE($array) : T_STRING ; } } T_FUNCTION(db_result) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) ) > T_LNUMBER ) { T_VARIABLE($array) = T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($array) [ T_LNUMBER ] ; } T_RETURN T_STRING ; } T_FUNCTION(db_error) ( ) { T_GLOBAL T_VARIABLE($active_db) ; T_RETURN T_STRING ( T_VARIABLE($active_db) ) ; } T_FUNCTION(db_affected_rows) ( ) { T_GLOBAL T_VARIABLE($active_db) ; T_RETURN T_STRING ( T_VARIABLE($active_db) ) ; } T_FUNCTION(db_query_range) ( T_VARIABLE($query) ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($count) = T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($from) = T_STRING ( T_VARIABLE($args) ) ; T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_LOGICAL_AND T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($args) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($args) , T_STRING ) ; T_VARIABLE($query) = T_STRING ( T_STRING , , T_VARIABLE($query) ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_INT_CAST T_VARIABLE($from) . . T_INT_CAST T_VARIABLE($count) ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } T_FUNCTION(db_query_temporary) ( T_VARIABLE($query) ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($tablename) = T_STRING ( T_VARIABLE($args) ) ; T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($query) = T_STRING ( , . T_VARIABLE($tablename) . , T_STRING ( T_VARIABLE($query) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_LOGICAL_AND T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($args) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($args) , T_STRING ) ; T_VARIABLE($query) = T_STRING ( T_STRING , , T_VARIABLE($query) ) ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } T_FUNCTION(db_encode_blob) ( T_VARIABLE($data) ) { T_GLOBAL T_VARIABLE($active_db) ; T_RETURN . T_STRING ( T_VARIABLE($active_db) , T_VARIABLE($data) ) . ; } T_FUNCTION(db_decode_blob) ( T_VARIABLE($data) ) { T_RETURN T_VARIABLE($data) ; } T_FUNCTION(db_escape_string) ( T_VARIABLE($text) ) { T_GLOBAL T_VARIABLE($active_db) ; T_RETURN T_STRING ( T_VARIABLE($active_db) , T_VARIABLE($text) ) ; } T_FUNCTION(db_lock_table) ( T_VARIABLE($table) ) { T_STRING ( . T_STRING ( T_VARIABLE($table) ) . ) ; } T_FUNCTION(db_unlock_tables) ( ) { T_STRING ( ) ; } T_FUNCTION(db_table_exists) ( T_VARIABLE($table) ) { T_RETURN T_BOOL_CAST T_STRING ( T_STRING ( . T_STRING ( T_VARIABLE($table) ) . ) ) ; } T_FUNCTION(db_column_exists) ( T_VARIABLE($table) , T_VARIABLE($column) ) { T_RETURN T_BOOL_CAST T_STRING ( T_STRING ( . T_STRING ( T_VARIABLE($table) ) . . T_STRING ( T_VARIABLE($column) ) . ) ) ; } T_FUNCTION(db_distinct_field) ( T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($query) ) { T_VARIABLE($field_to_select) = . T_VARIABLE($table) . . T_VARIABLE($field) . ; T_RETURN T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($table) . . T_VARIABLE($field) . , . T_VARIABLE($field_to_select) . , T_VARIABLE($query) ) ; }",12,0
"T_OPEN_TAG T_FUNCTION(db_status_report) ( ) { T_VARIABLE($t) = T_STRING ( ) ; T_VARIABLE($version) = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($version) , ) ; T_IF ( T_STRING ( T_VARIABLE($version) , T_STRING ) < T_LNUMBER ) { T_VARIABLE($form) [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] [ ] = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(db_version) ( ) { T_RETURN T_STRING ( T_STRING ( ) ) ; } T_FUNCTION(db_connect) ( T_VARIABLE($url) ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( ) ; } T_VARIABLE($url) = T_STRING ( T_VARIABLE($url) ) ; T_VARIABLE($conn_string) = ; T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($conn_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($url) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($conn_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($url) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($conn_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($url) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($conn_string) T_CONCAT_EQUAL . T_STRING ( T_STRING ( T_VARIABLE($url) [ ] ) , T_LNUMBER ) ; } T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($conn_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($url) [ ] ) ; } T_VARIABLE($track_errors_previous) = T_STRING ( ) ; T_STRING ( , T_LNUMBER ) ; T_VARIABLE($connection) = @ T_STRING ( T_VARIABLE($conn_string) ) ; T_IF ( ! T_VARIABLE($connection) ) { T_REQUIRE_ONCE ; T_STRING ( T_STRING ( T_VARIABLE($php_errormsg) ) ) ; } T_STRING ( , T_VARIABLE($track_errors_previous) ) ; T_RETURN T_VARIABLE($connection) ; } T_FUNCTION(db_query) ( T_VARIABLE($query) ) { T_VARIABLE($args) = T_STRING ( ) ; T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_LOGICAL_AND T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($args) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($args) , T_STRING ) ; T_VARIABLE($query) = T_STRING ( T_STRING , , T_VARIABLE($query) ) ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } T_FUNCTION(_db_query) ( T_VARIABLE($query) , T_VARIABLE($debug) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($active_db) , T_VARIABLE($last_result) , T_VARIABLE($queries) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_LIST ( T_VARIABLE($usec) , T_VARIABLE($sec) ) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($timer) = T_DOUBLE_CAST T_VARIABLE($usec) + T_DOUBLE_CAST T_VARIABLE($sec) ; } T_VARIABLE($last_result) = T_STRING ( T_VARIABLE($active_db) , T_VARIABLE($query) ) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($bt) = T_STRING ( ) ; T_VARIABLE($query) = T_VARIABLE($bt) [ T_LNUMBER ] [ ] . . T_VARIABLE($query) ; T_LIST ( T_VARIABLE($usec) , T_VARIABLE($sec) ) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($stop) = T_DOUBLE_CAST T_VARIABLE($usec) + T_DOUBLE_CAST T_VARIABLE($sec) ; T_VARIABLE($diff) = T_VARIABLE($stop) - T_VARIABLE($timer) ; T_VARIABLE($queries) [ ] = T_ARRAY ( T_VARIABLE($query) , T_VARIABLE($diff) ) ; } T_IF ( T_VARIABLE($debug) ) { T_PRINT . T_VARIABLE($query) . . T_STRING ( T_VARIABLE($active_db) ) . ; } T_IF ( T_VARIABLE($last_result) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_VARIABLE($last_result) ; } T_ELSE { $ { T_STRING } = T_STRING ; T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($active_db) ) . . T_VARIABLE($query) ) , T_STRING ) ; T_RETURN T_STRING ; } } T_FUNCTION(db_fetch_object) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) ) ; } } T_FUNCTION(db_fetch_array) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_VARIABLE($result) ) ; } } T_FUNCTION(db_result) ( T_VARIABLE($result) ) { T_IF ( T_VARIABLE($result) T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) ) > T_LNUMBER ) { T_VARIABLE($array) = T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($array) [ T_LNUMBER ] ; } T_RETURN T_STRING ; } T_FUNCTION(db_error) ( ) { T_GLOBAL T_VARIABLE($active_db) ; T_RETURN T_STRING ( T_VARIABLE($active_db) ) ; } T_FUNCTION(db_last_insert_id) ( T_VARIABLE($table) , T_VARIABLE($field) ) { T_RETURN T_STRING ( T_STRING ( . T_STRING ( T_VARIABLE($table) ) . . T_STRING ( T_VARIABLE($field) ) . ) ) ; } T_FUNCTION(db_affected_rows) ( ) { T_GLOBAL T_VARIABLE($last_result) ; T_RETURN T_EMPTY ( T_VARIABLE($last_result) ) ? T_LNUMBER : T_STRING ( T_VARIABLE($last_result) ) ; } T_FUNCTION(db_query_range) ( T_VARIABLE($query) ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($count) = T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($from) = T_STRING ( T_VARIABLE($args) ) ; T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_LOGICAL_AND T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($args) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($args) , T_STRING ) ; T_VARIABLE($query) = T_STRING ( T_STRING , , T_VARIABLE($query) ) ; T_VARIABLE($query) T_CONCAT_EQUAL . T_INT_CAST T_VARIABLE($count) . . T_INT_CAST T_VARIABLE($from) ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } T_FUNCTION(db_query_temporary) ( T_VARIABLE($query) ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($tablename) = T_STRING ( T_VARIABLE($args) ) ; T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($query) = T_STRING ( , . T_VARIABLE($tablename) . , T_STRING ( T_VARIABLE($query) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_LOGICAL_AND T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($args) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_STRING ( T_VARIABLE($args) , T_STRING ) ; T_VARIABLE($query) = T_STRING ( T_STRING , , T_VARIABLE($query) ) ; T_RETURN T_STRING ( T_VARIABLE($query) ) ; } T_FUNCTION(db_encode_blob) ( T_VARIABLE($data) ) { T_RETURN . T_STRING ( T_VARIABLE($data) ) . ; } T_FUNCTION(db_decode_blob) ( T_VARIABLE($data) ) { T_RETURN T_STRING ( T_VARIABLE($data) ) ; } T_FUNCTION(db_escape_string) ( T_VARIABLE($text) ) { T_RETURN T_STRING ( T_VARIABLE($text) ) ; } T_FUNCTION(db_lock_table) ( T_VARIABLE($table) ) { T_STRING ( . T_STRING ( T_VARIABLE($table) ) . ) ; } T_FUNCTION(db_unlock_tables) ( ) { T_STRING ( ) ; } T_FUNCTION(db_table_exists) ( T_VARIABLE($table) ) { T_RETURN T_BOOL_CAST T_STRING ( T_STRING ( . T_STRING ( T_VARIABLE($table) ) . ) ) ; } T_FUNCTION(db_column_exists) ( T_VARIABLE($table) , T_VARIABLE($column) ) { T_RETURN T_BOOL_CAST T_STRING ( T_STRING ( . T_STRING ( T_VARIABLE($table) ) . . T_STRING ( T_VARIABLE($column) ) . ) ) ; } T_FUNCTION(db_check_setup) ( ) { T_VARIABLE($t) = T_STRING ( ) ; T_VARIABLE($encoding) = T_STRING ( T_STRING ( ) ) ; T_IF ( ! T_STRING ( T_STRING ( T_VARIABLE($encoding) ) , T_ARRAY ( , ) ) ) { T_STRING ( T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($encoding) , T_DOUBLE_ARROW ) ) , ) ; } } T_FUNCTION(db_distinct_field) ( T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($query) ) { T_VARIABLE($field_to_select) = . T_VARIABLE($table) . . T_VARIABLE($field) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field) ; T_VARIABLE($query) = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($table) . . T_VARIABLE($field) . , . T_VARIABLE($field_to_select) . , T_VARIABLE($query) ) ; T_VARIABLE($query) = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($field) . , . T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($query) ) ; T_RETURN T_VARIABLE($query) ; } T_FUNCTION(db_type_map) ( ) { T_VARIABLE($map) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($map) ; } T_FUNCTION(db_create_table_sql) ( T_VARIABLE($name) , T_VARIABLE($table) ) { T_VARIABLE($sql_fields) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($table) [ ] T_AS T_VARIABLE($field_name) T_DOUBLE_ARROW T_VARIABLE($field) ) { T_VARIABLE($sql_fields) [ ] = T_STRING ( T_VARIABLE($field_name) , T_STRING ( T_VARIABLE($field) ) ) ; } T_VARIABLE($sql_keys) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($table) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) [ ] ) ) { T_VARIABLE($sql_keys) [ ] = . T_STRING ( , T_VARIABLE($table) [ ] ) . ; } T_IF ( T_ISSET ( T_VARIABLE($table) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) [ ] ) ) { T_FOREACH ( T_VARIABLE($table) [ ] T_AS T_VARIABLE($key_name) T_DOUBLE_ARROW T_VARIABLE($key) ) { T_VARIABLE($sql_keys) [ ] = . T_VARIABLE($name) . . T_VARIABLE($key_name) . . T_STRING ( , T_VARIABLE($key) ) . ; } } T_VARIABLE($sql) = . T_VARIABLE($name) . ; T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($sql_fields) ) ; T_IF ( T_STRING ( T_VARIABLE($sql_keys) ) > T_LNUMBER ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($sql_keys) ) ; T_VARIABLE($sql) T_CONCAT_EQUAL ; T_VARIABLE($statements) [ ] = T_VARIABLE($sql) ; T_IF ( T_ISSET ( T_VARIABLE($table) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($table) [ ] ) ) { T_FOREACH ( T_VARIABLE($table) [ ] T_AS T_VARIABLE($key_name) T_DOUBLE_ARROW T_VARIABLE($key) ) { T_VARIABLE($statements) [ ] = T_STRING ( T_VARIABLE($name) , T_VARIABLE($key_name) , T_VARIABLE($key) ) ; } } T_RETURN T_VARIABLE($statements) ; } T_FUNCTION(_db_create_index_sql) ( T_VARIABLE($table) , T_VARIABLE($name) , T_VARIABLE($fields) ) { T_VARIABLE($query) = . T_VARIABLE($table) . . T_VARIABLE($name) . . T_VARIABLE($table) . ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($fields) ) . ; T_RETURN T_VARIABLE($query) ; } T_FUNCTION(_db_create_key_sql) ( T_VARIABLE($fields) ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($field) ) { T_IF ( T_STRING ( T_VARIABLE($field) ) ) { T_VARIABLE($ret) [ ] = . T_VARIABLE($field) [ T_LNUMBER ] . . T_VARIABLE($field) [ T_LNUMBER ] . ; } T_ELSE { T_VARIABLE($ret) [ ] = T_VARIABLE($field) ; } } T_RETURN T_STRING ( , T_VARIABLE($ret) ) ; } T_FUNCTION(_db_create_keys) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($new_keys) ) { T_IF ( T_ISSET ( T_VARIABLE($new_keys) [ ] ) ) { T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($new_keys) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($new_keys) [ ] ) ) { T_FOREACH ( T_VARIABLE($new_keys) [ ] T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($fields) ) { T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($name) , T_VARIABLE($fields) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($new_keys) [ ] ) ) { T_FOREACH ( T_VARIABLE($new_keys) [ ] T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($fields) ) { T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($name) , T_VARIABLE($fields) ) ; } } } T_FUNCTION(_db_process_field) ( T_VARIABLE($field) ) { T_IF ( ! T_ISSET ( T_VARIABLE($field) [ ] ) ) { T_VARIABLE($field) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($field) [ ] ) ) { T_VARIABLE($map) = T_STRING ( ) ; T_VARIABLE($field) [ ] = T_VARIABLE($map) [ T_VARIABLE($field) [ ] . . T_VARIABLE($field) [ ] ] ; } T_IF ( T_VARIABLE($field) [ ] T_IS_EQUAL ) { T_UNSET ( T_VARIABLE($field) [ ] ) ; } T_RETURN T_VARIABLE($field) ; } T_FUNCTION(_db_create_field_sql) ( T_VARIABLE($name) , T_VARIABLE($spec) ) { T_VARIABLE($sql) = T_VARIABLE($name) . . T_VARIABLE($spec) [ ] ; T_IF ( T_VARIABLE($spec) [ ] T_IS_EQUAL ) { T_UNSET ( T_VARIABLE($spec) [ ] ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($spec) [ ] ) ) { T_IF ( T_VARIABLE($spec) [ ] T_IS_EQUAL ) { T_VARIABLE($sql) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($name) T_ENCAPSED_AND_WHITESPACE ; } T_ELSE { T_VARIABLE($sql) T_CONCAT_EQUAL ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_VARIABLE($spec) [ ] . ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($spec) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_VARIABLE($spec) [ ] . . T_VARIABLE($spec) [ ] . ; } T_IF ( T_ISSET ( T_VARIABLE($spec) [ ] ) T_BOOLEAN_AND T_VARIABLE($spec) [ ] ) { T_VARIABLE($sql) T_CONCAT_EQUAL ; } T_IF ( T_ISSET ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($default) = T_STRING ( T_VARIABLE($spec) [ ] ) ? . T_VARIABLE($spec) [ ] . : T_VARIABLE($spec) [ ] ; T_VARIABLE($sql) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($default) ; } T_RETURN T_VARIABLE($sql) ; } T_FUNCTION(db_rename_table) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($new_name) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($new_name) . ) ; } T_FUNCTION(db_drop_table) ( & T_VARIABLE($ret) , T_VARIABLE($table) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . ) ; } T_FUNCTION(db_add_field) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($spec) , T_VARIABLE($new_keys) = T_ARRAY ( ) ) { T_VARIABLE($fixnull) = T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($spec) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($fixnull) = T_STRING ; T_VARIABLE($spec) [ ] = T_STRING ; } T_VARIABLE($query) = . T_VARIABLE($table) . ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($field) , T_STRING ( T_VARIABLE($spec) ) ) ; T_VARIABLE($ret) [ ] = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_ISSET ( T_VARIABLE($spec) [ ] ) ) { T_VARIABLE($sql) = . T_VARIABLE($table) . . T_VARIABLE($field) . . T_STRING ( T_VARIABLE($spec) [ ] ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($spec) [ ] ) ; T_VARIABLE($ret) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($result) T_IS_NOT_IDENTICAL T_STRING , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($sql) . . T_VARIABLE($spec) [ ] . ) ) ; } T_IF ( T_VARIABLE($fixnull) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field) T_ENCAPSED_AND_WHITESPACE ) ; } T_IF ( T_ISSET ( T_VARIABLE($new_keys) ) ) { T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($new_keys) ) ; } } T_FUNCTION(db_drop_field) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($field) ) ; } T_FUNCTION(db_field_set_default) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($default) ) { T_IF ( T_VARIABLE($default) T_IS_EQUAL T_STRING ) { T_VARIABLE($default) = ; } T_ELSE { T_VARIABLE($default) = T_STRING ( T_VARIABLE($default) ) ? T_ENCAPSED_AND_WHITESPACE T_VARIABLE($default) T_ENCAPSED_AND_WHITESPACE : T_VARIABLE($default) ; } T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($field) . . T_VARIABLE($default) ) ; } T_FUNCTION(db_field_set_no_default) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($field) . ) ; } T_FUNCTION(db_add_primary_key) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($fields) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_STRING ( , T_VARIABLE($fields) ) . ) ; } T_FUNCTION(db_drop_primary_key) ( & T_VARIABLE($ret) , T_VARIABLE($table) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($table) . ) ; } T_FUNCTION(db_add_unique_key) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($name) , T_VARIABLE($fields) ) { T_VARIABLE($name) = . T_VARIABLE($table) . . T_VARIABLE($name) . ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($name) . . T_STRING ( , T_VARIABLE($fields) ) . ) ; } T_FUNCTION(db_drop_unique_key) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($name) ) { T_VARIABLE($name) = . T_VARIABLE($table) . . T_VARIABLE($name) . ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($name) ) ; } T_FUNCTION(db_add_index) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($name) , T_VARIABLE($fields) ) { T_VARIABLE($ret) [ ] = T_STRING ( T_STRING ( T_VARIABLE($table) , T_VARIABLE($name) , T_VARIABLE($fields) ) ) ; } T_FUNCTION(db_drop_index) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($name) ) { T_VARIABLE($name) = . T_VARIABLE($table) . . T_VARIABLE($name) . ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($name) ) ; } T_FUNCTION(db_change_field) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($field_new) , T_VARIABLE($spec) , T_VARIABLE($new_keys) = T_ARRAY ( ) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field) T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($field) . ) ; T_VARIABLE($not_null) = T_ISSET ( T_VARIABLE($spec) [ ] ) ? T_VARIABLE($spec) [ ] : T_STRING ; T_UNSET ( T_VARIABLE($spec) [ ] ) ; T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field_new) , T_VARIABLE($spec) ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field_new) T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($field) . ) ; T_IF ( T_VARIABLE($not_null) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field_new) T_ENCAPSED_AND_WHITESPACE ) ; } T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) . ) ; T_IF ( T_ISSET ( T_VARIABLE($new_keys) ) ) { T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($new_keys) ) ; } }",12,0
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(file_create_url) ( T_VARIABLE($path) ) { T_IF ( T_STRING ( T_VARIABLE($path) , T_STRING ( ) . ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($path) = T_STRING ( T_STRING ( T_VARIABLE($path) , T_STRING ( T_STRING ( ) ) ) , ) ; } T_SWITCH ( T_STRING ( , T_STRING ) ) { T_CASE T_STRING : T_RETURN T_VARIABLE($GLOBALS) [ ] . . T_STRING ( ) . . T_STRING ( , , T_VARIABLE($path) ) ; T_CASE T_STRING : T_RETURN T_STRING ( . T_VARIABLE($path) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; } } T_FUNCTION(file_create_path) ( T_VARIABLE($dest) = T_LNUMBER ) { T_VARIABLE($file_path) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($dest) ) { T_RETURN T_VARIABLE($file_path) ; } T_IF ( T_STRING ( T_VARIABLE($dest) , T_VARIABLE($file_path) ) ) { T_RETURN T_VARIABLE($dest) ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($dest) , T_STRING ( ) ) ) { T_RETURN T_VARIABLE($dest) ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($file_path) . . T_VARIABLE($dest) , T_VARIABLE($file_path) ) ) { T_RETURN T_VARIABLE($file_path) . . T_VARIABLE($dest) ; } T_RETURN T_STRING ; } T_FUNCTION(file_check_directory) ( & T_VARIABLE($directory) , T_VARIABLE($mode) = T_LNUMBER , T_VARIABLE($form_item) = T_STRING ) { T_VARIABLE($directory) = T_STRING ( T_VARIABLE($directory) , ) ; T_IF ( ! T_STRING ( T_VARIABLE($directory) ) ) { T_IF ( ( T_VARIABLE($mode) & T_STRING ) T_BOOLEAN_AND @ T_STRING ( T_VARIABLE($directory) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($directory) ) ) ) ; @ T_STRING ( T_VARIABLE($directory) , T_LNUMBER ) ; } T_ELSE { T_IF ( T_VARIABLE($form_item) ) { T_STRING ( T_VARIABLE($form_item) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($directory) ) ) ) ; } T_RETURN T_STRING ; } } T_IF ( ! T_STRING ( T_VARIABLE($directory) ) ) { T_IF ( ( T_VARIABLE($mode) & T_STRING ) T_BOOLEAN_AND @ T_STRING ( T_VARIABLE($directory) , T_LNUMBER ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($directory) ) ) ) ; } T_ELSE { T_STRING ( T_VARIABLE($form_item) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($directory) ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($directory) ) , T_STRING ) ; T_RETURN T_STRING ; } } T_IF ( ( T_STRING ( ) T_IS_EQUAL T_VARIABLE($directory) T_BOOLEAN_OR T_STRING ( ) T_IS_EQUAL T_VARIABLE($directory) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($directory) T_ENCAPSED_AND_WHITESPACE ) ) { T_VARIABLE($htaccess_lines) = ; T_IF ( ( T_VARIABLE($fp) = T_STRING ( T_VARIABLE($directory) T_ENCAPSED_AND_WHITESPACE , ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($fp) , T_VARIABLE($htaccess_lines) ) ) { T_STRING ( T_VARIABLE($fp) ) ; T_STRING ( T_VARIABLE($directory) . , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($variables) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($directory) , T_DOUBLE_ARROW . T_STRING ( T_STRING ( T_VARIABLE($htaccess_lines) ) ) ) ; T_STRING ( T_VARIABLE($form_item) , T_STRING ( , T_VARIABLE($variables) ) ) ; T_STRING ( , , T_VARIABLE($variables) , T_STRING ) ; } } T_RETURN T_STRING ; } T_FUNCTION(file_check_path) ( & T_VARIABLE($path) ) { T_IF ( T_STRING ( T_VARIABLE($path) ) ) { T_RETURN ; } T_VARIABLE($filename) = T_STRING ( T_VARIABLE($path) ) ; T_VARIABLE($path) = T_STRING ( T_VARIABLE($path) ) ; T_IF ( T_STRING ( T_VARIABLE($path) ) ) { T_RETURN T_VARIABLE($filename) ; } T_RETURN T_STRING ; } T_FUNCTION(file_check_location) ( T_VARIABLE($source) , T_VARIABLE($directory) = ) { T_VARIABLE($check) = T_STRING ( T_VARIABLE($source) ) ; T_IF ( T_VARIABLE($check) ) { T_VARIABLE($source) = T_VARIABLE($check) ; } T_ELSE { T_VARIABLE($source) = T_STRING ( T_STRING ( T_VARIABLE($source) ) ) . . T_STRING ( T_VARIABLE($source) ) ; } T_VARIABLE($directory) = T_STRING ( T_VARIABLE($directory) ) ; T_IF ( T_VARIABLE($directory) T_BOOLEAN_AND T_STRING ( T_VARIABLE($source) , T_VARIABLE($directory) ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_RETURN T_LNUMBER ; } T_RETURN T_VARIABLE($source) ; } T_FUNCTION(file_copy) ( & T_VARIABLE($source) , T_VARIABLE($dest) = T_LNUMBER , T_VARIABLE($replace) = T_STRING ) { T_VARIABLE($dest) = T_STRING ( T_VARIABLE($dest) ) ; T_VARIABLE($directory) = T_VARIABLE($dest) ; T_VARIABLE($basename) = T_STRING ( T_VARIABLE($directory) ) ; T_IF ( T_VARIABLE($basename) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($source) = T_STRING ( T_VARIABLE($source) ) ? T_VARIABLE($source) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($source) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source) , T_DOUBLE_ARROW T_VARIABLE($dest) ) ) , ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source) , T_DOUBLE_ARROW T_VARIABLE($dest) ) , T_STRING ) ; T_RETURN T_LNUMBER ; } T_IF ( T_STRING ( T_VARIABLE($source) ) ) { T_VARIABLE($file) = T_VARIABLE($source) ; T_VARIABLE($source) = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_VARIABLE($basename) ) { T_VARIABLE($basename) = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; } } T_VARIABLE($source) = T_STRING ( T_VARIABLE($source) ) ; T_IF ( ! T_STRING ( T_VARIABLE($source) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source) ) ) , ) ; T_RETURN T_LNUMBER ; } T_VARIABLE($basename) = T_VARIABLE($basename) ? T_VARIABLE($basename) : T_STRING ( T_VARIABLE($source) ) ; T_VARIABLE($dest) = T_VARIABLE($directory) . . T_VARIABLE($basename) ; T_IF ( T_VARIABLE($source) T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($dest) ) ) { T_IF ( ! T_VARIABLE($dest) = T_STRING ( T_VARIABLE($dest) , T_VARIABLE($replace) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source) ) ) , ) ; T_RETURN T_STRING ; } T_IF ( ! @ T_STRING ( T_VARIABLE($source) , T_VARIABLE($dest) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source) ) ) , ) ; T_RETURN T_LNUMBER ; } @ T_STRING ( T_VARIABLE($dest) , T_LNUMBER ) ; } T_IF ( T_ISSET ( T_VARIABLE($file) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($basename) ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($dest) ; T_VARIABLE($source) = T_VARIABLE($file) ; } T_ELSE { T_VARIABLE($source) = T_VARIABLE($dest) ; } T_RETURN T_LNUMBER ; } T_FUNCTION(file_destination) ( T_VARIABLE($destination) , T_VARIABLE($replace) ) { T_IF ( T_STRING ( T_VARIABLE($destination) ) ) { T_SWITCH ( T_VARIABLE($replace) ) { T_CASE T_STRING : T_VARIABLE($basename) = T_STRING ( T_VARIABLE($destination) ) ; T_VARIABLE($directory) = T_STRING ( T_VARIABLE($destination) ) ; T_VARIABLE($destination) = T_STRING ( T_VARIABLE($basename) , T_VARIABLE($directory) ) ; T_BREAK ; T_CASE T_STRING : T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) , ) ; T_RETURN T_STRING ; } } T_RETURN T_VARIABLE($destination) ; } T_FUNCTION(file_move) ( & T_VARIABLE($source) , T_VARIABLE($dest) = T_LNUMBER , T_VARIABLE($replace) = T_STRING ) { T_VARIABLE($path_original) = T_STRING ( T_VARIABLE($source) ) ? T_VARIABLE($source) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($source) ; T_IF ( T_STRING ( T_VARIABLE($source) , T_VARIABLE($dest) , T_VARIABLE($replace) ) ) { T_VARIABLE($path_current) = T_STRING ( T_VARIABLE($source) ) ? T_VARIABLE($source) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($source) ; T_IF ( T_VARIABLE($path_original) T_IS_EQUAL T_VARIABLE($path_current) T_BOOLEAN_OR T_STRING ( T_VARIABLE($path_original) ) ) { T_RETURN T_LNUMBER ; } T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($path_original) ) ) , ) ; } T_RETURN T_LNUMBER ; } T_FUNCTION(file_munge_filename) ( T_VARIABLE($filename) , T_VARIABLE($extensions) , T_VARIABLE($alerts) = T_STRING ) { T_VARIABLE($original) = T_VARIABLE($filename) ; T_IF ( ! T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($whitelist) = T_STRING ( T_STRING ( , T_STRING ( T_VARIABLE($extensions) ) ) ) ; T_VARIABLE($filename_parts) = T_STRING ( , T_VARIABLE($filename) ) ; T_VARIABLE($new_filename) = T_STRING ( T_VARIABLE($filename_parts) ) ; T_VARIABLE($final_extension) = T_STRING ( T_VARIABLE($filename_parts) ) ; T_FOREACH ( T_VARIABLE($filename_parts) T_AS T_VARIABLE($filename_part) ) { T_VARIABLE($new_filename) T_CONCAT_EQUAL . T_VARIABLE($filename_part) ; T_IF ( ! T_STRING ( T_VARIABLE($filename_part) , T_VARIABLE($whitelist) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($filename_part) ) ) { T_VARIABLE($new_filename) T_CONCAT_EQUAL ; } } T_VARIABLE($filename) = T_VARIABLE($new_filename) . . T_VARIABLE($final_extension) ; T_IF ( T_VARIABLE($alerts) T_BOOLEAN_AND T_VARIABLE($original) T_IS_NOT_EQUAL T_VARIABLE($filename) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($filename) ) ) ) ; } } T_RETURN T_VARIABLE($filename) ; } T_FUNCTION(file_unmunge_filename) ( T_VARIABLE($filename) ) { T_RETURN T_STRING ( , , T_VARIABLE($filename) ) ; } T_FUNCTION(file_create_filename) ( T_VARIABLE($basename) , T_VARIABLE($directory) ) { T_VARIABLE($dest) = T_VARIABLE($directory) . . T_VARIABLE($basename) ; T_IF ( T_STRING ( T_VARIABLE($dest) ) ) { T_IF ( T_VARIABLE($pos) = T_STRING ( T_VARIABLE($basename) , ) ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($basename) , T_LNUMBER , T_VARIABLE($pos) ) ; T_VARIABLE($ext) = T_STRING ( T_VARIABLE($basename) , T_VARIABLE($pos) ) ; } T_ELSE { T_VARIABLE($name) = T_VARIABLE($basename) ; } T_VARIABLE($counter) = T_LNUMBER ; T_DO { T_VARIABLE($dest) = T_VARIABLE($directory) . . T_VARIABLE($name) . . T_VARIABLE($counter) T_INC . T_VARIABLE($ext) ; } T_WHILE ( T_STRING ( T_VARIABLE($dest) ) ) ; } T_RETURN T_VARIABLE($dest) ; } T_FUNCTION(file_delete) ( T_VARIABLE($path) ) { T_IF ( T_STRING ( T_VARIABLE($path) ) ) { T_RETURN T_STRING ( T_VARIABLE($path) ) ; } } T_FUNCTION(file_space_used) ( T_VARIABLE($uid) = T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($uid) ) ) { T_RETURN T_INT_CAST T_STRING ( T_STRING ( , T_VARIABLE($uid) ) ) ; } T_RETURN T_INT_CAST T_STRING ( T_STRING ( ) ) ; } T_FUNCTION(file_save_upload) ( T_VARIABLE($source) , T_VARIABLE($validators) = T_ARRAY ( ) , T_VARIABLE($dest) = T_STRING , T_VARIABLE($replace) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_STATIC T_VARIABLE($upload_cache) ; T_VARIABLE($validators) [ ] = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($upload_cache) [ T_VARIABLE($source) ] ) ) { T_RETURN T_VARIABLE($upload_cache) [ T_VARIABLE($source) ] ; } T_IF ( T_ISSET ( T_VARIABLE($_FILES) [ ] ) T_BOOLEAN_AND T_VARIABLE($_FILES) [ ] [ ] [ T_VARIABLE($source) ] T_BOOLEAN_AND T_STRING ( T_VARIABLE($_FILES) [ ] [ ] [ T_VARIABLE($source) ] ) ) { T_SWITCH ( T_VARIABLE($_FILES) [ ] [ ] [ T_VARIABLE($source) ] ) { T_CASE T_STRING : T_BREAK ; T_CASE T_STRING : T_CASE T_STRING : T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source) , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) ) ) ) , ) ; T_RETURN T_LNUMBER ; T_CASE T_STRING : T_CASE T_STRING : T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source) ) ) , ) ; T_RETURN T_LNUMBER ; T_DEFAULT : T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($source) ) ) , ) ; T_RETURN T_LNUMBER ; } T_VARIABLE($extensions) = ; T_FOREACH ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($extensions) T_CONCAT_EQUAL . T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($rid) , T_STRING ( , ) ) ; } T_VARIABLE($file) = T_NEW T_STRING ( ) ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($_FILES) [ ] [ ] [ T_VARIABLE($source) ] ) , ) , T_VARIABLE($extensions) ) ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_FILES) [ ] [ ] [ T_VARIABLE($source) ] ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_FILES) [ ] [ ] [ T_VARIABLE($source) ] ; T_IF ( T_STRING ( , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , - T_LNUMBER ) T_IS_NOT_EQUAL ) ) { T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; } T_IF ( T_EMPTY ( T_VARIABLE($dest) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($dest) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($dest) = T_STRING ( ) ; } T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($source) ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( T_VARIABLE($dest) . . T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) , T_VARIABLE($replace) ) ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($_FILES) [ ] [ ] [ T_VARIABLE($source) ] ; T_VARIABLE($errors) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($validators) T_AS T_VARIABLE($function) T_DOUBLE_ARROW T_VARIABLE($args) ) { T_STRING ( T_VARIABLE($args) , T_VARIABLE($file) ) ; T_VARIABLE($errors) = T_STRING ( T_VARIABLE($errors) , T_STRING ( T_VARIABLE($function) , T_VARIABLE($args) ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($errors) ) ) { T_VARIABLE($message) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) ; T_IF ( T_STRING ( T_VARIABLE($errors) ) > T_LNUMBER ) { T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($errors) ) . ; } T_ELSE { T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($errors) ) ; } T_STRING ( T_VARIABLE($source) , T_VARIABLE($message) ) ; T_RETURN T_LNUMBER ; } T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_STRING ( T_VARIABLE($_FILES) [ ] [ ] [ T_VARIABLE($source) ] , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_VARIABLE($source) , T_STRING ( ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) ; T_RETURN T_LNUMBER ; } T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_STRING ( , T_VARIABLE($file) ) ; T_VARIABLE($upload_cache) [ T_VARIABLE($source) ] = T_VARIABLE($file) ; T_RETURN T_VARIABLE($file) ; } T_RETURN T_LNUMBER ; } T_FUNCTION(file_validate_name_length) ( T_VARIABLE($file) ) { T_VARIABLE($errors) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_RETURN T_VARIABLE($errors) ; } T_FUNCTION(file_validate_extensions) ( T_VARIABLE($file) , T_VARIABLE($extensions) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($errors) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($regex) = . T_STRING ( , , T_STRING ( T_VARIABLE($extensions) ) ) . ; T_IF ( ! T_STRING ( T_VARIABLE($regex) , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($errors) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($extensions) ) ) ; } } T_RETURN T_VARIABLE($errors) ; } T_FUNCTION(file_validate_size) ( T_VARIABLE($file) , T_VARIABLE($file_limit) = T_LNUMBER , T_VARIABLE($user_limit) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($errors) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($file_limit) T_BOOLEAN_AND T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING > T_VARIABLE($file_limit) ) { T_VARIABLE($errors) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($file_limit) ) ) ) ; } T_VARIABLE($total_size) = T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) + T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($user_limit) T_BOOLEAN_AND T_VARIABLE($total_size) > T_VARIABLE($user_limit) ) { T_VARIABLE($errors) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($user_limit) ) ) ) ; } } T_RETURN T_VARIABLE($errors) ; } T_FUNCTION(file_validate_is_image) ( & T_VARIABLE($file) ) { T_VARIABLE($errors) = T_ARRAY ( ) ; T_VARIABLE($info) = T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_VARIABLE($info) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($errors) [ ] = T_STRING ( ) ; } T_RETURN T_VARIABLE($errors) ; } T_FUNCTION(file_validate_image_resolution) ( & T_VARIABLE($file) , T_VARIABLE($maximum_dimensions) = T_LNUMBER , T_VARIABLE($minimum_dimensions) = T_LNUMBER ) { T_VARIABLE($errors) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($info) = T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($maximum_dimensions) ) { T_LIST ( T_VARIABLE($width) , T_VARIABLE($height) ) = T_STRING ( , T_VARIABLE($maximum_dimensions) ) ; T_IF ( T_VARIABLE($info) [ ] > T_VARIABLE($width) T_BOOLEAN_OR T_VARIABLE($info) [ ] > T_VARIABLE($height) ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($width) , T_VARIABLE($height) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($maximum_dimensions) ) ) ) ; T_STRING ( ) ; T_VARIABLE($info) = T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($info) [ ] ; } T_ELSE { T_VARIABLE($errors) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($maximum_dimensions) ) ) ; } } } T_IF ( T_VARIABLE($minimum_dimensions) ) { T_LIST ( T_VARIABLE($width) , T_VARIABLE($height) ) = T_STRING ( , T_VARIABLE($minimum_dimensions) ) ; T_IF ( T_VARIABLE($info) [ ] < T_VARIABLE($width) T_BOOLEAN_OR T_VARIABLE($info) [ ] < T_VARIABLE($height) ) { T_VARIABLE($errors) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($minimum_dimensions) ) ) ; } } } T_RETURN T_VARIABLE($errors) ; } T_FUNCTION(file_save_data) ( T_VARIABLE($data) , T_VARIABLE($dest) , T_VARIABLE($replace) = T_STRING ) { T_VARIABLE($temp) = T_STRING ( ) ; T_VARIABLE($file) = T_STRING ( T_STRING ( T_VARIABLE($temp) ) , ) ; T_IF ( ! T_VARIABLE($fp) = T_STRING ( T_VARIABLE($file) , ) ) { T_STRING ( T_STRING ( ) , ) ; T_RETURN T_LNUMBER ; } T_STRING ( T_VARIABLE($fp) , T_VARIABLE($data) ) ; T_STRING ( T_VARIABLE($fp) ) ; T_IF ( ! T_STRING ( T_VARIABLE($file) , T_VARIABLE($dest) , T_VARIABLE($replace) ) ) { T_RETURN T_LNUMBER ; } T_RETURN T_VARIABLE($file) ; } T_FUNCTION(file_set_status) ( & T_VARIABLE($file) , T_VARIABLE($status) ) { T_IF ( T_STRING ( , T_VARIABLE($status) , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($status) ; T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(file_transfer) ( T_VARIABLE($source) , T_VARIABLE($headers) ) { T_STRING ( ) ; T_FOREACH ( T_VARIABLE($headers) T_AS T_VARIABLE($header) ) { T_VARIABLE($header) = T_STRING ( , , T_VARIABLE($header) ) ; T_STRING ( T_VARIABLE($header) ) ; } T_VARIABLE($source) = T_STRING ( T_VARIABLE($source) ) ; T_IF ( T_VARIABLE($fd) = T_STRING ( T_VARIABLE($source) , ) ) { T_WHILE ( ! T_STRING ( T_VARIABLE($fd) ) ) { T_PRINT T_STRING ( T_VARIABLE($fd) , T_LNUMBER ) ; } T_STRING ( T_VARIABLE($fd) ) ; } T_ELSE { T_STRING ( ) ; } T_EXIT ( ) ; } T_FUNCTION(file_download) ( ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($filepath) = T_STRING ( , T_VARIABLE($args) ) ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($filepath) = T_VARIABLE($_GET) [ ] ; } T_IF ( T_STRING ( T_STRING ( T_VARIABLE($filepath) ) ) ) { T_VARIABLE($headers) = T_STRING ( , T_VARIABLE($filepath) ) ; T_IF ( T_STRING ( - T_LNUMBER , T_VARIABLE($headers) ) ) { T_RETURN T_STRING ( ) ; } T_IF ( T_STRING ( T_VARIABLE($headers) ) ) { T_STRING ( T_VARIABLE($filepath) , T_VARIABLE($headers) ) ; } } T_RETURN T_STRING ( ) ; } T_FUNCTION(file_scan_directory) ( T_VARIABLE($dir) , T_VARIABLE($mask) , T_VARIABLE($nomask) = T_ARRAY ( , , ) , T_VARIABLE($callback) = T_LNUMBER , T_VARIABLE($recurse) = T_STRING , T_VARIABLE($key) = , T_VARIABLE($min_depth) = T_LNUMBER , T_VARIABLE($depth) = T_LNUMBER ) { T_VARIABLE($key) = ( T_STRING ( T_VARIABLE($key) , T_ARRAY ( , , ) ) ? T_VARIABLE($key) : ) ; T_VARIABLE($files) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($dir) ) T_BOOLEAN_AND T_VARIABLE($handle) = T_STRING ( T_VARIABLE($dir) ) ) { T_WHILE ( T_VARIABLE($file) = T_STRING ( T_VARIABLE($handle) ) ) { T_IF ( ! T_STRING ( T_VARIABLE($file) , T_VARIABLE($nomask) ) T_BOOLEAN_AND T_VARIABLE($file) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_IF ( T_STRING ( T_VARIABLE($dir) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) ) T_BOOLEAN_AND T_VARIABLE($recurse) ) { T_VARIABLE($files) = T_STRING ( T_STRING ( T_VARIABLE($dir) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) , T_VARIABLE($mask) , T_VARIABLE($nomask) , T_VARIABLE($callback) , T_VARIABLE($recurse) , T_VARIABLE($key) , T_VARIABLE($min_depth) , T_VARIABLE($depth) + T_LNUMBER ) , T_VARIABLE($files) ) ; } T_ELSEIF ( T_VARIABLE($depth) T_IS_GREATER_OR_EQUAL T_VARIABLE($min_depth) T_BOOLEAN_AND T_STRING ( T_VARIABLE($mask) , T_VARIABLE($file) ) ) { T_VARIABLE($filename) = T_VARIABLE($dir) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) ; T_VARIABLE($basename) = T_STRING ( T_VARIABLE($file) ) ; T_VARIABLE($name) = T_STRING ( T_VARIABLE($basename) , T_LNUMBER , T_STRING ( T_VARIABLE($basename) , ) ) ; T_VARIABLE($files) [ $ T_VARIABLE($key) ] = T_NEW T_STRING ( ) ; T_VARIABLE($files) [ $ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($filename) ; T_VARIABLE($files) [ $ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($basename) ; T_VARIABLE($files) [ $ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($name) ; T_IF ( T_VARIABLE($callback) ) { T_VARIABLE($callback) ( T_VARIABLE($filename) ) ; } } } } T_STRING ( T_VARIABLE($handle) ) ; } T_RETURN T_VARIABLE($files) ; } T_FUNCTION(file_directory_temp) ( ) { T_VARIABLE($temporary_directory) = T_STRING ( , T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($temporary_directory) ) ) { T_VARIABLE($directories) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($directories) [ ] = T_STRING ( ) ; } T_IF ( T_STRING ( T_STRING , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($directories) [ ] = ; T_VARIABLE($directories) [ ] = ; T_VARIABLE($path_delimiter) = ; } T_ELSE { T_VARIABLE($directories) [ ] = ; T_VARIABLE($path_delimiter) = ; } T_FOREACH ( T_VARIABLE($directories) T_AS T_VARIABLE($directory) ) { T_IF ( ! T_VARIABLE($temporary_directory) T_BOOLEAN_AND T_STRING ( T_VARIABLE($directory) ) ) { T_VARIABLE($temporary_directory) = T_VARIABLE($directory) ; } } T_VARIABLE($temporary_directory) = T_VARIABLE($temporary_directory) ? T_VARIABLE($temporary_directory) : T_STRING ( ) . T_VARIABLE($path_delimiter) . ; T_STRING ( , T_VARIABLE($temporary_directory) ) ; } T_RETURN T_VARIABLE($temporary_directory) ; } T_FUNCTION(file_directory_path) ( ) { T_RETURN T_STRING ( , T_STRING ( ) . ) ; } T_FUNCTION(file_upload_max_size) ( ) { T_STATIC T_VARIABLE($max_size) = - T_LNUMBER ; T_IF ( T_VARIABLE($max_size) < T_LNUMBER ) { T_VARIABLE($upload_max) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($post_max) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($max_size) = ( T_VARIABLE($upload_max) < T_VARIABLE($post_max) ) ? T_VARIABLE($upload_max) : T_VARIABLE($post_max) ; } T_RETURN T_VARIABLE($max_size) ; }",13,1
"T_OPEN_TAG T_FUNCTION(drupal_get_form) ( T_VARIABLE($form_id) ) { T_VARIABLE($form_state) = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($cacheable) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($form_state) = T_VARIABLE($_SESSION) [ ] ; T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] T_IS_EQUAL T_VARIABLE($form_id) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) { T_VARIABLE($form) = T_STRING ( T_VARIABLE($_POST) [ ] , T_VARIABLE($form_state) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($form) ) ) { T_VARIABLE($form_state) [ ] = T_VARIABLE($_POST) ; T_VARIABLE($args_temp) = T_VARIABLE($args) ; T_VARIABLE($args_temp) [ T_LNUMBER ] = & T_VARIABLE($form_state) ; T_STRING ( T_VARIABLE($args_temp) , T_VARIABLE($form_id) ) ; T_VARIABLE($form) = T_STRING ( , T_VARIABLE($args_temp) ) ; T_VARIABLE($form_build_id) = . T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_VARIABLE($form_build_id) ; T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($original_form) = T_VARIABLE($form) ; T_VARIABLE($cacheable) = T_STRING ; T_UNSET ( T_VARIABLE($form_state) [ ] ) ; } T_VARIABLE($form) [ ] = T_VARIABLE($_POST) ; T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_IF ( T_VARIABLE($cacheable) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($form) [ ] ) ) { T_STRING ( T_VARIABLE($form_build_id) , T_VARIABLE($original_form) , T_STRING ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($form) = T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form_state) , T_VARIABLE($args) ) ; } T_RETURN T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) ) ; } T_FUNCTION(drupal_rebuild_form) ( T_VARIABLE($form_id) , & T_VARIABLE($form_state) , T_VARIABLE($args) , T_VARIABLE($form_build_id) = T_STRING ) { T_VARIABLE($args) [ T_LNUMBER ] = & T_VARIABLE($form_state) ; T_STRING ( T_VARIABLE($args) , T_VARIABLE($form_id) ) ; T_VARIABLE($form) = T_STRING ( , T_VARIABLE($args) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($form_build_id) ) ) { T_VARIABLE($form_build_id) = . T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($form) [ ] = T_VARIABLE($form_build_id) ; T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_STRING ( T_VARIABLE($form_build_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($_POST) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(form_get_cache) ( T_VARIABLE($form_build_id) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($cached) = T_STRING ( . T_VARIABLE($form_build_id) , ) ) { T_VARIABLE($form) = T_VARIABLE($cached) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($cached) = T_STRING ( . T_VARIABLE($form_build_id) , ) ) { T_VARIABLE($form_state) [ ] = T_VARIABLE($cached) T_OBJECT_OPERATOR T_STRING ; } T_RETURN T_VARIABLE($form) ; } } T_FUNCTION(form_set_cache) ( T_VARIABLE($form_build_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_VARIABLE($expire) = T_STRING ( T_STRING ( ) , T_LNUMBER ) ; T_STRING ( . T_VARIABLE($form_build_id) , T_VARIABLE($form) , , T_VARIABLE($expire) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) { T_STRING ( . T_VARIABLE($form_build_id) , T_VARIABLE($form_state) [ ] , , T_VARIABLE($expire) ) ; } } T_FUNCTION(drupal_execute) ( T_VARIABLE($form_id) , & T_VARIABLE($form_state) ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($form) = T_STRING ( , T_VARIABLE($args) ) ; T_VARIABLE($form) [ ] = T_VARIABLE($form_state) [ ] ; T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; } T_FUNCTION(drupal_retrieve_form) ( T_VARIABLE($form_id) , & T_VARIABLE($form_state) ) { T_STATIC T_VARIABLE($forms) ; T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($saved_args) = T_VARIABLE($args) ; T_STRING ( T_VARIABLE($args) ) ; T_IF ( T_ISSET ( T_VARIABLE($form_state) ) ) { T_STRING ( T_VARIABLE($args) ) ; } T_IF ( ! T_STRING ( T_VARIABLE($form_id) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($forms) ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($forms) [ T_VARIABLE($form_id) ] ) ) { T_VARIABLE($forms) = T_STRING ( , T_VARIABLE($form_id) , T_VARIABLE($args) ) ; } T_VARIABLE($form_definition) = T_VARIABLE($forms) [ T_VARIABLE($form_id) ] ; T_IF ( T_ISSET ( T_VARIABLE($form_definition) [ ] ) ) { T_VARIABLE($args) = T_STRING ( T_VARIABLE($form_definition) [ ] , T_VARIABLE($args) ) ; } T_IF ( T_ISSET ( T_VARIABLE($form_definition) [ ] ) ) { T_VARIABLE($callback) = T_VARIABLE($form_definition) [ ] ; } } T_STRING ( T_VARIABLE($args) , T_STRING ) ; T_VARIABLE($args) [ T_LNUMBER ] = & T_VARIABLE($form_state) ; T_VARIABLE($form) = T_STRING ( T_ISSET ( T_VARIABLE($callback) ) ? T_VARIABLE($callback) : T_VARIABLE($form_id) , T_VARIABLE($args) ) ; T_VARIABLE($form) [ ] = T_VARIABLE($saved_args) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(drupal_process_form) ( T_VARIABLE($form_id) , & T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_state) [ ] = T_ARRAY ( ) ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_IF ( ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) ) T_BOOLEAN_OR ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND ( T_ISSET ( T_VARIABLE($form) [ ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($form) [ ] [ ] T_IS_EQUAL T_VARIABLE($form_id) ) ) ) ) { T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_STRING ( T_STRING , T_STRING ) ; T_IF ( ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) T_BOOLEAN_AND ! T_STRING ( ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($form_state) [ ] = T_STRING ; T_STRING ( , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_IF ( T_STRING ( , T_STRING ) T_IS_EQUAL T_STRING T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( . T_VARIABLE($form_state) [ ] [ ] , ) ; T_STRING ( . T_VARIABLE($form_state) [ ] [ ] , ) ; } T_IF ( T_VARIABLE($batch) = & T_STRING ( ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($batch) [ ] ) ) { T_VARIABLE($batch) [ ] = T_VARIABLE($form) ; T_VARIABLE($batch) [ ] = T_VARIABLE($form_state) ; T_VARIABLE($batch) [ ] = ! T_VARIABLE($form) [ ] ; T_STRING ( ) ; } T_IF ( ! T_VARIABLE($form) [ ] T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($form_state) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) { T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) [ ] ) ; } } } } T_FUNCTION(drupal_prepare_form) ( T_VARIABLE($form_id) , & T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($form) [ ] = ; T_VARIABLE($form) [ ] = T_ISSET ( T_VARIABLE($form) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($form) [ ] , T_DOUBLE_ARROW T_VARIABLE($form) [ ] , T_DOUBLE_ARROW , ) ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_IF ( T_VARIABLE($form) [ ] T_IS_IDENTICAL T_STRING T_BOOLEAN_OR T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_VARIABLE($form) [ ] ) { T_UNSET ( T_VARIABLE($form) [ ] ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] ) ) ; } } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ! T_VARIABLE($form) [ ] ) { T_VARIABLE($form) [ ] = T_VARIABLE($form_id) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form_id) . ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] ) , ) ; } T_IF ( T_ISSET ( T_VARIABLE($form_id) ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($form_id) , T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($form_id) ) , ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form) [ ] = T_STRING ( T_VARIABLE($form_id) ) ; } T_VARIABLE($form) T_PLUS_EQUAL T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($form_id) . ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_VARIABLE($form_id) . ) ; } } T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($form_id) . ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_VARIABLE($form_id) . ) ; } } T_VARIABLE($data) = & T_VARIABLE($form) ; T_VARIABLE($data) [ ] = T_ARRAY ( & T_VARIABLE($form_state) ) ; T_STRING ( . T_VARIABLE($form_id) , T_VARIABLE($data) ) ; T_VARIABLE($data) [ ] = T_ARRAY ( & T_VARIABLE($form_state) ) ; T_STRING ( , T_VARIABLE($data) , T_VARIABLE($form_id) ) ; } T_FUNCTION(drupal_validate_form) ( T_VARIABLE($form_id) , T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STATIC T_VARIABLE($validated_forms) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($validated_forms) [ T_VARIABLE($form_id) ] ) ) { T_RETURN ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_IF ( ! T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form) [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } } T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) ; T_VARIABLE($validated_forms) [ T_VARIABLE($form_id) ] = T_STRING ; } T_FUNCTION(drupal_render_form) ( T_VARIABLE($form_id) , & T_VARIABLE($form) ) { T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_STRING ( ) ; T_VARIABLE($registry) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($registry) [ T_VARIABLE($form_id) ] ) ) { T_VARIABLE($form) [ ] = T_VARIABLE($form_id) ; } } T_VARIABLE($output) = T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(drupal_redirect_form) ( T_VARIABLE($form) , T_VARIABLE($redirect) = T_STRING ) { T_VARIABLE($goto) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($redirect) ) ) { T_VARIABLE($goto) = T_VARIABLE($redirect) ; } T_IF ( T_VARIABLE($goto) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($goto) = T_VARIABLE($form) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($goto) ) T_BOOLEAN_OR ( T_VARIABLE($goto) T_IS_NOT_IDENTICAL T_STRING ) ) { T_IF ( T_ISSET ( T_VARIABLE($goto) ) ) { T_IF ( T_STRING ( T_VARIABLE($goto) ) ) { T_STRING ( , T_VARIABLE($goto) ) ; } T_ELSE { T_STRING ( T_VARIABLE($goto) ) ; } } T_STRING ( T_VARIABLE($_GET) [ ] ) ; } } T_FUNCTION(_form_validate) ( T_VARIABLE($elements) , & T_VARIABLE($form_state) , T_VARIABLE($form_id) = T_STRING ) { T_STATIC T_VARIABLE($complete_form) ; T_VARIABLE($t) = T_STRING ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($elements) ) T_AS T_VARIABLE($key) ) { T_IF ( T_ISSET ( T_VARIABLE($elements) [ T_VARIABLE($key) ] ) T_BOOLEAN_AND T_VARIABLE($elements) [ T_VARIABLE($key) ] ) { T_STRING ( T_VARIABLE($elements) [ T_VARIABLE($key) ] , T_VARIABLE($form_state) ) ; } } T_IF ( ! T_ISSET ( T_VARIABLE($elements) [ ] ) T_BOOLEAN_OR ! T_VARIABLE($elements) [ ] ) { T_IF ( T_ISSET ( T_VARIABLE($elements) [ ] ) ) { T_IF ( T_VARIABLE($elements) [ ] T_BOOLEAN_AND ( ! T_STRING ( T_VARIABLE($elements) [ ] ) T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($elements) [ ] ) T_BOOLEAN_AND T_STRING ( T_STRING ( T_VARIABLE($elements) [ ] ) ) T_IS_EQUAL T_LNUMBER ) ) ) { T_STRING ( T_VARIABLE($elements) , T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($elements) [ ] ) ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($elements) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($elements) [ ] ) > T_VARIABLE($elements) [ ] ) { T_STRING ( T_VARIABLE($elements) , T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($elements) [ ] ) ? T_VARIABLE($elements) [ ] [ T_LNUMBER ] : T_VARIABLE($elements) [ ] , T_DOUBLE_ARROW T_VARIABLE($elements) [ ] , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($elements) [ ] ) ) ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($elements) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($elements) [ ] ) ) { T_IF ( T_VARIABLE($elements) [ ] T_IS_EQUAL ) { T_VARIABLE($options) = T_STRING ( T_VARIABLE($elements) [ ] ) ; } T_ELSE { T_VARIABLE($options) = T_VARIABLE($elements) [ ] ; } T_IF ( T_STRING ( T_VARIABLE($elements) [ ] ) ) { T_VARIABLE($value) = T_VARIABLE($elements) [ ] T_IS_EQUAL ? T_STRING ( T_STRING ( T_VARIABLE($elements) [ ] ) ) : T_VARIABLE($elements) [ ] ; T_FOREACH ( T_VARIABLE($value) T_AS T_VARIABLE($v) ) { T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_VARIABLE($v) ] ) ) { T_STRING ( T_VARIABLE($elements) , T_VARIABLE($t) ( ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($v) , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($elements) [ ] ) ? T_VARIABLE($elements) [ ] [ T_LNUMBER ] : T_VARIABLE($elements) [ ] ) , T_STRING ) ; } } } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($options) [ T_VARIABLE($elements) [ ] ] ) ) { T_STRING ( T_VARIABLE($elements) , T_VARIABLE($t) ( ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($elements) [ ] , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($elements) [ ] ) ? T_VARIABLE($elements) [ ] [ T_LNUMBER ] : T_VARIABLE($elements) [ ] ) , T_STRING ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($form_id) ) ) { T_STRING ( , T_VARIABLE($elements) , T_VARIABLE($form_state) ) ; T_VARIABLE($complete_form) = T_VARIABLE($elements) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($elements) [ ] ) ) { T_FOREACH ( T_VARIABLE($elements) [ ] T_AS T_VARIABLE($function) ) { T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($function) ( T_VARIABLE($elements) , T_VARIABLE($form_state) , T_VARIABLE($complete_form) ) ; } } } T_VARIABLE($elements) [ ] = T_STRING ; } } T_FUNCTION(form_execute_handlers) ( T_VARIABLE($type) , & T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($return) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ T_VARIABLE($type) . ] ) ) { T_VARIABLE($handlers) = T_VARIABLE($form_state) [ T_VARIABLE($type) . ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($form) [ . T_VARIABLE($type) ] ) ) { T_VARIABLE($handlers) = T_VARIABLE($form) [ . T_VARIABLE($type) ] ; } T_ELSE { T_VARIABLE($handlers) = T_ARRAY ( ) ; } T_FOREACH ( T_VARIABLE($handlers) T_AS T_VARIABLE($function) ) { T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($batch) = & T_STRING ( ) ) ) { T_VARIABLE($batch) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($function) ) ; } T_ELSE { T_VARIABLE($function) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; } T_VARIABLE($return) = T_STRING ; } } T_RETURN T_VARIABLE($return) ; } T_FUNCTION(form_set_error) ( T_VARIABLE($name) = T_STRING , T_VARIABLE($message) = ) { T_STATIC T_VARIABLE($form) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($name) ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($name) ] ) ) { T_VARIABLE($form) [ T_VARIABLE($name) ] = T_VARIABLE($message) ; T_IF ( T_VARIABLE($message) ) { T_STRING ( T_VARIABLE($message) , ) ; } } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(form_get_errors) ( ) { T_VARIABLE($form) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form) ) ) { T_RETURN T_VARIABLE($form) ; } } T_FUNCTION(form_get_error) ( T_VARIABLE($element) ) { T_VARIABLE($form) = T_STRING ( ) ; T_VARIABLE($key) = T_VARIABLE($element) [ ] [ T_LNUMBER ] ; T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] ) ) { T_RETURN T_VARIABLE($form) [ T_VARIABLE($key) ] ; } T_VARIABLE($key) = T_STRING ( , T_VARIABLE($element) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] ) ) { T_RETURN T_VARIABLE($form) [ T_VARIABLE($key) ] ; } } T_FUNCTION(form_error) ( & T_VARIABLE($element) , T_VARIABLE($message) = ) { T_STRING ( T_STRING ( , T_VARIABLE($element) [ ] ) , T_VARIABLE($message) ) ; } T_FUNCTION(form_builder) ( T_VARIABLE($form_id) , T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STATIC T_VARIABLE($complete_form) , T_VARIABLE($cache) ; T_VARIABLE($form) [ ] = T_STRING ; T_IF ( ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) ) T_BOOLEAN_AND ( T_VARIABLE($info) = T_STRING ( T_VARIABLE($form) [ ] ) ) ) { T_VARIABLE($form) T_PLUS_EQUAL T_VARIABLE($info) ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] T_IS_EQUAL ) { T_VARIABLE($cache) = T_STRING ; T_VARIABLE($complete_form) = T_VARIABLE($form) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form_state) [ ] = T_STRING ; } } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] ) { T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($complete_form) ) ; } T_VARIABLE($form) [ ] = T_STRING ; T_VARIABLE($form) [ ] = T_STRING ; T_VARIABLE($count) = T_LNUMBER ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($form) [ ] ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($form) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($form) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND ! T_VARIABLE($form) [ ] ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] T_BOOLEAN_AND T_VARIABLE($form) [ ] ? T_STRING ( T_VARIABLE($form) [ ] , T_ARRAY ( T_VARIABLE($key) ) ) : T_ARRAY ( T_VARIABLE($key) ) ; T_VARIABLE($array_parents) = T_ISSET ( T_VARIABLE($form) [ ] ) ? T_VARIABLE($form) [ ] : T_ARRAY ( ) ; T_VARIABLE($array_parents) [ ] = T_VARIABLE($key) ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($array_parents) ; } T_IF ( ! T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($count) / T_LNUMBER ; } T_ELSE { T_UNSET ( T_VARIABLE($form) [ ] ) ; } T_VARIABLE($form) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($form) [ T_VARIABLE($key) ] , T_VARIABLE($form_state) ) ; T_VARIABLE($count) T_INC ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_FOREACH ( T_VARIABLE($form) [ ] T_AS T_VARIABLE($function) ) { T_VARIABLE($form) = T_VARIABLE($function) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($form) [ ] = T_STRING ; } } T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) { T_UNSET ( T_VARIABLE($form_state) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($cache) = T_VARIABLE($form) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cache) ) ) { T_VARIABLE($form) [ ] = T_STRING ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(_form_builder_handle_input_element) ( T_VARIABLE($form_id) , & T_VARIABLE($form) , & T_VARIABLE($form_state) , T_VARIABLE($complete_form) ) { T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($form) [ ] = T_VARIABLE($name) ; T_IF ( T_VARIABLE($form) [ ] T_IS_EQUAL ) { T_VARIABLE($form) [ ] = . T_VARIABLE($form) [ ] . ; } T_ELSEIF ( T_STRING ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form) [ ] T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($form) [ ] ) . ; } T_STRING ( T_VARIABLE($form) [ ] , T_VARIABLE($name) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form) [ ] = T_STRING ( . T_STRING ( , T_VARIABLE($form) [ ] ) ) ; } T_UNSET ( T_VARIABLE($edit) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form) [ ] [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($form) ) ) { T_VARIABLE($function) = ! T_EMPTY ( T_VARIABLE($form) [ ] ) ? T_VARIABLE($form) [ ] : . T_VARIABLE($form) [ ] . ; T_IF ( ( T_VARIABLE($form) [ ] ) T_BOOLEAN_OR ( ( ! T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_OR T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND ( T_ISSET ( T_VARIABLE($form) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] [ ] T_IS_EQUAL T_VARIABLE($form_id) ) ) ) { T_VARIABLE($edit) = T_VARIABLE($form) [ ] ; T_FOREACH ( T_VARIABLE($form) [ ] T_AS T_VARIABLE($parent) ) { T_VARIABLE($edit) = T_ISSET ( T_VARIABLE($edit) [ T_VARIABLE($parent) ] ) ? T_VARIABLE($edit) [ T_VARIABLE($parent) ] : T_STRING ; } T_IF ( ! T_VARIABLE($form) [ ] T_BOOLEAN_OR T_ISSET ( T_VARIABLE($edit) ) ) { T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($form) [ ] = T_VARIABLE($function) ( T_VARIABLE($form) , T_VARIABLE($edit) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($edit) ) ) { T_VARIABLE($form) [ ] = T_VARIABLE($edit) ; } } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form) [ ] = T_STRING ; } } T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($form) [ ] = T_VARIABLE($function) ( T_VARIABLE($form) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form) [ ] = T_ISSET ( T_VARIABLE($form) [ ] ) ? T_VARIABLE($form) [ ] : ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($button_type) = T_VARIABLE($form) [ ] ? : ; T_VARIABLE($form_state) [ ] [ T_VARIABLE($button_type) ] [ ] = T_VARIABLE($form) ; T_IF ( T_STRING ( T_VARIABLE($form) ) ) { T_VARIABLE($form_state) [ ] = T_VARIABLE($form_state) [ ] T_BOOLEAN_OR T_VARIABLE($form) [ ] ; T_VARIABLE($form_state) [ ] [ T_VARIABLE($form) [ ] ] = T_VARIABLE($form) [ ] ; T_VARIABLE($form_state) [ ] = T_VARIABLE($form) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form_state) [ ] = T_VARIABLE($form) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form_state) [ ] = T_VARIABLE($form) [ ] ; } } } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND ! T_VARIABLE($form) [ ] ) { T_FOREACH ( T_VARIABLE($form) [ ] T_AS T_VARIABLE($process) ) { T_IF ( T_STRING ( T_VARIABLE($process) ) ) { T_VARIABLE($form) = T_VARIABLE($process) ( T_VARIABLE($form) , T_ISSET ( T_VARIABLE($edit) ) ? T_VARIABLE($edit) : T_STRING , T_VARIABLE($form_state) , T_VARIABLE($complete_form) ) ; } } T_VARIABLE($form) [ ] = T_STRING ; } T_STRING ( T_VARIABLE($form) , T_VARIABLE($form) [ ] , T_VARIABLE($form_state) ) ; } T_FUNCTION(_form_button_was_clicked) ( T_VARIABLE($form) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] [ T_VARIABLE($form) [ ] ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] [ T_VARIABLE($form) [ ] ] T_IS_EQUAL T_VARIABLE($form) [ ] ) { T_RETURN T_STRING ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] T_IS_NOT_IDENTICAL ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(_form_builder_ie_cleanup) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] T_IS_EQUAL ) { T_IF ( T_EMPTY ( T_VARIABLE($form_state) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($button) = T_VARIABLE($form_state) [ ] [ ] [ T_LNUMBER ] ; T_VARIABLE($form_state) [ ] = T_STRING ; T_VARIABLE($form_state) [ ] = T_EMPTY ( T_VARIABLE($button) [ ] ) ? T_STRING : T_VARIABLE($button) [ ] ; T_VARIABLE($form_state) [ ] = T_EMPTY ( T_VARIABLE($button) [ ] ) ? T_STRING : T_VARIABLE($button) [ ] ; T_VARIABLE($form_state) [ ] [ T_VARIABLE($button) [ ] ] = T_VARIABLE($button) [ ] ; T_VARIABLE($form_state) [ ] = T_VARIABLE($button) ; } } } T_FUNCTION(form_type_image_button_value) ( T_VARIABLE($form) , T_VARIABLE($edit) = T_STRING ) { T_IF ( T_VARIABLE($edit) T_IS_NOT_IDENTICAL T_STRING ) { T_IF ( ! T_EMPTY ( T_VARIABLE($edit) ) ) { T_RETURN T_VARIABLE($form) [ ] ; } T_ELSE { T_VARIABLE($post) = T_VARIABLE($form) [ ] ; T_FOREACH ( T_STRING ( , T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($element_name) ) { T_IF ( T_STRING ( T_VARIABLE($element_name) , - T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($element_name) = T_STRING ( T_VARIABLE($element_name) , T_LNUMBER , - T_LNUMBER ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($post) [ T_VARIABLE($element_name) ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($post) [ T_VARIABLE($element_name) . ] ) ) { T_RETURN T_VARIABLE($form) [ ] ; } T_RETURN T_STRING ; } T_VARIABLE($post) = T_VARIABLE($post) [ T_VARIABLE($element_name) ] ; } T_RETURN T_VARIABLE($form) [ ] ; } } } T_FUNCTION(form_type_checkbox_value) ( T_VARIABLE($form) , T_VARIABLE($edit) = T_STRING ) { T_IF ( T_VARIABLE($edit) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN ! T_EMPTY ( T_VARIABLE($edit) ) ? T_VARIABLE($form) [ ] : T_LNUMBER ; } } T_FUNCTION(form_type_checkboxes_value) ( T_VARIABLE($form) , T_VARIABLE($edit) = T_STRING ) { T_IF ( T_VARIABLE($edit) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($value) = T_ARRAY ( ) ; T_VARIABLE($form) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_FOREACH ( T_VARIABLE($form) [ ] T_AS T_VARIABLE($key) ) { T_VARIABLE($value) [ T_VARIABLE($key) ] = T_LNUMBER ; } T_RETURN T_VARIABLE($value) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($edit) ) ) { T_RETURN T_ARRAY ( ) ; } } T_FUNCTION(form_type_password_confirm_value) ( T_VARIABLE($form) , T_VARIABLE($edit) = T_STRING ) { T_IF ( T_VARIABLE($edit) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($form) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_RETURN T_VARIABLE($form) [ ] + T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; } } T_FUNCTION(form_type_select_value) ( T_VARIABLE($form) , T_VARIABLE($edit) = T_STRING ) { T_IF ( T_VARIABLE($edit) T_IS_NOT_IDENTICAL T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] ) { T_RETURN ( T_STRING ( T_VARIABLE($edit) ) ) ? T_STRING ( T_VARIABLE($edit) ) : T_ARRAY ( ) ; } T_ELSE { T_RETURN T_VARIABLE($edit) ; } } } T_FUNCTION(form_type_textfield_value) ( T_VARIABLE($form) , T_VARIABLE($edit) = T_STRING ) { T_IF ( T_VARIABLE($edit) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($edit) ) ; } } T_FUNCTION(form_type_token_value) ( T_VARIABLE($form) , T_VARIABLE($edit) = T_STRING ) { T_IF ( T_VARIABLE($edit) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_STRING_CAST T_VARIABLE($edit) ; } } T_FUNCTION(form_set_value) ( T_VARIABLE($form) , T_VARIABLE($value) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] , T_VARIABLE($form) , T_VARIABLE($form) [ ] , T_VARIABLE($value) ) ; } T_FUNCTION(_form_set_value) ( & T_VARIABLE($form_values) , T_VARIABLE($form) , T_VARIABLE($parents) , T_VARIABLE($value) ) { T_VARIABLE($parent) = T_STRING ( T_VARIABLE($parents) ) ; T_IF ( T_EMPTY ( T_VARIABLE($parents) ) ) { T_VARIABLE($form_values) [ T_VARIABLE($parent) ] = T_VARIABLE($value) ; } T_ELSE { T_IF ( ! T_ISSET ( T_VARIABLE($form_values) [ T_VARIABLE($parent) ] ) ) { T_VARIABLE($form_values) [ T_VARIABLE($parent) ] = T_ARRAY ( ) ; } T_STRING ( T_VARIABLE($form_values) [ T_VARIABLE($parent) ] , T_VARIABLE($form) , T_VARIABLE($parents) , T_VARIABLE($value) ) ; } } T_FUNCTION(_element_info) ( T_VARIABLE($type) , T_VARIABLE($refresh) = T_STRING ) { T_STATIC T_VARIABLE($cache) ; T_VARIABLE($basic_defaults) = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($cache) ) T_BOOLEAN_OR T_VARIABLE($refresh) ) { T_VARIABLE($cache) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_VARIABLE($elements) = T_STRING ( T_VARIABLE($module) , ) ; T_IF ( T_ISSET ( T_VARIABLE($elements) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($elements) ) ) { T_VARIABLE($cache) = T_STRING ( T_VARIABLE($cache) , T_VARIABLE($elements) ) ; } } T_IF ( T_STRING ( T_VARIABLE($cache) ) ) { T_FOREACH ( T_VARIABLE($cache) T_AS T_VARIABLE($element_type) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_VARIABLE($cache) [ T_VARIABLE($element_type) ] = T_STRING ( T_VARIABLE($basic_defaults) , T_VARIABLE($info) ) ; } } } T_RETURN T_VARIABLE($cache) [ T_VARIABLE($type) ] ; } T_FUNCTION(form_options_flatten) ( T_VARIABLE($array) , T_VARIABLE($reset) = T_STRING ) { T_STATIC T_VARIABLE($return) ; T_IF ( T_VARIABLE($reset) ) { T_VARIABLE($return) = T_ARRAY ( ) ; } T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_STRING ( T_VARIABLE($value) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_STRING ( T_VARIABLE($value) , T_STRING ) ; } T_ELSE { T_VARIABLE($return) [ T_VARIABLE($key) ] = T_LNUMBER ; } } T_RETURN T_VARIABLE($return) ; } T_FUNCTION(theme_select) ( T_VARIABLE($element) ) { T_VARIABLE($select) = ; T_VARIABLE($size) = T_VARIABLE($element) [ ] ? . T_VARIABLE($element) [ ] . : ; T_STRING ( T_VARIABLE($element) , T_ARRAY ( ) ) ; T_VARIABLE($multiple) = T_VARIABLE($element) [ ] ; T_RETURN T_STRING ( , T_VARIABLE($element) , . T_VARIABLE($element) [ ] . . ( T_VARIABLE($multiple) ? : ) . . ( T_VARIABLE($multiple) ? : ) . T_STRING ( T_VARIABLE($element) [ ] ) . . T_VARIABLE($element) [ ] . . T_VARIABLE($size) . . T_STRING ( T_VARIABLE($element) ) . ) ; } T_FUNCTION(form_select_options) ( T_VARIABLE($element) , T_VARIABLE($choices) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($choices) ) ) { T_VARIABLE($choices) = T_VARIABLE($element) [ ] ; } T_VARIABLE($value_valid) = T_ISSET ( T_VARIABLE($element) [ ] ) T_BOOLEAN_OR T_STRING ( , T_VARIABLE($element) ) ; T_VARIABLE($value_is_array) = T_STRING ( T_VARIABLE($element) [ ] ) ; T_VARIABLE($options) = ; T_FOREACH ( T_VARIABLE($choices) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_IF ( T_STRING ( T_VARIABLE($choice) ) ) { T_VARIABLE($options) T_CONCAT_EQUAL . T_VARIABLE($key) . ; T_VARIABLE($options) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($element) , T_VARIABLE($choice) ) ; T_VARIABLE($options) T_CONCAT_EQUAL ; } T_ELSEIF ( T_STRING ( T_VARIABLE($choice) ) ) { T_VARIABLE($options) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($element) , T_VARIABLE($choice) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($key) = T_STRING_CAST T_VARIABLE($key) ; T_IF ( T_VARIABLE($value_valid) T_BOOLEAN_AND ( ! T_VARIABLE($value_is_array) T_BOOLEAN_AND T_STRING_CAST T_VARIABLE($element) [ ] T_IS_IDENTICAL T_VARIABLE($key) T_BOOLEAN_OR ( T_VARIABLE($value_is_array) T_BOOLEAN_AND T_STRING ( T_VARIABLE($key) , T_VARIABLE($element) [ ] ) ) ) ) { T_VARIABLE($selected) = ; } T_ELSE { T_VARIABLE($selected) = ; } T_VARIABLE($options) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($key) ) . . T_VARIABLE($selected) . . T_STRING ( T_VARIABLE($choice) ) . ; } } T_RETURN T_VARIABLE($options) ; } T_FUNCTION(form_get_options) ( T_VARIABLE($element) , T_VARIABLE($key) ) { T_VARIABLE($keys) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($element) [ ] T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_IF ( T_STRING ( T_VARIABLE($choice) ) ) { T_RETURN T_STRING ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($choice) ) ) { T_IF ( T_ISSET ( T_VARIABLE($choice) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] ) ) { T_VARIABLE($keys) [ ] = T_VARIABLE($index) ; } } T_ELSE T_IF ( T_VARIABLE($index) T_IS_EQUAL T_VARIABLE($key) ) { T_VARIABLE($keys) [ ] = T_VARIABLE($index) ; } } T_RETURN T_VARIABLE($keys) ; } T_FUNCTION(theme_fieldset) ( T_VARIABLE($element) ) { T_IF ( T_VARIABLE($element) [ ] ) { T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($element) [ ] [ ] ) ) { T_VARIABLE($element) [ ] [ ] = ; } T_VARIABLE($element) [ ] [ ] T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($element) [ ] ) { T_VARIABLE($element) [ ] [ ] T_CONCAT_EQUAL ; } } T_RETURN . T_STRING ( T_VARIABLE($element) [ ] ) . . ( T_VARIABLE($element) [ ] ? . T_VARIABLE($element) [ ] . : ) . ( T_ISSET ( T_VARIABLE($element) [ ] ) T_BOOLEAN_AND T_VARIABLE($element) [ ] ? . T_VARIABLE($element) [ ] . : ) . ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ? T_VARIABLE($element) [ ] : ) . T_VARIABLE($element) [ ] . ; } T_FUNCTION(theme_radio) ( T_VARIABLE($element) ) { T_STRING ( T_VARIABLE($element) , T_ARRAY ( ) ) ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] . ; T_VARIABLE($output) T_CONCAT_EQUAL ( T_STRING ( T_VARIABLE($element) [ ] ) T_IS_EQUAL T_VARIABLE($element) [ ] ) ? : ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($element) [ ] ) . ; T_IF ( ! T_STRING ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($output) = . T_VARIABLE($output) . . T_VARIABLE($element) [ ] . ; } T_UNSET ( T_VARIABLE($element) [ ] ) ; T_RETURN T_STRING ( , T_VARIABLE($element) , T_VARIABLE($output) ) ; } T_FUNCTION(theme_radios) ( T_VARIABLE($element) ) { T_VARIABLE($class) = ; T_IF ( T_ISSET ( T_VARIABLE($element) [ ] [ ] ) ) { T_VARIABLE($class) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] [ ] ; } T_VARIABLE($element) [ ] = . T_VARIABLE($class) . . ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ? T_VARIABLE($element) [ ] : ) . ; T_IF ( T_VARIABLE($element) [ ] T_BOOLEAN_OR T_VARIABLE($element) [ ] ) { T_UNSET ( T_VARIABLE($element) [ ] ) ; T_RETURN T_STRING ( , T_VARIABLE($element) , T_VARIABLE($element) [ ] ) ; } T_ELSE { T_RETURN T_VARIABLE($element) [ ] ; } } T_FUNCTION(theme_password_confirm) ( T_VARIABLE($element) ) { T_RETURN T_STRING ( , T_VARIABLE($element) , T_VARIABLE($element) [ ] ) ; } T_FUNCTION(expand_password_confirm) ( T_VARIABLE($element) ) { T_VARIABLE($element) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($element) [ ] ) ? T_STRING : T_VARIABLE($element) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($element) [ ] , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($element) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($element) [ ] ) ? T_STRING : T_VARIABLE($element) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($element) [ ] , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($element) [ ] = T_ARRAY ( ) ; T_VARIABLE($element) [ ] = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($element) [ ] [ ] = T_VARIABLE($element) [ ] [ ] = T_VARIABLE($element) [ ] ; } T_RETURN T_VARIABLE($element) ; } T_FUNCTION(password_confirm_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($pass1) = T_STRING ( T_VARIABLE($form) [ ] [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($pass1) ) ) { T_VARIABLE($pass2) = T_STRING ( T_VARIABLE($form) [ ] [ ] ) ; T_IF ( T_VARIABLE($pass1) T_IS_NOT_EQUAL T_VARIABLE($pass2) ) { T_STRING ( T_VARIABLE($form) , T_STRING ( ) ) ; } } T_ELSEIF ( T_VARIABLE($form) [ ] T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($form) [ ] ) ) { T_STRING ( T_VARIABLE($form) , T_STRING ( ) ) ; } T_STRING ( T_VARIABLE($form) [ ] , T_STRING , T_VARIABLE($form_state) ) ; T_STRING ( T_VARIABLE($form) [ ] , T_STRING , T_VARIABLE($form_state) ) ; T_STRING ( T_VARIABLE($form) , T_VARIABLE($pass1) , T_VARIABLE($form_state) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(theme_date) ( T_VARIABLE($element) ) { T_RETURN T_STRING ( , T_VARIABLE($element) , . T_VARIABLE($element) [ ] . ) ; } T_FUNCTION(expand_date) ( T_VARIABLE($element) ) { T_IF ( T_EMPTY ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($element) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , , ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , , ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , , ) ) ; } T_VARIABLE($element) [ ] = T_STRING ; T_VARIABLE($format) = T_STRING ( , ) ; T_VARIABLE($sort) = T_ARRAY ( ) ; T_VARIABLE($sort) [ ] = T_STRING ( T_STRING ( T_VARIABLE($format) , ) , T_STRING ( T_VARIABLE($format) , ) ) ; T_VARIABLE($sort) [ ] = T_STRING ( T_STRING ( T_VARIABLE($format) , ) , T_STRING ( T_VARIABLE($format) , ) ) ; T_VARIABLE($sort) [ ] = T_STRING ( T_VARIABLE($format) , ) ; T_STRING ( T_VARIABLE($sort) ) ; T_VARIABLE($order) = T_STRING ( T_VARIABLE($sort) ) ; T_FOREACH ( T_VARIABLE($order) T_AS T_VARIABLE($type) ) { T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_VARIABLE($options) = T_STRING ( T_STRING ( T_LNUMBER , T_LNUMBER ) ) ; T_BREAK ; T_CASE : T_VARIABLE($options) = T_STRING ( T_STRING ( T_LNUMBER , T_LNUMBER ) , ) ; T_BREAK ; T_CASE : T_VARIABLE($options) = T_STRING ( T_STRING ( T_LNUMBER , T_LNUMBER ) ) ; T_BREAK ; } T_VARIABLE($parents) = T_VARIABLE($element) [ ] ; T_VARIABLE($parents) [ ] = T_VARIABLE($type) ; T_VARIABLE($element) [ T_VARIABLE($type) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($element) [ ] [ T_VARIABLE($type) ] , T_DOUBLE_ARROW T_VARIABLE($element) [ ] , T_DOUBLE_ARROW T_VARIABLE($options) , ) ; } T_RETURN T_VARIABLE($element) ; } T_FUNCTION(date_validate) ( T_VARIABLE($form) ) { T_IF ( ! T_STRING ( T_VARIABLE($form) [ ] [ ] , T_VARIABLE($form) [ ] [ ] , T_VARIABLE($form) [ ] [ ] ) ) { T_STRING ( T_VARIABLE($form) , T_STRING ( ) ) ; } } T_FUNCTION(map_month) ( T_VARIABLE($month) ) { T_RETURN T_STRING ( T_STRING ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_VARIABLE($month) , T_LNUMBER , T_LNUMBER ) , , , T_LNUMBER ) ; } T_FUNCTION(weight_value) ( & T_VARIABLE($form) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form) [ ] = T_VARIABLE($form) [ ] ; } T_ELSE { T_VARIABLE($form) [ ] = T_LNUMBER ; } } T_FUNCTION(expand_radios) ( T_VARIABLE($element) ) { T_IF ( T_STRING ( T_VARIABLE($element) [ ] ) > T_LNUMBER ) { T_FOREACH ( T_VARIABLE($element) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_IF ( ! T_ISSET ( T_VARIABLE($element) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($parents_for_id) = T_STRING ( T_VARIABLE($element) [ ] , T_ARRAY ( T_VARIABLE($key) ) ) ; T_VARIABLE($element) [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($choice) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($key) ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($element) [ ] ) ? T_VARIABLE($element) [ ] : T_STRING , T_DOUBLE_ARROW T_VARIABLE($element) [ ] , T_DOUBLE_ARROW T_VARIABLE($element) [ ] , T_DOUBLE_ARROW T_STRING ( . T_STRING ( , T_VARIABLE($parents_for_id) ) ) , ) ; } } } T_RETURN T_VARIABLE($element) ; } T_FUNCTION(form_expand_ahah) ( T_VARIABLE($element) ) { T_STATIC T_VARIABLE($js_added) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($element) [ ] [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($element) [ ] [ ] ) ) { T_SWITCH ( T_VARIABLE($element) [ ] ) { T_CASE : T_CASE : T_CASE : T_VARIABLE($element) [ ] [ ] = ; T_VARIABLE($element) [ ] [ ] = T_STRING ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_VARIABLE($element) [ ] [ ] = ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_VARIABLE($element) [ ] [ ] = ; T_BREAK ; } } T_IF ( T_ISSET ( T_VARIABLE($element) [ ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($element) [ ] [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($js_added) [ T_VARIABLE($element) [ ] ] ) ) { T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($ahah_binding) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($element) [ ] [ ] ) , T_DOUBLE_ARROW T_VARIABLE($element) [ ] [ ] , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($element) [ ] [ ] ) ? T_STRING : T_VARIABLE($element) [ ] [ ] , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($element) [ ] [ ] ) ? T_STRING : T_VARIABLE($element) [ ] [ ] , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($element) [ ] [ ] ) ? . T_VARIABLE($element) [ ] : T_VARIABLE($element) [ ] [ ] , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($element) [ ] [ ] ) ? : T_VARIABLE($element) [ ] [ ] , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($element) [ ] [ ] ) ? : T_VARIABLE($element) [ ] [ ] , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($element) [ ] [ ] ) ? T_ARRAY ( T_DOUBLE_ARROW ) : T_VARIABLE($element) [ ] [ ] , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($element) [ ] ) ? T_ARRAY ( T_VARIABLE($element) [ ] T_DOUBLE_ARROW T_VARIABLE($element) [ ] ) : T_STRING , ) ; T_IF ( T_STRING ( T_VARIABLE($ahah_binding) [ ] ) ) { T_VARIABLE($ahah_binding) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($ahah_binding) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($ahah_binding) [ ] [ ] ) ) { T_VARIABLE($ahah_binding) [ ] [ ] = T_STRING ( T_VARIABLE($ahah_binding) [ ] [ ] ) ; } T_IF ( T_VARIABLE($ahah_binding) [ ] [ ] T_IS_EQUAL ) { T_STRING ( ) ; } T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($element) [ ] T_DOUBLE_ARROW T_VARIABLE($ahah_binding) ) ) , ) ; T_VARIABLE($js_added) [ T_VARIABLE($element) [ ] ] = T_STRING ; T_VARIABLE($element) [ ] = T_STRING ; } T_RETURN T_VARIABLE($element) ; } T_FUNCTION(theme_item) ( T_VARIABLE($element) ) { T_RETURN T_STRING ( , T_VARIABLE($element) , T_VARIABLE($element) [ ] . ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ? T_VARIABLE($element) [ ] : ) ) ; } T_FUNCTION(theme_checkbox) ( T_VARIABLE($element) ) { T_STRING ( T_VARIABLE($element) , T_ARRAY ( ) ) ; T_VARIABLE($checkbox) = ; T_VARIABLE($checkbox) T_CONCAT_EQUAL ; T_VARIABLE($checkbox) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] . ; T_VARIABLE($checkbox) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] . ; T_VARIABLE($checkbox) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] . ; T_VARIABLE($checkbox) T_CONCAT_EQUAL T_VARIABLE($element) [ ] ? : ; T_VARIABLE($checkbox) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($element) [ ] ) . ; T_IF ( ! T_STRING ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($checkbox) = . T_VARIABLE($checkbox) . . T_VARIABLE($element) [ ] . ; } T_UNSET ( T_VARIABLE($element) [ ] ) ; T_RETURN T_STRING ( , T_VARIABLE($element) , T_VARIABLE($checkbox) ) ; } T_FUNCTION(theme_checkboxes) ( T_VARIABLE($element) ) { T_VARIABLE($class) = ; T_IF ( T_ISSET ( T_VARIABLE($element) [ ] [ ] ) ) { T_VARIABLE($class) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] [ ] ; } T_VARIABLE($element) [ ] = . T_VARIABLE($class) . . ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ? T_VARIABLE($element) [ ] : ) . ; T_IF ( T_VARIABLE($element) [ ] T_BOOLEAN_OR T_VARIABLE($element) [ ] ) { T_UNSET ( T_VARIABLE($element) [ ] ) ; T_RETURN T_STRING ( , T_VARIABLE($element) , T_VARIABLE($element) [ ] ) ; } T_ELSE { T_RETURN T_VARIABLE($element) [ ] ; } } T_FUNCTION(expand_checkboxes) ( T_VARIABLE($element) ) { T_VARIABLE($value) = T_STRING ( T_VARIABLE($element) [ ] ) ? T_VARIABLE($element) [ ] : T_ARRAY ( ) ; T_VARIABLE($element) [ ] = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($element) [ ] ) > T_LNUMBER ) { T_IF ( ! T_ISSET ( T_VARIABLE($element) [ ] ) T_BOOLEAN_OR T_VARIABLE($element) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($element) [ ] = T_ARRAY ( ) ; } T_FOREACH ( T_VARIABLE($element) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_IF ( ! T_ISSET ( T_VARIABLE($element) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($element) [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($choice) , T_DOUBLE_ARROW T_VARIABLE($key) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($value) [ T_VARIABLE($key) ] ) , T_DOUBLE_ARROW T_VARIABLE($element) [ ] ) ; } } } T_RETURN T_VARIABLE($element) ; } T_FUNCTION(theme_submit) ( T_VARIABLE($element) ) { T_RETURN T_STRING ( , T_VARIABLE($element) ) ; } T_FUNCTION(theme_button) ( T_VARIABLE($element) ) { T_IF ( T_ISSET ( T_VARIABLE($element) [ ] [ ] ) ) { T_VARIABLE($element) [ ] [ ] = . T_VARIABLE($element) [ ] . . T_VARIABLE($element) [ ] [ ] ; } T_ELSE { T_VARIABLE($element) [ ] [ ] = . T_VARIABLE($element) [ ] ; } T_RETURN . ( T_EMPTY ( T_VARIABLE($element) [ ] ) ? : . T_VARIABLE($element) [ ] . ) . . T_VARIABLE($element) [ ] . . T_STRING ( T_VARIABLE($element) [ ] ) . . T_STRING ( T_VARIABLE($element) [ ] ) . ; } T_FUNCTION(theme_image_button) ( T_VARIABLE($element) ) { T_IF ( T_ISSET ( T_VARIABLE($element) [ ] [ ] ) ) { T_VARIABLE($element) [ ] [ ] = . T_VARIABLE($element) [ ] . . T_VARIABLE($element) [ ] [ ] ; } T_ELSE { T_VARIABLE($element) [ ] [ ] = . T_VARIABLE($element) [ ] ; } T_RETURN . T_VARIABLE($element) [ ] . . ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ? ( . T_STRING ( T_VARIABLE($element) [ ] ) . ) : ) . . T_VARIABLE($element) [ ] . . T_STRING ( T_VARIABLE($element) [ ] ) . . T_STRING ( ) . T_VARIABLE($element) [ ] . . ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ? . T_STRING ( T_VARIABLE($element) [ ] ) . . T_STRING ( T_VARIABLE($element) [ ] ) . : ) . ; } T_FUNCTION(theme_hidden) ( T_VARIABLE($element) ) { T_RETURN . T_VARIABLE($element) [ ] . . T_VARIABLE($element) [ ] . . T_STRING ( T_VARIABLE($element) [ ] ) . . T_STRING ( T_VARIABLE($element) [ ] ) . ; } T_FUNCTION(theme_token) ( T_VARIABLE($element) ) { T_RETURN T_STRING ( , T_VARIABLE($element) ) ; } T_FUNCTION(theme_textfield) ( T_VARIABLE($element) ) { T_VARIABLE($size) = T_EMPTY ( T_VARIABLE($element) [ ] ) ? : . T_VARIABLE($element) [ ] . ; T_VARIABLE($maxlength) = T_EMPTY ( T_VARIABLE($element) [ ] ) ? : . T_VARIABLE($element) [ ] . ; T_VARIABLE($class) = T_ARRAY ( ) ; T_VARIABLE($extra) = ; T_VARIABLE($output) = ; T_IF ( T_VARIABLE($element) [ ] ) { T_STRING ( ) ; T_VARIABLE($class) [ ] = ; T_VARIABLE($extra) = . T_VARIABLE($element) [ ] . . T_STRING ( T_STRING ( T_VARIABLE($element) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ) . ; } T_STRING ( T_VARIABLE($element) , T_VARIABLE($class) ) ; T_IF ( T_ISSET ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] . ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($maxlength) . . T_VARIABLE($element) [ ] . . T_VARIABLE($element) [ ] . . T_VARIABLE($size) . . T_STRING ( T_VARIABLE($element) [ ] ) . . T_STRING ( T_VARIABLE($element) [ ] ) . ; T_IF ( T_ISSET ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] . ; } T_RETURN T_STRING ( , T_VARIABLE($element) , T_VARIABLE($output) ) . T_VARIABLE($extra) ; } T_FUNCTION(theme_form) ( T_VARIABLE($element) ) { T_VARIABLE($action) = T_VARIABLE($element) [ ] ? . T_STRING ( T_VARIABLE($element) [ ] ) . : ; T_RETURN . T_VARIABLE($action) . . T_VARIABLE($element) [ ] . . T_VARIABLE($element) [ ] . . T_STRING ( T_VARIABLE($element) [ ] ) . . T_VARIABLE($element) [ ] . ; } T_FUNCTION(theme_textarea) ( T_VARIABLE($element) ) { T_VARIABLE($class) = T_ARRAY ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ) { T_STRING ( ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($element) [ ] T_DOUBLE_ARROW T_VARIABLE($element) [ ] ) ) , ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($element) [ ] T_DOUBLE_ARROW T_VARIABLE($element) [ ] ) ) , ) ; T_VARIABLE($class) [ ] = ; } T_IF ( T_VARIABLE($element) [ ] T_IS_NOT_IDENTICAL T_STRING ) { T_STRING ( ) ; T_VARIABLE($class) [ ] = ; } T_STRING ( T_VARIABLE($element) , T_VARIABLE($class) ) ; T_RETURN T_STRING ( , T_VARIABLE($element) , . T_VARIABLE($element) [ ] . . T_VARIABLE($element) [ ] . . T_VARIABLE($element) [ ] . . T_VARIABLE($element) [ ] . . T_STRING ( T_VARIABLE($element) [ ] ) . . T_STRING ( T_VARIABLE($element) [ ] ) . ) ; } T_FUNCTION(theme_markup) ( T_VARIABLE($element) ) { T_RETURN ( T_ISSET ( T_VARIABLE($element) [ ] ) ? T_VARIABLE($element) [ ] : ) . ( T_ISSET ( T_VARIABLE($element) [ ] ) ? T_VARIABLE($element) [ ] : ) ; } T_FUNCTION(theme_password) ( T_VARIABLE($element) ) { T_VARIABLE($size) = T_VARIABLE($element) [ ] ? . T_VARIABLE($element) [ ] . : ; T_VARIABLE($maxlength) = T_VARIABLE($element) [ ] ? . T_VARIABLE($element) [ ] . : ; T_STRING ( T_VARIABLE($element) , T_ARRAY ( ) ) ; T_VARIABLE($output) = . T_VARIABLE($element) [ ] . . T_VARIABLE($element) [ ] . . T_VARIABLE($maxlength) . T_VARIABLE($size) . T_STRING ( T_VARIABLE($element) [ ] ) . ; T_RETURN T_STRING ( , T_VARIABLE($element) , T_VARIABLE($output) ) ; } T_FUNCTION(process_weight) ( T_VARIABLE($element) ) { T_FOR ( T_VARIABLE($n) = ( - T_LNUMBER * T_VARIABLE($element) [ ] ) ; T_VARIABLE($n) T_IS_SMALLER_OR_EQUAL T_VARIABLE($element) [ ] ; T_VARIABLE($n) T_INC ) { T_VARIABLE($weights) [ T_VARIABLE($n) ] = T_VARIABLE($n) ; } T_VARIABLE($element) [ ] = T_VARIABLE($weights) ; T_VARIABLE($element) [ ] = ; T_VARIABLE($element) [ ] = T_STRING ; T_VARIABLE($element) T_PLUS_EQUAL T_STRING ( ) ; T_RETURN T_VARIABLE($element) ; } T_FUNCTION(theme_file) ( T_VARIABLE($element) ) { T_STRING ( T_VARIABLE($element) , T_ARRAY ( ) ) ; T_RETURN T_STRING ( , T_VARIABLE($element) , . T_VARIABLE($element) [ ] . . ( T_VARIABLE($element) [ ] ? . T_STRING ( T_VARIABLE($element) [ ] ) : ) . . T_VARIABLE($element) [ ] . . T_VARIABLE($element) [ ] . ) ; } T_FUNCTION(theme_form_element) ( T_VARIABLE($element) , T_VARIABLE($value) ) { T_VARIABLE($t) = T_STRING ( ) ; T_VARIABLE($output) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($required) = ! T_EMPTY ( T_VARIABLE($element) [ ] ) ? . T_VARIABLE($t) ( ) . : ; T_IF ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($title) = T_VARIABLE($element) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] . . T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($title) ) , T_DOUBLE_ARROW T_VARIABLE($required) ) ) . ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($title) ) , T_DOUBLE_ARROW T_VARIABLE($required) ) ) . ; } } T_VARIABLE($output) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_EMPTY ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($element) [ ] . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_form_set_class) ( & T_VARIABLE($element) , T_VARIABLE($class) = T_ARRAY ( ) ) { T_IF ( T_VARIABLE($element) [ ] ) { T_VARIABLE($class) [ ] = ; } T_IF ( T_STRING ( T_VARIABLE($element) ) ) { T_VARIABLE($class) [ ] = ; } T_IF ( T_ISSET ( T_VARIABLE($element) [ ] [ ] ) ) { T_VARIABLE($class) [ ] = T_VARIABLE($element) [ ] [ ] ; } T_VARIABLE($element) [ ] [ ] = T_STRING ( , T_VARIABLE($class) ) ; } T_FUNCTION(form_clean_id) ( T_VARIABLE($id) = T_STRING , T_VARIABLE($flush) = T_STRING ) { T_STATIC T_VARIABLE($seen_ids) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($flush) ) { T_VARIABLE($seen_ids) = T_ARRAY ( ) ; T_RETURN ; } T_VARIABLE($id) = T_STRING ( T_ARRAY ( , , ) , , T_VARIABLE($id) ) ; T_IF ( T_ISSET ( T_VARIABLE($seen_ids) [ T_VARIABLE($id) ] ) ) { T_VARIABLE($id) = T_VARIABLE($id) . . T_VARIABLE($seen_ids) [ T_VARIABLE($id) ] T_INC ; } T_ELSE { T_VARIABLE($seen_ids) [ T_VARIABLE($id) ] = T_LNUMBER ; } T_RETURN T_VARIABLE($id) ; } T_FUNCTION(batch_set) ( T_VARIABLE($batch_definition) ) { T_IF ( T_VARIABLE($batch_definition) ) { T_VARIABLE($batch) = & T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($batch) ) ) { T_VARIABLE($batch) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } T_VARIABLE($init) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($t) = T_STRING ( ) ; T_VARIABLE($defaults) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($t) ( ) , ) ; T_VARIABLE($batch_set) = T_VARIABLE($init) + T_VARIABLE($batch_definition) + T_VARIABLE($defaults) ; T_VARIABLE($batch_set) [ ] T_CONCAT_EQUAL ; T_VARIABLE($batch_set) [ ] = T_STRING ( T_VARIABLE($batch_set) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($batch) [ ] ) ) { T_VARIABLE($slice1) = T_STRING ( T_VARIABLE($batch) [ ] , T_LNUMBER , T_VARIABLE($batch) [ ] + T_LNUMBER ) ; T_VARIABLE($slice2) = T_STRING ( T_VARIABLE($batch) [ ] , T_VARIABLE($batch) [ ] + T_LNUMBER ) ; T_VARIABLE($batch) [ ] = T_STRING ( T_VARIABLE($slice1) , T_ARRAY ( T_VARIABLE($batch_set) ) , T_VARIABLE($slice2) ) ; } T_ELSE { T_VARIABLE($batch) [ ] [ ] = T_VARIABLE($batch_set) ; } } } T_FUNCTION(batch_process) ( T_VARIABLE($redirect) = T_STRING , T_VARIABLE($url) = T_STRING ) { T_VARIABLE($batch) = & T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($batch) ) ) { T_VARIABLE($url) = T_ISSET ( T_VARIABLE($url) ) ? T_VARIABLE($url) : ; T_VARIABLE($process_info) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($url) ) ? T_VARIABLE($url) : , T_DOUBLE_ARROW T_VARIABLE($_GET) [ ] , T_DOUBLE_ARROW T_VARIABLE($redirect) , ) ; T_VARIABLE($batch) T_PLUS_EQUAL T_VARIABLE($process_info) ; T_IF ( T_VARIABLE($batch) [ ] ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($batch) [ ] = T_VARIABLE($_REQUEST) [ ] ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] [ ] ) ) { T_VARIABLE($batch) [ ] = T_VARIABLE($_REQUEST) [ ] [ ] ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] [ ] ) ; } T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($batch) [ ] = T_STRING ( , ) ; T_VARIABLE($t) = T_STRING ( ) ; T_VARIABLE($batch) [ ] = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($url) , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($batch) [ ] , T_DOUBLE_ARROW ) ) ) ) ) ; T_STRING ( , T_STRING ( T_VARIABLE($batch) [ ] ) , T_STRING ( T_VARIABLE($batch) ) , T_VARIABLE($batch) [ ] ) ; T_STRING ( T_VARIABLE($batch) [ ] , . T_VARIABLE($batch) [ ] ) ; } T_ELSE { T_REQUIRE_ONCE ; T_STRING ( ) ; } } } T_FUNCTION(& batch_get) ( ) { T_STATIC T_VARIABLE($batch) = T_ARRAY ( ) ; T_RETURN T_VARIABLE($batch) ; }",13,1
"T_OPEN_TAG T_FUNCTION(image_gd_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_FUNCTION(image_gd_settings) ( ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_RETURN T_VARIABLE($form) ; } T_ELSE { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ) ; T_RETURN T_STRING ; } } T_FUNCTION(image_gd_settings_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($value) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( ! T_STRING ( T_VARIABLE($value) ) T_BOOLEAN_OR T_VARIABLE($value) < T_LNUMBER T_BOOLEAN_OR T_VARIABLE($value) > T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(image_gd_check_settings) ( ) { T_IF ( T_VARIABLE($check) = T_STRING ( ) ) { T_IF ( T_STRING ( , T_VARIABLE($check) ) ) { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_FUNCTION(image_gd_resize) ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($width) , T_VARIABLE($height) ) { T_IF ( ! T_STRING ( T_VARIABLE($source) ) ) { T_RETURN T_STRING ; } T_VARIABLE($info) = T_STRING ( T_VARIABLE($source) ) ; T_IF ( ! T_VARIABLE($info) ) { T_RETURN T_STRING ; } T_VARIABLE($im) = T_STRING ( T_VARIABLE($source) , T_VARIABLE($info) [ ] ) ; T_IF ( ! T_VARIABLE($im) ) { T_RETURN T_STRING ; } T_VARIABLE($res) = T_STRING ( T_VARIABLE($width) , T_VARIABLE($height) ) ; T_IF ( T_VARIABLE($info) [ ] T_IS_EQUAL ) { T_VARIABLE($transparency) = T_STRING ( T_VARIABLE($res) , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_STRING ( T_VARIABLE($res) , T_STRING ) ; T_STRING ( T_VARIABLE($res) , T_LNUMBER , T_LNUMBER , T_VARIABLE($width) , T_VARIABLE($height) , T_VARIABLE($transparency) ) ; T_STRING ( T_VARIABLE($res) , T_STRING ) ; T_STRING ( T_VARIABLE($res) , T_STRING ) ; } T_ELSEIF ( T_VARIABLE($info) [ ] T_IS_EQUAL ) { T_VARIABLE($transparency_index) = T_STRING ( T_VARIABLE($im) ) ; T_IF ( T_VARIABLE($transparency_index) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($transparent_color) = T_STRING ( T_VARIABLE($im) , T_VARIABLE($transparency_index) ) ; T_VARIABLE($transparency_index) = T_STRING ( T_VARIABLE($res) , T_VARIABLE($transparent_color) [ ] , T_VARIABLE($transparent_color) [ ] , T_VARIABLE($transparent_color) [ ] ) ; T_STRING ( T_VARIABLE($res) , T_LNUMBER , T_LNUMBER , T_VARIABLE($transparency_index) ) ; T_STRING ( T_VARIABLE($res) , T_VARIABLE($transparency_index) ) ; T_VARIABLE($number_colors) = T_STRING ( T_VARIABLE($im) ) ; T_STRING ( T_VARIABLE($res) , T_STRING , T_VARIABLE($number_colors) ) ; } } T_STRING ( T_VARIABLE($res) , T_VARIABLE($im) , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_VARIABLE($width) , T_VARIABLE($height) , T_VARIABLE($info) [ ] , T_VARIABLE($info) [ ] ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($res) , T_VARIABLE($destination) , T_VARIABLE($info) [ ] ) ; T_STRING ( T_VARIABLE($res) ) ; T_STRING ( T_VARIABLE($im) ) ; T_RETURN T_VARIABLE($result) ; } T_FUNCTION(image_gd_rotate) ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($degrees) , T_VARIABLE($background) = T_LNUMBER ) { T_IF ( ! T_STRING ( ) ) { T_RETURN T_STRING ; } T_VARIABLE($info) = T_STRING ( T_VARIABLE($source) ) ; T_IF ( ! T_VARIABLE($info) ) { T_RETURN T_STRING ; } T_VARIABLE($im) = T_STRING ( T_VARIABLE($source) , T_VARIABLE($info) [ ] ) ; T_IF ( ! T_VARIABLE($im) ) { T_RETURN T_STRING ; } T_VARIABLE($res) = T_STRING ( T_VARIABLE($im) , T_VARIABLE($degrees) , T_VARIABLE($background) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($res) , T_VARIABLE($destination) , T_VARIABLE($info) [ ] ) ; T_RETURN T_VARIABLE($result) ; } T_FUNCTION(image_gd_crop) ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($x) , T_VARIABLE($y) , T_VARIABLE($width) , T_VARIABLE($height) ) { T_VARIABLE($info) = T_STRING ( T_VARIABLE($source) ) ; T_IF ( ! T_VARIABLE($info) ) { T_RETURN T_STRING ; } T_VARIABLE($im) = T_STRING ( T_VARIABLE($source) , T_VARIABLE($info) [ ] ) ; T_VARIABLE($res) = T_STRING ( T_VARIABLE($width) , T_VARIABLE($height) ) ; T_STRING ( T_VARIABLE($res) , T_VARIABLE($im) , T_LNUMBER , T_LNUMBER , T_VARIABLE($x) , T_VARIABLE($y) , T_VARIABLE($width) , T_VARIABLE($height) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($res) , T_VARIABLE($destination) , T_VARIABLE($info) [ ] ) ; T_STRING ( T_VARIABLE($res) ) ; T_STRING ( T_VARIABLE($im) ) ; T_RETURN T_VARIABLE($result) ; } T_FUNCTION(image_gd_open) ( T_VARIABLE($file) , T_VARIABLE($extension) ) { T_VARIABLE($extension) = T_STRING ( , , T_VARIABLE($extension) ) ; T_VARIABLE($open_func) = . T_VARIABLE($extension) ; T_IF ( ! T_STRING ( T_VARIABLE($open_func) ) ) { T_RETURN T_STRING ; } T_RETURN T_VARIABLE($open_func) ( T_VARIABLE($file) ) ; } T_FUNCTION(image_gd_close) ( T_VARIABLE($res) , T_VARIABLE($destination) , T_VARIABLE($extension) ) { T_VARIABLE($extension) = T_STRING ( , , T_VARIABLE($extension) ) ; T_VARIABLE($close_func) = . T_VARIABLE($extension) ; T_IF ( ! T_STRING ( T_VARIABLE($close_func) ) ) { T_RETURN T_STRING ; } T_IF ( T_VARIABLE($extension) T_IS_EQUAL ) { T_RETURN T_VARIABLE($close_func) ( T_VARIABLE($res) , T_VARIABLE($destination) , T_STRING ( , T_LNUMBER ) ) ; } T_ELSE { T_RETURN T_VARIABLE($close_func) ( T_VARIABLE($res) , T_VARIABLE($destination) ) ; } }",10,0
"T_OPEN_TAG T_FUNCTION(image_get_available_toolkits) ( ) { T_VARIABLE($toolkits) = T_STRING ( , ) ; T_VARIABLE($output) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($toolkits) T_AS T_VARIABLE($file) T_DOUBLE_ARROW T_VARIABLE($toolkit) ) { T_INCLUDE_ONCE T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) ; T_VARIABLE($function) = T_STRING ( , , T_VARIABLE($toolkit) T_OBJECT_OPERATOR T_STRING ) . ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($info) = T_VARIABLE($function) ( ) ; T_VARIABLE($output) [ T_VARIABLE($info) [ ] ] = T_VARIABLE($info) [ ] ; } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(image_get_toolkit) ( ) { T_STATIC T_VARIABLE($toolkit) ; T_IF ( ! T_VARIABLE($toolkit) ) { T_VARIABLE($toolkit) = T_STRING ( , ) ; T_VARIABLE($toolkit_file) = . T_VARIABLE($toolkit) . ; T_IF ( T_ISSET ( T_VARIABLE($toolkit) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($toolkit_file) ) ) { T_INCLUDE_ONCE T_VARIABLE($toolkit_file) ; } T_ELSEIF ( ! T_STRING ( ) ) { T_VARIABLE($toolkit) = T_STRING ; } } T_RETURN T_VARIABLE($toolkit) ; } T_FUNCTION(image_toolkit_invoke) ( T_VARIABLE($method) , T_VARIABLE($params) = T_ARRAY ( ) ) { T_IF ( T_VARIABLE($toolkit) = T_STRING ( ) ) { T_VARIABLE($function) = . T_VARIABLE($toolkit) . . T_VARIABLE($method) ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_RETURN T_STRING ( T_VARIABLE($function) , T_VARIABLE($params) ) ; } T_ELSE { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($toolkit) , T_DOUBLE_ARROW T_VARIABLE($function) ) , T_STRING ) ; T_RETURN T_STRING ; } } } T_FUNCTION(image_get_info) ( T_VARIABLE($file) ) { T_IF ( ! T_STRING ( T_VARIABLE($file) ) ) { T_RETURN T_STRING ; } T_VARIABLE($details) = T_STRING ; T_VARIABLE($data) = @ T_STRING ( T_VARIABLE($file) ) ; T_VARIABLE($file_size) = @ T_STRING ( T_VARIABLE($file) ) ; T_IF ( T_ISSET ( T_VARIABLE($data) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($data) ) ) { T_VARIABLE($extensions) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($extension) = T_STRING ( T_VARIABLE($data) [ T_LNUMBER ] , T_VARIABLE($extensions) ) ? T_VARIABLE($extensions) [ T_VARIABLE($data) [ T_LNUMBER ] ] : ; T_VARIABLE($details) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($data) [ T_LNUMBER ] , T_DOUBLE_ARROW T_VARIABLE($data) [ T_LNUMBER ] , T_DOUBLE_ARROW T_VARIABLE($extension) , T_DOUBLE_ARROW T_VARIABLE($file_size) , T_DOUBLE_ARROW T_VARIABLE($data) [ ] ) ; } T_RETURN T_VARIABLE($details) ; } T_FUNCTION(image_scale_and_crop) ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($width) , T_VARIABLE($height) ) { T_VARIABLE($info) = T_STRING ( T_VARIABLE($source) ) ; T_VARIABLE($scale) = T_STRING ( T_VARIABLE($width) / T_VARIABLE($info) [ ] , T_VARIABLE($height) / T_VARIABLE($info) [ ] ) ; T_VARIABLE($x) = T_STRING ( ( T_VARIABLE($info) [ ] * T_VARIABLE($scale) - T_VARIABLE($width) ) / T_LNUMBER ) ; T_VARIABLE($y) = T_STRING ( ( T_VARIABLE($info) [ ] * T_VARIABLE($scale) - T_VARIABLE($height) ) / T_LNUMBER ) ; T_IF ( T_STRING ( , T_ARRAY ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($info) [ ] * T_VARIABLE($scale) , T_VARIABLE($info) [ ] * T_VARIABLE($scale) ) ) ) { T_RETURN T_STRING ( , T_ARRAY ( T_VARIABLE($destination) , T_VARIABLE($destination) , T_VARIABLE($x) , T_VARIABLE($y) , T_VARIABLE($width) , T_VARIABLE($height) ) ) ; } T_RETURN T_STRING ; } T_FUNCTION(image_scale) ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($width) , T_VARIABLE($height) ) { T_VARIABLE($info) = T_STRING ( T_VARIABLE($source) ) ; T_IF ( T_VARIABLE($width) T_IS_GREATER_OR_EQUAL T_VARIABLE($info) [ ] T_BOOLEAN_AND T_VARIABLE($height) T_IS_GREATER_OR_EQUAL T_VARIABLE($info) [ ] ) { T_RETURN T_STRING ; } T_VARIABLE($aspect) = T_VARIABLE($info) [ ] / T_VARIABLE($info) [ ] ; T_IF ( T_VARIABLE($aspect) < T_VARIABLE($height) / T_VARIABLE($width) ) { T_VARIABLE($width) = T_INT_CAST T_STRING ( T_VARIABLE($width) , T_VARIABLE($info) [ ] ) ; T_VARIABLE($height) = T_INT_CAST T_STRING ( T_VARIABLE($width) * T_VARIABLE($aspect) ) ; } T_ELSE { T_VARIABLE($height) = T_INT_CAST T_STRING ( T_VARIABLE($height) , T_VARIABLE($info) [ ] ) ; T_VARIABLE($width) = T_INT_CAST T_STRING ( T_VARIABLE($height) / T_VARIABLE($aspect) ) ; } T_RETURN T_STRING ( , T_ARRAY ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($width) , T_VARIABLE($height) ) ) ; } T_FUNCTION(image_resize) ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($width) , T_VARIABLE($height) ) { T_RETURN T_STRING ( , T_ARRAY ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($width) , T_VARIABLE($height) ) ) ; } T_FUNCTION(image_rotate) ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($degrees) , T_VARIABLE($background) = T_LNUMBER ) { T_RETURN T_STRING ( , T_ARRAY ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($degrees) , T_VARIABLE($background) ) ) ; } T_FUNCTION(image_crop) ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($x) , T_VARIABLE($y) , T_VARIABLE($width) , T_VARIABLE($height) ) { T_RETURN T_STRING ( , T_ARRAY ( T_VARIABLE($source) , T_VARIABLE($destination) , T_VARIABLE($x) , T_VARIABLE($y) , T_VARIABLE($width) , T_VARIABLE($height) ) ) ; }",10,0
"T_OPEN_TAG T_STRING ( , - T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , - T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(drupal_load_updates) ( ) { T_FOREACH ( T_STRING ( T_STRING , T_STRING , T_STRING ) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($schema_version) ) { T_IF ( T_VARIABLE($schema_version) > - T_LNUMBER ) { T_STRING ( T_VARIABLE($module) ) ; } } } T_FUNCTION(drupal_get_schema_versions) ( T_VARIABLE($module) ) { T_VARIABLE($updates) = T_ARRAY ( ) ; T_VARIABLE($functions) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($functions) [ ] T_AS T_VARIABLE($function) ) { T_IF ( T_STRING ( T_VARIABLE($function) , T_VARIABLE($module) . ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($version) = T_STRING ( T_VARIABLE($function) , T_STRING ( T_VARIABLE($module) . ) ) ; T_IF ( T_STRING ( T_VARIABLE($version) ) ) { T_VARIABLE($updates) [ ] = T_VARIABLE($version) ; } } } T_IF ( T_STRING ( T_VARIABLE($updates) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_RETURN T_VARIABLE($updates) ; } T_FUNCTION(drupal_get_installed_schema_version) ( T_VARIABLE($module) , T_VARIABLE($reset) = T_STRING , T_VARIABLE($array) = T_STRING ) { T_STATIC T_VARIABLE($versions) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($reset) ) { T_VARIABLE($versions) = T_ARRAY ( ) ; } T_IF ( ! T_VARIABLE($versions) ) { T_VARIABLE($versions) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($versions) [ T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ; } } T_RETURN T_VARIABLE($array) ? T_VARIABLE($versions) : T_VARIABLE($versions) [ T_VARIABLE($module) ] ; } T_FUNCTION(drupal_set_installed_schema_version) ( T_VARIABLE($module) , T_VARIABLE($version) ) { T_STRING ( , T_VARIABLE($version) , T_VARIABLE($module) ) ; } T_FUNCTION(drupal_install_profile_name) ( ) { T_GLOBAL T_VARIABLE($profile) ; T_STATIC T_VARIABLE($name) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($name) ) ) { T_VARIABLE($function) = T_VARIABLE($profile) . ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($details) = T_VARIABLE($function) ( ) ; } T_VARIABLE($name) = T_ISSET ( T_VARIABLE($details) [ ] ) ? T_VARIABLE($details) [ ] : ; } T_RETURN T_VARIABLE($name) ; } T_FUNCTION(drupal_detect_baseurl) ( T_VARIABLE($file) = ) { T_GLOBAL T_VARIABLE($profile) ; T_VARIABLE($proto) = T_VARIABLE($_SERVER) [ ] ? : ; T_VARIABLE($host) = T_VARIABLE($_SERVER) [ ] ; T_VARIABLE($port) = ( T_VARIABLE($_SERVER) [ ] T_IS_EQUAL T_LNUMBER ? : . T_VARIABLE($_SERVER) [ ] ) ; T_VARIABLE($uri) = T_STRING ( , , T_VARIABLE($_SERVER) [ ] ) ; T_VARIABLE($dir) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) , , T_VARIABLE($uri) ) ; T_RETURN T_VARIABLE($proto) T_VARIABLE($host) T_VARIABLE($port) T_VARIABLE($dir) ; } T_FUNCTION(drupal_detect_database_types) ( ) { T_VARIABLE($databases) = T_ARRAY ( ) ; T_FOREACH ( T_ARRAY ( , , ) T_AS T_VARIABLE($type) ) { T_IF ( T_STRING ( . T_VARIABLE($type) . ) ) { T_INCLUDE_ONCE . T_VARIABLE($type) . ; T_VARIABLE($function) = T_VARIABLE($type) . ; T_IF ( T_VARIABLE($function) ( ) ) { T_VARIABLE($databases) [ T_VARIABLE($type) ] = T_VARIABLE($type) ; } } } T_RETURN T_VARIABLE($databases) ; } T_FUNCTION(drupal_rewrite_settings) ( T_VARIABLE($settings) = T_ARRAY ( ) , T_VARIABLE($prefix) = ) { T_VARIABLE($default_settings) = ; T_VARIABLE($settings_file) = . T_STRING ( T_STRING , T_STRING ) . . T_VARIABLE($prefix) . ; T_VARIABLE($keys) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($settings) T_AS T_VARIABLE($setting) T_DOUBLE_ARROW T_VARIABLE($data) ) { T_VARIABLE($GLOBALS) [ T_VARIABLE($setting) ] = T_VARIABLE($data) [ ] ; T_VARIABLE($keys) [ ] = T_VARIABLE($setting) ; } T_VARIABLE($buffer) = T_STRING ; T_VARIABLE($first) = T_STRING ; T_IF ( T_VARIABLE($fp) = T_STRING ( T_VARIABLE($default_settings) , ) ) { T_WHILE ( ! T_STRING ( T_VARIABLE($fp) ) ) { T_VARIABLE($line) = T_STRING ( T_VARIABLE($fp) ) ; T_IF ( T_VARIABLE($first) T_BOOLEAN_AND T_STRING ( T_VARIABLE($line) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL ) { T_VARIABLE($buffer) = ; } T_VARIABLE($first) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($line) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($line) , T_VARIABLE($variable) ) ; T_IF ( T_STRING ( T_VARIABLE($variable) [ T_LNUMBER ] , T_VARIABLE($keys) ) ) { T_VARIABLE($setting) = T_VARIABLE($settings) [ T_VARIABLE($variable) [ T_LNUMBER ] ] ; T_VARIABLE($buffer) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($variable) [ T_LNUMBER ] , . T_VARIABLE($setting) [ ] . , T_VARIABLE($line) ) ; T_UNSET ( T_VARIABLE($settings) [ T_VARIABLE($variable) [ T_LNUMBER ] ] ) ; T_UNSET ( T_VARIABLE($settings) [ T_VARIABLE($variable) [ T_LNUMBER ] ] ) ; } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($line) ; } } T_ELSEIF ( T_STRING ( T_VARIABLE($line) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($line) , T_VARIABLE($variable) ) ; T_IF ( T_STRING ( T_VARIABLE($variable) [ T_LNUMBER ] , T_VARIABLE($keys) ) ) { T_VARIABLE($setting) = T_VARIABLE($settings) [ T_VARIABLE($variable) [ T_LNUMBER ] ] ; T_VARIABLE($buffer) T_CONCAT_EQUAL . T_VARIABLE($variable) [ T_LNUMBER ] . . T_VARIABLE($setting) [ ] . . ( ! T_EMPTY ( T_VARIABLE($setting) [ ] ) ? . T_VARIABLE($setting) [ ] . : ) ; T_UNSET ( T_VARIABLE($settings) [ T_VARIABLE($variable) [ T_LNUMBER ] ] ) ; } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($line) ; } } T_ELSE { T_VARIABLE($buffer) T_CONCAT_EQUAL T_VARIABLE($line) ; } } T_STRING ( T_VARIABLE($fp) ) ; T_FOREACH ( T_VARIABLE($settings) T_AS T_VARIABLE($setting) T_DOUBLE_ARROW T_VARIABLE($data) ) { T_IF ( T_VARIABLE($data) [ ] ) { T_VARIABLE($buffer) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($setting) T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($data) [ ] . ; } } T_VARIABLE($fp) = T_STRING ( T_VARIABLE($settings_file) , ) ; T_IF ( T_VARIABLE($fp) T_BOOLEAN_AND T_STRING ( T_VARIABLE($fp) , T_VARIABLE($buffer) ) T_IS_IDENTICAL T_STRING ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($settings_file) ) ) , ) ; } } T_ELSE { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($default_settings) ) ) , ) ; } } T_FUNCTION(drupal_get_install_files) ( T_VARIABLE($module_list) = T_ARRAY ( ) ) { T_VARIABLE($installs) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($module_list) T_AS T_VARIABLE($module) ) { T_VARIABLE($installs) = T_STRING ( T_VARIABLE($installs) , T_STRING ( T_VARIABLE($module) . , ) ) ; } T_RETURN T_VARIABLE($installs) ; } T_FUNCTION(drupal_verify_profile) ( T_VARIABLE($profile) , T_VARIABLE($locale) ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_VARIABLE($profile_file) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_ISSET ( T_VARIABLE($profile) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($profile_file) ) ) { T_STRING ( ) ; } T_REQUIRE_ONCE ( T_VARIABLE($profile_file) ) ; T_VARIABLE($function) = T_VARIABLE($profile) . ; T_VARIABLE($module_list) = T_STRING ( T_STRING ( ) , T_VARIABLE($function) ( ) , ( T_VARIABLE($locale) T_IS_NOT_EQUAL ? T_ARRAY ( ) : T_ARRAY ( ) ) ) ; T_VARIABLE($present_modules) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( , , , T_LNUMBER ) T_AS T_VARIABLE($present_module) ) { T_VARIABLE($present_modules) [ ] = T_VARIABLE($present_module) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($missing_modules) = T_STRING ( T_VARIABLE($module_list) , T_VARIABLE($present_modules) ) ; T_IF ( T_STRING ( T_VARIABLE($missing_modules) ) ) { T_FOREACH ( T_VARIABLE($missing_modules) T_AS T_VARIABLE($module) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($module) ) ) , ) ; } } T_ELSE { T_RETURN T_VARIABLE($module_list) ; } } T_FUNCTION(drupal_install_modules) ( T_VARIABLE($module_list) = T_ARRAY ( ) ) { T_VARIABLE($files) = T_STRING ( ) ; T_VARIABLE($module_list) = T_STRING ( T_STRING ( T_VARIABLE($module_list) ) ) ; T_DO { T_VARIABLE($moved) = T_STRING ; T_FOREACH ( T_VARIABLE($module_list) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($weight) ) { T_VARIABLE($file) = T_VARIABLE($files) [ T_VARIABLE($module) ] ; T_IF ( T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_FOREACH ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($dependency) ) { T_IF ( T_ISSET ( T_VARIABLE($module_list) [ T_VARIABLE($dependency) ] ) T_BOOLEAN_AND T_VARIABLE($module_list) [ T_VARIABLE($module) ] < T_VARIABLE($module_list) [ T_VARIABLE($dependency) ] + T_LNUMBER ) { T_VARIABLE($module_list) [ T_VARIABLE($module) ] = T_VARIABLE($module_list) [ T_VARIABLE($dependency) ] + T_LNUMBER ; T_VARIABLE($moved) = T_STRING ; } } } } } T_WHILE ( T_VARIABLE($moved) ) ; T_STRING ( T_VARIABLE($module_list) ) ; T_VARIABLE($module_list) = T_STRING ( T_VARIABLE($module_list) ) ; T_STRING ( T_VARIABLE($module_list) , ) ; T_STRING ( T_VARIABLE($module_list) ) ; } T_FUNCTION(_drupal_install_module) ( T_VARIABLE($module) ) { T_IF ( T_STRING ( T_VARIABLE($module) , T_STRING ) T_IS_EQUAL T_STRING ) { T_STRING ( T_VARIABLE($module) ) ; T_STRING ( T_VARIABLE($module) , ) ; T_VARIABLE($versions) = T_STRING ( T_VARIABLE($module) ) ; T_STRING ( T_VARIABLE($module) , T_VARIABLE($versions) ? T_STRING ( T_VARIABLE($versions) ) : T_STRING ) ; T_RETURN T_STRING ; } } T_FUNCTION(drupal_install_system) ( ) { T_VARIABLE($system_path) = T_STRING ( T_STRING ( , , T_STRING ) ) ; T_REQUIRE_ONCE . T_VARIABLE($system_path) . ; T_STRING ( , ) ; T_VARIABLE($system_versions) = T_STRING ( ) ; T_VARIABLE($system_version) = T_VARIABLE($system_versions) ? T_STRING ( T_VARIABLE($system_versions) ) : T_STRING ; T_STRING ( , T_VARIABLE($system_path) . , , , , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_VARIABLE($system_version) ) ; T_STRING ( T_STRING ) ; T_STRING ( ) ; } T_FUNCTION(drupal_uninstall_module) ( T_VARIABLE($module) ) { T_STRING ( , T_VARIABLE($module) ) ; T_VARIABLE($paths) = T_STRING ( T_VARIABLE($module) , ) ; T_STRING ( T_VARIABLE($module) ) ; T_STRING ( T_VARIABLE($module) , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($paths) ) ) { T_VARIABLE($paths) = T_STRING ( T_VARIABLE($paths) ) ; T_FOREACH ( T_VARIABLE($paths) T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($path) ) { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($path) , T_STRING ) ; T_FOREACH ( T_VARIABLE($parts) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($part) ) { T_IF ( T_STRING ( , T_VARIABLE($part) ) ) { T_VARIABLE($parts) [ T_VARIABLE($k) ] = ; } } T_VARIABLE($paths) [ T_VARIABLE($index) ] = T_STRING ( , T_VARIABLE($parts) ) ; } T_VARIABLE($placeholders) = T_STRING ( , T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($paths) ) , ) ) ; T_VARIABLE($result) = T_STRING ( . T_VARIABLE($placeholders) . , T_VARIABLE($paths) ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($item) , T_STRING ) ; } } T_STRING ( T_VARIABLE($module) , T_STRING ) ; } T_FUNCTION(drupal_verify_install_file) ( T_VARIABLE($file) , T_VARIABLE($mask) = T_STRING , T_VARIABLE($type) = ) { T_VARIABLE($return) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($mask) ) T_BOOLEAN_AND ( T_VARIABLE($mask) & T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file) ) ) { T_RETURN T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($type) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($check) = . T_VARIABLE($type) ; T_IF ( ! T_STRING ( T_VARIABLE($check) ) T_BOOLEAN_OR ! T_VARIABLE($check) ( T_VARIABLE($file) ) ) { T_VARIABLE($return) = T_STRING ; } } T_IF ( T_ISSET ( T_VARIABLE($mask) ) ) { T_VARIABLE($masks) = T_ARRAY ( T_STRING , T_STRING , T_STRING , T_STRING , T_STRING , T_STRING , T_STRING ) ; T_FOREACH ( T_VARIABLE($masks) T_AS T_VARIABLE($current_mask) ) { T_IF ( T_VARIABLE($mask) & T_VARIABLE($current_mask) ) { T_SWITCH ( T_VARIABLE($current_mask) ) { T_CASE T_STRING : T_IF ( ! T_STRING ( T_VARIABLE($file) ) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_STRING ( T_VARIABLE($file) , T_VARIABLE($mask) ) ; } T_IF ( ! T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($return) = T_STRING ; } } T_BREAK ; T_CASE T_STRING : T_IF ( ! T_STRING ( T_VARIABLE($file) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($file) , T_VARIABLE($mask) ) ) { T_VARIABLE($return) = T_STRING ; } T_BREAK ; T_CASE T_STRING : T_IF ( ! T_STRING ( T_VARIABLE($file) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($file) , T_VARIABLE($mask) ) ) { T_VARIABLE($return) = T_STRING ; } T_BREAK ; T_CASE T_STRING : T_IF ( ! T_STRING ( T_VARIABLE($file) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($file) , T_VARIABLE($mask) ) ) { T_VARIABLE($return) = T_STRING ; } T_BREAK ; T_CASE T_STRING : T_IF ( T_STRING ( T_VARIABLE($file) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($file) , T_VARIABLE($mask) ) ) { T_VARIABLE($return) = T_STRING ; } T_BREAK ; T_CASE T_STRING : T_IF ( T_STRING ( T_VARIABLE($file) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($file) , T_VARIABLE($mask) ) ) { T_VARIABLE($return) = T_STRING ; } T_BREAK ; T_CASE T_STRING : T_IF ( T_STRING ( T_VARIABLE($file) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($file) , T_VARIABLE($mask) ) ) { T_VARIABLE($return) = T_STRING ; } T_BREAK ; } } } } T_RETURN T_VARIABLE($return) ; } T_FUNCTION(drupal_install_mkdir) ( T_VARIABLE($file) , T_VARIABLE($mask) , T_VARIABLE($message) = T_STRING ) { T_VARIABLE($mod) = T_LNUMBER ; T_VARIABLE($masks) = T_ARRAY ( T_STRING , T_STRING , T_STRING , T_STRING , T_STRING , T_STRING ) ; T_FOREACH ( T_VARIABLE($masks) T_AS T_VARIABLE($m) ) { T_IF ( T_VARIABLE($mask) & T_VARIABLE($m) ) { T_SWITCH ( T_VARIABLE($m) ) { T_CASE T_STRING : T_VARIABLE($mod) T_PLUS_EQUAL T_LNUMBER ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($mod) T_PLUS_EQUAL T_LNUMBER ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($mod) T_PLUS_EQUAL T_LNUMBER ; T_BREAK ; } } } T_IF ( @ T_STRING ( T_VARIABLE($file) , T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($mod) , T_LNUMBER ) ) ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(drupal_install_fix_file) ( T_VARIABLE($file) , T_VARIABLE($mask) , T_VARIABLE($message) = T_STRING ) { T_VARIABLE($mod) = T_STRING ( T_VARIABLE($file) ) & T_LNUMBER ; T_VARIABLE($masks) = T_ARRAY ( T_STRING , T_STRING , T_STRING , T_STRING , T_STRING , T_STRING ) ; T_FOREACH ( T_VARIABLE($masks) T_AS T_VARIABLE($m) ) { T_IF ( T_VARIABLE($mask) & T_VARIABLE($m) ) { T_SWITCH ( T_VARIABLE($m) ) { T_CASE T_STRING : T_IF ( ! T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($mod) T_OR_EQUAL T_LNUMBER ; } T_BREAK ; T_CASE T_STRING : T_IF ( ! T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($mod) T_OR_EQUAL T_LNUMBER ; } T_BREAK ; T_CASE T_STRING : T_IF ( ! T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($mod) T_OR_EQUAL T_LNUMBER ; } T_BREAK ; T_CASE T_STRING : T_IF ( T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($mod) T_AND_EQUAL ~ T_LNUMBER ; } T_BREAK ; T_CASE T_STRING : T_IF ( T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($mod) T_AND_EQUAL ~ T_LNUMBER ; } T_BREAK ; T_CASE T_STRING : T_IF ( T_STRING ( T_VARIABLE($file) ) ) { T_VARIABLE($mod) T_AND_EQUAL ~ T_LNUMBER ; } T_BREAK ; } } } T_IF ( @ T_STRING ( T_VARIABLE($file) , T_VARIABLE($mod) ) ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(install_goto) ( T_VARIABLE($path) ) { T_GLOBAL T_VARIABLE($base_url) ; T_STRING ( . T_VARIABLE($base_url) . . T_VARIABLE($path) ) ; T_STRING ( ) ; T_EXIT ( ) ; } T_FUNCTION(st) ( T_VARIABLE($string) , T_VARIABLE($args) = T_ARRAY ( ) ) { T_STATIC T_VARIABLE($locale_strings) = T_STRING ; T_GLOBAL T_VARIABLE($profile) , T_VARIABLE($install_locale) ; T_IF ( ! T_ISSET ( T_VARIABLE($locale_strings) ) ) { T_VARIABLE($locale_strings) = T_ARRAY ( ) ; T_VARIABLE($filename) = . T_VARIABLE($profile) . . T_VARIABLE($install_locale) . ; T_IF ( T_STRING ( T_VARIABLE($filename) ) ) { T_REQUIRE_ONCE ; T_VARIABLE($file) = T_OBJECT_CAST T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($filename) ) ; T_STRING ( , T_VARIABLE($file) ) ; T_VARIABLE($locale_strings) = T_STRING ( ) ; } } T_REQUIRE_ONCE ; T_FOREACH ( T_VARIABLE($args) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_SWITCH ( T_VARIABLE($key) [ T_LNUMBER ] ) { T_CASE : T_VARIABLE($args) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($value) ) ; T_BREAK ; T_CASE : T_DEFAULT : T_VARIABLE($args) [ T_VARIABLE($key) ] = . T_STRING ( T_VARIABLE($value) ) . ; T_BREAK ; T_CASE : } } T_RETURN T_STRING ( ( ! T_EMPTY ( T_VARIABLE($locale_strings) [ T_VARIABLE($string) ] ) ? T_VARIABLE($locale_strings) [ T_VARIABLE($string) ] : T_VARIABLE($string) ) , T_VARIABLE($args) ) ; } T_FUNCTION(drupal_check_profile) ( T_VARIABLE($profile) ) { T_INCLUDE_ONCE ; T_VARIABLE($profile_file) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_ISSET ( T_VARIABLE($profile) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($profile_file) ) ) { T_STRING ( ) ; } T_REQUIRE_ONCE ( T_VARIABLE($profile_file) ) ; T_VARIABLE($function) = T_VARIABLE($profile) . ; T_VARIABLE($module_list) = T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($function) ( ) ) ) ; T_VARIABLE($installs) = T_STRING ( T_VARIABLE($module_list) ) ; T_VARIABLE($requirements) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($installs) T_AS T_VARIABLE($install) ) { T_REQUIRE_ONCE T_VARIABLE($install) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_STRING ( T_VARIABLE($install) T_OBJECT_OPERATOR T_STRING , ) ) { T_VARIABLE($requirements) = T_STRING ( T_VARIABLE($requirements) , T_STRING ( T_VARIABLE($install) T_OBJECT_OPERATOR T_STRING , , ) ) ; } } T_RETURN T_VARIABLE($requirements) ; } T_FUNCTION(drupal_requirements_severity) ( & T_VARIABLE($requirements) ) { T_VARIABLE($severity) = T_STRING ; T_FOREACH ( T_VARIABLE($requirements) T_AS T_VARIABLE($requirement) ) { T_IF ( T_ISSET ( T_VARIABLE($requirement) [ ] ) ) { T_VARIABLE($severity) = T_STRING ( T_VARIABLE($severity) , T_VARIABLE($requirement) [ ] ) ; } } T_RETURN T_VARIABLE($severity) ; } T_FUNCTION(drupal_check_module) ( T_VARIABLE($module) ) { T_VARIABLE($install) = T_STRING ( T_ARRAY ( T_VARIABLE($module) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($install) [ T_VARIABLE($module) ] ) ) { T_REQUIRE_ONCE T_VARIABLE($install) [ T_VARIABLE($module) ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($requirements) = T_STRING ( T_VARIABLE($module) , , ) ; T_IF ( T_STRING ( T_VARIABLE($requirements) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($requirements) ) T_IS_EQUAL T_STRING ) { T_FOREACH ( T_VARIABLE($requirements) T_AS T_VARIABLE($requirement) ) { T_IF ( T_ISSET ( T_VARIABLE($requirement) [ ] ) T_BOOLEAN_AND T_VARIABLE($requirement) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($message) = T_VARIABLE($requirement) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($requirement) [ ] ) T_BOOLEAN_AND T_VARIABLE($requirement) [ ] ) { T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($requirement) [ ] , T_DOUBLE_ARROW T_VARIABLE($requirement) [ ] ) ) . ; } T_STRING ( T_VARIABLE($message) , ) ; } } T_RETURN T_STRING ; } } T_RETURN T_STRING ; }",13,0
"T_OPEN_TAG T_FUNCTION(mysql_is_available) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(drupal_test_mysql) ( T_VARIABLE($url) , & T_VARIABLE($success) ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( T_STRING ( ) , ) ; T_RETURN T_STRING ; } T_VARIABLE($url) = T_STRING ( T_VARIABLE($url) ) ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($url) [ ] = T_ISSET ( T_VARIABLE($url) [ ] ) ? T_STRING ( T_VARIABLE($url) [ ] ) : ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($url) [ ] = T_VARIABLE($url) [ ] . . T_VARIABLE($url) [ ] ; } T_VARIABLE($connection) = @ T_STRING ( T_VARIABLE($url) [ ] , T_VARIABLE($url) [ ] , T_VARIABLE($url) [ ] , T_STRING , T_LNUMBER ) ; T_IF ( ! T_VARIABLE($connection) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_RETURN T_STRING ; } T_IF ( ! T_STRING ( T_STRING ( T_VARIABLE($url) [ ] , T_LNUMBER ) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_RETURN T_STRING ; } T_VARIABLE($success) = T_ARRAY ( ) ; T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_RETURN T_STRING ; } T_VARIABLE($err) = T_STRING ; T_VARIABLE($success) [ ] = ; T_VARIABLE($success) [ ] = ; T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_IF ( T_VARIABLE($err) ) { T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($connection) ) ; T_RETURN T_STRING ; }",3,0
"T_OPEN_TAG T_FUNCTION(mysqli_is_available) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(drupal_test_mysqli) ( T_VARIABLE($url) , & T_VARIABLE($success) ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( T_STRING ( ) , ) ; T_RETURN T_STRING ; } T_VARIABLE($url) = T_STRING ( T_VARIABLE($url) ) ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($url) [ ] = T_ISSET ( T_VARIABLE($url) [ ] ) ? T_STRING ( T_VARIABLE($url) [ ] ) : ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($url) [ ] = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($connection) = T_STRING ( ) ; @ T_STRING ( T_VARIABLE($connection) , T_VARIABLE($url) [ ] , T_VARIABLE($url) [ ] , T_VARIABLE($url) [ ] , T_STRING ( T_VARIABLE($url) [ ] , T_LNUMBER ) , T_VARIABLE($url) [ ] , T_STRING , T_STRING ) ; T_IF ( T_STRING ( ) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_OR T_STRING ( ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_RETURN T_STRING ; } T_IF ( T_STRING ( ) > T_LNUMBER ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_RETURN T_STRING ; } T_VARIABLE($success) = T_ARRAY ( ) ; T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($connection) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_RETURN T_STRING ; } T_VARIABLE($err) = T_STRING ; T_VARIABLE($success) [ ] = ; T_VARIABLE($success) [ ] = ; T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($connection) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($connection) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($connection) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($connection) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_IF ( T_VARIABLE($err) ) { T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($connection) ) ; T_RETURN T_STRING ; }",1,0
"T_OPEN_TAG T_FUNCTION(pgsql_is_available) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(drupal_test_pgsql) ( T_VARIABLE($url) , & T_VARIABLE($success) ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( T_STRING ( ) , ) ; T_RETURN T_STRING ; } T_VARIABLE($url) = T_STRING ( T_VARIABLE($url) ) ; T_VARIABLE($conn_string) = ; T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($conn_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($url) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($conn_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($url) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($conn_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($url) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($conn_string) T_CONCAT_EQUAL . T_STRING ( T_STRING ( T_VARIABLE($url) [ ] ) , T_LNUMBER ) ; } T_IF ( T_ISSET ( T_VARIABLE($url) [ ] ) ) { T_VARIABLE($conn_string) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($url) [ ] ) ; } T_VARIABLE($connection) = @ T_STRING ( T_VARIABLE($conn_string) ) ; T_IF ( ! T_VARIABLE($connection) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) , ) ; T_RETURN T_STRING ; } T_VARIABLE($success) = T_ARRAY ( ) ; T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_RETURN T_STRING ; } T_VARIABLE($err) = T_STRING ; T_VARIABLE($success) [ ] = ; T_VARIABLE($success) [ ] = ; T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_VARIABLE($query) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($connection) , T_VARIABLE($query) ) ; T_IF ( T_VARIABLE($error) = T_STRING ( ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($error) ) ) , ) ; T_VARIABLE($err) = T_STRING ; } T_ELSE { T_VARIABLE($success) [ ] = ; } T_IF ( T_VARIABLE($err) ) { T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($connection) ) ; T_RETURN T_STRING ; }",6,0
"T_OPEN_TAG T_FUNCTION(language_initialize) ( ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($mode) = T_STRING ( , T_STRING ) ; T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($languages) = T_VARIABLE($languages) [ T_LNUMBER ] ; T_SWITCH ( T_VARIABLE($mode) ) { T_CASE T_STRING : T_RETURN T_STRING ( ) ; T_CASE T_STRING : T_FOREACH ( T_VARIABLE($languages) T_AS T_VARIABLE($language) ) { T_VARIABLE($parts) = T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($parts) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_SERVER) [ ] T_IS_EQUAL T_VARIABLE($parts) [ ] ) ) { T_RETURN T_VARIABLE($language) ; } } T_RETURN T_STRING ( ) ; T_CASE T_STRING : T_CASE T_STRING : T_VARIABLE($args) = T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_STRING ( , T_VARIABLE($_GET) [ ] ) : T_ARRAY ( ) ; T_VARIABLE($prefix) = T_STRING ( T_VARIABLE($args) ) ; T_FOREACH ( T_VARIABLE($languages) T_AS T_VARIABLE($language) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($prefix) ) { T_VARIABLE($_GET) [ ] = T_STRING ( , T_VARIABLE($args) ) ; T_RETURN T_VARIABLE($language) ; } } T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_STRING ) { T_RETURN T_STRING ( ) ; } T_BREAK ; } T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($languages) [ T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ] ) ) { T_RETURN T_VARIABLE($languages) [ T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ] ; } T_IF ( T_VARIABLE($language) = T_STRING ( ) ) { T_RETURN T_VARIABLE($language) ; } T_RETURN T_STRING ( ) ; } T_FUNCTION(language_from_browser) ( ) { T_VARIABLE($browser_langs) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_SERVER) [ ] ) ) { T_VARIABLE($browser_accept) = T_STRING ( , T_VARIABLE($_SERVER) [ ] ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($browser_accept) ) ; T_VARIABLE($i) T_INC ) { T_IF ( T_STRING ( , T_STRING ( T_VARIABLE($browser_accept) [ T_VARIABLE($i) ] ) , T_VARIABLE($found) ) ) { T_VARIABLE($browser_langs) [ T_VARIABLE($found) [ T_LNUMBER ] ] = ( T_ISSET ( T_VARIABLE($found) [ T_LNUMBER ] ) ? T_DOUBLE_CAST T_VARIABLE($found) [ T_LNUMBER ] : T_DNUMBER ) ; } } } T_STRING ( T_VARIABLE($browser_langs) ) ; T_VARIABLE($languages) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($browser_langs) T_AS T_VARIABLE($langcode) T_DOUBLE_ARROW T_VARIABLE($q) ) { T_IF ( T_ISSET ( T_VARIABLE($languages) [ ] [ T_VARIABLE($langcode) ] ) ) { T_RETURN T_VARIABLE($languages) [ ] [ T_VARIABLE($langcode) ] ; } } } T_FUNCTION(language_url_rewrite) ( & T_VARIABLE($path) , & T_VARIABLE($options) ) { T_GLOBAL T_VARIABLE($language) ; T_IF ( ! T_VARIABLE($options) [ ] ) { T_IF ( ! T_ISSET ( T_VARIABLE($options) [ ] ) ) { T_VARIABLE($options) [ ] = T_VARIABLE($language) ; } T_SWITCH ( T_STRING ( , T_STRING ) ) { T_CASE T_STRING : T_UNSET ( T_VARIABLE($options) [ ] ) ; T_BREAK ; T_CASE T_STRING : T_IF ( T_VARIABLE($options) [ ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($options) [ ] = T_STRING ; T_VARIABLE($options) [ ] = T_VARIABLE($options) [ ] T_OBJECT_OPERATOR T_STRING ; } T_BREAK ; T_CASE T_STRING : T_VARIABLE($default) = T_STRING ( ) ; T_IF ( T_VARIABLE($options) [ ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING ) { T_BREAK ; } T_CASE T_STRING : T_IF ( ! T_EMPTY ( T_VARIABLE($options) [ ] T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($options) [ ] = T_VARIABLE($options) [ ] T_OBJECT_OPERATOR T_STRING . ; } T_BREAK ; } } }",7,0
"T_OPEN_TAG T_STRING ( , ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(locale_languages_overview_form) ( ) { T_VARIABLE($languages) = T_STRING ( , T_STRING ) ; T_VARIABLE($options) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_FOREACH ( T_VARIABLE($languages) T_AS T_VARIABLE($langcode) T_DOUBLE_ARROW T_VARIABLE($language) ) { T_VARIABLE($options) [ T_VARIABLE($langcode) ] = ; T_IF ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($enabled) [ ] = T_VARIABLE($langcode) ; } T_VARIABLE($form) [ ] [ T_VARIABLE($langcode) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($langcode) ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($langcode) ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($langcode) ] = T_ARRAY ( T_DOUBLE_ARROW ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ? T_STRING ( ) : T_STRING ( ) ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_VARIABLE($enabled) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(theme_locale_languages_overview_form) ( T_VARIABLE($form) ) { T_VARIABLE($default) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($form) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($element) ) { T_IF ( T_STRING ( T_VARIABLE($element) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($key) ) ) { T_IF ( T_VARIABLE($key) T_IS_EQUAL T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] [ ] = ; } T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_DOUBLE_ARROW ) , T_STRING ( T_VARIABLE($key) ) , . T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) . , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_STRING ( T_STRING ( ) , . T_VARIABLE($key) ) . ( ( T_VARIABLE($key) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($key) T_IS_NOT_EQUAL T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING ) ? . T_STRING ( T_STRING ( ) , . T_VARIABLE($key) ) : ) ) ; } } T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(locale_languages_overview_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($default) = T_STRING ( ) ; T_VARIABLE($enabled_count) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($languages) T_AS T_VARIABLE($langcode) T_DOUBLE_ARROW T_VARIABLE($language) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_VARIABLE($langcode) T_BOOLEAN_OR T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($langcode) ) { T_VARIABLE($form_state) [ ] [ ] [ T_VARIABLE($langcode) ] = T_LNUMBER ; } T_IF ( T_VARIABLE($form_state) [ ] [ ] [ T_VARIABLE($langcode) ] ) { T_VARIABLE($enabled_count) T_INC ; T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_ELSE { T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($form_state) [ ] [ ] [ T_VARIABLE($langcode) ] ; T_STRING ( , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($langcode) ) ; T_VARIABLE($languages) [ T_VARIABLE($langcode) ] = T_VARIABLE($language) ; } T_STRING ( T_STRING ( ) ) ; T_STRING ( , T_VARIABLE($languages) [ T_VARIABLE($form_state) [ ] [ ] ] ) ; T_STRING ( , T_VARIABLE($enabled_count) ) ; T_STRING ( , , T_STRING ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(locale_languages_add_screen) ( ) { T_VARIABLE($output) = T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(locale_languages_predefined_form) ( ) { T_VARIABLE($predefined) = T_STRING ( ) ; T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($predefined) ) , T_DOUBLE_ARROW T_VARIABLE($predefined) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(locale_languages_custom_form) ( ) { T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(locale_languages_edit_form) ( & T_VARIABLE($form_state) , T_VARIABLE($langcode) ) { T_IF ( T_VARIABLE($language) = T_STRING ( T_STRING ( , T_VARIABLE($langcode) ) ) ) { T_VARIABLE($form) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($form) , T_VARIABLE($language) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_VARIABLE($form) ; } T_ELSE { T_STRING ( ) ; } } T_FUNCTION(_locale_languages_common_controls) ( & T_VARIABLE($form) , T_VARIABLE($language) = T_STRING ) { T_IF ( ! T_STRING ( T_VARIABLE($language) ) ) { T_VARIABLE($language) = T_NEW T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW @ T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW ( T_ISSET ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW @ T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW @ T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW @ T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW @ T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW @ T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(locale_languages_predefined_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($langcode) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( T_VARIABLE($duplicate) = T_STRING ( T_STRING ( , T_VARIABLE($langcode) ) ) T_IS_NOT_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($langcode) ) ) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($predefined) = T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($predefined) [ T_VARIABLE($langcode) ] ) ) { T_STRING ( , T_STRING ( ) ) ; } } T_ELSE { T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; } } T_FUNCTION(locale_languages_predefined_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($langcode) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( T_VARIABLE($langcode) , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; } T_ELSE { T_VARIABLE($predefined) = T_STRING ( ) ; T_STRING ( T_VARIABLE($langcode) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($predefined) [ T_VARIABLE($langcode) ] [ T_LNUMBER ] ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; } T_IF ( T_VARIABLE($batch) = T_STRING ( T_VARIABLE($langcode) , ) ) { T_STRING ( T_VARIABLE($batch) ) ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(locale_languages_edit_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($duplicate) = T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($duplicate) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND T_STRING ( ) T_IS_NOT_EQUAL T_VARIABLE($form_state) [ ] [ ] T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($duplicate) = T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($duplicate) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } T_FUNCTION(locale_languages_edit_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($default) = T_STRING ( ) ; T_IF ( T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($form_state) [ ] [ ] ) { T_VARIABLE($properties) = T_ARRAY ( , , , , , , , , ) ; T_FOREACH ( T_VARIABLE($properties) T_AS T_VARIABLE($keyname) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ T_VARIABLE($keyname) ] ) ) { T_VARIABLE($default) T_OBJECT_OPERATOR T_VARIABLE($keyname) = T_VARIABLE($form_state) [ ] [ T_VARIABLE($keyname) ] ; } } T_STRING ( , T_VARIABLE($default) ) ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(locale_languages_delete_form) ( & T_VARIABLE($form_state) , T_VARIABLE($langcode) ) { T_IF ( T_VARIABLE($langcode) T_IS_EQUAL ) { T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } T_IF ( T_STRING ( ) T_IS_EQUAL T_VARIABLE($langcode) ) { T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } T_VARIABLE($languages) = T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($languages) [ T_VARIABLE($langcode) ] ) ) { T_STRING ( ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($langcode) ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($languages) [ T_VARIABLE($langcode) ] T_OBJECT_OPERATOR T_STRING ) ) ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } } T_FUNCTION(locale_languages_delete_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($languages) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($languages) [ T_VARIABLE($form_state) [ ] [ ] ] ) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( . T_VARIABLE($form_state) [ ] [ ] , ) ; T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($variables) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($languages) [ T_VARIABLE($form_state) [ ] [ ] ] T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_STRING ( , T_VARIABLE($variables) ) ) ; T_STRING ( , , T_VARIABLE($variables) ) ; } T_STRING ( , , T_STRING ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(locale_languages_configure_form) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(locale_languages_configure_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(locale_translate_overview_screen) ( ) { T_VARIABLE($languages) = T_STRING ( , T_STRING ) ; T_VARIABLE($groups) = T_STRING ( , ) ; T_VARIABLE($headers) = T_STRING ( T_ARRAY ( T_STRING ( ) ) , T_STRING ( T_VARIABLE($groups) ) ) ; T_VARIABLE($sums) = T_STRING ( ) ; T_VARIABLE($groupsums) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($group) = T_STRING ( T_VARIABLE($sums) ) ) { T_VARIABLE($groupsums) [ T_VARIABLE($group) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($group) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($languages) T_AS T_VARIABLE($langcode) T_DOUBLE_ARROW T_VARIABLE($language) ) { T_VARIABLE($rows) [ T_VARIABLE($langcode) ] = T_ARRAY ( T_DOUBLE_ARROW ( T_VARIABLE($langcode) T_IS_EQUAL ? T_STRING ( ) : T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_FOREACH ( T_VARIABLE($groups) T_AS T_VARIABLE($group) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($rows) [ T_VARIABLE($langcode) ] [ T_VARIABLE($group) ] = ( T_VARIABLE($langcode) T_IS_EQUAL ? T_STRING ( ) : . ( T_ISSET ( T_VARIABLE($groupsums) [ T_VARIABLE($group) ] ) ? T_VARIABLE($groupsums) [ T_VARIABLE($group) ] : T_LNUMBER ) . ) ; } } T_VARIABLE($translations) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($translations) ) ) { T_VARIABLE($ratio) = ( ! T_EMPTY ( T_VARIABLE($groupsums) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] ) T_BOOLEAN_AND T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) ? T_STRING ( ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($groupsums) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] ) * T_DNUMBER , T_LNUMBER ) : T_LNUMBER ; T_VARIABLE($rows) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($groupsums) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($ratio) T_ENCAPSED_AND_WHITESPACE ; } T_RETURN T_STRING ( , T_VARIABLE($headers) , T_VARIABLE($rows) ) ; } T_FUNCTION(locale_translate_seek_screen) ( ) { T_VARIABLE($output) = T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(locale_translate_seek_form) ( ) { T_VARIABLE($languages) = T_STRING ( , T_STRING ) ; T_UNSET ( T_VARIABLE($languages) [ ] ) ; T_VARIABLE($query) = T_STRING ( ) ; T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW @ T_VARIABLE($query) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW ( T_STRING ( T_VARIABLE($languages) ) T_IS_SMALLER_OR_EQUAL T_LNUMBER ? : ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ( ! T_EMPTY ( T_VARIABLE($query) [ ] ) ? T_VARIABLE($query) [ ] : ) , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) , T_VARIABLE($languages) ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ( ! T_EMPTY ( T_VARIABLE($query) [ ] ) ? T_VARIABLE($query) [ ] : ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) , ) ; T_VARIABLE($groups) = T_STRING ( , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ( ! T_EMPTY ( T_VARIABLE($query) [ ] ) ? T_VARIABLE($query) [ ] : ) , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_VARIABLE($groups) ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_STRING ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(locale_translate_import_form) ( ) { T_VARIABLE($names) = T_STRING ( , T_STRING ) ; T_UNSET ( T_VARIABLE($names) [ ] ) ; T_IF ( ! T_STRING ( T_VARIABLE($names) ) ) { T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($default) = T_STRING ( T_STRING ( T_VARIABLE($languages) ) ) ; } T_ELSE { T_VARIABLE($languages) = T_ARRAY ( T_STRING ( ) T_DOUBLE_ARROW T_VARIABLE($names) , T_STRING ( ) T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($default) = T_STRING ( T_STRING ( T_VARIABLE($names) ) ) ; } T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($languages) , T_DOUBLE_ARROW T_VARIABLE($default) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(locale_translate_import_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($file) = T_STRING ( ) ) { T_VARIABLE($languages) = T_STRING ( , T_STRING ) ; T_VARIABLE($langcode) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($languages) [ T_VARIABLE($langcode) ] ) ) { T_VARIABLE($predefined) = T_STRING ( ) ; T_STRING ( T_VARIABLE($langcode) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($predefined) [ T_VARIABLE($langcode) ] [ T_LNUMBER ] ) ) ) ) ; } T_IF ( T_VARIABLE($ret) = T_STRING ( T_VARIABLE($file) , T_VARIABLE($langcode) , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) T_IS_EQUAL T_STRING ) { T_VARIABLE($variables) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_STRING ( , T_VARIABLE($variables) ) , ) ; T_STRING ( , , T_VARIABLE($variables) , T_STRING ) ; } } T_ELSE { T_STRING ( T_STRING ( ) , ) ; T_RETURN ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(locale_translate_export_screen) ( ) { T_VARIABLE($names) = T_STRING ( , T_STRING ) ; T_UNSET ( T_VARIABLE($names) [ ] ) ; T_VARIABLE($output) = ; T_IF ( T_STRING ( T_VARIABLE($names) ) ) { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($names) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(locale_translate_export_po_form) ( & T_VARIABLE($form_state) , T_VARIABLE($names) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($names) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(locale_translate_export_pot_form) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(locale_translate_export_po_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($language) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($language) = T_VARIABLE($languages) [ T_VARIABLE($form_state) [ ] [ ] ] ; } T_STRING ( T_VARIABLE($language) , T_STRING ( T_VARIABLE($language) , T_STRING ( T_VARIABLE($language) , T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_FUNCTION(locale_translate_edit_form) ( & T_VARIABLE($form_state) , T_VARIABLE($lid) ) { T_VARIABLE($source) = T_STRING ( T_STRING ( , T_VARIABLE($lid) ) ) ; T_IF ( ! T_VARIABLE($source) ) { T_STRING ( T_STRING ( ) , ) ; T_STRING ( ) ; } T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( T_VARIABLE($source) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($lid) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($source) T_OBJECT_OPERATOR T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($source) T_OBJECT_OPERATOR T_STRING ) , ) ; T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($default) = T_STRING ( ) ; T_VARIABLE($omit) = T_VARIABLE($source) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? : T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING ; T_UNSET ( T_VARIABLE($languages) [ ( T_VARIABLE($omit) ) ] ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($rows) = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($source) T_OBJECT_OPERATOR T_STRING ) / T_LNUMBER ) , T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($languages) T_AS T_VARIABLE($langcode) T_DOUBLE_ARROW T_VARIABLE($language) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($langcode) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($rows) , T_DOUBLE_ARROW , ) ; } T_VARIABLE($result) = T_STRING ( , T_VARIABLE($lid) , T_VARIABLE($omit) ) ; T_WHILE ( T_VARIABLE($translation) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($translation) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($translation) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(locale_translate_edit_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($lid) = T_VARIABLE($form_state) [ ] [ ] ; T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($translation) = T_STRING ( T_STRING ( , T_VARIABLE($lid) , T_VARIABLE($key) ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($value) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($translation) ) ) { T_STRING ( , T_VARIABLE($value) , T_VARIABLE($lid) , T_VARIABLE($key) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($lid) , T_VARIABLE($value) , T_VARIABLE($key) ) ; } } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($translation) ) ) { T_STRING ( , T_VARIABLE($lid) , T_VARIABLE($key) ) ; } T_STRING ( T_VARIABLE($key) ) ; } T_STRING ( T_STRING ( ) ) ; T_STRING ( , , T_STRING ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(locale_translate_delete) ( T_VARIABLE($lid) ) { T_STRING ( , T_VARIABLE($lid) ) ; T_STRING ( , T_VARIABLE($lid) ) ; T_STRING ( ) ; T_STRING ( , , T_STRING ) ; T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } T_FUNCTION(locale_add_language) ( T_VARIABLE($langcode) , T_VARIABLE($name) = T_STRING , T_VARIABLE($native) = T_STRING , T_VARIABLE($direction) = T_STRING , T_VARIABLE($domain) = , T_VARIABLE($prefix) = , T_VARIABLE($enabled) = T_STRING , T_VARIABLE($default) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($prefix) ) ) { T_VARIABLE($prefix) = T_VARIABLE($langcode) ; } T_IF ( ! T_ISSET ( T_VARIABLE($name) ) ) { T_VARIABLE($predefined) = T_STRING ( ) ; T_VARIABLE($name) = T_VARIABLE($predefined) [ T_VARIABLE($langcode) ] [ T_LNUMBER ] ; T_VARIABLE($native) = T_ISSET ( T_VARIABLE($predefined) [ T_VARIABLE($langcode) ] [ T_LNUMBER ] ) ? T_VARIABLE($predefined) [ T_VARIABLE($langcode) ] [ T_LNUMBER ] : T_VARIABLE($predefined) [ T_VARIABLE($langcode) ] [ T_LNUMBER ] ; T_VARIABLE($direction) = T_ISSET ( T_VARIABLE($predefined) [ T_VARIABLE($langcode) ] [ T_LNUMBER ] ) ? T_VARIABLE($predefined) [ T_VARIABLE($langcode) ] [ T_LNUMBER ] : T_STRING ; } T_STRING ( , T_VARIABLE($langcode) , T_VARIABLE($name) , T_VARIABLE($native) , T_VARIABLE($direction) , T_VARIABLE($domain) , T_VARIABLE($prefix) , T_VARIABLE($enabled) ) ; T_IF ( T_VARIABLE($enabled) T_BOOLEAN_AND T_VARIABLE($default) ) { T_STRING ( , T_OBJECT_CAST T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($langcode) , T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_VARIABLE($native) , T_DOUBLE_ARROW T_VARIABLE($direction) , T_DOUBLE_ARROW T_INT_CAST T_VARIABLE($enabled) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($prefix) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ) ; } T_IF ( T_VARIABLE($enabled) ) { T_STRING ( , T_STRING ( , T_LNUMBER ) + T_LNUMBER ) ; } T_STRING ( T_VARIABLE($langcode) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_VARIABLE($langcode) ) ) ; } T_FUNCTION(_locale_import_po) ( T_VARIABLE($file) , T_VARIABLE($langcode) , T_VARIABLE($mode) , T_VARIABLE($group) = T_STRING ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( T_LNUMBER ) ; } T_IF ( ! T_STRING ( T_STRING ( , T_VARIABLE($langcode) ) ) ) { T_STRING ( T_STRING ( ) , ) ; T_RETURN T_STRING ; } T_VARIABLE($status) = T_STRING ( , T_VARIABLE($file) , T_VARIABLE($mode) , T_VARIABLE($langcode) , T_VARIABLE($group) ) ; T_IF ( T_VARIABLE($status) T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ; } T_LIST ( T_VARIABLE($headerdone) , T_VARIABLE($additions) , T_VARIABLE($updates) , T_VARIABLE($deletes) ) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($headerdone) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) , ) ; } T_STRING ( T_VARIABLE($langcode) ) ; T_STRING ( , , T_STRING ) ; T_STRING ( ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($additions) , T_DOUBLE_ARROW T_VARIABLE($updates) , T_DOUBLE_ARROW T_VARIABLE($deletes) ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($langcode) , T_DOUBLE_ARROW T_VARIABLE($additions) , T_DOUBLE_ARROW T_VARIABLE($updates) , T_DOUBLE_ARROW T_VARIABLE($deletes) ) ) ; T_RETURN T_STRING ; } T_FUNCTION(_locale_import_read_po) ( T_VARIABLE($op) , T_VARIABLE($file) , T_VARIABLE($mode) = T_STRING , T_VARIABLE($lang) = T_STRING , T_VARIABLE($group) = ) { T_VARIABLE($fd) = T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , ) ; T_IF ( ! T_VARIABLE($fd) ) { T_STRING ( , T_VARIABLE($file) ) ; T_RETURN T_STRING ; } T_VARIABLE($context) = ; T_VARIABLE($current) = T_ARRAY ( ) ; T_VARIABLE($plural) = T_LNUMBER ; T_VARIABLE($lineno) = T_LNUMBER ; T_WHILE ( ! T_STRING ( T_VARIABLE($fd) ) ) { T_VARIABLE($line) = T_STRING ( T_VARIABLE($fd) , T_LNUMBER * T_LNUMBER ) ; T_IF ( T_VARIABLE($lineno) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($line) = T_STRING ( , , T_VARIABLE($line) ) ; } T_VARIABLE($lineno) T_INC ; T_VARIABLE($line) = T_STRING ( T_STRING ( T_VARIABLE($line) , T_ARRAY ( T_DOUBLE_ARROW ) ) ) ; T_IF ( ! T_STRING ( , T_VARIABLE($line) , T_LNUMBER ) ) { T_IF ( T_VARIABLE($context) T_IS_EQUAL ) { T_VARIABLE($current) [ ] [ ] = T_STRING ( T_VARIABLE($line) , T_LNUMBER ) ; } T_ELSEIF ( ( T_VARIABLE($context) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($context) T_IS_EQUAL ) ) { T_STRING ( T_VARIABLE($op) , T_VARIABLE($current) , T_VARIABLE($mode) , T_VARIABLE($lang) , T_VARIABLE($file) , T_VARIABLE($group) ) ; T_VARIABLE($current) = T_ARRAY ( ) ; T_VARIABLE($current) [ ] [ ] = T_STRING ( T_VARIABLE($line) , T_LNUMBER ) ; T_VARIABLE($context) = ; } T_ELSE { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } } T_ELSEIF ( ! T_STRING ( , T_VARIABLE($line) , T_LNUMBER ) ) { T_IF ( T_VARIABLE($context) T_IS_NOT_EQUAL ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } T_VARIABLE($line) = T_STRING ( T_STRING ( T_VARIABLE($line) , T_LNUMBER ) ) ; T_VARIABLE($quoted) = T_STRING ( T_VARIABLE($line) ) ; T_IF ( T_VARIABLE($quoted) T_IS_IDENTICAL T_STRING ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } T_VARIABLE($current) [ ] = T_VARIABLE($current) [ ] . . T_VARIABLE($quoted) ; T_VARIABLE($context) = ; } T_ELSEIF ( ! T_STRING ( , T_VARIABLE($line) , T_LNUMBER ) ) { T_IF ( T_VARIABLE($context) T_IS_EQUAL ) { T_STRING ( T_VARIABLE($op) , T_VARIABLE($current) , T_VARIABLE($mode) , T_VARIABLE($lang) , T_VARIABLE($file) , T_VARIABLE($group) ) ; T_VARIABLE($current) = T_ARRAY ( ) ; } T_ELSEIF ( T_VARIABLE($context) T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } T_VARIABLE($line) = T_STRING ( T_STRING ( T_VARIABLE($line) , T_LNUMBER ) ) ; T_VARIABLE($quoted) = T_STRING ( T_VARIABLE($line) ) ; T_IF ( T_VARIABLE($quoted) T_IS_IDENTICAL T_STRING ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } T_VARIABLE($current) [ ] = T_VARIABLE($quoted) ; T_VARIABLE($context) = ; } T_ELSEIF ( ! T_STRING ( , T_VARIABLE($line) , T_LNUMBER ) ) { T_IF ( ( T_VARIABLE($context) T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($context) T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($context) T_IS_NOT_EQUAL ) ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($line) , ) T_IS_IDENTICAL T_STRING ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } T_VARIABLE($frombracket) = T_STRING ( T_VARIABLE($line) , ) ; T_VARIABLE($plural) = T_STRING ( T_VARIABLE($frombracket) , T_LNUMBER , T_STRING ( T_VARIABLE($frombracket) , ) - T_LNUMBER ) ; T_VARIABLE($line) = T_STRING ( T_STRING ( T_VARIABLE($line) , ) ) ; T_VARIABLE($quoted) = T_STRING ( T_VARIABLE($line) ) ; T_IF ( T_VARIABLE($quoted) T_IS_IDENTICAL T_STRING ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } T_VARIABLE($current) [ ] [ T_VARIABLE($plural) ] = T_VARIABLE($quoted) ; T_VARIABLE($context) = ; } T_ELSEIF ( ! T_STRING ( , T_VARIABLE($line) , T_LNUMBER ) ) { T_IF ( T_VARIABLE($context) T_IS_NOT_EQUAL ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } T_VARIABLE($line) = T_STRING ( T_STRING ( T_VARIABLE($line) , T_LNUMBER ) ) ; T_VARIABLE($quoted) = T_STRING ( T_VARIABLE($line) ) ; T_IF ( T_VARIABLE($quoted) T_IS_IDENTICAL T_STRING ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } T_VARIABLE($current) [ ] = T_VARIABLE($quoted) ; T_VARIABLE($context) = ; } T_ELSEIF ( T_VARIABLE($line) T_IS_NOT_EQUAL ) { T_VARIABLE($quoted) = T_STRING ( T_VARIABLE($line) ) ; T_IF ( T_VARIABLE($quoted) T_IS_IDENTICAL T_STRING ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } T_IF ( ( T_VARIABLE($context) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($context) T_IS_EQUAL ) ) { T_VARIABLE($current) [ ] T_CONCAT_EQUAL T_VARIABLE($quoted) ; } T_ELSEIF ( T_VARIABLE($context) T_IS_EQUAL ) { T_VARIABLE($current) [ ] T_CONCAT_EQUAL T_VARIABLE($quoted) ; } T_ELSEIF ( T_VARIABLE($context) T_IS_EQUAL ) { T_VARIABLE($current) [ ] [ T_VARIABLE($plural) ] T_CONCAT_EQUAL T_VARIABLE($quoted) ; } T_ELSE { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } } } T_IF ( ( T_VARIABLE($context) T_IS_EQUAL ) T_BOOLEAN_OR ( T_VARIABLE($context) T_IS_EQUAL ) ) { T_STRING ( T_VARIABLE($op) , T_VARIABLE($current) , T_VARIABLE($mode) , T_VARIABLE($lang) , T_VARIABLE($file) , T_VARIABLE($group) ) ; } T_ELSEIF ( T_VARIABLE($context) T_IS_NOT_EQUAL ) { T_STRING ( , T_VARIABLE($file) , T_VARIABLE($lineno) ) ; T_RETURN T_STRING ; } } T_FUNCTION(_locale_import_message) ( T_VARIABLE($message) , T_VARIABLE($file) , T_VARIABLE($lineno) = T_STRING ) { T_VARIABLE($vars) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($lineno) ) ) { T_VARIABLE($vars) [ ] = T_VARIABLE($lineno) ; } T_VARIABLE($t) = T_STRING ( ) ; T_STRING ( T_VARIABLE($t) ( T_VARIABLE($message) , T_VARIABLE($vars) ) , ) ; } T_FUNCTION(_locale_import_one_string) ( T_VARIABLE($op) , T_VARIABLE($value) = T_STRING , T_VARIABLE($mode) = T_STRING , T_VARIABLE($lang) = T_STRING , T_VARIABLE($file) = T_STRING , T_VARIABLE($group) = ) { T_STATIC T_VARIABLE($report) = T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_STATIC T_VARIABLE($headerdone) = T_STRING ; T_STATIC T_VARIABLE($strings) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_RETURN T_VARIABLE($strings) ; T_CASE : T_VARIABLE($strings) [ T_VARIABLE($value) [ ] ] = T_VARIABLE($value) [ ] ; T_RETURN ; T_CASE : T_RETURN T_ARRAY ( T_VARIABLE($headerdone) , T_VARIABLE($report) [ T_LNUMBER ] , T_VARIABLE($report) [ T_LNUMBER ] , T_VARIABLE($report) [ T_LNUMBER ] ) ; T_CASE : T_IF ( T_VARIABLE($value) [ ] T_IS_EQUAL ) { T_VARIABLE($header) = T_STRING ( T_VARIABLE($value) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($header) [ ] ) T_BOOLEAN_AND T_VARIABLE($p) = T_STRING ( T_VARIABLE($header) [ ] , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_LIST ( T_VARIABLE($nplurals) , T_VARIABLE($plural) ) = T_VARIABLE($p) ; T_STRING ( , T_VARIABLE($nplurals) , T_VARIABLE($plural) , T_VARIABLE($lang) ) ; } T_ELSE { T_STRING ( , T_LNUMBER , , T_VARIABLE($lang) ) ; } T_VARIABLE($headerdone) = T_STRING ; } T_ELSE { T_VARIABLE($comments) = T_STRING ( T_EMPTY ( T_VARIABLE($value) [ ] ) ? T_ARRAY ( ) : T_VARIABLE($value) [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($value) [ ] , ) ) { T_VARIABLE($english) = T_STRING ( , T_VARIABLE($value) [ ] , T_LNUMBER ) ; T_VARIABLE($entries) = T_STRING ( T_VARIABLE($value) [ ] ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_STRING ( T_VARIABLE($entries) ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($english) [ ] = T_VARIABLE($english) [ T_LNUMBER ] ; } T_VARIABLE($translation) = T_STRING ( , T_VARIABLE($value) [ ] , T_VARIABLE($entries) ) ; T_VARIABLE($english) = T_STRING ( , T_VARIABLE($english) , T_VARIABLE($entries) ) ; T_FOREACH ( T_VARIABLE($translation) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($trans) ) { T_IF ( T_VARIABLE($key) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($plid) = T_LNUMBER ; } T_VARIABLE($plid) = T_STRING ( T_VARIABLE($report) , T_VARIABLE($lang) , T_VARIABLE($english) [ T_VARIABLE($key) ] , T_VARIABLE($trans) , T_VARIABLE($group) , T_VARIABLE($comments) , T_VARIABLE($mode) , T_VARIABLE($plid) , T_VARIABLE($key) ) ; } } T_ELSE { T_VARIABLE($english) = T_VARIABLE($value) [ ] ; T_VARIABLE($translation) = T_VARIABLE($value) [ ] ; T_STRING ( T_VARIABLE($report) , T_VARIABLE($lang) , T_VARIABLE($english) , T_VARIABLE($translation) , T_VARIABLE($group) , T_VARIABLE($comments) , T_VARIABLE($mode) ) ; } } } } T_FUNCTION(_locale_import_one_string_db) ( & T_VARIABLE($report) , T_VARIABLE($langcode) , T_VARIABLE($source) , T_VARIABLE($translation) , T_VARIABLE($textgroup) , T_VARIABLE($location) , T_VARIABLE($mode) , T_VARIABLE($plid) = T_STRING , T_VARIABLE($plural) = T_STRING ) { T_VARIABLE($lid) = T_STRING ( T_STRING ( , T_VARIABLE($source) , T_VARIABLE($textgroup) ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($translation) ) ) { T_IF ( T_VARIABLE($lid) ) { T_STRING ( , T_VARIABLE($location) , T_VARIABLE($lid) ) ; T_VARIABLE($exists) = T_BOOL_CAST T_STRING ( T_STRING ( , T_VARIABLE($lid) , T_VARIABLE($langcode) ) ) ; T_IF ( ! T_VARIABLE($exists) ) { T_STRING ( , T_VARIABLE($lid) , T_VARIABLE($langcode) , T_VARIABLE($translation) , T_VARIABLE($plid) , T_VARIABLE($plural) ) ; T_VARIABLE($report) [ T_LNUMBER ] T_INC ; } T_ELSE T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_STRING ) { T_STRING ( , T_VARIABLE($translation) , T_VARIABLE($plid) , T_VARIABLE($plural) , T_VARIABLE($langcode) , T_VARIABLE($lid) ) ; T_VARIABLE($report) [ T_LNUMBER ] T_INC ; } } T_ELSE { T_STRING ( , T_VARIABLE($location) , T_VARIABLE($source) , T_VARIABLE($textgroup) ) ; T_VARIABLE($lid) = T_STRING ( T_STRING ( , T_VARIABLE($source) , T_VARIABLE($textgroup) ) ) ; T_STRING ( , T_VARIABLE($lid) , T_VARIABLE($langcode) , T_VARIABLE($translation) , T_VARIABLE($plid) , T_VARIABLE($plural) ) ; T_VARIABLE($report) [ T_LNUMBER ] T_INC ; } } T_ELSEIF ( T_VARIABLE($mode) T_IS_EQUAL T_STRING ) { T_STRING ( , T_VARIABLE($translation) , T_VARIABLE($langcode) , T_VARIABLE($lid) , T_VARIABLE($plid) , T_VARIABLE($plural) ) ; T_VARIABLE($report) [ T_LNUMBER ] T_INC ; } T_RETURN T_VARIABLE($lid) ; } T_FUNCTION(_locale_import_parse_header) ( T_VARIABLE($header) ) { T_VARIABLE($header_parsed) = T_ARRAY ( ) ; T_VARIABLE($lines) = T_STRING ( , T_STRING ( , T_VARIABLE($header) ) ) ; T_FOREACH ( T_VARIABLE($lines) T_AS T_VARIABLE($line) ) { T_IF ( T_VARIABLE($line) ) { T_LIST ( T_VARIABLE($tag) , T_VARIABLE($contents) ) = T_STRING ( , T_VARIABLE($line) , T_LNUMBER ) ; T_VARIABLE($header_parsed) [ T_STRING ( T_VARIABLE($tag) ) ] = T_STRING ( T_VARIABLE($contents) ) ; } } T_RETURN T_VARIABLE($header_parsed) ; } T_FUNCTION(_locale_import_parse_plural_forms) ( T_VARIABLE($pluralforms) , T_VARIABLE($filename) ) { T_VARIABLE($pluralforms) = T_STRING ( T_VARIABLE($pluralforms) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($nplurals) = T_STRING ( T_VARIABLE($pluralforms) , ) ; T_IF ( T_STRING ( T_VARIABLE($nplurals) , ) ) { T_VARIABLE($nplurals) = T_STRING ( T_VARIABLE($nplurals) , T_LNUMBER , T_STRING ( T_VARIABLE($nplurals) , ) - T_LNUMBER ) ; } T_ELSE { T_RETURN T_STRING ; } T_VARIABLE($plural) = T_STRING ( T_VARIABLE($pluralforms) , ) ; T_IF ( T_STRING ( T_VARIABLE($plural) , ) ) { T_VARIABLE($plural) = T_STRING ( T_VARIABLE($plural) , T_LNUMBER , T_STRING ( T_VARIABLE($plural) , ) - T_LNUMBER ) ; } T_ELSE { T_RETURN T_STRING ; } T_VARIABLE($plural) = T_STRING ( T_VARIABLE($plural) ) ; T_IF ( T_VARIABLE($plural) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_ARRAY ( T_VARIABLE($nplurals) , T_VARIABLE($plural) ) ; } T_ELSE { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($filename) ) ) , ) ; T_RETURN T_STRING ; } } T_FUNCTION(_locale_import_parse_arithmetic) ( T_VARIABLE($string) ) { T_VARIABLE($prec) = T_ARRAY ( T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($rasc) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($tokens) = T_STRING ( T_VARIABLE($string) ) ; T_VARIABLE($opstk) = T_ARRAY ( ) ; T_VARIABLE($elstk) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tokens) T_AS T_VARIABLE($token) ) { T_VARIABLE($ctok) = T_VARIABLE($token) ; T_IF ( T_STRING ( T_VARIABLE($token) ) ) { T_VARIABLE($elstk) [ ] = T_VARIABLE($ctok) ; } T_ELSEIF ( T_VARIABLE($ctok) T_IS_EQUAL ) { T_VARIABLE($elstk) [ ] = ; } T_ELSEIF ( T_VARIABLE($ctok) T_IS_EQUAL ) { T_VARIABLE($opstk) [ ] = T_VARIABLE($ctok) ; } T_ELSEIF ( T_VARIABLE($ctok) T_IS_EQUAL ) { T_VARIABLE($topop) = T_STRING ( T_VARIABLE($opstk) ) ; T_WHILE ( T_ISSET ( T_VARIABLE($topop) ) T_BOOLEAN_AND ( T_VARIABLE($topop) T_IS_NOT_EQUAL ) ) { T_VARIABLE($elstk) [ ] = T_VARIABLE($topop) ; T_VARIABLE($topop) = T_STRING ( T_VARIABLE($opstk) ) ; } } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($prec) [ T_VARIABLE($ctok) ] ) ) { T_VARIABLE($topop) = T_STRING ( T_VARIABLE($opstk) ) ; T_WHILE ( T_ISSET ( T_VARIABLE($topop) ) T_BOOLEAN_AND ( T_VARIABLE($prec) [ T_VARIABLE($topop) ] T_IS_GREATER_OR_EQUAL T_VARIABLE($prec) [ T_VARIABLE($ctok) ] ) T_BOOLEAN_AND ! ( ( T_VARIABLE($prec) [ T_VARIABLE($topop) ] T_IS_EQUAL T_VARIABLE($prec) [ T_VARIABLE($ctok) ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($rasc) [ T_VARIABLE($topop) ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($rasc) [ T_VARIABLE($ctok) ] ) ) ) { T_VARIABLE($elstk) [ ] = T_VARIABLE($topop) ; T_VARIABLE($topop) = T_STRING ( T_VARIABLE($opstk) ) ; } T_IF ( T_VARIABLE($topop) ) { T_VARIABLE($opstk) [ ] = T_VARIABLE($topop) ; } T_VARIABLE($opstk) [ ] = T_VARIABLE($ctok) ; } T_ELSE { T_RETURN T_STRING ; } } T_VARIABLE($topop) = T_STRING ( T_VARIABLE($opstk) ) ; T_WHILE ( T_VARIABLE($topop) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($elstk) [ ] = T_VARIABLE($topop) ; T_VARIABLE($topop) = T_STRING ( T_VARIABLE($opstk) ) ; } T_VARIABLE($prevsize) = T_STRING ( T_VARIABLE($elstk) ) + T_LNUMBER ; T_WHILE ( T_STRING ( T_VARIABLE($elstk) ) < T_VARIABLE($prevsize) ) { T_VARIABLE($prevsize) = T_STRING ( T_VARIABLE($elstk) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($elstk) ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($op) = T_VARIABLE($elstk) [ T_VARIABLE($i) ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($prec) [ T_VARIABLE($op) ] ) ) { T_VARIABLE($f) = ; T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($f) = T_VARIABLE($elstk) [ T_VARIABLE($i) - T_LNUMBER ] . . T_VARIABLE($elstk) [ T_VARIABLE($i) - T_LNUMBER ] . ; } T_ELSEIF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($f) = . T_VARIABLE($elstk) [ T_VARIABLE($i) - T_LNUMBER ] . . T_VARIABLE($elstk) [ T_VARIABLE($i) - T_LNUMBER ] ; } T_ELSE { T_VARIABLE($f) = . T_VARIABLE($elstk) [ T_VARIABLE($i) - T_LNUMBER ] . T_VARIABLE($op) . T_VARIABLE($elstk) [ T_VARIABLE($i) - T_LNUMBER ] . ; } T_STRING ( T_VARIABLE($elstk) , T_VARIABLE($i) - T_LNUMBER , T_LNUMBER , T_VARIABLE($f) ) ; T_BREAK ; } } } T_IF ( T_STRING ( T_VARIABLE($elstk) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_VARIABLE($elstk) [ T_LNUMBER ] ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(_locale_import_tokenize_formula) ( T_VARIABLE($formula) ) { T_VARIABLE($formula) = T_STRING ( , , T_VARIABLE($formula) ) ; T_VARIABLE($tokens) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($formula) ) ; T_VARIABLE($i) T_INC ) { T_IF ( T_STRING ( T_VARIABLE($formula) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($num) = T_VARIABLE($formula) [ T_VARIABLE($i) ] ; T_VARIABLE($j) = T_VARIABLE($i) + T_LNUMBER ; T_WHILE ( T_VARIABLE($j) < T_STRING ( T_VARIABLE($formula) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($formula) [ T_VARIABLE($j) ] ) ) { T_VARIABLE($num) T_CONCAT_EQUAL T_VARIABLE($formula) [ T_VARIABLE($j) ] ; T_VARIABLE($j) T_INC ; } T_VARIABLE($i) = T_VARIABLE($j) - T_LNUMBER ; T_VARIABLE($tokens) [ ] = T_VARIABLE($num) ; } T_ELSEIF ( T_VARIABLE($pos) = T_STRING ( , T_VARIABLE($formula) [ T_VARIABLE($i) ] ) ) { T_VARIABLE($next) = T_VARIABLE($formula) [ T_VARIABLE($i) + T_LNUMBER ] ; T_SWITCH ( T_VARIABLE($pos) ) { T_CASE T_LNUMBER : T_CASE T_LNUMBER : T_CASE T_LNUMBER : T_CASE T_LNUMBER : T_IF ( T_VARIABLE($next) T_IS_EQUAL ) { T_VARIABLE($tokens) [ ] = T_VARIABLE($formula) [ T_VARIABLE($i) ] . ; T_VARIABLE($i) T_INC ; } T_ELSE { T_VARIABLE($tokens) [ ] = T_VARIABLE($formula) [ T_VARIABLE($i) ] ; } T_BREAK ; T_CASE T_LNUMBER : T_IF ( T_VARIABLE($next) T_IS_EQUAL ) { T_VARIABLE($tokens) [ ] = ; T_VARIABLE($i) T_INC ; } T_ELSE { T_VARIABLE($tokens) [ ] = T_VARIABLE($formula) [ T_VARIABLE($i) ] ; } T_BREAK ; T_CASE T_LNUMBER : T_IF ( T_VARIABLE($next) T_IS_EQUAL ) { T_VARIABLE($tokens) [ ] = ; T_VARIABLE($i) T_INC ; } T_ELSE { T_VARIABLE($tokens) [ ] = T_VARIABLE($formula) [ T_VARIABLE($i) ] ; } T_BREAK ; } } T_ELSE { T_VARIABLE($tokens) [ ] = T_VARIABLE($formula) [ T_VARIABLE($i) ] ; } } T_RETURN T_VARIABLE($tokens) ; } T_FUNCTION(_locale_import_append_plural) ( T_VARIABLE($entry) , T_VARIABLE($key) ) { T_IF ( T_VARIABLE($key) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_VARIABLE($key) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_VARIABLE($entry) ; } T_VARIABLE($entry) = T_STRING ( , , T_VARIABLE($entry) ) ; T_RETURN T_STRING ( , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($entry) ) ; } T_FUNCTION(_locale_import_shorten_comments) ( T_VARIABLE($comment) ) { T_VARIABLE($comm) = ; T_WHILE ( T_STRING ( T_VARIABLE($comment) ) ) { T_VARIABLE($test) = T_VARIABLE($comm) . T_STRING ( T_STRING ( T_VARIABLE($comment) ) , T_LNUMBER ) . ; T_IF ( T_STRING ( T_VARIABLE($comm) ) < T_LNUMBER ) { T_VARIABLE($comm) = T_VARIABLE($test) ; } T_ELSE { T_BREAK ; } } T_RETURN T_STRING ( T_VARIABLE($comm) , T_LNUMBER , - T_LNUMBER ) ; } T_FUNCTION(_locale_import_parse_quoted) ( T_VARIABLE($string) ) { T_IF ( T_STRING ( T_VARIABLE($string) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($string) , - T_LNUMBER , T_LNUMBER ) ) { T_RETURN T_STRING ; } T_VARIABLE($quote) = T_STRING ( T_VARIABLE($string) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($string) = T_STRING ( T_VARIABLE($string) , T_LNUMBER , - T_LNUMBER ) ; T_IF ( T_VARIABLE($quote) T_IS_EQUAL ) { T_RETURN T_STRING ( T_VARIABLE($string) ) ; } T_ELSEIF ( T_VARIABLE($quote) T_IS_EQUAL ) { T_RETURN T_VARIABLE($string) ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(_locale_parse_js_file) ( T_VARIABLE($filepath) ) { T_GLOBAL T_VARIABLE($language) ; T_VARIABLE($file) = T_STRING ( T_VARIABLE($filepath) ) ; T_STRING ( . T_STRING . , T_VARIABLE($file) , T_VARIABLE($t_matches) ) ; T_STRING ( . T_STRING . , T_VARIABLE($file) , T_VARIABLE($plural_matches) ) ; T_VARIABLE($all_matches) = T_STRING ( T_VARIABLE($plural_matches) [ T_LNUMBER ] , T_VARIABLE($t_matches) [ T_LNUMBER ] ) ; T_FOREACH ( T_VARIABLE($all_matches) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($string) ) { T_VARIABLE($strings) = T_ARRAY ( T_VARIABLE($string) ) ; T_IF ( T_ISSET ( T_VARIABLE($plural_matches) [ T_LNUMBER ] [ T_VARIABLE($key) ] ) ) { T_VARIABLE($strings) [ ] = T_VARIABLE($plural_matches) [ T_LNUMBER ] [ T_VARIABLE($key) ] ; } T_FOREACH ( T_VARIABLE($strings) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($string) ) { T_VARIABLE($string) = T_STRING ( , T_STRING ( , T_STRING ( T_VARIABLE($string) , T_LNUMBER , - T_LNUMBER ) ) ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($string) ) ; T_IF ( T_VARIABLE($source) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($locations) = T_STRING ( , T_VARIABLE($source) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_STRING ( T_VARIABLE($filepath) , T_VARIABLE($locations) ) ) { T_VARIABLE($locations) [ ] = T_VARIABLE($filepath) ; T_VARIABLE($locations) = T_STRING ( , T_VARIABLE($locations) ) ; T_STRING ( , T_VARIABLE($locations) , T_VARIABLE($source) T_OBJECT_OPERATOR T_STRING ) ; } } T_ELSE { T_STRING ( , T_VARIABLE($filepath) , T_VARIABLE($string) ) ; } } } } T_FUNCTION(_locale_export_get_strings) ( T_VARIABLE($language) = T_STRING , T_VARIABLE($group) = ) { T_IF ( T_ISSET ( T_VARIABLE($language) ) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($group) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($group) ) ; } T_VARIABLE($strings) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($child) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($string) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING : ) ; T_IF ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($string) [ ] = T_STRING ; T_VARIABLE($strings) [ T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($strings) [ T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($string) ; } T_RETURN T_VARIABLE($strings) ; } T_FUNCTION(_locale_export_po_generate) ( T_VARIABLE($language) = T_STRING , T_VARIABLE($strings) = T_ARRAY ( ) , T_VARIABLE($header) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( ! T_ISSET ( T_VARIABLE($header) ) ) { T_IF ( T_ISSET ( T_VARIABLE($language) ) ) { T_VARIABLE($header) = . T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING . . T_STRING ( , ) . ; T_VARIABLE($header) T_CONCAT_EQUAL . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING . ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($header) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($header) T_CONCAT_EQUAL . T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING . . T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; } } T_ELSE { T_VARIABLE($header) = ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; T_VARIABLE($header) T_CONCAT_EQUAL ; } } T_VARIABLE($output) = T_VARIABLE($header) . ; T_FOREACH ( T_VARIABLE($strings) T_AS T_VARIABLE($lid) T_DOUBLE_ARROW T_VARIABLE($string) ) { T_IF ( ! T_ISSET ( T_VARIABLE($string) [ ] ) ) { T_IF ( T_VARIABLE($string) [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($string) [ ] . ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($string) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($string) [ ] ) ) { T_VARIABLE($plural) = T_VARIABLE($string) [ ] ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($strings) [ T_VARIABLE($plural) ] [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($language) ) ) { T_VARIABLE($translation) = T_VARIABLE($string) [ ] ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($i) T_INC ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($i) . . T_STRING ( T_VARIABLE($translation) ) ; T_IF ( T_VARIABLE($plural) ) { T_VARIABLE($translation) = T_STRING ( T_VARIABLE($strings) [ T_VARIABLE($plural) ] [ ] ) ; T_VARIABLE($plural) = T_ISSET ( T_VARIABLE($strings) [ T_VARIABLE($plural) ] [ ] ) ? T_VARIABLE($strings) [ T_VARIABLE($plural) ] [ ] : T_LNUMBER ; } T_ELSE { T_VARIABLE($translation) = ; } } } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL . ; T_VARIABLE($output) T_CONCAT_EQUAL . ; } } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($string) [ ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_locale_export_po) ( T_VARIABLE($language) = T_STRING , T_VARIABLE($output) = T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($language) ) ) { T_VARIABLE($filename) = T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING . ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($filename) ) ) ; } T_ELSE { T_VARIABLE($filename) = ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($filename) ) ) ; } T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($filename) ) ; T_STRING ( ) ; T_PRINT T_VARIABLE($output) ; T_EXIT ( ) ; } T_FUNCTION(_locale_export_string) ( T_VARIABLE($str) ) { T_VARIABLE($stri) = T_STRING ( T_VARIABLE($str) , ) ; T_VARIABLE($parts) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($stri) T_IS_NOT_EQUAL ) { T_VARIABLE($i) = T_STRING ( T_VARIABLE($stri) , ) ; T_IF ( T_VARIABLE($i) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($curstr) = T_VARIABLE($stri) ; T_VARIABLE($stri) = ; } T_ELSE { T_VARIABLE($curstr) = T_STRING ( T_VARIABLE($stri) , T_LNUMBER , T_VARIABLE($i) + T_LNUMBER ) ; T_VARIABLE($stri) = T_STRING ( T_VARIABLE($stri) , T_VARIABLE($i) + T_LNUMBER ) ; } T_VARIABLE($curparts) = T_STRING ( , T_STRING ( T_VARIABLE($curstr) , T_LNUMBER ) ) ; T_VARIABLE($parts) = T_STRING ( T_VARIABLE($parts) , T_VARIABLE($curparts) ) ; } T_IF ( T_STRING ( T_VARIABLE($parts) ) > T_LNUMBER ) { T_RETURN . T_STRING ( , T_VARIABLE($parts) ) . ; } T_ELSEIF ( T_STRING ( T_VARIABLE($parts) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_ENCAPSED_AND_WHITESPACE T_VARIABLE($parts) [ T_NUM_STRING ] T_ENCAPSED_AND_WHITESPACE ; } T_ELSE { T_RETURN ; } } T_FUNCTION(_locale_export_wrap) ( T_VARIABLE($str) , T_VARIABLE($len) ) { T_VARIABLE($words) = T_STRING ( , T_VARIABLE($str) ) ; T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($cur) = ; T_VARIABLE($nstr) = T_LNUMBER ; T_WHILE ( T_STRING ( T_VARIABLE($words) ) ) { T_VARIABLE($word) = T_STRING ( T_VARIABLE($words) ) ; T_IF ( T_VARIABLE($nstr) ) { T_VARIABLE($cur) = T_VARIABLE($word) ; T_VARIABLE($nstr) = T_LNUMBER ; } T_ELSEIF ( T_STRING ( T_VARIABLE($cur) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($word) ) > T_VARIABLE($len) ) { T_VARIABLE($ret) [ ] = T_VARIABLE($cur) . ; T_VARIABLE($cur) = T_VARIABLE($word) ; } T_ELSE { T_VARIABLE($cur) = T_VARIABLE($cur) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($word) ; } } T_VARIABLE($ret) [ ] = T_VARIABLE($cur) ; T_RETURN T_STRING ( , T_VARIABLE($ret) ) ; } T_FUNCTION(_locale_export_remove_plural) ( T_VARIABLE($entry) ) { T_RETURN T_STRING ( , , T_VARIABLE($entry) ) ; } T_FUNCTION(_locale_translate_seek) ( ) { T_VARIABLE($output) = ; T_IF ( T_VARIABLE($query) = T_STRING ( ) ) { T_VARIABLE($join) = ; T_VARIABLE($arguments) = T_ARRAY ( ) ; T_VARIABLE($limit_language) = T_STRING ; T_SWITCH ( T_VARIABLE($query) [ ] ) { T_CASE : T_VARIABLE($where) = ; T_VARIABLE($orderby) = ; T_VARIABLE($arguments) [ ] = T_VARIABLE($query) [ ] ; T_BREAK ; T_CASE : T_VARIABLE($where) = ; T_VARIABLE($orderby) = ; T_VARIABLE($arguments) [ ] = T_VARIABLE($query) [ ] ; T_BREAK ; T_CASE : T_DEFAULT : T_VARIABLE($where) = ; T_VARIABLE($orderby) = ; T_VARIABLE($arguments) [ ] = T_VARIABLE($query) [ ] ; T_VARIABLE($arguments) [ ] = T_VARIABLE($query) [ ] ; T_BREAK ; } T_VARIABLE($grouplimit) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($query) [ ] ) T_BOOLEAN_AND T_VARIABLE($query) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($grouplimit) = ; T_VARIABLE($arguments) [ ] = T_VARIABLE($query) [ ] ; } T_SWITCH ( T_VARIABLE($query) [ ] ) { T_CASE : T_VARIABLE($sql) = T_VARIABLE($join) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($grouplimit) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($arguments) = T_ARRAY ( T_VARIABLE($query) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($grouplimit) ) ) { T_VARIABLE($arguments) [ ] = T_VARIABLE($query) [ ] ; } T_BREAK ; T_CASE : T_VARIABLE($sql) = T_VARIABLE($join) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($where) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($grouplimit) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($orderby) ; T_BREAK ; T_DEFAULT : T_VARIABLE($sql) = T_VARIABLE($join) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($where) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($grouplimit) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($orderby) ; T_STRING ( T_VARIABLE($arguments) , T_VARIABLE($query) [ ] ) ; T_VARIABLE($limit_language) = T_VARIABLE($query) [ ] ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($arguments) ) ; T_VARIABLE($groups) = T_STRING ( , ) ; T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , ( T_VARIABLE($limit_language) ) ? T_STRING ( ) : T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($arr) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($locale) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($arr) [ T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($groups) [ T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ] ; T_VARIABLE($arr) [ T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ] [ ] [ T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($arr) [ T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($arr) [ T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($arr) T_AS T_VARIABLE($lid) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($value) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( T_VARIABLE($value) [ ] , T_LNUMBER , T_STRING , T_STRING ) ) . . T_VARIABLE($value) [ ] . ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($value) [ ] , T_VARIABLE($limit_language) ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($lid) ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($lid) ) , T_DOUBLE_ARROW ) , ) ; } T_IF ( T_STRING ( T_VARIABLE($rows) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_IF ( T_VARIABLE($pager) = T_STRING ( , T_STRING , T_LNUMBER ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($pager) ; } } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_locale_translate_seek_query) ( ) { T_STATIC T_VARIABLE($query) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($query) ) ) { T_VARIABLE($query) = T_ARRAY ( ) ; T_VARIABLE($fields) = T_ARRAY ( , , , ) ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($field) ) { T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ T_VARIABLE($field) ] ) ) { T_VARIABLE($query) [ T_VARIABLE($field) ] = T_VARIABLE($_REQUEST) [ T_VARIABLE($field) ] ; } } } T_RETURN T_VARIABLE($query) ; } T_FUNCTION(_locale_invalidate_js) ( T_VARIABLE($langcode) = T_STRING ) { T_VARIABLE($parsed) = T_STRING ( , T_ARRAY ( ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($langcode) ) ) { T_VARIABLE($languages) = T_STRING ( ) ; T_UNSET ( T_VARIABLE($languages) [ ] ) ; T_FOREACH ( T_VARIABLE($languages) T_AS T_VARIABLE($lcode) T_DOUBLE_ARROW T_VARIABLE($data) ) { T_VARIABLE($parsed) [ . T_VARIABLE($lcode) ] = ; } } T_ELSE { T_VARIABLE($parsed) [ . T_VARIABLE($langcode) ] = ; } T_STRING ( , T_VARIABLE($parsed) ) ; T_RETURN T_VARIABLE($parsed) ; } T_FUNCTION(_locale_rebuild_js) ( T_VARIABLE($langcode) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($langcode) ) ) { T_GLOBAL T_VARIABLE($language) ; } T_ELSE { T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($language) = T_VARIABLE($languages) [ T_VARIABLE($langcode) ] ; } T_VARIABLE($result) = T_STRING ( , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($translations) = T_VARIABLE($plurals) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($plurals) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($plurals) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING T_DOUBLE_ARROW T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($plurals) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] T_PLUS_EQUAL T_ARRAY ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING T_DOUBLE_ARROW T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($plurals) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($translations) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING T_DOUBLE_ARROW T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) + T_VARIABLE($plurals) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] ; T_UNSET ( T_VARIABLE($plurals) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] ) ; } T_ELSE { T_VARIABLE($translations) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; } } } T_VARIABLE($data) = T_VARIABLE($status) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($translations) ) ) { T_VARIABLE($data) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($data) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING } T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($data) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($translations) ) . ; T_VARIABLE($data_hash) = T_STRING ( T_VARIABLE($data) ) ; } T_VARIABLE($dir) = T_STRING ( T_STRING ( , ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( ! T_VARIABLE($data) T_BOOLEAN_OR T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($data_hash) ) ) { T_STRING ( T_STRING ( T_VARIABLE($dir) . . T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING . ) ) ; T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($status) = ; } T_IF ( T_VARIABLE($data) T_BOOLEAN_AND T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($data_hash) ) { T_STRING ( T_VARIABLE($dir) , T_STRING ) ; T_VARIABLE($dest) = T_VARIABLE($dir) . . T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($data_hash) . ; T_IF ( T_STRING ( T_VARIABLE($data) , T_VARIABLE($dest) ) ) { T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($data_hash) ; T_VARIABLE($status) = ( T_VARIABLE($status) T_IS_EQUAL ) ? : ; } T_ELSE { T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($status) = ; } } T_IF ( T_VARIABLE($status) ) { T_STRING ( , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($default_langcode) = T_STRING ( ) ; T_IF ( T_VARIABLE($default_langcode) T_IS_EQUAL T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($default) = T_STRING ( T_STRING ( , T_VARIABLE($default_langcode) ) ) ; T_STRING ( , T_VARIABLE($default) ) ; } } T_SWITCH ( T_VARIABLE($status) ) { T_CASE : T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_RETURN T_STRING ; T_CASE : T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_RETURN T_STRING ; T_CASE : T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_RETURN T_STRING ; T_CASE : T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) , T_STRING ) ; T_RETURN T_STRING ; T_DEFAULT : T_RETURN T_STRING ; } } T_FUNCTION(_locale_translate_language_list) ( T_VARIABLE($translation) , T_VARIABLE($limit_language) ) { T_STRING ( T_STRING ( , ) . , , , T_STRING ) ; T_VARIABLE($languages) = T_STRING ( ) ; T_UNSET ( T_VARIABLE($languages) [ ] ) ; T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($languages) T_AS T_VARIABLE($langcode) T_DOUBLE_ARROW T_VARIABLE($language) ) { T_IF ( ! T_VARIABLE($limit_language) T_BOOLEAN_OR T_VARIABLE($limit_language) T_IS_EQUAL T_VARIABLE($langcode) ) { T_VARIABLE($output) T_CONCAT_EQUAL ( ! T_EMPTY ( T_VARIABLE($translation) [ T_VARIABLE($langcode) ] ) ) ? T_VARIABLE($langcode) . : T_ENCAPSED_AND_WHITESPACE T_VARIABLE($langcode) T_ENCAPSED_AND_WHITESPACE ; } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_locale_prepare_predefined_list) ( ) { T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($predefined) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($predefined) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_ISSET ( T_VARIABLE($languages) [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($predefined) [ T_VARIABLE($key) ] ) ; T_CONTINUE ; } T_IF ( T_STRING ( T_VARIABLE($value) ) > T_LNUMBER ) { T_VARIABLE($tname) = T_STRING ( T_VARIABLE($value) [ T_LNUMBER ] ) ; T_VARIABLE($predefined) [ T_VARIABLE($key) ] = ( T_VARIABLE($tname) T_IS_EQUAL T_VARIABLE($value) [ T_LNUMBER ] ) ? T_VARIABLE($tname) : T_VARIABLE($tname) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) [ T_NUM_STRING ] T_ENCAPSED_AND_WHITESPACE ; } T_ELSE { T_VARIABLE($predefined) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($value) [ T_LNUMBER ] ) ; } } T_STRING ( T_VARIABLE($predefined) ) ; T_RETURN T_VARIABLE($predefined) ; } T_FUNCTION(_locale_get_predefined_list) ( ) {} T_FUNCTION(locale_batch_by_language) ( T_VARIABLE($langcode) , T_VARIABLE($finished) = T_STRING , T_VARIABLE($skip) = T_ARRAY ( ) ) { T_VARIABLE($files) = T_ARRAY ( ) ; T_VARIABLE($components) = T_ARRAY ( ) ; T_VARIABLE($query) = ; T_IF ( T_STRING ( T_VARIABLE($skip) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($skip) , ) . ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) , T_VARIABLE($skip) ) ; T_WHILE ( T_VARIABLE($component) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($files) = T_STRING ( T_VARIABLE($files) , T_STRING ( T_STRING ( T_VARIABLE($component) T_OBJECT_OPERATOR T_STRING ) . , . T_VARIABLE($langcode) . , T_ARRAY ( , , ) , T_LNUMBER , T_STRING ) ) ; T_VARIABLE($components) [ ] = T_VARIABLE($component) T_OBJECT_OPERATOR T_STRING ; } T_RETURN T_STRING ( T_VARIABLE($files) , T_VARIABLE($finished) , T_VARIABLE($components) ) ; } T_FUNCTION(locale_batch_by_component) ( T_VARIABLE($components) , T_VARIABLE($finished) = ) { T_VARIABLE($files) = T_ARRAY ( ) ; T_VARIABLE($languages) = T_STRING ( ) ; T_UNSET ( T_VARIABLE($languages) [ T_LNUMBER ] [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($languages) [ T_LNUMBER ] ) ) { T_VARIABLE($language_list) = T_STRING ( , T_STRING ( T_VARIABLE($languages) [ T_LNUMBER ] ) ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($component) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_STRING ( T_VARIABLE($component) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($components) ) ) { T_VARIABLE($files) = T_STRING ( T_VARIABLE($files) , T_STRING ( T_STRING ( T_VARIABLE($component) T_OBJECT_OPERATOR T_STRING ) . , . T_VARIABLE($language_list) . , T_ARRAY ( , , ) , T_LNUMBER , T_STRING ) ) ; } } T_RETURN T_STRING ( T_VARIABLE($files) , T_VARIABLE($finished) ) ; } T_RETURN T_STRING ; } T_FUNCTION(_locale_batch_build) ( T_VARIABLE($files) , T_VARIABLE($finished) = T_STRING , T_VARIABLE($components) = T_ARRAY ( ) ) { T_VARIABLE($t) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($files) ) ) { T_VARIABLE($operations) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($file) ) { T_VARIABLE($operations) [ ] = T_ARRAY ( , T_ARRAY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($batch) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($operations) , T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($components) , ) ; T_IF ( T_ISSET ( T_VARIABLE($finished) ) ) { T_VARIABLE($batch) [ ] = T_VARIABLE($finished) ; } T_RETURN T_VARIABLE($batch) ; } T_RETURN T_STRING ; } T_FUNCTION(_locale_batch_import) ( T_VARIABLE($filepath) , & T_VARIABLE($context) ) { T_IF ( T_STRING ( , T_VARIABLE($filepath) , T_VARIABLE($langcode) ) ) { T_VARIABLE($file) = T_OBJECT_CAST T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($filepath) ) , T_DOUBLE_ARROW T_VARIABLE($filepath) ) ; T_STRING ( , T_VARIABLE($file) , T_STRING , T_VARIABLE($langcode) [ T_LNUMBER ] ) ; T_VARIABLE($context) [ ] [ ] = T_VARIABLE($filepath) ; } } T_FUNCTION(_locale_batch_system_finished) ( T_VARIABLE($success) , T_VARIABLE($results) ) { T_IF ( T_VARIABLE($success) ) { T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($results) ) , , ) ) ; } } T_FUNCTION(_locale_batch_language_finished) ( T_VARIABLE($success) , T_VARIABLE($results) ) { T_IF ( T_VARIABLE($success) ) { T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($results) ) , , ) ) ; } }",13,1
"T_OPEN_TAG T_FUNCTION(drupal_mail) ( T_VARIABLE($module) , T_VARIABLE($key) , T_VARIABLE($to) , T_VARIABLE($language) , T_VARIABLE($params) = T_ARRAY ( ) , T_VARIABLE($from) = T_STRING , T_VARIABLE($send) = T_STRING ) { T_VARIABLE($default_from) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($message) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($module) . . T_VARIABLE($key) , T_DOUBLE_ARROW T_VARIABLE($to) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($from) ) ? T_VARIABLE($from) : T_VARIABLE($default_from) , T_DOUBLE_ARROW T_VARIABLE($language) , T_DOUBLE_ARROW T_VARIABLE($params) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($headers) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_IF ( T_VARIABLE($default_from) ) { T_VARIABLE($headers) [ ] = T_VARIABLE($headers) [ ] = T_VARIABLE($headers) [ ] = T_VARIABLE($headers) [ ] = T_VARIABLE($headers) [ ] = T_VARIABLE($default_from) ; } T_IF ( T_VARIABLE($from) ) { T_VARIABLE($headers) [ ] = T_VARIABLE($headers) [ ] = T_VARIABLE($from) ; } T_VARIABLE($message) [ ] = T_VARIABLE($headers) ; T_IF ( T_STRING ( T_VARIABLE($function) = T_VARIABLE($module) . ) ) { T_VARIABLE($function) ( T_VARIABLE($key) , T_VARIABLE($message) , T_VARIABLE($params) ) ; } T_STRING ( , T_VARIABLE($message) ) ; T_VARIABLE($message) [ ] = T_STRING ( T_VARIABLE($message) [ ] ) ? T_STRING ( T_STRING ( , T_VARIABLE($message) [ ] ) ) : T_STRING ( T_VARIABLE($message) [ ] ) ; T_IF ( T_VARIABLE($send) ) { T_VARIABLE($message) [ ] = T_STRING ( T_VARIABLE($message) ) ; T_IF ( ! T_VARIABLE($message) [ ] ) { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($message) [ ] , T_DOUBLE_ARROW T_VARIABLE($message) [ ] ) , T_STRING ) ; T_STRING ( T_STRING ( ) , ) ; } } T_RETURN T_VARIABLE($message) ; } T_FUNCTION(drupal_mail_send) ( T_VARIABLE($message) ) { T_IF ( T_STRING ( , ) T_BOOLEAN_AND T_STRING ( T_STRING ( , ) ) ) { T_INCLUDE_ONCE . T_STRING ( , ) ; T_RETURN T_STRING ( T_VARIABLE($message) ) ; } T_ELSE { T_VARIABLE($mimeheaders) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($message) [ ] T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($mimeheaders) [ ] = T_VARIABLE($name) . . T_STRING ( T_VARIABLE($value) ) ; } T_RETURN T_STRING ( T_VARIABLE($message) [ ] , T_STRING ( T_VARIABLE($message) [ ] ) , T_STRING ( , , T_VARIABLE($message) [ ] ) , T_STRING ( , T_VARIABLE($mimeheaders) ) ) ; } } T_FUNCTION(drupal_wrap_mail) ( T_VARIABLE($text) , T_VARIABLE($indent) = ) { T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($clean_indent) = T_STRING ( T_VARIABLE($indent) ) ; T_VARIABLE($soft) = T_STRING ( T_VARIABLE($clean_indent) , ) T_IS_IDENTICAL T_STRING ; T_IF ( T_STRING ( T_VARIABLE($text) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($lines) = T_STRING ( , T_VARIABLE($text) ) ; T_STRING ( T_VARIABLE($lines) , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($soft) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($indent) ) ) ) ; T_VARIABLE($text) = T_STRING ( , T_VARIABLE($lines) ) ; } T_ELSE { T_STRING ( T_VARIABLE($text) , T_LNUMBER , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($soft) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($indent) ) ) ) ; } T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_VARIABLE($indent) . T_STRING ( T_STRING ( , T_VARIABLE($clean_indent) , T_VARIABLE($text) ) , T_STRING ( T_VARIABLE($indent) ) ) ; T_RETURN T_VARIABLE($text) ; } T_FUNCTION(drupal_html_to_text) ( T_VARIABLE($string) , T_VARIABLE($allowed_tags) = T_STRING ) { T_STATIC T_VARIABLE($supported_tags) ; T_IF ( T_EMPTY ( T_VARIABLE($supported_tags) ) ) { T_VARIABLE($supported_tags) = T_ARRAY ( , , , , , , , , , , , , , , , , , , , , ) ; } T_VARIABLE($allowed_tags) = T_ISSET ( T_VARIABLE($allowed_tags) ) ? T_STRING ( T_VARIABLE($supported_tags) , T_VARIABLE($allowed_tags) ) : T_VARIABLE($supported_tags) ; T_VARIABLE($string) = T_STRING ( T_STRING ( T_VARIABLE($string) , T_VARIABLE($allowed_tags) ) ) ; T_VARIABLE($string) = T_STRING ( , , T_VARIABLE($string) ) ; T_VARIABLE($string) = T_STRING ( , , T_VARIABLE($string) ) ; T_STRING ( T_STRING , T_STRING ) ; T_VARIABLE($pattern) = ; T_VARIABLE($string) = T_STRING ( T_VARIABLE($pattern) , , T_VARIABLE($string) ) ; T_VARIABLE($urls) = T_STRING ( ) ; T_VARIABLE($footnotes) = ; T_IF ( T_STRING ( T_VARIABLE($urls) ) ) { T_VARIABLE($footnotes) T_CONCAT_EQUAL ; T_FOR ( T_VARIABLE($i) = T_LNUMBER , T_VARIABLE($max) = T_STRING ( T_VARIABLE($urls) ) ; T_VARIABLE($i) < T_VARIABLE($max) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($footnotes) T_CONCAT_EQUAL . ( T_VARIABLE($i) + T_LNUMBER ) . . T_VARIABLE($urls) [ T_VARIABLE($i) ] . ; } } T_VARIABLE($split) = T_STRING ( , T_VARIABLE($string) , - T_LNUMBER , T_STRING ) ; T_VARIABLE($tag) = T_STRING ; T_VARIABLE($casing) = T_STRING ; T_VARIABLE($output) = ; T_VARIABLE($indent) = T_ARRAY ( ) ; T_VARIABLE($lists) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($split) T_AS T_VARIABLE($value) ) { T_VARIABLE($chunk) = T_STRING ; T_IF ( T_VARIABLE($tag) ) { T_LIST ( T_VARIABLE($tagname) ) = T_STRING ( , T_STRING ( T_VARIABLE($value) ) , T_LNUMBER ) ; T_SWITCH ( T_VARIABLE($tagname) ) { T_CASE : T_STRING ( T_VARIABLE($lists) , ) ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($lists) , T_LNUMBER ) ; T_BREAK ; T_CASE : T_CASE : T_STRING ( T_VARIABLE($lists) ) ; T_VARIABLE($chunk) = ; T_BREAK ; T_CASE : T_VARIABLE($indent) [ ] = T_STRING ( T_VARIABLE($lists) ) ? : ; T_BREAK ; T_CASE : T_VARIABLE($indent) [ ] = T_STRING ( T_VARIABLE($lists) [ T_LNUMBER ] ) ? . T_VARIABLE($lists) [ T_LNUMBER ] T_INC . : ; T_BREAK ; T_CASE : T_VARIABLE($indent) [ ] = ; T_BREAK ; T_CASE : T_VARIABLE($indent) [ ] = ; T_BREAK ; T_CASE : T_VARIABLE($indent) [ ] = ; T_BREAK ; T_CASE : T_IF ( T_STRING ( T_VARIABLE($lists) ) ) { T_VARIABLE($output) = T_STRING ( T_VARIABLE($output) , ) . ; T_VARIABLE($chunk) = ; } T_CASE : T_CASE : T_STRING ( T_VARIABLE($indent) ) ; T_BREAK ; T_CASE : T_CASE : T_STRING ( T_VARIABLE($indent) ) ; T_CASE : T_CASE : T_VARIABLE($chunk) = ; T_BREAK ; T_CASE : T_VARIABLE($indent) [ ] = ; T_VARIABLE($casing) = ; T_BREAK ; T_CASE : T_VARIABLE($indent) [ ] = ; T_VARIABLE($casing) = ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($casing) = T_STRING ; T_VARIABLE($output) = T_STRING ( T_VARIABLE($output) , ( T_VARIABLE($tagname) T_IS_EQUAL ) ? : , ) ; T_STRING ( T_VARIABLE($indent) ) ; T_VARIABLE($chunk) = ; T_BREAK ; T_CASE : T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING ( , T_VARIABLE($indent) ) ) . ; T_VARIABLE($output) = T_STRING ( T_VARIABLE($output) , ) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($chunk) = ; T_BREAK ; } } T_ELSE { T_VARIABLE($value) = T_STRING ( T_STRING ( , , T_STRING ( T_VARIABLE($value) ) ) ) ; T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($chunk) = T_VARIABLE($value) ; } } T_IF ( T_ISSET ( T_VARIABLE($chunk) ) ) { T_IF ( T_ISSET ( T_VARIABLE($casing) ) ) { T_VARIABLE($chunk) = T_VARIABLE($casing) ( T_VARIABLE($chunk) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($chunk) , T_STRING ( , T_VARIABLE($indent) ) ) . ; T_VARIABLE($indent) = T_STRING ( , T_VARIABLE($indent) ) ; } T_VARIABLE($tag) = ! T_VARIABLE($tag) ; } T_RETURN T_VARIABLE($output) . T_VARIABLE($footnotes) ; } T_FUNCTION(_drupal_wrap_mail_line) ( & T_VARIABLE($line) , T_VARIABLE($key) , T_VARIABLE($values) ) { T_VARIABLE($line) = T_STRING ( T_VARIABLE($line) , T_LNUMBER - T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] ? : ) ; T_VARIABLE($line) = T_STRING ( T_VARIABLE($line) , T_LNUMBER - T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] ? : ) ; } T_FUNCTION(_drupal_html_to_mail_urls) ( T_VARIABLE($match) = T_STRING , T_VARIABLE($reset) = T_STRING ) { T_GLOBAL T_VARIABLE($base_url) , T_VARIABLE($base_path) ; T_STATIC T_VARIABLE($urls) = T_ARRAY ( ) , T_VARIABLE($regexp) ; T_IF ( T_VARIABLE($reset) ) { T_VARIABLE($urls) = T_ARRAY ( ) ; } T_ELSE { T_IF ( T_EMPTY ( T_VARIABLE($regexp) ) ) { T_VARIABLE($regexp) = . T_STRING ( T_VARIABLE($base_path) , ) . ; } T_IF ( T_VARIABLE($match) ) { T_LIST ( , , T_VARIABLE($url) , T_VARIABLE($label) ) = T_VARIABLE($match) ; T_VARIABLE($urls) [ ] = T_STRING ( T_VARIABLE($url) , ) ? T_VARIABLE($url) : T_STRING ( T_VARIABLE($regexp) , T_VARIABLE($base_url) . , T_VARIABLE($url) ) ; T_RETURN T_VARIABLE($label) . . T_STRING ( T_VARIABLE($urls) ) . ; } } T_RETURN T_VARIABLE($urls) ; } T_FUNCTION(_drupal_html_to_text_clean) ( T_VARIABLE($indent) ) { T_RETURN T_STRING ( , , T_VARIABLE($indent) ) ; } T_FUNCTION(_drupal_html_to_text_pad) ( T_VARIABLE($text) , T_VARIABLE($pad) , T_VARIABLE($prefix) = ) { T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) , T_LNUMBER , - T_LNUMBER ) ; T_IF ( ( T_VARIABLE($p) = T_STRING ( T_VARIABLE($text) , ) ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($p) = - T_LNUMBER ; } T_VARIABLE($n) = T_STRING ( T_LNUMBER , T_LNUMBER - ( T_STRING ( T_VARIABLE($text) ) - T_VARIABLE($p) ) ) ; T_RETURN T_VARIABLE($text) . T_VARIABLE($prefix) . T_STRING ( T_VARIABLE($pad) , T_VARIABLE($n) - T_STRING ( T_VARIABLE($prefix) ) ) . ; }",11,0
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_STRING | T_STRING ) ; T_STRING ( , T_STRING ) ; T_STRING ( , T_STRING | T_LNUMBER ) ; T_STRING ( , T_STRING ) ; T_STRING ( , T_STRING | T_STRING ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(menu_get_ancestors) ( T_VARIABLE($parts) ) { T_VARIABLE($number_parts) = T_STRING ( T_VARIABLE($parts) ) ; T_VARIABLE($placeholders) = T_ARRAY ( ) ; T_VARIABLE($ancestors) = T_ARRAY ( ) ; T_VARIABLE($length) = T_VARIABLE($number_parts) - T_LNUMBER ; T_VARIABLE($end) = ( T_LNUMBER T_SL T_VARIABLE($number_parts) ) - T_LNUMBER ; T_VARIABLE($masks) = T_STRING ( , T_ARRAY ( ) ) ; T_FOREACH ( T_VARIABLE($masks) T_AS T_VARIABLE($i) ) { T_IF ( T_VARIABLE($i) > T_VARIABLE($end) ) { T_CONTINUE ; } T_ELSEIF ( T_VARIABLE($i) < ( T_LNUMBER T_SL T_VARIABLE($length) ) ) { T_DEC T_VARIABLE($length) ; } T_VARIABLE($current) = ; T_FOR ( T_VARIABLE($j) = T_VARIABLE($length) ; T_VARIABLE($j) T_IS_GREATER_OR_EQUAL T_LNUMBER ; T_VARIABLE($j) T_DEC ) { T_IF ( T_VARIABLE($i) & ( T_LNUMBER T_SL T_VARIABLE($j) ) ) { T_VARIABLE($current) T_CONCAT_EQUAL T_VARIABLE($parts) [ T_VARIABLE($length) - T_VARIABLE($j) ] ; } T_ELSE { T_VARIABLE($current) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($j) ) { T_VARIABLE($current) T_CONCAT_EQUAL ; } } T_VARIABLE($placeholders) [ ] = ; T_VARIABLE($ancestors) [ ] = T_VARIABLE($current) ; } T_RETURN T_ARRAY ( T_VARIABLE($ancestors) , T_VARIABLE($placeholders) ) ; } T_FUNCTION(menu_unserialize) ( T_VARIABLE($data) , T_VARIABLE($map) ) { T_IF ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($data) ) ) { T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_IF ( T_STRING ( T_VARIABLE($v) ) ) { T_VARIABLE($data) [ T_VARIABLE($k) ] = T_ISSET ( T_VARIABLE($map) [ T_VARIABLE($v) ] ) ? T_VARIABLE($map) [ T_VARIABLE($v) ] : ; } } T_RETURN T_VARIABLE($data) ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } T_FUNCTION(menu_set_item) ( T_VARIABLE($path) , T_VARIABLE($router_item) ) { T_STRING ( T_VARIABLE($path) , T_VARIABLE($router_item) ) ; } T_FUNCTION(menu_get_item) ( T_VARIABLE($path) = T_STRING , T_VARIABLE($router_item) = T_STRING ) { T_STATIC T_VARIABLE($router_items) ; T_IF ( ! T_ISSET ( T_VARIABLE($path) ) ) { T_VARIABLE($path) = T_VARIABLE($_GET) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($router_item) ) ) { T_VARIABLE($router_items) [ T_VARIABLE($path) ] = T_VARIABLE($router_item) ; } T_IF ( ! T_ISSET ( T_VARIABLE($router_items) [ T_VARIABLE($path) ] ) ) { T_VARIABLE($original_map) = T_STRING ( T_STRING , T_VARIABLE($path) ) ; T_VARIABLE($parts) = T_STRING ( T_VARIABLE($original_map) , T_LNUMBER , T_STRING ) ; T_LIST ( T_VARIABLE($ancestors) , T_VARIABLE($placeholders) ) = T_STRING ( T_VARIABLE($parts) ) ; T_IF ( T_VARIABLE($router_item) = T_STRING ( T_STRING ( . T_STRING ( , T_VARIABLE($placeholders) ) . , T_VARIABLE($ancestors) , T_LNUMBER , T_LNUMBER ) ) ) { T_VARIABLE($map) = T_STRING ( T_VARIABLE($router_item) , T_VARIABLE($original_map) ) ; T_IF ( T_VARIABLE($map) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($router_items) [ T_VARIABLE($path) ] = T_STRING ; T_RETURN T_STRING ; } T_IF ( T_VARIABLE($router_item) [ ] ) { T_VARIABLE($router_item) [ ] = T_VARIABLE($map) ; T_VARIABLE($router_item) [ ] = T_STRING ( T_STRING ( T_VARIABLE($router_item) [ ] , T_VARIABLE($map) ) , T_STRING ( T_VARIABLE($map) , T_VARIABLE($router_item) [ ] ) ) ; } } T_VARIABLE($router_items) [ T_VARIABLE($path) ] = T_VARIABLE($router_item) ; } T_RETURN T_VARIABLE($router_items) [ T_VARIABLE($path) ] ; } T_FUNCTION(menu_execute_active_handler) ( T_VARIABLE($path) = T_STRING ) { T_IF ( T_STRING ( ) ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( , T_STRING ) ) { T_STRING ( ) ; } T_IF ( T_VARIABLE($router_item) = T_STRING ( T_VARIABLE($path) ) ) { T_IF ( T_VARIABLE($router_item) [ ] ) { T_IF ( T_VARIABLE($router_item) [ ] ) { T_REQUIRE_ONCE ( T_VARIABLE($router_item) [ ] ) ; } T_RETURN T_STRING ( T_VARIABLE($router_item) [ ] , T_VARIABLE($router_item) [ ] ) ; } T_ELSE { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_FUNCTION(_menu_load_objects) ( & T_VARIABLE($item) , & T_VARIABLE($map) ) { T_IF ( T_VARIABLE($load_functions) = T_VARIABLE($item) [ ] ) { T_IF ( T_VARIABLE($load_functions_unserialized) = T_STRING ( T_VARIABLE($load_functions) ) ) { T_VARIABLE($load_functions) = T_VARIABLE($load_functions_unserialized) ; } T_VARIABLE($path_map) = T_VARIABLE($map) ; T_FOREACH ( T_VARIABLE($load_functions) T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($function) ) { T_IF ( T_VARIABLE($function) ) { T_VARIABLE($value) = T_ISSET ( T_VARIABLE($path_map) [ T_VARIABLE($index) ] ) ? T_VARIABLE($path_map) [ T_VARIABLE($index) ] : ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_LIST ( T_VARIABLE($function) , T_VARIABLE($args) ) = T_STRING ( T_VARIABLE($function) ) ; T_VARIABLE($load_functions) [ T_VARIABLE($index) ] = T_VARIABLE($function) ; T_FOREACH ( T_VARIABLE($args) T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($arg) ) { T_IF ( T_VARIABLE($arg) T_IS_IDENTICAL ) { T_VARIABLE($args) [ T_VARIABLE($i) ] = T_VARIABLE($index) ; } T_IF ( T_VARIABLE($arg) T_IS_IDENTICAL ) { T_VARIABLE($args) [ T_VARIABLE($i) ] = & T_VARIABLE($map) ; } T_IF ( T_STRING ( T_VARIABLE($arg) ) ) { T_VARIABLE($args) [ T_VARIABLE($i) ] = T_ISSET ( T_VARIABLE($path_map) [ T_VARIABLE($arg) ] ) ? T_VARIABLE($path_map) [ T_VARIABLE($arg) ] : ; } } T_STRING ( T_VARIABLE($args) , T_VARIABLE($value) ) ; T_VARIABLE($return) = T_STRING ( T_VARIABLE($function) , T_VARIABLE($args) ) ; } T_ELSE { T_VARIABLE($return) = T_VARIABLE($function) ( T_VARIABLE($value) ) ; } T_IF ( T_VARIABLE($return) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($item) [ ] = T_STRING ; T_VARIABLE($map) = T_STRING ; T_RETURN T_STRING ; } T_VARIABLE($map) [ T_VARIABLE($index) ] = T_VARIABLE($return) ; } } T_VARIABLE($item) [ ] = T_VARIABLE($load_functions) ; } T_RETURN T_STRING ; } T_FUNCTION(_menu_check_access) ( & T_VARIABLE($item) , T_VARIABLE($map) ) { T_VARIABLE($callback) = T_EMPTY ( T_VARIABLE($item) [ ] ) ? T_LNUMBER : T_STRING ( T_VARIABLE($item) [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($callback) ) ) { T_VARIABLE($item) [ ] = T_BOOL_CAST T_VARIABLE($callback) ; } T_ELSE { T_VARIABLE($arguments) = T_STRING ( T_VARIABLE($item) [ ] , T_VARIABLE($map) ) ; T_IF ( T_VARIABLE($callback) T_IS_EQUAL ) { T_VARIABLE($item) [ ] = ( T_STRING ( T_VARIABLE($arguments) ) T_IS_EQUAL T_LNUMBER ) ? T_STRING ( T_VARIABLE($arguments) [ T_LNUMBER ] ) : T_STRING ( T_VARIABLE($arguments) [ T_LNUMBER ] , T_VARIABLE($arguments) [ T_LNUMBER ] ) ; } T_ELSE { T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($callback) , T_VARIABLE($arguments) ) ; } } } T_FUNCTION(_menu_item_localize) ( & T_VARIABLE($item) , T_VARIABLE($map) , T_VARIABLE($link_translate) = T_STRING ) { T_VARIABLE($callback) = T_VARIABLE($item) [ ] ; T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; T_IF ( ! T_VARIABLE($link_translate) T_BOOLEAN_OR ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($item) [ ] T_IS_EQUAL T_VARIABLE($item) [ ] ) ) ) { T_IF ( T_VARIABLE($callback) T_IS_EQUAL ) { T_IF ( T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($item) [ ] ) ; } T_ELSE { T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($item) [ ] , T_STRING ( T_VARIABLE($item) [ ] , T_VARIABLE($map) ) ) ; } } T_ELSEIF ( T_VARIABLE($callback) ) { T_IF ( T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($callback) ( T_VARIABLE($item) [ ] ) ; } T_ELSE { T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($callback) , T_STRING ( T_VARIABLE($item) [ ] , T_VARIABLE($map) ) ) ; } T_IF ( T_VARIABLE($callback) T_IS_EQUAL ) { T_VARIABLE($item) [ ] [ ] = T_STRING ; } } } T_ELSEIF ( T_VARIABLE($link_translate) ) { T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($original_description) = T_VARIABLE($item) [ ] ; T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($item) [ ] ) ; T_IF ( T_VARIABLE($link_translate) T_BOOLEAN_AND T_VARIABLE($item) [ ] [ ] [ ] T_IS_EQUAL T_VARIABLE($original_description) ) { T_VARIABLE($item) [ ] [ ] [ ] = T_VARIABLE($item) [ ] ; } } } T_FUNCTION(_menu_translate) ( & T_VARIABLE($router_item) , T_VARIABLE($map) , T_VARIABLE($to_arg) = T_STRING ) { T_VARIABLE($path_map) = T_VARIABLE($map) ; T_IF ( ! T_STRING ( T_VARIABLE($router_item) , T_VARIABLE($map) ) ) { T_VARIABLE($router_item) [ ] = T_STRING ; T_RETURN T_STRING ; } T_IF ( T_VARIABLE($to_arg) ) { T_STRING ( T_VARIABLE($path_map) , T_VARIABLE($router_item) [ ] ) ; } T_VARIABLE($link_map) = T_STRING ( , T_VARIABLE($router_item) [ ] ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($router_item) [ ] ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($link_map) [ T_VARIABLE($i) ] T_IS_EQUAL ) { T_VARIABLE($link_map) [ T_VARIABLE($i) ] = T_VARIABLE($path_map) [ T_VARIABLE($i) ] ; } } T_VARIABLE($router_item) [ ] = T_STRING ( , T_VARIABLE($link_map) ) ; T_VARIABLE($router_item) [ ] = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($router_item) , T_VARIABLE($map) ) ; T_STRING ( T_VARIABLE($router_item) , T_VARIABLE($map) ) ; T_RETURN T_VARIABLE($map) ; } T_FUNCTION(_menu_link_map_translate) ( & T_VARIABLE($map) , T_VARIABLE($to_arg_functions) ) { T_IF ( T_VARIABLE($to_arg_functions) ) { T_VARIABLE($to_arg_functions) = T_STRING ( T_VARIABLE($to_arg_functions) ) ; T_FOREACH ( T_VARIABLE($to_arg_functions) T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($function) ) { T_VARIABLE($arg) = T_VARIABLE($function) ( ! T_EMPTY ( T_VARIABLE($map) [ T_VARIABLE($index) ] ) ? T_VARIABLE($map) [ T_VARIABLE($index) ] : , T_VARIABLE($map) , T_VARIABLE($index) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($map) [ T_VARIABLE($index) ] ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($arg) ) ) { T_VARIABLE($map) [ T_VARIABLE($index) ] = T_VARIABLE($arg) ; } T_ELSE { T_UNSET ( T_VARIABLE($map) [ T_VARIABLE($index) ] ) ; } } } } T_FUNCTION(menu_tail_to_arg) ( T_VARIABLE($arg) , T_VARIABLE($map) , T_VARIABLE($index) ) { T_RETURN T_STRING ( , T_STRING ( T_VARIABLE($map) , T_VARIABLE($index) ) ) ; } T_FUNCTION(_menu_link_translate) ( & T_VARIABLE($item) ) { T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($item) [ ] ) ; T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($item) [ ] = T_LNUMBER ; T_VARIABLE($map) = T_ARRAY ( ) ; T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; } T_ELSE { T_VARIABLE($map) = T_STRING ( , T_VARIABLE($item) [ ] ) ; T_STRING ( T_VARIABLE($map) , T_VARIABLE($item) [ ] ) ; T_VARIABLE($item) [ ] = T_STRING ( , T_VARIABLE($map) ) ; T_IF ( T_STRING ( T_VARIABLE($item) [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($item) [ ] = T_STRING ; T_RETURN T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) ) { T_IF ( ! T_STRING ( T_VARIABLE($item) , T_VARIABLE($map) ) ) { T_VARIABLE($item) [ ] = T_STRING ; T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($item) , T_VARIABLE($map) ) ; } T_STRING ( T_VARIABLE($item) , T_VARIABLE($map) , T_STRING ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] [ ] ) ) { T_STRING ( , T_VARIABLE($item) , T_VARIABLE($map) ) ; } T_RETURN T_VARIABLE($map) ; } T_FUNCTION(menu_get_object) ( T_VARIABLE($type) = , T_VARIABLE($position) = T_LNUMBER , T_VARIABLE($path) = T_STRING ) { T_VARIABLE($router_item) = T_STRING ( T_VARIABLE($path) ) ; T_IF ( T_ISSET ( T_VARIABLE($router_item) [ ] [ T_VARIABLE($position) ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($router_item) [ ] [ T_VARIABLE($position) ] ) T_BOOLEAN_AND T_VARIABLE($router_item) [ ] [ T_VARIABLE($position) ] T_IS_EQUAL T_VARIABLE($type) . ) { T_RETURN T_VARIABLE($router_item) [ ] [ T_VARIABLE($position) ] ; } } T_FUNCTION(menu_tree) ( T_VARIABLE($menu_name) = ) { T_STATIC T_VARIABLE($menu_output) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($menu_output) [ T_VARIABLE($menu_name) ] ) ) { T_VARIABLE($tree) = T_STRING ( T_VARIABLE($menu_name) ) ; T_VARIABLE($menu_output) [ T_VARIABLE($menu_name) ] = T_STRING ( T_VARIABLE($tree) ) ; } T_RETURN T_VARIABLE($menu_output) [ T_VARIABLE($menu_name) ] ; } T_FUNCTION(menu_tree_output) ( T_VARIABLE($tree) ) { T_VARIABLE($output) = ; T_VARIABLE($items) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($data) ) { T_IF ( ! T_VARIABLE($data) [ ] [ ] ) { T_VARIABLE($items) [ ] = T_VARIABLE($data) ; } } T_VARIABLE($num_items) = T_STRING ( T_VARIABLE($items) ) ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($data) ) { T_VARIABLE($extra_class) = T_STRING ; T_IF ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($extra_class) = ; } T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($num_items) - T_LNUMBER ) { T_VARIABLE($extra_class) = ; } T_VARIABLE($link) = T_STRING ( , T_VARIABLE($data) [ ] ) ; T_IF ( T_VARIABLE($data) [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($link) , T_VARIABLE($data) [ ] [ ] , T_STRING ( T_VARIABLE($data) [ ] ) , T_VARIABLE($data) [ ] [ ] , T_VARIABLE($extra_class) ) ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($link) , T_VARIABLE($data) [ ] [ ] , , T_VARIABLE($data) [ ] [ ] , T_VARIABLE($extra_class) ) ; } } T_RETURN T_VARIABLE($output) ? T_STRING ( , T_VARIABLE($output) ) : ; } T_FUNCTION(menu_tree_all_data) ( T_VARIABLE($menu_name) = , T_VARIABLE($item) = T_STRING ) { T_STATIC T_VARIABLE($tree) = T_ARRAY ( ) ; T_VARIABLE($mlid) = T_ISSET ( T_VARIABLE($item) [ ] ) ? T_VARIABLE($item) [ ] : T_LNUMBER ; T_VARIABLE($cid) = . T_VARIABLE($menu_name) . . T_VARIABLE($mlid) ; T_IF ( ! T_ISSET ( T_VARIABLE($tree) [ T_VARIABLE($cid) ] ) ) { T_VARIABLE($cache) = T_STRING ( T_VARIABLE($cid) , ) ; T_IF ( T_VARIABLE($cache) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($data) = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_IF ( T_VARIABLE($mlid) ) { T_VARIABLE($args) = T_ARRAY ( T_LNUMBER ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ; T_VARIABLE($i) T_INC ) { T_VARIABLE($args) [ ] = T_VARIABLE($item) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) ] ; } T_VARIABLE($args) = T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($placeholders) = T_STRING ( , T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($args) ) , ) ) ; T_VARIABLE($where) = . T_VARIABLE($placeholders) . ; T_VARIABLE($parents) = T_VARIABLE($args) ; T_VARIABLE($parents) [ ] = T_VARIABLE($item) [ ] ; } T_ELSE { T_VARIABLE($where) = ; T_VARIABLE($args) = T_ARRAY ( ) ; T_VARIABLE($parents) = T_ARRAY ( ) ; } T_STRING ( T_VARIABLE($args) , T_VARIABLE($menu_name) ) ; T_VARIABLE($data) [ ] = T_STRING ( T_STRING ( . T_VARIABLE($where) . , T_VARIABLE($args) ) , T_VARIABLE($parents) ) ; T_VARIABLE($data) [ ] = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($data) [ ] ) ; T_STRING ( T_VARIABLE($cid) , T_VARIABLE($data) , ) ; } T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($data) [ ] ) ; T_VARIABLE($tree) [ T_VARIABLE($cid) ] = T_VARIABLE($data) [ ] ; } T_RETURN T_VARIABLE($tree) [ T_VARIABLE($cid) ] ; } T_FUNCTION(menu_tree_page_data) ( T_VARIABLE($menu_name) = ) { T_STATIC T_VARIABLE($tree) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($item) = T_STRING ( ) ) { T_VARIABLE($cid) = . T_VARIABLE($menu_name) . . T_VARIABLE($item) [ ] . . T_INT_CAST T_VARIABLE($item) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($tree) [ T_VARIABLE($cid) ] ) ) { T_VARIABLE($cache) = T_STRING ( T_VARIABLE($cid) , ) ; T_IF ( T_VARIABLE($cache) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($data) = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($args) = T_ARRAY ( T_VARIABLE($menu_name) , T_VARIABLE($item) [ ] ) ; T_VARIABLE($placeholders) = ; T_IF ( T_STRING ( ) ) { T_VARIABLE($args) [ ] = ; T_VARIABLE($placeholders) T_CONCAT_EQUAL ; } T_VARIABLE($parents) = T_STRING ( T_STRING ( . T_VARIABLE($placeholders) . , T_VARIABLE($args) ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($parents) ) ) { T_VARIABLE($parents) = T_STRING ( T_STRING ( , T_VARIABLE($menu_name) , T_VARIABLE($item) [ ] ) ) ; } T_VARIABLE($parents) [ ] = ; T_VARIABLE($args) = T_VARIABLE($parents) = T_STRING ( T_STRING ( T_VARIABLE($parents) ) ) ; T_VARIABLE($placeholders) = T_STRING ( , T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($args) ) , ) ) ; T_VARIABLE($expanded) = T_STRING ( , T_ARRAY ( ) ) ; T_IF ( T_STRING ( T_VARIABLE($menu_name) , T_VARIABLE($expanded) ) ) { T_DO { T_VARIABLE($result) = T_STRING ( . T_VARIABLE($placeholders) . . T_VARIABLE($placeholders) . , T_STRING ( T_ARRAY ( T_VARIABLE($menu_name) ) , T_VARIABLE($args) , T_VARIABLE($args) ) ) ; T_VARIABLE($num_rows) = T_STRING ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($args) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($num_rows) = T_STRING ; } T_VARIABLE($placeholders) = T_STRING ( , T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($args) ) , ) ) ; } T_WHILE ( T_VARIABLE($num_rows) ) ; } T_STRING ( T_VARIABLE($args) , T_VARIABLE($menu_name) ) ; } T_ELSE { T_VARIABLE($args) = T_ARRAY ( T_VARIABLE($menu_name) , ) ; T_VARIABLE($placeholders) = ; T_VARIABLE($parents) = T_ARRAY ( ) ; } T_VARIABLE($data) [ ] = T_STRING ( T_STRING ( . T_VARIABLE($placeholders) . , T_VARIABLE($args) ) , T_VARIABLE($parents) ) ; T_VARIABLE($data) [ ] = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($data) [ ] ) ; T_STRING ( T_VARIABLE($cid) , T_VARIABLE($data) , ) ; } T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($data) [ ] ) ; T_VARIABLE($tree) [ T_VARIABLE($cid) ] = T_VARIABLE($data) [ ] ; } T_RETURN T_VARIABLE($tree) [ T_VARIABLE($cid) ] ; } T_RETURN T_ARRAY ( ) ; } T_FUNCTION(menu_tree_collect_node_links) ( & T_VARIABLE($tree) , & T_VARIABLE($node_links) ) { T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_IF ( T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($nid) = T_STRING ( T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] [ ] , T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($nid) ) ) { T_VARIABLE($node_links) [ T_VARIABLE($nid) ] [ T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] [ ] ] = & T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] ; T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] [ ] = T_STRING ; } } T_IF ( T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] ) { T_STRING ( T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] , T_VARIABLE($node_links) ) ; } } } T_FUNCTION(menu_tree_check_access) ( & T_VARIABLE($tree) , T_VARIABLE($node_links) = T_ARRAY ( ) ) { T_IF ( T_VARIABLE($node_links) ) { T_VARIABLE($nids) = T_STRING ( T_VARIABLE($node_links) ) ; T_VARIABLE($placeholders) = . T_STRING ( , T_STRING ( T_VARIABLE($nids) ) - T_LNUMBER ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( . T_VARIABLE($placeholders) . ) , T_VARIABLE($nids) ) ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($nid) = T_VARIABLE($node) [ ] ; T_FOREACH ( T_VARIABLE($node_links) [ T_VARIABLE($nid) ] T_AS T_VARIABLE($mlid) T_DOUBLE_ARROW T_VARIABLE($link) ) { T_VARIABLE($node_links) [ T_VARIABLE($nid) ] [ T_VARIABLE($mlid) ] [ ] = T_STRING ; } } } T_STRING ( T_VARIABLE($tree) ) ; T_RETURN ; } T_FUNCTION(_menu_tree_check_access) ( & T_VARIABLE($tree) ) { T_VARIABLE($new_tree) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($item) = & T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] ; T_STRING ( T_VARIABLE($item) ) ; T_IF ( T_VARIABLE($item) [ ] ) { T_IF ( T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] ) { T_STRING ( T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] ) ; } T_VARIABLE($new_tree) [ ( T_LNUMBER + T_VARIABLE($item) [ ] ) . . T_VARIABLE($item) [ ] . . T_VARIABLE($item) [ ] ] = T_VARIABLE($tree) [ T_VARIABLE($key) ] ; } } T_STRING ( T_VARIABLE($new_tree) ) ; T_VARIABLE($tree) = T_VARIABLE($new_tree) ; } T_FUNCTION(menu_tree_data) ( T_VARIABLE($result) = T_STRING , T_VARIABLE($parents) = T_ARRAY ( ) , T_VARIABLE($depth) = T_LNUMBER ) { T_LIST ( , T_VARIABLE($tree) ) = T_STRING ( T_VARIABLE($result) , T_VARIABLE($parents) , T_VARIABLE($depth) ) ; T_RETURN T_VARIABLE($tree) ; } T_FUNCTION(_menu_tree_data) ( T_VARIABLE($result) , T_VARIABLE($parents) , T_VARIABLE($depth) , T_VARIABLE($previous_element) = ) { T_VARIABLE($remnant) = T_STRING ; T_VARIABLE($tree) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($item) [ ] , T_VARIABLE($parents) ) ; T_IF ( T_VARIABLE($item) [ ] > T_VARIABLE($depth) ) { T_LIST ( T_VARIABLE($item) , T_VARIABLE($below) ) = T_STRING ( T_VARIABLE($result) , T_VARIABLE($parents) , T_VARIABLE($item) [ ] , T_VARIABLE($item) ) ; T_IF ( T_VARIABLE($previous_element) ) { T_VARIABLE($tree) [ T_VARIABLE($previous_element) [ ] ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($previous_element) , T_DOUBLE_ARROW T_VARIABLE($below) , ) ; } T_ELSE { T_VARIABLE($tree) = T_VARIABLE($below) ; } T_IF ( ! T_ISSET ( T_VARIABLE($item) ) T_BOOLEAN_OR T_VARIABLE($item) [ ] < T_VARIABLE($depth) ) { T_RETURN T_ARRAY ( T_VARIABLE($item) , T_VARIABLE($tree) ) ; } T_VARIABLE($previous_element) = T_VARIABLE($item) ; } T_ELSEIF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_VARIABLE($depth) ) { T_IF ( T_VARIABLE($previous_element) ) { T_VARIABLE($tree) [ T_VARIABLE($previous_element) [ ] ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($previous_element) , T_DOUBLE_ARROW T_STRING , ) ; } T_VARIABLE($previous_element) = T_VARIABLE($item) ; } T_ELSE { T_VARIABLE($remnant) = T_VARIABLE($item) ; T_BREAK ; } } T_IF ( T_VARIABLE($previous_element) ) { T_VARIABLE($tree) [ T_VARIABLE($previous_element) [ ] ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($previous_element) , T_DOUBLE_ARROW T_STRING , ) ; } T_RETURN T_ARRAY ( T_VARIABLE($remnant) , T_VARIABLE($tree) ) ; } T_FUNCTION(theme_menu_item_link) ( T_VARIABLE($link) ) { T_IF ( T_EMPTY ( T_VARIABLE($link) [ ] ) ) { T_VARIABLE($link) [ ] = T_ARRAY ( ) ; } T_RETURN T_STRING ( T_VARIABLE($link) [ ] , T_VARIABLE($link) [ ] , T_VARIABLE($link) [ ] ) ; } T_FUNCTION(theme_menu_tree) ( T_VARIABLE($tree) ) { T_RETURN . T_VARIABLE($tree) . ; } T_FUNCTION(theme_menu_item) ( T_VARIABLE($link) , T_VARIABLE($has_children) , T_VARIABLE($menu) = , T_VARIABLE($in_active_trail) = T_STRING , T_VARIABLE($extra_class) = T_STRING ) { T_VARIABLE($class) = ( T_VARIABLE($menu) ? : ( T_VARIABLE($has_children) ? : ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($extra_class) ) ) { T_VARIABLE($class) T_CONCAT_EQUAL . T_VARIABLE($extra_class) ; } T_IF ( T_VARIABLE($in_active_trail) ) { T_VARIABLE($class) T_CONCAT_EQUAL ; } T_RETURN . T_VARIABLE($class) . . T_VARIABLE($link) . T_VARIABLE($menu) . ; } T_FUNCTION(theme_menu_local_task) ( T_VARIABLE($link) , T_VARIABLE($active) = T_STRING ) { T_RETURN . ( T_VARIABLE($active) ? : ) . . T_VARIABLE($link) . ; } T_FUNCTION(drupal_help_arg) ( T_VARIABLE($arg) = T_ARRAY ( ) ) { T_RETURN T_VARIABLE($arg) + T_ARRAY ( , , , , , , , , , , , ) ; } T_FUNCTION(menu_get_active_help) ( ) { T_VARIABLE($output) = ; T_VARIABLE($router_path) = T_STRING ( ) ; T_VARIABLE($arg) = T_STRING ( T_STRING ( T_STRING ) ) ; T_VARIABLE($empty_arg) = T_STRING ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($name) ) { T_IF ( T_STRING ( T_VARIABLE($name) , ) ) { T_IF ( T_VARIABLE($help) = T_STRING ( T_VARIABLE($name) , , T_VARIABLE($router_path) , T_VARIABLE($arg) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($help) . ; } T_IF ( T_VARIABLE($arg) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($name) , , . T_VARIABLE($arg) [ T_LNUMBER ] , T_VARIABLE($empty_arg) ) T_BOOLEAN_AND T_VARIABLE($help) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING ( . T_VARIABLE($arg) [ T_LNUMBER ] ) ) ; } } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(menu_get_names) ( T_VARIABLE($reset) = T_STRING ) { T_STATIC T_VARIABLE($names) ; T_IF ( T_VARIABLE($reset) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($names) ) ) { T_VARIABLE($names) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($name) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($names) [ ] = T_VARIABLE($name) [ ] ; } } T_RETURN T_VARIABLE($names) ; } T_FUNCTION(menu_list_system_menus) ( ) { T_RETURN T_ARRAY ( , , ) ; } T_FUNCTION(menu_primary_links) ( ) { T_RETURN T_STRING ( T_STRING ( , ) ) ; } T_FUNCTION(menu_secondary_links) ( ) { T_IF ( T_STRING ( , ) T_IS_EQUAL T_STRING ( , ) ) { T_RETURN T_STRING ( T_STRING ( , ) , T_LNUMBER ) ; } T_ELSE { T_RETURN T_STRING ( T_STRING ( , ) , T_LNUMBER ) ; } } T_FUNCTION(menu_navigation_links) ( T_VARIABLE($menu_name) , T_VARIABLE($level) = T_LNUMBER ) { T_IF ( T_EMPTY ( T_VARIABLE($menu_name) ) ) { T_RETURN T_ARRAY ( ) ; } T_VARIABLE($tree) = T_STRING ( T_VARIABLE($menu_name) ) ; T_WHILE ( T_VARIABLE($level) T_DEC > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($tree) ) { T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($tree) ) ) { T_IF ( T_VARIABLE($item) [ ] [ ] ) { T_VARIABLE($tree) = T_EMPTY ( T_VARIABLE($item) [ ] ) ? T_ARRAY ( ) : T_VARIABLE($item) [ ] ; T_BREAK ; } } } T_VARIABLE($links) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($item) ) { T_IF ( ! T_VARIABLE($item) [ ] [ ] ) { T_VARIABLE($l) = T_VARIABLE($item) [ ] [ ] ; T_VARIABLE($l) [ ] = T_VARIABLE($item) [ ] [ ] ; T_VARIABLE($l) [ ] = T_VARIABLE($item) [ ] [ ] ; T_VARIABLE($links) [ . T_VARIABLE($item) [ ] [ ] ] = T_VARIABLE($l) ; } } T_RETURN T_VARIABLE($links) ; } T_FUNCTION(menu_local_tasks) ( T_VARIABLE($level) = T_LNUMBER , T_VARIABLE($return_root) = T_STRING ) { T_STATIC T_VARIABLE($tabs) ; T_STATIC T_VARIABLE($root_path) ; T_IF ( ! T_ISSET ( T_VARIABLE($tabs) ) ) { T_VARIABLE($tabs) = T_ARRAY ( ) ; T_VARIABLE($router_item) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($router_item) T_BOOLEAN_OR ! T_VARIABLE($router_item) [ ] ) { T_RETURN ; } T_VARIABLE($result) = T_STRING ( , T_VARIABLE($router_item) [ ] ) ; T_VARIABLE($map) = T_STRING ( ) ; T_VARIABLE($children) = T_ARRAY ( ) ; T_VARIABLE($tasks) = T_ARRAY ( ) ; T_VARIABLE($root_path) = T_VARIABLE($router_item) [ ] ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($item) , T_VARIABLE($map) , T_STRING ) ; T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($children) [ T_VARIABLE($item) [ ] ] [ T_VARIABLE($item) [ ] ] = T_VARIABLE($item) ; } T_VARIABLE($tasks) [ T_VARIABLE($item) [ ] ] = T_VARIABLE($item) ; } T_VARIABLE($path) = T_VARIABLE($router_item) [ ] ; T_VARIABLE($depth) = T_LNUMBER ; T_WHILE ( T_ISSET ( T_VARIABLE($children) [ T_VARIABLE($path) ] ) ) { T_VARIABLE($tabs_current) = ; T_VARIABLE($next_path) = ; T_VARIABLE($count) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($children) [ T_VARIABLE($path) ] T_AS T_VARIABLE($item) ) { T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($count) T_INC ; T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_STRING ) { T_FOR ( T_VARIABLE($p) = T_VARIABLE($item) [ ] ; T_VARIABLE($tasks) [ T_VARIABLE($p) ] [ ] T_IS_EQUAL T_STRING ; T_VARIABLE($p) = T_VARIABLE($tasks) [ T_VARIABLE($p) ] [ ] ) ; T_VARIABLE($link) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($tasks) [ T_VARIABLE($p) ] [ ] ) + T_VARIABLE($item) ) ; T_VARIABLE($tabs_current) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($link) , T_STRING ) ; T_VARIABLE($next_path) = T_VARIABLE($item) [ ] ; } T_ELSE { T_VARIABLE($link) = T_STRING ( , T_VARIABLE($item) ) ; T_VARIABLE($tabs_current) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($link) ) ; } } } T_VARIABLE($path) = T_VARIABLE($next_path) ; T_VARIABLE($tabs) [ T_VARIABLE($depth) ] [ ] = T_VARIABLE($count) ; T_VARIABLE($tabs) [ T_VARIABLE($depth) ] [ ] = T_VARIABLE($tabs_current) ; T_VARIABLE($depth) T_INC ; } T_VARIABLE($parent) = T_VARIABLE($router_item) [ ] ; T_VARIABLE($path) = T_VARIABLE($router_item) [ ] ; T_VARIABLE($current) = T_VARIABLE($router_item) ; T_VARIABLE($depth) = T_LNUMBER ; T_WHILE ( T_ISSET ( T_VARIABLE($children) [ T_VARIABLE($parent) ] ) ) { T_VARIABLE($tabs_current) = ; T_VARIABLE($next_path) = ; T_VARIABLE($next_parent) = ; T_VARIABLE($count) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($children) [ T_VARIABLE($parent) ] T_AS T_VARIABLE($item) ) { T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($count) T_INC ; T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_STRING ) { T_FOR ( T_VARIABLE($p) = T_VARIABLE($item) [ ] ; T_VARIABLE($tasks) [ T_VARIABLE($p) ] [ ] T_IS_EQUAL T_STRING ; T_VARIABLE($p) = T_VARIABLE($tasks) [ T_VARIABLE($p) ] [ ] ) ; T_VARIABLE($link) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($tasks) [ T_VARIABLE($p) ] [ ] ) + T_VARIABLE($item) ) ; T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_VARIABLE($router_item) [ ] ) { T_VARIABLE($root_path) = T_VARIABLE($tasks) [ T_VARIABLE($p) ] [ ] ; } } T_ELSE { T_VARIABLE($link) = T_STRING ( , T_VARIABLE($item) ) ; } T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_VARIABLE($path) ) { T_VARIABLE($tabs_current) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($link) , T_STRING ) ; T_VARIABLE($next_path) = T_VARIABLE($item) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($tasks) [ T_VARIABLE($next_path) ] ) ) { T_VARIABLE($next_parent) = T_VARIABLE($tasks) [ T_VARIABLE($next_path) ] [ ] ; } } T_ELSE { T_VARIABLE($tabs_current) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($link) ) ; } } } T_VARIABLE($path) = T_VARIABLE($next_path) ; T_VARIABLE($parent) = T_VARIABLE($next_parent) ; T_VARIABLE($tabs) [ T_VARIABLE($depth) ] [ ] = T_VARIABLE($count) ; T_VARIABLE($tabs) [ T_VARIABLE($depth) ] [ ] = T_VARIABLE($tabs_current) ; T_VARIABLE($depth) T_DEC ; } T_STRING ( T_VARIABLE($tabs) ) ; T_VARIABLE($tabs) = T_STRING ( T_VARIABLE($tabs) ) ; } T_IF ( T_VARIABLE($return_root) ) { T_RETURN T_VARIABLE($root_path) ; } T_ELSE { T_RETURN ( T_ISSET ( T_VARIABLE($tabs) [ T_VARIABLE($level) ] ) T_BOOLEAN_AND T_VARIABLE($tabs) [ T_VARIABLE($level) ] [ ] > T_LNUMBER ) ? T_VARIABLE($tabs) [ T_VARIABLE($level) ] [ ] : ; } } T_FUNCTION(menu_primary_local_tasks) ( ) { T_RETURN T_STRING ( T_LNUMBER ) ; } T_FUNCTION(menu_secondary_local_tasks) ( ) { T_RETURN T_STRING ( T_LNUMBER ) ; } T_FUNCTION(menu_tab_root_path) ( ) { T_RETURN T_STRING ( T_LNUMBER , T_STRING ) ; } T_FUNCTION(theme_menu_local_tasks) ( ) { T_VARIABLE($output) = ; T_IF ( T_VARIABLE($primary) = T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($primary) . ; } T_IF ( T_VARIABLE($secondary) = T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($secondary) . ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(menu_set_active_menu_name) ( T_VARIABLE($menu_name) = T_STRING ) { T_STATIC T_VARIABLE($active) ; T_IF ( T_ISSET ( T_VARIABLE($menu_name) ) ) { T_VARIABLE($active) = T_VARIABLE($menu_name) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($active) ) ) { T_VARIABLE($active) = ; } T_RETURN T_VARIABLE($active) ; } T_FUNCTION(menu_get_active_menu_name) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(menu_set_active_item) ( T_VARIABLE($path) ) { T_VARIABLE($_GET) [ ] = T_VARIABLE($path) ; } T_FUNCTION(menu_set_active_trail) ( T_VARIABLE($new_trail) = T_STRING ) { T_STATIC T_VARIABLE($trail) ; T_IF ( T_ISSET ( T_VARIABLE($new_trail) ) ) { T_VARIABLE($trail) = T_VARIABLE($new_trail) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($trail) ) ) { T_VARIABLE($trail) = T_ARRAY ( ) ; T_VARIABLE($trail) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($item) = T_STRING ( ) ; T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($item) [ ] ) ; T_VARIABLE($args) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($parts) T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($part) ) { T_IF ( T_VARIABLE($part) T_IS_EQUAL ) { T_VARIABLE($parts) [ T_VARIABLE($index) ] = T_VARIABLE($args) [ T_VARIABLE($index) ] ; } } T_VARIABLE($root_item) = T_STRING ( T_STRING ( , T_VARIABLE($parts) ) ) ; T_IF ( T_VARIABLE($root_item) T_BOOLEAN_AND T_VARIABLE($root_item) [ ] ) { T_VARIABLE($item) = T_VARIABLE($root_item) ; } } T_VARIABLE($tree) = T_STRING ( T_STRING ( ) ) ; T_LIST ( T_VARIABLE($key) , T_VARIABLE($curr) ) = T_STRING ( T_VARIABLE($tree) ) ; T_WHILE ( T_VARIABLE($curr) ) { T_IF ( T_VARIABLE($curr) [ ] [ ] T_IS_EQUAL T_VARIABLE($item) [ ] ) { T_VARIABLE($trail) [ ] = T_VARIABLE($curr) [ ] ; T_VARIABLE($curr) = T_STRING ; } T_ELSE { T_IF ( T_VARIABLE($curr) [ ] T_BOOLEAN_AND T_VARIABLE($curr) [ ] [ ] ) { T_VARIABLE($trail) [ ] = T_VARIABLE($curr) [ ] ; T_VARIABLE($tree) = T_VARIABLE($curr) [ ] ; } T_LIST ( T_VARIABLE($key) , T_VARIABLE($curr) ) = T_STRING ( T_VARIABLE($tree) ) ; } } T_VARIABLE($last) = T_STRING ( T_VARIABLE($trail) ) - T_LNUMBER ; T_IF ( T_VARIABLE($trail) [ T_VARIABLE($last) ] [ ] T_IS_NOT_EQUAL T_VARIABLE($item) [ ] T_BOOLEAN_AND ! T_BOOL_CAST ( T_VARIABLE($item) [ ] & T_STRING ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_VARIABLE($trail) [ ] = T_VARIABLE($item) ; } } T_RETURN T_VARIABLE($trail) ; } T_FUNCTION(menu_get_active_trail) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(menu_get_active_breadcrumb) ( ) { T_VARIABLE($breadcrumb) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_RETURN T_VARIABLE($breadcrumb) ; } T_VARIABLE($item) = T_STRING ( ) ; T_IF ( T_VARIABLE($item) T_BOOLEAN_AND T_VARIABLE($item) [ ] ) { T_VARIABLE($active_trail) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($active_trail) T_AS T_VARIABLE($parent) ) { T_VARIABLE($breadcrumb) [ ] = T_STRING ( T_VARIABLE($parent) [ ] , T_VARIABLE($parent) [ ] , T_VARIABLE($parent) [ ] ) ; } T_VARIABLE($end) = T_STRING ( T_VARIABLE($active_trail) ) ; T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_VARIABLE($end) [ ] T_BOOLEAN_OR ( T_VARIABLE($item) [ ] T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($end) [ ] T_IS_NOT_EQUAL ) ) { T_STRING ( T_VARIABLE($breadcrumb) ) ; } } T_RETURN T_VARIABLE($breadcrumb) ; } T_FUNCTION(menu_get_active_title) ( ) { T_VARIABLE($active_trail) = T_STRING ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($active_trail) ) T_AS T_VARIABLE($item) ) { T_IF ( ! T_BOOL_CAST ( T_VARIABLE($item) [ ] & T_STRING ) ) { T_RETURN T_VARIABLE($item) [ ] ; } } } T_FUNCTION(menu_link_load) ( T_VARIABLE($mlid) ) { T_IF ( T_STRING ( T_VARIABLE($mlid) ) T_BOOLEAN_AND T_VARIABLE($item) = T_STRING ( T_STRING ( , T_VARIABLE($mlid) ) ) ) { T_STRING ( T_VARIABLE($item) ) ; T_RETURN T_VARIABLE($item) ; } T_RETURN T_STRING ; } T_FUNCTION(menu_cache_clear) ( T_VARIABLE($menu_name) = ) { T_STATIC T_VARIABLE($cache_cleared) = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($cache_cleared) [ T_VARIABLE($menu_name) ] ) ) { T_STRING ( . T_VARIABLE($menu_name) . , , T_STRING ) ; T_VARIABLE($cache_cleared) [ T_VARIABLE($menu_name) ] = T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($cache_cleared) [ T_VARIABLE($menu_name) ] T_IS_EQUAL T_LNUMBER ) { T_STRING ( , . T_VARIABLE($menu_name) . , , T_STRING ) ; T_VARIABLE($cache_cleared) [ T_VARIABLE($menu_name) ] = T_LNUMBER ; } } T_FUNCTION(menu_cache_clear_all) ( ) { T_STRING ( , , T_STRING ) ; } T_FUNCTION(menu_rebuild) ( ) { T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($menu) = T_STRING ( T_STRING ) ; T_STRING ( T_VARIABLE($menu) ) ; T_STRING ( ) ; T_IF ( T_STRING ( ) ) { T_STRING ( , T_STRING ) ; } } T_FUNCTION(menu_router_build) ( T_VARIABLE($reset) = T_STRING ) { T_STATIC T_VARIABLE($menu) ; T_IF ( ! T_ISSET ( T_VARIABLE($menu) ) T_BOOLEAN_OR T_VARIABLE($reset) ) { T_IF ( ! T_VARIABLE($reset) T_BOOLEAN_AND ( T_VARIABLE($cache) = T_STRING ( , ) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($menu) = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_STRING ( ) ; T_VARIABLE($callbacks) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_VARIABLE($router_items) = T_STRING ( T_VARIABLE($module) . ) ; T_IF ( T_ISSET ( T_VARIABLE($router_items) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($router_items) ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($router_items) ) T_AS T_VARIABLE($path) ) { T_VARIABLE($router_items) [ T_VARIABLE($path) ] [ ] = T_VARIABLE($module) ; } T_VARIABLE($callbacks) = T_STRING ( T_VARIABLE($callbacks) , T_VARIABLE($router_items) ) ; } } T_STRING ( , T_VARIABLE($callbacks) ) ; T_VARIABLE($menu) = T_STRING ( T_VARIABLE($callbacks) ) ; T_STRING ( , T_VARIABLE($menu) , ) ; } } T_RETURN T_VARIABLE($menu) ; } T_FUNCTION(_menu_link_build) ( T_VARIABLE($item) ) { T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($item) [ ] = - T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($item) [ ] = T_LNUMBER ; } T_VARIABLE($item) [ ] = ; T_VARIABLE($item) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($item) [ ] ) ? T_ARRAY ( ) : T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($item) [ ] ) ) , ) ; T_RETURN T_VARIABLE($item) ; } T_FUNCTION(_menu_navigation_links_rebuild) ( T_VARIABLE($menu) ) { T_VARIABLE($menu_links) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($menu) T_AS T_VARIABLE($path) T_DOUBLE_ARROW T_VARIABLE($item) ) { T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($item) = T_STRING ( T_VARIABLE($item) ) ; T_VARIABLE($menu_links) [ T_VARIABLE($path) ] = T_VARIABLE($item) ; T_VARIABLE($sort) [ T_VARIABLE($path) ] = T_VARIABLE($item) [ ] ; } } T_IF ( T_VARIABLE($menu_links) ) { T_STRING ( T_VARIABLE($sort) , T_STRING , T_VARIABLE($menu_links) ) ; T_FOREACH ( T_VARIABLE($menu_links) T_AS T_VARIABLE($item) ) { T_VARIABLE($existing_item) = T_STRING ( T_STRING ( , T_VARIABLE($item) [ ] , ) ) ; T_IF ( T_VARIABLE($existing_item) ) { T_VARIABLE($item) [ ] = T_VARIABLE($existing_item) [ ] ; T_VARIABLE($item) [ ] = T_VARIABLE($existing_item) [ ] ; T_VARIABLE($item) [ ] = T_VARIABLE($existing_item) [ ] ; T_VARIABLE($item) [ ] = T_VARIABLE($existing_item) [ ] ; T_VARIABLE($item) [ ] = T_VARIABLE($existing_item) [ ] ; } T_IF ( ! T_VARIABLE($existing_item) T_BOOLEAN_OR ! T_VARIABLE($existing_item) [ ] ) { T_STRING ( T_VARIABLE($item) ) ; } } } T_VARIABLE($placeholders) = T_STRING ( T_VARIABLE($menu) , ) ; T_VARIABLE($paths) = T_STRING ( T_VARIABLE($menu) ) ; T_VARIABLE($result) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($placeholders) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($paths) ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($router_path) = T_STRING ( T_VARIABLE($menu) , T_VARIABLE($item) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($router_path) ) T_BOOLEAN_AND ( T_VARIABLE($router_path) T_IS_NOT_EQUAL T_VARIABLE($item) [ ] T_BOOLEAN_OR T_VARIABLE($item) [ ] ) ) { T_VARIABLE($updated) = T_VARIABLE($item) [ ] T_BOOLEAN_AND T_VARIABLE($router_path) T_IS_NOT_EQUAL T_VARIABLE($item) [ ] ; T_STRING ( , T_VARIABLE($router_path) , T_VARIABLE($updated) , T_VARIABLE($item) [ ] ) ; } } T_VARIABLE($result) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($placeholders) T_ENCAPSED_AND_WHITESPACE , T_VARIABLE($paths) ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($item) , T_STRING ) ; } } T_FUNCTION(menu_link_delete) ( T_VARIABLE($mlid) , T_VARIABLE($path) = T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($mlid) ) ) { T_STRING ( T_STRING ( T_STRING ( , T_VARIABLE($mlid) ) ) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($path) ) ; T_WHILE ( T_VARIABLE($link) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($link) ) ; } } } T_FUNCTION(_menu_delete_item) ( T_VARIABLE($item) , T_VARIABLE($force) = T_STRING ) { T_IF ( T_VARIABLE($item) T_BOOLEAN_AND ( T_VARIABLE($item) [ ] T_IS_NOT_EQUAL T_BOOLEAN_OR T_VARIABLE($item) [ ] T_BOOLEAN_OR T_VARIABLE($force) ) ) { T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($item) [ ] ) ; T_WHILE ( T_VARIABLE($m) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($child) = T_STRING ( T_VARIABLE($m) [ ] ) ; T_VARIABLE($child) [ ] = T_VARIABLE($item) [ ] ; T_STRING ( T_VARIABLE($child) ) ; } } T_STRING ( , T_VARIABLE($item) [ ] ) ; T_STRING ( T_VARIABLE($item) ) ; T_STRING ( T_VARIABLE($item) [ ] ) ; T_STRING ( ) ; } } T_FUNCTION(menu_link_save) ( & T_VARIABLE($item) ) { T_VARIABLE($menu) = T_STRING ( ) ; T_STRING ( , T_VARIABLE($item) , T_VARIABLE($menu) ) ; T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($item) [ ] ) T_BOOLEAN_OR T_VARIABLE($item) [ ] T_IS_EQUAL ; T_VARIABLE($item) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($existing_item) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($existing_item) = T_STRING ( T_STRING ( , T_VARIABLE($item) [ ] ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($parent) = T_STRING ( T_STRING ( , T_VARIABLE($item) [ ] ) ) ; } T_ELSE { T_VARIABLE($parent_path) = T_VARIABLE($item) [ ] ; T_VARIABLE($where) = ; T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL ) { T_VARIABLE($where) T_CONCAT_EQUAL ; T_VARIABLE($arg2) = ; } T_ELSE { T_VARIABLE($where) T_CONCAT_EQUAL ; T_VARIABLE($arg2) = T_VARIABLE($item) [ ] ; } T_DO { T_VARIABLE($parent) = T_STRING ; T_VARIABLE($parent_path) = T_STRING ( T_VARIABLE($parent_path) , T_LNUMBER , T_STRING ( T_VARIABLE($parent_path) , ) ) ; T_VARIABLE($result) = T_STRING ( . T_VARIABLE($where) , T_VARIABLE($parent_path) , T_VARIABLE($arg2) ) ; T_IF ( T_STRING ( T_VARIABLE($result) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($parent) = T_STRING ( T_STRING ( . T_VARIABLE($where) , T_VARIABLE($parent_path) , T_VARIABLE($arg2) ) ) ; } } T_WHILE ( T_VARIABLE($parent) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($parent_path) ) ; } T_IF ( T_VARIABLE($parent) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($item) [ ] = T_VARIABLE($parent) [ ] ; } T_VARIABLE($menu_name) = T_VARIABLE($item) [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($parent) [ ] ) T_BOOLEAN_OR T_VARIABLE($parent) [ ] < T_LNUMBER ) { T_VARIABLE($item) [ ] = T_LNUMBER ; } T_ELSE { T_VARIABLE($item) [ ] = T_VARIABLE($parent) [ ] ; } T_IF ( ! T_VARIABLE($existing_item) ) { T_STRING ( , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_STRING ( T_VARIABLE($item) [ ] ) , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) ; T_VARIABLE($item) [ ] = T_STRING ( , ) ; } T_IF ( ! T_VARIABLE($item) [ ] ) { T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_STRING ; T_VARIABLE($i) T_INC ) { T_VARIABLE($item) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) ] = T_LNUMBER ; } T_VARIABLE($item) [ ] = T_LNUMBER ; } T_ELSE { T_IF ( T_VARIABLE($item) [ ] T_BOOLEAN_AND T_VARIABLE($existing_item) ) { T_VARIABLE($limit) = T_STRING - T_STRING ( T_VARIABLE($existing_item) ) - T_LNUMBER ; } T_ELSE { T_VARIABLE($limit) = T_STRING - T_LNUMBER ; } T_IF ( T_VARIABLE($parent) [ ] > T_VARIABLE($limit) ) { T_RETURN T_STRING ; } T_VARIABLE($item) [ ] = T_VARIABLE($parent) [ ] + T_LNUMBER ; T_STRING ( T_VARIABLE($item) , T_VARIABLE($parent) ) ; } T_IF ( T_VARIABLE($existing_item) T_BOOLEAN_AND ( T_VARIABLE($item) [ ] T_IS_NOT_EQUAL T_VARIABLE($existing_item) [ ] T_BOOLEAN_OR T_VARIABLE($menu_name) T_IS_NOT_EQUAL T_VARIABLE($existing_item) [ ] ) ) { T_STRING ( T_VARIABLE($item) , T_VARIABLE($existing_item) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) T_BOOLEAN_AND ( T_EMPTY ( T_VARIABLE($item) [ ] ) T_BOOLEAN_OR ! T_VARIABLE($existing_item) T_BOOLEAN_OR ( T_VARIABLE($existing_item) [ ] T_IS_NOT_EQUAL T_VARIABLE($item) [ ] ) ) ) { T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($item) [ ] = ; } T_ELSE { T_VARIABLE($item) [ ] = T_STRING ( , T_VARIABLE($item) [ ] , T_STRING ) ; T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($menu) , T_VARIABLE($item) [ ] ) ; } } T_STRING ( , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_STRING ( T_VARIABLE($item) [ ] ) , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) ; T_STRING ( T_VARIABLE($item) ) ; T_STRING ( T_VARIABLE($menu_name) ) ; T_IF ( T_VARIABLE($existing_item) T_BOOLEAN_AND T_VARIABLE($menu_name) T_IS_NOT_EQUAL T_VARIABLE($existing_item) [ ] ) { T_STRING ( T_VARIABLE($existing_item) [ ] ) ; } T_STRING ( ) ; T_RETURN T_VARIABLE($item) [ ] ; } T_FUNCTION(_menu_clear_page_cache) ( ) { T_STATIC T_VARIABLE($cache_cleared) = T_LNUMBER ; T_IF ( T_EMPTY ( T_VARIABLE($cache_cleared) ) ) { T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($cache_cleared) = T_LNUMBER ; } T_ELSEIF ( T_VARIABLE($cache_cleared) T_IS_EQUAL T_LNUMBER ) { T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($cache_cleared) = T_LNUMBER ; } } T_FUNCTION(_menu_set_expanded_menus) ( ) { T_VARIABLE($names) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($n) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($names) [ ] = T_VARIABLE($n) [ ] ; } T_STRING ( , T_VARIABLE($names) ) ; } T_FUNCTION(_menu_find_router_path) ( T_VARIABLE($menu) , T_VARIABLE($link_path) ) { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($link_path) , T_STRING ) ; T_VARIABLE($router_path) = T_VARIABLE($link_path) ; T_IF ( ! T_ISSET ( T_VARIABLE($menu) [ T_VARIABLE($router_path) ] ) ) { T_LIST ( T_VARIABLE($ancestors) ) = T_STRING ( T_VARIABLE($parts) ) ; T_VARIABLE($ancestors) [ ] = ; T_FOREACH ( T_VARIABLE($ancestors) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($router_path) ) { T_IF ( T_ISSET ( T_VARIABLE($menu) [ T_VARIABLE($router_path) ] ) ) { T_BREAK ; } } } T_RETURN T_VARIABLE($router_path) ; } T_FUNCTION(menu_link_maintain) ( T_VARIABLE($module) , T_VARIABLE($op) , T_VARIABLE($link_path) , T_VARIABLE($link_title) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($menu_link) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($link_title) , T_DOUBLE_ARROW T_VARIABLE($link_path) , T_DOUBLE_ARROW T_VARIABLE($module) , ) ; T_RETURN T_STRING ( T_VARIABLE($menu_link) ) ; T_BREAK ; T_CASE : T_STRING ( , T_VARIABLE($link_title) , T_VARIABLE($link_path) , T_VARIABLE($module) ) ; T_STRING ( ) ; T_BREAK ; T_CASE : T_STRING ( T_STRING , T_VARIABLE($link_path) ) ; T_BREAK ; } } T_FUNCTION(menu_link_children_relative_depth) ( T_VARIABLE($item) ) { T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($match) = ; T_VARIABLE($args) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($p) = ; T_WHILE ( T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($item) [ T_VARIABLE($p) ] ) { T_VARIABLE($match) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($p) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($args) [ ] = T_VARIABLE($item) [ T_VARIABLE($p) ] ; T_VARIABLE($p) = . T_INC T_VARIABLE($i) ; } T_VARIABLE($max_depth) = T_STRING ( T_STRING ( . T_VARIABLE($match) . , T_VARIABLE($args) , T_LNUMBER , T_LNUMBER ) ) ; T_RETURN ( T_VARIABLE($max_depth) > T_VARIABLE($item) [ ] ) ? T_VARIABLE($max_depth) - T_VARIABLE($item) [ ] : T_LNUMBER ; } T_FUNCTION(_menu_link_move_children) ( T_VARIABLE($item) , T_VARIABLE($existing_item) ) { T_VARIABLE($args) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($set) [ ] = ; T_VARIABLE($i) = T_LNUMBER ; T_WHILE ( T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($item) [ ] ) { T_VARIABLE($p) = . T_VARIABLE($i) T_INC ; T_VARIABLE($set) [ ] = T_VARIABLE($p) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($args) [ ] = T_VARIABLE($item) [ T_VARIABLE($p) ] ; } T_VARIABLE($j) = T_VARIABLE($existing_item) [ ] + T_LNUMBER ; T_WHILE ( T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($j) T_IS_SMALLER_OR_EQUAL T_STRING ) { T_VARIABLE($set) [ ] = . T_VARIABLE($i) T_INC . . T_VARIABLE($j) T_INC ; } T_WHILE ( T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_STRING ) { T_VARIABLE($set) [ ] = . T_VARIABLE($i) T_INC . ; } T_VARIABLE($shift) = T_VARIABLE($item) [ ] - T_VARIABLE($existing_item) [ ] ; T_IF ( T_VARIABLE($shift) < T_LNUMBER ) { T_VARIABLE($args) [ ] = - T_VARIABLE($shift) ; T_VARIABLE($set) [ ] = ; } T_ELSEIF ( T_VARIABLE($shift) > T_LNUMBER ) { T_VARIABLE($set) = T_STRING ( T_VARIABLE($set) ) ; T_VARIABLE($args) = T_STRING ( T_VARIABLE($args) ) ; T_VARIABLE($args) [ ] = T_VARIABLE($shift) ; T_VARIABLE($set) [ ] = ; } T_VARIABLE($where) [ ] = ; T_VARIABLE($args) [ ] = T_VARIABLE($existing_item) [ ] ; T_VARIABLE($p) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($existing_item) [ T_VARIABLE($p) ] ; T_VARIABLE($p) = . T_INC T_VARIABLE($i) ) { T_VARIABLE($where) [ ] = T_VARIABLE($p) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($args) [ ] = T_VARIABLE($existing_item) [ T_VARIABLE($p) ] ; } T_STRING ( . T_STRING ( , T_VARIABLE($set) ) . . T_STRING ( , T_VARIABLE($where) ) , T_VARIABLE($args) ) ; T_STRING ( T_VARIABLE($existing_item) , T_STRING ) ; } T_FUNCTION(_menu_update_parental_status) ( T_VARIABLE($item) , T_VARIABLE($exclude) = T_STRING ) { T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($where) = T_VARIABLE($exclude) ? : ; T_VARIABLE($parent_has_children) = T_BOOL_CAST T_STRING ( T_STRING ( . T_VARIABLE($where) , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_LNUMBER , T_LNUMBER ) ) ; T_STRING ( , T_VARIABLE($parent_has_children) , T_VARIABLE($item) [ ] ) ; } } T_FUNCTION(_menu_link_parents_set) ( & T_VARIABLE($item) , T_VARIABLE($parent) ) { T_VARIABLE($i) = T_LNUMBER ; T_WHILE ( T_VARIABLE($i) < T_VARIABLE($item) [ ] ) { T_VARIABLE($p) = . T_VARIABLE($i) T_INC ; T_VARIABLE($item) [ T_VARIABLE($p) ] = T_VARIABLE($parent) [ T_VARIABLE($p) ] ; } T_VARIABLE($p) = . T_VARIABLE($i) T_INC ; T_VARIABLE($item) [ T_VARIABLE($p) ] = T_VARIABLE($item) [ ] ; T_WHILE ( T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_STRING ) { T_VARIABLE($p) = . T_VARIABLE($i) T_INC ; T_VARIABLE($item) [ T_VARIABLE($p) ] = T_LNUMBER ; } } T_FUNCTION(_menu_router_build) ( T_VARIABLE($callbacks) ) { T_VARIABLE($menu) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($callbacks) T_AS T_VARIABLE($path) T_DOUBLE_ARROW T_VARIABLE($item) ) { T_VARIABLE($load_functions) = T_ARRAY ( ) ; T_VARIABLE($to_arg_functions) = T_ARRAY ( ) ; T_VARIABLE($fit) = T_LNUMBER ; T_VARIABLE($move) = T_STRING ; T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($path) , T_STRING ) ; T_VARIABLE($number_parts) = T_STRING ( T_VARIABLE($parts) ) ; T_VARIABLE($slashes) = T_VARIABLE($number_parts) - T_LNUMBER ; T_FOREACH ( T_VARIABLE($parts) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($part) ) { T_VARIABLE($match) = T_STRING ; T_IF ( T_STRING ( , T_VARIABLE($part) , T_VARIABLE($matches) ) ) { T_IF ( T_EMPTY ( T_VARIABLE($matches) [ T_LNUMBER ] ) ) { T_VARIABLE($match) = T_STRING ; T_VARIABLE($load_functions) [ T_VARIABLE($k) ] = T_STRING ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] . ) ) { T_VARIABLE($to_arg_functions) [ T_VARIABLE($k) ] = T_VARIABLE($matches) [ T_LNUMBER ] . ; T_VARIABLE($load_functions) [ T_VARIABLE($k) ] = T_STRING ; T_VARIABLE($match) = T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] . ) ) { T_VARIABLE($function) = T_VARIABLE($matches) [ T_LNUMBER ] . ; T_VARIABLE($load_functions) [ T_VARIABLE($k) ] = T_ISSET ( T_VARIABLE($item) [ ] ) ? T_ARRAY ( T_VARIABLE($function) T_DOUBLE_ARROW T_VARIABLE($item) [ ] ) : T_VARIABLE($function) ; T_VARIABLE($match) = T_STRING ; } } } T_IF ( T_VARIABLE($match) ) { T_VARIABLE($parts) [ T_VARIABLE($k) ] = ; } T_ELSE { T_VARIABLE($fit) T_OR_EQUAL T_LNUMBER T_SL ( T_VARIABLE($slashes) - T_VARIABLE($k) ) ; } } T_IF ( T_VARIABLE($fit) ) { T_VARIABLE($move) = T_STRING ; } T_ELSE { T_VARIABLE($fit) = ( T_LNUMBER T_SL T_VARIABLE($number_parts) ) - T_LNUMBER ; } T_VARIABLE($masks) [ T_VARIABLE($fit) ] = T_LNUMBER ; T_VARIABLE($item) [ ] = T_EMPTY ( T_VARIABLE($load_functions) ) ? : T_STRING ( T_VARIABLE($load_functions) ) ; T_VARIABLE($item) [ ] = T_EMPTY ( T_VARIABLE($to_arg_functions) ) ? : T_STRING ( T_VARIABLE($to_arg_functions) ) ; T_VARIABLE($item) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($number_parts) , T_DOUBLE_ARROW T_VARIABLE($parts) , T_DOUBLE_ARROW T_VARIABLE($fit) , ) ; T_VARIABLE($item) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_BOOL_CAST ( T_VARIABLE($item) [ ] & T_STRING ) , T_DOUBLE_ARROW T_BOOL_CAST ( T_VARIABLE($item) [ ] & T_STRING ) , ) ; T_IF ( T_VARIABLE($move) ) { T_VARIABLE($new_path) = T_STRING ( , T_VARIABLE($item) [ ] ) ; T_VARIABLE($menu) [ T_VARIABLE($new_path) ] = T_VARIABLE($item) ; T_VARIABLE($sort) [ T_VARIABLE($new_path) ] = T_VARIABLE($number_parts) ; } T_ELSE { T_VARIABLE($menu) [ T_VARIABLE($path) ] = T_VARIABLE($item) ; T_VARIABLE($sort) [ T_VARIABLE($path) ] = T_VARIABLE($number_parts) ; } } T_STRING ( T_VARIABLE($sort) , T_STRING , T_VARIABLE($menu) ) ; T_FOREACH ( T_VARIABLE($menu) T_AS T_VARIABLE($path) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($item) = & T_VARIABLE($menu) [ T_VARIABLE($path) ] ; T_IF ( ! T_VARIABLE($item) [ ] ) { T_VARIABLE($item) [ ] = ; T_VARIABLE($item) [ ] = T_VARIABLE($path) ; } T_FOR ( T_VARIABLE($i) = T_VARIABLE($item) [ ] - T_LNUMBER ; T_VARIABLE($i) ; T_VARIABLE($i) T_DEC ) { T_VARIABLE($parent_path) = T_STRING ( , T_STRING ( T_VARIABLE($item) [ ] , T_LNUMBER , T_VARIABLE($i) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($menu) [ T_VARIABLE($parent_path) ] ) ) { T_VARIABLE($parent) = T_VARIABLE($menu) [ T_VARIABLE($parent_path) ] ; T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($parent_path) ; } T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND ! T_VARIABLE($parent) [ ] ) { T_VARIABLE($item) [ ] = T_VARIABLE($parent_path) ; } T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($parent) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($parent) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($parent) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($parent) [ ] ; } } T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($parent) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($parent) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($parent) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($parent) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($parent) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($parent) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($parent) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($parent) [ ] ; } } } } T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) [ ] = T_LNUMBER ; } T_IF ( T_STRING ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($item) [ ] ) ; } T_VARIABLE($item) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($path) , T_DOUBLE_ARROW T_VARIABLE($path) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($file_path) = T_VARIABLE($item) [ ] ? T_VARIABLE($item) [ ] : T_STRING ( , T_VARIABLE($item) [ ] ) ; T_VARIABLE($item) [ ] = T_VARIABLE($file_path) . . T_VARIABLE($item) [ ] ; } T_VARIABLE($title_arguments) = T_VARIABLE($item) [ ] ? T_STRING ( T_VARIABLE($item) [ ] ) : ; T_STRING ( , T_VARIABLE($path) , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_STRING ( T_VARIABLE($item) [ ] ) , T_VARIABLE($item) [ ] , T_STRING ( T_VARIABLE($item) [ ] ) , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($title_arguments) , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) ; } T_VARIABLE($masks) = T_STRING ( T_VARIABLE($masks) ) ; T_STRING ( T_VARIABLE($masks) ) ; T_STRING ( , T_VARIABLE($masks) ) ; T_RETURN T_VARIABLE($menu) ; } T_FUNCTION(menu_path_is_external) ( T_VARIABLE($path) ) { T_VARIABLE($colonpos) = T_STRING ( T_VARIABLE($path) , ) ; T_RETURN T_VARIABLE($colonpos) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND ! T_STRING ( , T_STRING ( T_VARIABLE($path) , T_LNUMBER , T_VARIABLE($colonpos) ) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($path) , T_STRING ) T_IS_EQUAL T_STRING ( T_VARIABLE($path) ) ; } T_FUNCTION(_menu_site_is_offline) ( ) { T_IF ( T_STRING ( , T_LNUMBER ) ) { T_IF ( T_STRING ( ) ) { T_IF ( T_STRING ( T_VARIABLE($_GET) [ ] ) T_IS_NOT_EQUAL ) { T_STRING ( T_STRING ( ) , , T_STRING ) ; } } T_ELSE { T_IF ( T_STRING ( ) ) { T_RETURN T_VARIABLE($_GET) [ ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($_GET) [ ] T_IS_NOT_EQUAL ; } T_REQUIRE_ONCE T_STRING ( , ) . ; T_STRING ( ) ; } } T_RETURN T_STRING ; } T_FUNCTION(menu_valid_path) ( T_VARIABLE($form_item) ) { T_GLOBAL T_VARIABLE($menu_admin) ; T_VARIABLE($item) = T_ARRAY ( ) ; T_VARIABLE($path) = T_VARIABLE($form_item) [ ] ; T_VARIABLE($menu_admin) = T_STRING ; T_IF ( T_VARIABLE($path) T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($path) ) ) { T_VARIABLE($item) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; } T_ELSEIF ( T_STRING ( , T_VARIABLE($path) ) ) { T_IF ( T_VARIABLE($item) = T_STRING ( T_STRING ( , T_VARIABLE($path) ) ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($form_item) [ ] ; T_VARIABLE($item) [ ] = T_VARIABLE($form_item) [ ] ; T_VARIABLE($item) [ ] = T_STRING ; T_VARIABLE($item) [ ] = ; T_STRING ( T_VARIABLE($item) ) ; } } T_ELSE { T_VARIABLE($item) = T_STRING ( T_VARIABLE($path) ) ; } T_VARIABLE($menu_admin) = T_STRING ; T_RETURN T_VARIABLE($item) T_BOOLEAN_AND T_VARIABLE($item) [ ] ; }",13,0
"T_OPEN_TAG T_FUNCTION(module_load_all) ( ) { T_FOREACH ( T_STRING ( T_STRING , T_STRING ) T_AS T_VARIABLE($module) ) { T_STRING ( , T_VARIABLE($module) ) ; } } T_FUNCTION(module_iterate) ( T_VARIABLE($function) , T_VARIABLE($argument) = ) { T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($name) ) { T_VARIABLE($function) ( T_VARIABLE($name) , T_VARIABLE($argument) ) ; } } T_FUNCTION(module_list) ( T_VARIABLE($refresh) = T_STRING , T_VARIABLE($bootstrap) = T_STRING , T_VARIABLE($sort) = T_STRING , T_VARIABLE($fixed_list) = T_STRING ) { T_STATIC T_VARIABLE($list) , T_VARIABLE($sorted_list) ; T_IF ( T_VARIABLE($refresh) T_BOOLEAN_OR T_VARIABLE($fixed_list) ) { T_UNSET ( T_VARIABLE($sorted_list) ) ; T_VARIABLE($list) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($fixed_list) ) { T_FOREACH ( T_VARIABLE($fixed_list) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($module) ) { T_STRING ( , T_VARIABLE($name) , T_VARIABLE($module) [ ] ) ; T_VARIABLE($list) [ T_VARIABLE($name) ] = T_VARIABLE($name) ; } } T_ELSE { T_IF ( T_VARIABLE($bootstrap) ) { T_VARIABLE($result) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( ) ; } T_WHILE ( T_VARIABLE($module) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_STRING ( T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($throttle) = ( T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_STRING ( , T_LNUMBER ) > T_LNUMBER ) ; T_IF ( ! T_VARIABLE($throttle) ) { T_STRING ( , T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($list) [ T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ; } } } } } T_IF ( T_VARIABLE($sort) ) { T_IF ( ! T_ISSET ( T_VARIABLE($sorted_list) ) ) { T_VARIABLE($sorted_list) = T_VARIABLE($list) ; T_STRING ( T_VARIABLE($sorted_list) ) ; } T_RETURN T_VARIABLE($sorted_list) ; } T_RETURN T_VARIABLE($list) ; } T_FUNCTION(module_rebuild_cache) ( ) { T_VARIABLE($files) = T_STRING ( , , , T_LNUMBER ) ; T_STRING ( T_VARIABLE($files) , ) ; T_STRING ( T_VARIABLE($files) ) ; T_VARIABLE($defaults) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($filename) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING . ) ; T_IF ( T_EMPTY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_UNSET ( T_VARIABLE($files) [ T_VARIABLE($filename) ] ) ; T_CONTINUE ; } T_VARIABLE($files) [ T_VARIABLE($filename) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($defaults) ; T_STRING ( , T_VARIABLE($files) [ T_VARIABLE($filename) ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($files) [ T_VARIABLE($filename) ] ) ; T_VARIABLE($bootstrap) = T_LNUMBER ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($hook) ) { T_IF ( T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($hook) ) ) { T_VARIABLE($bootstrap) = T_LNUMBER ; T_BREAK ; } } T_IF ( T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( , T_STRING ( T_VARIABLE($files) [ T_VARIABLE($filename) ] T_OBJECT_OPERATOR T_STRING ) , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($bootstrap) , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($files) [ T_VARIABLE($filename) ] T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($files) [ T_VARIABLE($filename) ] T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_STRING ( , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($files) [ T_VARIABLE($filename) ] T_OBJECT_OPERATOR T_STRING ) , , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_LNUMBER , T_VARIABLE($bootstrap) ) ; } } T_VARIABLE($files) = T_STRING ( T_VARIABLE($files) ) ; T_RETURN T_VARIABLE($files) ; } T_FUNCTION(_module_build_dependencies) ( T_VARIABLE($files) ) { T_DO { T_VARIABLE($new_dependency) = T_STRING ; T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($filename) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_VARIABLE($file) = & T_VARIABLE($files) [ T_VARIABLE($filename) ] ; T_IF ( T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_FOREACH ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($dependency_name) ) { T_IF ( T_VARIABLE($dependency_name) T_IS_EQUAL T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($dependency_name) ] ) ) { T_CONTINUE ; } T_VARIABLE($files) [ T_VARIABLE($dependency_name) ] T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($filename) ] = T_VARIABLE($filename) ; T_VARIABLE($dependency) = T_VARIABLE($files) [ T_VARIABLE($dependency_name) ] ; T_IF ( T_ISSET ( T_VARIABLE($dependency) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($dependency) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_FOREACH ( T_VARIABLE($dependency) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($candidate) ) { T_IF ( T_STRING ( T_VARIABLE($candidate) , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) T_IS_IDENTICAL T_STRING ) { T_IF ( T_VARIABLE($candidate) T_IS_EQUAL T_VARIABLE($filename) ) { T_VARIABLE($candidate) = ; T_IF ( T_STRING ( T_VARIABLE($candidate) , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) T_IS_NOT_IDENTICAL T_STRING ) { T_CONTINUE ; } T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ) , ) ; } T_ELSE { T_VARIABLE($new_dependency) = T_STRING ; } T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] [ ] = T_VARIABLE($candidate) ; } } } } } T_UNSET ( T_VARIABLE($file) ) ; } } T_WHILE ( T_VARIABLE($new_dependency) ) ; T_RETURN T_VARIABLE($files) ; } T_FUNCTION(module_exists) ( T_VARIABLE($module) ) { T_VARIABLE($list) = T_STRING ( ) ; T_RETURN T_STRING ( T_VARIABLE($module) , T_VARIABLE($list) ) ; } T_FUNCTION(module_load_install) ( T_VARIABLE($module) ) { T_INCLUDE_ONCE ; T_STRING ( , T_VARIABLE($module) ) ; } T_FUNCTION(module_load_include) ( T_VARIABLE($type) , T_VARIABLE($module) , T_VARIABLE($name) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($name) ) ) { T_VARIABLE($name) = T_VARIABLE($module) ; } T_VARIABLE($file) = . T_STRING ( , T_VARIABLE($module) ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($name) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($type) ; T_IF ( T_STRING ( T_VARIABLE($file) ) ) { T_REQUIRE_ONCE T_VARIABLE($file) ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(module_load_all_includes) ( T_VARIABLE($type) , T_VARIABLE($name) = T_STRING ) { T_VARIABLE($modules) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($modules) T_AS T_VARIABLE($module) ) { T_STRING ( T_VARIABLE($type) , T_VARIABLE($module) , T_VARIABLE($name) ) ; } } T_FUNCTION(module_enable) ( T_VARIABLE($module_list) ) { T_VARIABLE($invoke_modules) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($module_list) T_AS T_VARIABLE($module) ) { T_VARIABLE($existing) = T_STRING ( T_STRING ( , , T_VARIABLE($module) ) ) ; T_IF ( T_VARIABLE($existing) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($module) ) ; T_STRING ( , T_LNUMBER , T_LNUMBER , , T_VARIABLE($module) ) ; T_STRING ( , T_VARIABLE($module) ) ; T_VARIABLE($invoke_modules) [ ] = T_VARIABLE($module) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($invoke_modules) ) ) { T_STRING ( T_STRING , T_STRING ) ; T_STRING ( , T_STRING , T_STRING ) ; } T_FOREACH ( T_VARIABLE($invoke_modules) T_AS T_VARIABLE($module) ) { T_STRING ( T_VARIABLE($module) , ) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($module) , ) ) { T_STRING ( T_STRING ) ; } } } T_FUNCTION(module_disable) ( T_VARIABLE($module_list) ) { T_VARIABLE($invoke_modules) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($module_list) T_AS T_VARIABLE($module) ) { T_IF ( T_STRING ( T_VARIABLE($module) ) ) { T_IF ( ! T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($module) , ) ) { T_STRING ( T_STRING ) ; } T_STRING ( T_VARIABLE($module) ) ; T_STRING ( T_VARIABLE($module) , ) ; T_STRING ( , T_LNUMBER , T_LNUMBER , , T_VARIABLE($module) ) ; T_VARIABLE($invoke_modules) [ ] = T_VARIABLE($module) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($invoke_modules) ) ) { T_STRING ( T_STRING , T_STRING ) ; T_STRING ( , T_STRING , T_STRING ) ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_STRING ( ) ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( ) ; } } T_FUNCTION(module_hook) ( T_VARIABLE($module) , T_VARIABLE($hook) ) { T_RETURN T_STRING ( T_VARIABLE($module) . . T_VARIABLE($hook) ) ; } T_FUNCTION(module_implements) ( T_VARIABLE($hook) , T_VARIABLE($sort) = T_STRING , T_VARIABLE($refresh) = T_STRING ) { T_STATIC T_VARIABLE($implementations) ; T_IF ( T_VARIABLE($refresh) ) { T_VARIABLE($implementations) = T_ARRAY ( ) ; T_RETURN ; } T_IF ( ! T_ISSET ( T_VARIABLE($implementations) [ T_VARIABLE($hook) ] ) ) { T_VARIABLE($implementations) [ T_VARIABLE($hook) ] = T_ARRAY ( ) ; T_VARIABLE($list) = T_STRING ( T_STRING , T_STRING , T_VARIABLE($sort) ) ; T_FOREACH ( T_VARIABLE($list) T_AS T_VARIABLE($module) ) { T_IF ( T_STRING ( T_VARIABLE($module) , T_VARIABLE($hook) ) ) { T_VARIABLE($implementations) [ T_VARIABLE($hook) ] [ ] = T_VARIABLE($module) ; } } } T_RETURN T_ARRAY_CAST T_VARIABLE($implementations) [ T_VARIABLE($hook) ] ; } T_FUNCTION(module_invoke) ( ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($module) = T_VARIABLE($args) [ T_LNUMBER ] ; T_VARIABLE($hook) = T_VARIABLE($args) [ T_LNUMBER ] ; T_UNSET ( T_VARIABLE($args) [ T_LNUMBER ] , T_VARIABLE($args) [ T_LNUMBER ] ) ; T_VARIABLE($function) = T_VARIABLE($module) . . T_VARIABLE($hook) ; T_IF ( T_STRING ( T_VARIABLE($module) , T_VARIABLE($hook) ) ) { T_RETURN T_STRING ( T_VARIABLE($function) , T_VARIABLE($args) ) ; } } T_FUNCTION(module_invoke_all) ( ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($hook) = T_VARIABLE($args) [ T_LNUMBER ] ; T_UNSET ( T_VARIABLE($args) [ T_LNUMBER ] ) ; T_VARIABLE($return) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($hook) ) T_AS T_VARIABLE($module) ) { T_VARIABLE($function) = T_VARIABLE($module) . . T_VARIABLE($hook) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($function) , T_VARIABLE($args) ) ; T_IF ( T_ISSET ( T_VARIABLE($result) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($return) = T_STRING ( T_VARIABLE($return) , T_VARIABLE($result) ) ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($result) ) ) { T_VARIABLE($return) [ ] = T_VARIABLE($result) ; } } T_RETURN T_VARIABLE($return) ; } T_FUNCTION(drupal_required_modules) ( ) { T_RETURN T_ARRAY ( , , , , ) ; }",13,0
"T_OPEN_TAG T_FUNCTION(pager_query) ( T_VARIABLE($query) , T_VARIABLE($limit) = T_LNUMBER , T_VARIABLE($element) = T_LNUMBER , T_VARIABLE($count_query) = T_STRING ) { T_GLOBAL T_VARIABLE($pager_page_array) , T_VARIABLE($pager_total) , T_VARIABLE($pager_total_items) ; T_VARIABLE($page) = T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_VARIABLE($_GET) [ ] : ; T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($args) = T_STRING ( T_VARIABLE($args) , T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($args) [ T_LNUMBER ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($args) = T_VARIABLE($args) [ T_LNUMBER ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($count_query) ) ) { T_VARIABLE($count_query) = T_STRING ( T_ARRAY ( , ) , T_ARRAY ( , ) , T_VARIABLE($query) ) ; } T_VARIABLE($pager_page_array) = T_STRING ( , T_VARIABLE($page) ) ; T_VARIABLE($pager_total_items) [ T_VARIABLE($element) ] = T_STRING ( T_STRING ( T_VARIABLE($count_query) , T_VARIABLE($args) ) ) ; T_VARIABLE($pager_total) [ T_VARIABLE($element) ] = T_STRING ( T_VARIABLE($pager_total_items) [ T_VARIABLE($element) ] / T_VARIABLE($limit) ) ; T_VARIABLE($pager_page_array) [ T_VARIABLE($element) ] = T_STRING ( T_LNUMBER , T_STRING ( T_INT_CAST T_VARIABLE($pager_page_array) [ T_VARIABLE($element) ] , ( T_INT_CAST T_VARIABLE($pager_total) [ T_VARIABLE($element) ] ) - T_LNUMBER ) ) ; T_RETURN T_STRING ( T_VARIABLE($query) , T_VARIABLE($args) , T_VARIABLE($pager_page_array) [ T_VARIABLE($element) ] * T_VARIABLE($limit) , T_VARIABLE($limit) ) ; } T_FUNCTION(pager_get_querystring) ( ) { T_STATIC T_VARIABLE($string) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($string) ) ) { T_VARIABLE($string) = T_STRING ( T_VARIABLE($_REQUEST) , T_STRING ( T_ARRAY ( , ) , T_STRING ( T_VARIABLE($_COOKIE) ) ) ) ; } T_RETURN T_VARIABLE($string) ; } T_FUNCTION(theme_pager) ( T_VARIABLE($tags) = T_ARRAY ( ) , T_VARIABLE($limit) = T_LNUMBER , T_VARIABLE($element) = T_LNUMBER , T_VARIABLE($parameters) = T_ARRAY ( ) , T_VARIABLE($quantity) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($pager_page_array) , T_VARIABLE($pager_total) ; T_VARIABLE($pager_middle) = T_STRING ( T_VARIABLE($quantity) / T_LNUMBER ) ; T_VARIABLE($pager_current) = T_VARIABLE($pager_page_array) [ T_VARIABLE($element) ] + T_LNUMBER ; T_VARIABLE($pager_first) = T_VARIABLE($pager_current) - T_VARIABLE($pager_middle) + T_LNUMBER ; T_VARIABLE($pager_last) = T_VARIABLE($pager_current) + T_VARIABLE($quantity) - T_VARIABLE($pager_middle) ; T_VARIABLE($pager_max) = T_VARIABLE($pager_total) [ T_VARIABLE($element) ] ; T_VARIABLE($i) = T_VARIABLE($pager_first) ; T_IF ( T_VARIABLE($pager_last) > T_VARIABLE($pager_max) ) { T_VARIABLE($i) = T_VARIABLE($i) + ( T_VARIABLE($pager_max) - T_VARIABLE($pager_last) ) ; T_VARIABLE($pager_last) = T_VARIABLE($pager_max) ; } T_IF ( T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($pager_last) = T_VARIABLE($pager_last) + ( T_LNUMBER - T_VARIABLE($i) ) ; T_VARIABLE($i) = T_LNUMBER ; } T_VARIABLE($li_first) = T_STRING ( , ( T_ISSET ( T_VARIABLE($tags) [ T_LNUMBER ] ) ? T_VARIABLE($tags) [ T_LNUMBER ] : T_STRING ( ) ) , T_VARIABLE($limit) , T_VARIABLE($element) , T_VARIABLE($parameters) ) ; T_VARIABLE($li_previous) = T_STRING ( , ( T_ISSET ( T_VARIABLE($tags) [ T_LNUMBER ] ) ? T_VARIABLE($tags) [ T_LNUMBER ] : T_STRING ( ) ) , T_VARIABLE($limit) , T_VARIABLE($element) , T_LNUMBER , T_VARIABLE($parameters) ) ; T_VARIABLE($li_next) = T_STRING ( , ( T_ISSET ( T_VARIABLE($tags) [ T_LNUMBER ] ) ? T_VARIABLE($tags) [ T_LNUMBER ] : T_STRING ( ) ) , T_VARIABLE($limit) , T_VARIABLE($element) , T_LNUMBER , T_VARIABLE($parameters) ) ; T_VARIABLE($li_last) = T_STRING ( , ( T_ISSET ( T_VARIABLE($tags) [ T_LNUMBER ] ) ? T_VARIABLE($tags) [ T_LNUMBER ] : T_STRING ( ) ) , T_VARIABLE($limit) , T_VARIABLE($element) , T_VARIABLE($parameters) ) ; T_IF ( T_VARIABLE($pager_total) [ T_VARIABLE($element) ] > T_LNUMBER ) { T_IF ( T_VARIABLE($li_first) ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($li_first) , ) ; } T_IF ( T_VARIABLE($li_previous) ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($li_previous) , ) ; } T_IF ( T_VARIABLE($i) T_IS_NOT_EQUAL T_VARIABLE($pager_max) ) { T_IF ( T_VARIABLE($i) > T_LNUMBER ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; } T_FOR ( ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($pager_last) T_BOOLEAN_AND T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($pager_max) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($i) < T_VARIABLE($pager_current) ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($i) , T_VARIABLE($limit) , T_VARIABLE($element) , ( T_VARIABLE($pager_current) - T_VARIABLE($i) ) , T_VARIABLE($parameters) ) , ) ; } T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($pager_current) ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($i) , ) ; } T_IF ( T_VARIABLE($i) > T_VARIABLE($pager_current) ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($i) , T_VARIABLE($limit) , T_VARIABLE($element) , ( T_VARIABLE($i) - T_VARIABLE($pager_current) ) , T_VARIABLE($parameters) ) , ) ; } } T_IF ( T_VARIABLE($i) < T_VARIABLE($pager_max) ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; } } T_IF ( T_VARIABLE($li_next) ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($li_next) , ) ; } T_IF ( T_VARIABLE($li_last) ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($li_last) , ) ; } T_RETURN T_STRING ( , T_VARIABLE($items) , T_STRING , , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } } T_FUNCTION(theme_pager_first) ( T_VARIABLE($text) , T_VARIABLE($limit) , T_VARIABLE($element) = T_LNUMBER , T_VARIABLE($parameters) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($pager_page_array) ; T_VARIABLE($output) = ; T_IF ( T_VARIABLE($pager_page_array) [ T_VARIABLE($element) ] > T_LNUMBER ) { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($text) , T_STRING ( T_LNUMBER , T_VARIABLE($element) , T_VARIABLE($pager_page_array) ) , T_VARIABLE($element) , T_VARIABLE($parameters) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_pager_previous) ( T_VARIABLE($text) , T_VARIABLE($limit) , T_VARIABLE($element) = T_LNUMBER , T_VARIABLE($interval) = T_LNUMBER , T_VARIABLE($parameters) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($pager_page_array) ; T_VARIABLE($output) = ; T_IF ( T_VARIABLE($pager_page_array) [ T_VARIABLE($element) ] > T_LNUMBER ) { T_VARIABLE($page_new) = T_STRING ( T_VARIABLE($pager_page_array) [ T_VARIABLE($element) ] - T_VARIABLE($interval) , T_VARIABLE($element) , T_VARIABLE($pager_page_array) ) ; T_IF ( T_VARIABLE($page_new) [ T_VARIABLE($element) ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($text) , T_VARIABLE($limit) , T_VARIABLE($element) , T_VARIABLE($parameters) ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($text) , T_VARIABLE($page_new) , T_VARIABLE($element) , T_VARIABLE($parameters) ) ; } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_pager_next) ( T_VARIABLE($text) , T_VARIABLE($limit) , T_VARIABLE($element) = T_LNUMBER , T_VARIABLE($interval) = T_LNUMBER , T_VARIABLE($parameters) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($pager_page_array) , T_VARIABLE($pager_total) ; T_VARIABLE($output) = ; T_IF ( T_VARIABLE($pager_page_array) [ T_VARIABLE($element) ] < ( T_VARIABLE($pager_total) [ T_VARIABLE($element) ] - T_LNUMBER ) ) { T_VARIABLE($page_new) = T_STRING ( T_VARIABLE($pager_page_array) [ T_VARIABLE($element) ] + T_VARIABLE($interval) , T_VARIABLE($element) , T_VARIABLE($pager_page_array) ) ; T_IF ( T_VARIABLE($page_new) [ T_VARIABLE($element) ] T_IS_EQUAL ( T_VARIABLE($pager_total) [ T_VARIABLE($element) ] - T_LNUMBER ) ) { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($text) , T_VARIABLE($limit) , T_VARIABLE($element) , T_VARIABLE($parameters) ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($text) , T_VARIABLE($page_new) , T_VARIABLE($element) , T_VARIABLE($parameters) ) ; } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_pager_last) ( T_VARIABLE($text) , T_VARIABLE($limit) , T_VARIABLE($element) = T_LNUMBER , T_VARIABLE($parameters) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($pager_page_array) , T_VARIABLE($pager_total) ; T_VARIABLE($output) = ; T_IF ( T_VARIABLE($pager_page_array) [ T_VARIABLE($element) ] < ( T_VARIABLE($pager_total) [ T_VARIABLE($element) ] - T_LNUMBER ) ) { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($text) , T_STRING ( T_VARIABLE($pager_total) [ T_VARIABLE($element) ] - T_LNUMBER , T_VARIABLE($element) , T_VARIABLE($pager_page_array) ) , T_VARIABLE($element) , T_VARIABLE($parameters) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_pager_link) ( T_VARIABLE($text) , T_VARIABLE($page_new) , T_VARIABLE($element) , T_VARIABLE($parameters) = T_ARRAY ( ) , T_VARIABLE($attributes) = T_ARRAY ( ) ) { T_VARIABLE($page) = T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_VARIABLE($_GET) [ ] : ; T_IF ( T_VARIABLE($new_page) = T_STRING ( , T_STRING ( T_VARIABLE($page_new) [ T_VARIABLE($element) ] , T_VARIABLE($element) , T_STRING ( , T_VARIABLE($page) ) ) ) ) { T_VARIABLE($parameters) [ ] = T_VARIABLE($new_page) ; } T_VARIABLE($query) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($parameters) ) ) { T_VARIABLE($query) [ ] = T_STRING ( T_VARIABLE($parameters) , T_ARRAY ( ) ) ; } T_VARIABLE($querystring) = T_STRING ( ) ; T_IF ( T_VARIABLE($querystring) T_IS_NOT_EQUAL ) { T_VARIABLE($query) [ ] = T_VARIABLE($querystring) ; } T_IF ( ! T_ISSET ( T_VARIABLE($attributes) [ ] ) ) { T_STATIC T_VARIABLE($titles) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($titles) ) ) { T_VARIABLE($titles) = T_ARRAY ( T_STRING ( ) T_DOUBLE_ARROW T_STRING ( ) , T_STRING ( ) T_DOUBLE_ARROW T_STRING ( ) , T_STRING ( ) T_DOUBLE_ARROW T_STRING ( ) , T_STRING ( ) T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_IF ( T_ISSET ( T_VARIABLE($titles) [ T_VARIABLE($text) ] ) ) { T_VARIABLE($attributes) [ ] = T_VARIABLE($titles) [ T_VARIABLE($text) ] ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($text) ) ) { T_VARIABLE($attributes) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($text) ) ) ; } } T_RETURN T_STRING ( T_VARIABLE($text) , T_VARIABLE($_GET) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($attributes) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($query) ) ? T_STRING ( , T_VARIABLE($query) ) : T_STRING ) ) ; } T_FUNCTION(pager_load_array) ( T_VARIABLE($value) , T_VARIABLE($element) , T_VARIABLE($old_array) ) { T_VARIABLE($new_array) = T_VARIABLE($old_array) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($element) ; T_VARIABLE($i) T_INC ) { T_IF ( ! T_VARIABLE($new_array) [ T_VARIABLE($i) ] ) { T_VARIABLE($new_array) [ T_VARIABLE($i) ] = T_LNUMBER ; } } T_VARIABLE($new_array) [ T_VARIABLE($element) ] = T_INT_CAST T_VARIABLE($value) ; T_RETURN T_VARIABLE($new_array) ; }",13,1
"T_OPEN_TAG T_FUNCTION(drupal_init_path) ( ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($_GET) [ ] = T_STRING ( T_STRING ( T_VARIABLE($_GET) [ ] , ) ) ; } T_ELSE { T_VARIABLE($_GET) [ ] = T_STRING ( T_STRING ( , ) ) ; } } T_FUNCTION(drupal_lookup_path) ( T_VARIABLE($action) , T_VARIABLE($path) = , T_VARIABLE($path_language) = ) { T_GLOBAL T_VARIABLE($language) ; T_STATIC T_VARIABLE($map) = T_ARRAY ( ) , T_VARIABLE($no_src) = T_ARRAY ( ) , T_VARIABLE($count) ; T_VARIABLE($path_language) = T_VARIABLE($path_language) ? T_VARIABLE($path_language) : T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($count) ) ) { T_VARIABLE($count) = T_STRING ( T_STRING ( ) ) ; } T_IF ( T_VARIABLE($action) T_IS_EQUAL ) { T_VARIABLE($map) = T_ARRAY ( ) ; T_VARIABLE($no_src) = T_ARRAY ( ) ; } T_ELSEIF ( T_VARIABLE($count) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($path) T_IS_NOT_EQUAL ) { T_IF ( T_VARIABLE($action) T_IS_EQUAL ) { T_IF ( T_ISSET ( T_VARIABLE($map) [ T_VARIABLE($path_language) ] [ T_VARIABLE($path) ] ) ) { T_RETURN T_VARIABLE($map) [ T_VARIABLE($path_language) ] [ T_VARIABLE($path) ] ; } T_VARIABLE($alias) = T_STRING ( T_STRING ( , T_VARIABLE($path) , T_VARIABLE($path_language) ) ) ; T_VARIABLE($map) [ T_VARIABLE($path_language) ] [ T_VARIABLE($path) ] = T_VARIABLE($alias) ; T_RETURN T_VARIABLE($alias) ; } T_ELSEIF ( T_VARIABLE($action) T_IS_EQUAL T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($no_src) [ T_VARIABLE($path_language) ] [ T_VARIABLE($path) ] ) ) { T_VARIABLE($src) = ; T_IF ( ! T_ISSET ( T_VARIABLE($map) [ T_VARIABLE($path_language) ] ) T_BOOLEAN_OR ! ( T_VARIABLE($src) = T_STRING ( T_VARIABLE($path) , T_VARIABLE($map) [ T_VARIABLE($path_language) ] ) ) ) { T_IF ( T_VARIABLE($src) = T_STRING ( T_STRING ( , T_VARIABLE($path) , T_VARIABLE($path_language) ) ) ) { T_VARIABLE($map) [ T_VARIABLE($path_language) ] [ T_VARIABLE($src) ] = T_VARIABLE($path) ; } T_ELSE { T_VARIABLE($no_src) [ T_VARIABLE($path_language) ] [ T_VARIABLE($path) ] = T_STRING ; } } T_RETURN T_VARIABLE($src) ; } } T_RETURN T_STRING ; } T_FUNCTION(drupal_get_path_alias) ( T_VARIABLE($path) , T_VARIABLE($path_language) = ) { T_VARIABLE($result) = T_VARIABLE($path) ; T_IF ( T_VARIABLE($alias) = T_STRING ( , T_VARIABLE($path) , T_VARIABLE($path_language) ) ) { T_VARIABLE($result) = T_VARIABLE($alias) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(drupal_get_normal_path) ( T_VARIABLE($path) , T_VARIABLE($path_language) = ) { T_VARIABLE($result) = T_VARIABLE($path) ; T_IF ( T_VARIABLE($src) = T_STRING ( , T_VARIABLE($path) , T_VARIABLE($path_language) ) ) { T_VARIABLE($result) = T_VARIABLE($src) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($result) , T_VARIABLE($path) , T_VARIABLE($path_language) ) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(arg) ( T_VARIABLE($index) = T_STRING , T_VARIABLE($path) = T_STRING ) { T_STATIC T_VARIABLE($arguments) ; T_IF ( ! T_ISSET ( T_VARIABLE($path) ) ) { T_VARIABLE($path) = T_VARIABLE($_GET) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($arguments) [ T_VARIABLE($path) ] ) ) { T_VARIABLE($arguments) [ T_VARIABLE($path) ] = T_STRING ( , T_VARIABLE($path) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($index) ) ) { T_RETURN T_VARIABLE($arguments) [ T_VARIABLE($path) ] ; } T_IF ( T_ISSET ( T_VARIABLE($arguments) [ T_VARIABLE($path) ] [ T_VARIABLE($index) ] ) ) { T_RETURN T_VARIABLE($arguments) [ T_VARIABLE($path) ] [ T_VARIABLE($index) ] ; } } T_FUNCTION(drupal_get_title) ( ) { T_VARIABLE($title) = T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($title) ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($title) = T_STRING ( T_STRING ( ) ) ; } T_RETURN T_VARIABLE($title) ; } T_FUNCTION(drupal_set_title) ( T_VARIABLE($title) = T_STRING ) { T_STATIC T_VARIABLE($stored_title) ; T_IF ( T_ISSET ( T_VARIABLE($title) ) ) { T_VARIABLE($stored_title) = T_VARIABLE($title) ; } T_RETURN T_VARIABLE($stored_title) ; } T_FUNCTION(drupal_is_front_page) ( ) { T_RETURN T_VARIABLE($_GET) [ ] T_IS_EQUAL T_STRING ( T_STRING ( , ) ) ; } T_FUNCTION(drupal_match_path) ( T_VARIABLE($path) , T_VARIABLE($patterns) ) { T_STATIC T_VARIABLE($regexps) ; T_IF ( ! T_ISSET ( T_VARIABLE($regexps) [ T_VARIABLE($patterns) ] ) ) { T_VARIABLE($regexps) [ T_VARIABLE($patterns) ] = . T_STRING ( T_ARRAY ( , , ) , T_ARRAY ( , , . T_STRING ( T_STRING ( , ) , ) . ) , T_STRING ( T_VARIABLE($patterns) , ) ) . ; } T_RETURN T_STRING ( T_VARIABLE($regexps) [ T_VARIABLE($patterns) ] , T_VARIABLE($path) ) ; }",12,0
"T_OPEN_TAG T_FUNCTION(sess_open) ( T_VARIABLE($save_path) , T_VARIABLE($session_name) ) { T_RETURN T_STRING ; } T_FUNCTION(sess_close) ( ) { T_RETURN T_STRING ; } T_FUNCTION(sess_read) ( T_VARIABLE($key) ) { T_GLOBAL T_VARIABLE($user) ; T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_COOKIE) [ T_STRING ( ) ] ) ) { T_VARIABLE($user) = T_STRING ( ) ; T_RETURN ; } T_VARIABLE($user) = T_STRING ( T_STRING ( , T_VARIABLE($key) ) ) ; T_IF ( T_VARIABLE($user) T_BOOLEAN_AND T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($user) ) ; T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_STRING ] = ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ; } } T_ELSE { T_VARIABLE($session) = T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : ; T_VARIABLE($user) = T_STRING ( T_VARIABLE($session) ) ; } T_RETURN T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(sess_write) ( T_VARIABLE($key) , T_VARIABLE($value) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( ! T_STRING ( ) T_BOOLEAN_OR ( T_EMPTY ( T_VARIABLE($_COOKIE) [ T_STRING ( ) ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($value) ) ) ) { T_RETURN T_STRING ; } T_VARIABLE($result) = T_STRING ( T_STRING ( , T_VARIABLE($key) ) ) ; T_IF ( ! T_VARIABLE($result) ) { T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_OR T_VARIABLE($value) T_BOOLEAN_OR T_STRING ( T_VARIABLE($_COOKIE) ) ) { T_STRING ( , T_VARIABLE($key) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : , T_STRING ( ) , T_VARIABLE($value) , T_STRING ( ) ) ; } } T_ELSE { T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : , T_STRING ( ) , T_VARIABLE($value) , T_STRING ( ) , T_VARIABLE($key) ) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_STRING ( ) - T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING > T_STRING ( , T_LNUMBER ) ) { T_STRING ( , T_STRING ( ) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } } T_RETURN T_STRING ; } T_FUNCTION(sess_regenerate) ( ) { T_VARIABLE($old_session_id) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_COOKIE) [ T_STRING ( ) ] ) ) { T_STRING ( T_STRING ( ) , , T_STRING ( ) - T_LNUMBER , ) ; } T_STRING ( ) ; T_STRING ( , T_STRING ( ) , T_VARIABLE($old_session_id) ) ; } T_FUNCTION(sess_count) ( T_VARIABLE($timestamp) = T_LNUMBER , T_VARIABLE($anonymous) = T_STRING ) { T_VARIABLE($query) = T_VARIABLE($anonymous) ? : ; T_RETURN T_STRING ( T_STRING ( . T_VARIABLE($query) , T_VARIABLE($timestamp) ) ) ; } T_FUNCTION(sess_destroy_sid) ( T_VARIABLE($sid) ) { T_STRING ( , T_VARIABLE($sid) ) ; } T_FUNCTION(sess_destroy_uid) ( T_VARIABLE($uid) ) { T_STRING ( , T_VARIABLE($uid) ) ; } T_FUNCTION(sess_gc) ( T_VARIABLE($lifetime) ) { T_STRING ( , T_STRING ( ) - T_VARIABLE($lifetime) ) ; T_RETURN T_STRING ; } T_FUNCTION(session_save_session) ( T_VARIABLE($status) = T_STRING ) { T_STATIC T_VARIABLE($save_session) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($status) ) ) { T_VARIABLE($save_session) = T_VARIABLE($status) ; } T_RETURN ( T_VARIABLE($save_session) ) ; }",7,1
"T_OPEN_TAG T_FUNCTION(tablesort_init) ( T_VARIABLE($header) ) { T_VARIABLE($ts) = T_STRING ( T_VARIABLE($header) ) ; T_VARIABLE($ts) [ ] = T_STRING ( T_VARIABLE($header) ) ; T_VARIABLE($ts) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($ts) ; } T_FUNCTION(tablesort_sql) ( T_VARIABLE($header) , T_VARIABLE($before) = ) { T_VARIABLE($ts) = T_STRING ( T_VARIABLE($header) ) ; T_IF ( T_VARIABLE($ts) [ ] ) { T_VARIABLE($field) = T_STRING ( , , T_VARIABLE($ts) [ ] ) ; T_VARIABLE($sort) = T_STRING ( T_VARIABLE($ts) [ ] ) ; T_VARIABLE($sort) = T_STRING ( T_VARIABLE($sort) , T_ARRAY ( , ) ) ? T_VARIABLE($sort) : ; T_RETURN T_ENCAPSED_AND_WHITESPACE T_VARIABLE($before) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($sort) ; } } T_FUNCTION(tablesort_header) ( T_VARIABLE($cell) , T_VARIABLE($header) , T_VARIABLE($ts) ) { T_IF ( T_STRING ( T_VARIABLE($cell) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cell) [ ] ) ) { T_VARIABLE($title) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($cell) [ ] ) ) ; T_IF ( T_VARIABLE($cell) [ ] T_IS_EQUAL T_VARIABLE($ts) [ ] ) { T_VARIABLE($ts) [ ] = ( ( T_VARIABLE($ts) [ ] T_IS_EQUAL ) ? : ) ; T_IF ( T_ISSET ( T_VARIABLE($cell) [ ] ) ) { T_VARIABLE($cell) [ ] T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($cell) [ ] = ; } T_VARIABLE($image) = T_STRING ( , T_VARIABLE($ts) [ ] ) ; } T_ELSE { T_VARIABLE($ts) [ ] = ; T_VARIABLE($image) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($ts) [ ] ) ) { T_VARIABLE($ts) [ ] = . T_VARIABLE($ts) [ ] ; } T_VARIABLE($cell) [ ] = T_STRING ( T_VARIABLE($cell) [ ] . T_VARIABLE($image) , T_VARIABLE($_GET) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($title) ) , T_DOUBLE_ARROW . T_VARIABLE($ts) [ ] . . T_STRING ( T_VARIABLE($cell) [ ] ) . T_VARIABLE($ts) [ ] , T_DOUBLE_ARROW T_STRING ) ) ; T_UNSET ( T_VARIABLE($cell) [ ] , T_VARIABLE($cell) [ ] ) ; } T_RETURN T_VARIABLE($cell) ; } T_FUNCTION(tablesort_cell) ( T_VARIABLE($cell) , T_VARIABLE($header) , T_VARIABLE($ts) , T_VARIABLE($i) ) { T_IF ( T_ISSET ( T_VARIABLE($header) [ T_VARIABLE($i) ] [ ] ) T_BOOLEAN_AND T_VARIABLE($header) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_VARIABLE($ts) [ ] T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($header) [ T_VARIABLE($i) ] [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($cell) ) ) { T_IF ( T_ISSET ( T_VARIABLE($cell) [ ] ) ) { T_VARIABLE($cell) [ ] T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($cell) [ ] = ; } } T_ELSE { T_VARIABLE($cell) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($cell) , T_DOUBLE_ARROW ) ; } } T_RETURN T_VARIABLE($cell) ; } T_FUNCTION(tablesort_get_querystring) ( ) { T_RETURN T_STRING ( T_VARIABLE($_REQUEST) , T_STRING ( T_ARRAY ( , , ) , T_STRING ( T_VARIABLE($_COOKIE) ) ) ) ; } T_FUNCTION(tablesort_get_order) ( T_VARIABLE($headers) ) { T_VARIABLE($order) = T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_VARIABLE($_GET) [ ] : ; T_FOREACH ( T_VARIABLE($headers) T_AS T_VARIABLE($header) ) { T_IF ( T_ISSET ( T_VARIABLE($header) [ ] ) T_BOOLEAN_AND T_VARIABLE($order) T_IS_EQUAL T_VARIABLE($header) [ ] ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($header) [ ] , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($header) [ ] ) ? T_VARIABLE($header) [ ] : ) ; } T_IF ( T_ISSET ( T_VARIABLE($header) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($header) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($header) [ ] T_IS_EQUAL ) ) { T_VARIABLE($default) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($header) [ ] , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($header) [ ] ) ? T_VARIABLE($header) [ ] : ) ; } } T_IF ( T_ISSET ( T_VARIABLE($default) ) ) { T_RETURN T_VARIABLE($default) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($headers) [ T_LNUMBER ] ) ) { T_VARIABLE($headers) [ T_LNUMBER ] T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($headers) [ T_LNUMBER ] [ ] , T_DOUBLE_ARROW T_VARIABLE($headers) [ T_LNUMBER ] [ ] ) ; } T_ELSE { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($headers) [ T_LNUMBER ] ) ; } } } T_FUNCTION(tablesort_get_sort) ( T_VARIABLE($headers) ) { T_IF ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ) { T_RETURN ( T_VARIABLE($_GET) [ ] T_IS_EQUAL ) ? : ; } T_ELSE { T_FOREACH ( T_VARIABLE($headers) T_AS T_VARIABLE($header) ) { T_IF ( T_STRING ( T_VARIABLE($header) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($header) ) ) { T_RETURN T_VARIABLE($header) [ ] ; } } } T_RETURN ; }",8,1
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(init_theme) ( ) { T_GLOBAL T_VARIABLE($theme) , T_VARIABLE($user) , T_VARIABLE($custom_theme) , T_VARIABLE($theme_key) ; T_IF ( T_ISSET ( T_VARIABLE($theme) ) ) { T_RETURN ; } T_STRING ( T_STRING ) ; T_VARIABLE($themes) = T_STRING ( ) ; T_VARIABLE($theme) = ! T_EMPTY ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($themes) [ T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : T_STRING ( , ) ; T_VARIABLE($theme) = T_VARIABLE($custom_theme) T_BOOLEAN_AND T_VARIABLE($themes) [ T_VARIABLE($custom_theme) ] ? T_VARIABLE($custom_theme) : T_VARIABLE($theme) ; T_VARIABLE($theme_key) = T_VARIABLE($theme) ; T_VARIABLE($base_theme) = T_ARRAY ( ) ; T_VARIABLE($ancestor) = T_VARIABLE($theme) ; T_WHILE ( T_VARIABLE($ancestor) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($themes) [ T_VARIABLE($ancestor) ] T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($base_theme) [ ] = T_VARIABLE($new_base_theme) = T_VARIABLE($themes) [ T_VARIABLE($themes) [ T_VARIABLE($ancestor) ] T_OBJECT_OPERATOR T_STRING ] ; T_VARIABLE($ancestor) = T_VARIABLE($themes) [ T_VARIABLE($ancestor) ] T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($themes) [ T_VARIABLE($theme) ] , T_STRING ( T_VARIABLE($base_theme) ) ) ; } T_FUNCTION(_init_theme) ( T_VARIABLE($theme) , T_VARIABLE($base_theme) = T_ARRAY ( ) , T_VARIABLE($registry_callback) = ) { T_GLOBAL T_VARIABLE($theme_info) , T_VARIABLE($base_theme_info) , T_VARIABLE($theme_engine) , T_VARIABLE($theme_path) ; T_VARIABLE($theme_info) = T_VARIABLE($theme) ; T_VARIABLE($base_theme_info) = T_VARIABLE($base_theme) ; T_VARIABLE($theme_path) = T_STRING ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($final_stylesheets) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($base_theme) T_AS T_VARIABLE($base) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($base) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($base) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($media) T_DOUBLE_ARROW T_VARIABLE($stylesheets) ) { T_FOREACH ( T_VARIABLE($stylesheets) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($stylesheet) ) { T_VARIABLE($final_stylesheets) [ T_VARIABLE($media) ] [ T_VARIABLE($name) ] = T_VARIABLE($stylesheet) ; } } } } T_IF ( ! T_EMPTY ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($media) T_DOUBLE_ARROW T_VARIABLE($stylesheets) ) { T_FOREACH ( T_VARIABLE($stylesheets) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($stylesheet) ) { T_VARIABLE($final_stylesheets) [ T_VARIABLE($media) ] [ T_VARIABLE($name) ] = T_VARIABLE($stylesheet) ; } } } T_FOREACH ( T_VARIABLE($final_stylesheets) T_AS T_VARIABLE($media) T_DOUBLE_ARROW T_VARIABLE($stylesheets) ) { T_FOREACH ( T_VARIABLE($stylesheets) T_AS T_VARIABLE($stylesheet) ) { T_STRING ( T_VARIABLE($stylesheet) , , T_VARIABLE($media) ) ; } } T_VARIABLE($final_scripts) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($base_theme) T_AS T_VARIABLE($base) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($base) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($base) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($script) ) { T_VARIABLE($final_scripts) [ T_VARIABLE($name) ] = T_VARIABLE($script) ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($script) ) { T_VARIABLE($final_scripts) [ T_VARIABLE($name) ] = T_VARIABLE($script) ; } } T_FOREACH ( T_VARIABLE($final_scripts) T_AS T_VARIABLE($script) ) { T_STRING ( T_VARIABLE($script) , ) ; } T_VARIABLE($theme_engine) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) { T_INCLUDE_ONCE . T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($theme_engine) = T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_STRING ( T_VARIABLE($theme_engine) . ) ) { T_FOREACH ( T_VARIABLE($base_theme) T_AS T_VARIABLE($base) ) { T_STRING ( T_VARIABLE($theme_engine) . , T_VARIABLE($base) ) ; } T_STRING ( T_VARIABLE($theme_engine) . , T_VARIABLE($theme) ) ; } } T_ELSE { T_FOREACH ( T_VARIABLE($base_theme) T_AS T_VARIABLE($base) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($base) T_OBJECT_OPERATOR T_STRING ) ) { T_INCLUDE_ONCE . T_VARIABLE($base) T_OBJECT_OPERATOR T_STRING ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) { T_INCLUDE_ONCE . T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ; } } T_VARIABLE($registry_callback) ( T_VARIABLE($theme) , T_VARIABLE($base_theme) , T_VARIABLE($theme_engine) ) ; } T_FUNCTION(theme_get_registry) ( T_VARIABLE($registry) = T_STRING ) { T_STATIC T_VARIABLE($theme_registry) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($registry) ) ) { T_VARIABLE($theme_registry) = T_VARIABLE($registry) ; } T_RETURN T_VARIABLE($theme_registry) ; } T_FUNCTION(_theme_set_registry) ( T_VARIABLE($registry) ) { T_RETURN T_STRING ( T_VARIABLE($registry) ) ; } T_FUNCTION(_theme_load_registry) ( T_VARIABLE($theme) , T_VARIABLE($base_theme) = T_STRING , T_VARIABLE($theme_engine) = T_STRING ) { T_VARIABLE($cache) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING , ) ; T_IF ( T_ISSET ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($registry) = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($registry) = T_STRING ( T_VARIABLE($theme) , T_VARIABLE($base_theme) , T_VARIABLE($theme_engine) ) ; T_STRING ( T_VARIABLE($theme) , T_VARIABLE($registry) ) ; } T_STRING ( T_VARIABLE($registry) ) ; } T_FUNCTION(_theme_save_registry) ( T_VARIABLE($theme) , T_VARIABLE($registry) ) { T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($registry) ) ; } T_FUNCTION(drupal_rebuild_theme_registry) ( ) { T_STRING ( , , T_STRING ) ; } T_FUNCTION(_theme_process_registry) ( & T_VARIABLE($cache) , T_VARIABLE($name) , T_VARIABLE($type) , T_VARIABLE($theme) , T_VARIABLE($path) ) { T_VARIABLE($function) = T_VARIABLE($name) . ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($result) = T_VARIABLE($function) ( T_VARIABLE($cache) , T_VARIABLE($type) , T_VARIABLE($theme) , T_VARIABLE($path) ) ; T_FOREACH ( T_VARIABLE($result) T_AS T_VARIABLE($hook) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] = T_VARIABLE($type) ; T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] = T_VARIABLE($path) ; T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] = ( T_VARIABLE($type) T_IS_EQUAL ? : T_VARIABLE($name) . ) . T_VARIABLE($hook) ; } T_IF ( T_ISSET ( T_VARIABLE($info) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] = T_VARIABLE($path) . . T_VARIABLE($info) [ ] ; T_INCLUDE_ONCE ( T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($info) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_INCLUDE_ONCE ( T_VARIABLE($info) [ ] . . T_VARIABLE($info) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($info) [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] = T_VARIABLE($path) . . T_VARIABLE($info) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cache) [ T_VARIABLE($hook) ] ) ) { T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] = T_VARIABLE($cache) [ T_VARIABLE($hook) ] [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cache) [ T_VARIABLE($hook) ] ) ) { T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] = T_VARIABLE($cache) [ T_VARIABLE($hook) ] [ ] ; } T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] [ ] = T_ISSET ( T_VARIABLE($info) [ ] ) ? T_VARIABLE($info) [ ] : T_VARIABLE($path) ; T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = T_ARRAY ( ) ; T_VARIABLE($prefixes) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($prefixes) [ ] = ; T_VARIABLE($prefixes) T_PLUS_EQUAL T_STRING ( ) ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($prefixes) [ ] = T_VARIABLE($name) . ; T_VARIABLE($prefixes) [ ] = T_VARIABLE($name) ; T_VARIABLE($prefixes) [ ] = T_VARIABLE($theme) ; } T_ELSE { T_VARIABLE($prefixes) [ ] = T_VARIABLE($name) ; } T_FOREACH ( T_VARIABLE($prefixes) T_AS T_VARIABLE($prefix) ) { T_IF ( T_STRING ( T_VARIABLE($prefix) . ) ) { T_VARIABLE($info) [ ] [ ] = T_VARIABLE($prefix) . ; } T_IF ( T_STRING ( T_VARIABLE($prefix) . . T_VARIABLE($hook) ) ) { T_VARIABLE($info) [ ] [ ] = T_VARIABLE($prefix) . . T_VARIABLE($hook) ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($info) [ ] ) ) { T_UNSET ( T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($cache) [ T_VARIABLE($hook) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($cache) [ T_VARIABLE($hook) ] [ ] ) ) { T_VARIABLE($info) [ ] = T_STRING ( T_VARIABLE($cache) [ T_VARIABLE($hook) ] [ ] , T_VARIABLE($info) [ ] ) ; } T_VARIABLE($result) [ T_VARIABLE($hook) ] [ ] = T_VARIABLE($info) [ ] ; } T_VARIABLE($cache) = T_STRING ( T_VARIABLE($cache) , T_VARIABLE($result) ) ; } } T_FUNCTION(_theme_build_registry) ( T_VARIABLE($theme) , T_VARIABLE($base_theme) , T_VARIABLE($theme_engine) ) { T_VARIABLE($cache) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_STRING ( T_VARIABLE($cache) , T_VARIABLE($module) , , T_VARIABLE($module) , T_STRING ( , T_VARIABLE($module) ) ) ; } T_FOREACH ( T_VARIABLE($base_theme) T_AS T_VARIABLE($base) ) { T_VARIABLE($base_path) = T_STRING ( T_VARIABLE($base) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($theme_engine) ) { T_STRING ( T_VARIABLE($cache) , T_VARIABLE($theme_engine) , , T_VARIABLE($base) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($base_path) ) ; } T_STRING ( T_VARIABLE($cache) , T_VARIABLE($base) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($base) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($base_path) ) ; } T_IF ( T_VARIABLE($theme_engine) ) { T_STRING ( T_VARIABLE($cache) , T_VARIABLE($theme_engine) , , T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) ; } T_STRING ( T_VARIABLE($cache) , T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( , T_VARIABLE($cache) ) ; T_RETURN T_VARIABLE($cache) ; } T_FUNCTION(list_themes) ( T_VARIABLE($refresh) = T_STRING ) { T_STATIC T_VARIABLE($list) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($refresh) ) { T_VARIABLE($list) = T_ARRAY ( ) ; } T_IF ( T_EMPTY ( T_VARIABLE($list) ) ) { T_VARIABLE($list) = T_ARRAY ( ) ; T_VARIABLE($themes) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_VARIABLE($result) = T_STRING ( , ) ; T_WHILE ( T_VARIABLE($theme) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_STRING ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($themes) [ ] = T_VARIABLE($theme) ; } } } T_ELSE { T_VARIABLE($themes) = T_STRING ( ) ; } T_FOREACH ( T_VARIABLE($themes) T_AS T_VARIABLE($theme) ) { T_FOREACH ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($media) T_DOUBLE_ARROW T_VARIABLE($stylesheets) ) { T_FOREACH ( T_VARIABLE($stylesheets) T_AS T_VARIABLE($stylesheet) T_DOUBLE_ARROW T_VARIABLE($path) ) { T_IF ( T_STRING ( T_VARIABLE($path) ) ) { T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($media) ] [ T_VARIABLE($stylesheet) ] = T_VARIABLE($path) ; } } } T_FOREACH ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($script) T_DOUBLE_ARROW T_VARIABLE($path) ) { T_IF ( T_STRING ( T_VARIABLE($path) ) ) { T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($script) ] = T_VARIABLE($path) ; } } T_IF ( T_ISSET ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_VARIABLE($list) [ T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($theme) ; } } T_RETURN T_VARIABLE($list) ; } T_FUNCTION(theme) ( ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($hook) = T_STRING ( T_VARIABLE($args) ) ; T_STATIC T_VARIABLE($hooks) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($hooks) ) ) { T_STRING ( ) ; T_VARIABLE($hooks) = T_STRING ( ) ; } T_IF ( T_STRING ( T_VARIABLE($hook) ) ) { T_FOREACH ( T_VARIABLE($hook) T_AS T_VARIABLE($candidate) ) { T_IF ( T_ISSET ( T_VARIABLE($hooks) [ T_VARIABLE($candidate) ] ) ) { T_BREAK ; } } T_VARIABLE($hook) = T_VARIABLE($candidate) ; } T_IF ( ! T_ISSET ( T_VARIABLE($hooks) [ T_VARIABLE($hook) ] ) ) { T_RETURN ; } T_VARIABLE($info) = T_VARIABLE($hooks) [ T_VARIABLE($hook) ] ; T_GLOBAL T_VARIABLE($theme_path) ; T_VARIABLE($temp) = T_VARIABLE($theme_path) ; T_VARIABLE($theme_path) = T_VARIABLE($hooks) [ T_VARIABLE($hook) ] [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($include_file) = T_VARIABLE($info) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($include_file) = T_VARIABLE($info) [ ] . . T_VARIABLE($include_file) ; } T_INCLUDE_ONCE ( T_VARIABLE($include_file) ) ; } T_IF ( T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($output) = T_STRING ( T_VARIABLE($info) [ ] , T_VARIABLE($args) ) ; } T_ELSE { T_VARIABLE($variables) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($count) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($info) [ ] T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($default) ) { T_VARIABLE($variables) [ T_VARIABLE($name) ] = T_ISSET ( T_VARIABLE($args) [ T_VARIABLE($count) ] ) ? T_VARIABLE($args) [ T_VARIABLE($count) ] : T_VARIABLE($default) ; T_VARIABLE($count) T_INC ; } } T_VARIABLE($render_function) = ; T_VARIABLE($extension) = ; T_GLOBAL T_VARIABLE($theme_engine) ; T_IF ( T_ISSET ( T_VARIABLE($theme_engine) ) ) { T_IF ( T_VARIABLE($hooks) [ T_VARIABLE($hook) ] [ ] T_IS_NOT_EQUAL ) { T_IF ( T_STRING ( T_VARIABLE($theme_engine) . ) ) { T_VARIABLE($render_function) = T_VARIABLE($theme_engine) . ; } T_VARIABLE($extension_function) = T_VARIABLE($theme_engine) . ; T_IF ( T_STRING ( T_VARIABLE($extension_function) ) ) { T_VARIABLE($extension) = T_VARIABLE($extension_function) ( ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($info) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($args) = T_ARRAY ( & T_VARIABLE($variables) , T_VARIABLE($hook) ) ; T_FOREACH ( T_VARIABLE($info) [ ] T_AS T_VARIABLE($preprocess_function) ) { T_IF ( T_STRING ( T_VARIABLE($preprocess_function) ) ) { T_STRING ( T_VARIABLE($preprocess_function) , T_VARIABLE($args) ) ; } } } T_VARIABLE($suggestions) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($variables) [ ] ) ) { T_VARIABLE($suggestions) = T_VARIABLE($variables) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($variables) [ ] ) ) { T_VARIABLE($suggestions) [ ] = T_VARIABLE($variables) [ ] ; } T_IF ( T_VARIABLE($suggestions) ) { T_VARIABLE($template_file) = T_STRING ( T_VARIABLE($info) [ ] , T_VARIABLE($suggestions) , T_VARIABLE($extension) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($template_file) ) ) { T_VARIABLE($template_file) = T_VARIABLE($hooks) [ T_VARIABLE($hook) ] [ ] . T_VARIABLE($extension) ; T_IF ( T_ISSET ( T_VARIABLE($hooks) [ T_VARIABLE($hook) ] [ ] ) ) { T_VARIABLE($template_file) = T_VARIABLE($hooks) [ T_VARIABLE($hook) ] [ ] . . T_VARIABLE($template_file) ; } } T_VARIABLE($output) = T_VARIABLE($render_function) ( T_VARIABLE($template_file) , T_VARIABLE($variables) ) ; } T_VARIABLE($theme_path) = T_VARIABLE($temp) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(drupal_discover_template) ( T_VARIABLE($paths) , T_VARIABLE($suggestions) , T_VARIABLE($extension) = ) { T_GLOBAL T_VARIABLE($theme_engine) ; T_VARIABLE($suggestions) = T_STRING ( T_VARIABLE($suggestions) ) ; T_VARIABLE($paths) = T_STRING ( T_VARIABLE($paths) ) ; T_FOREACH ( T_VARIABLE($suggestions) T_AS T_VARIABLE($suggestion) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($suggestion) ) ) { T_FOREACH ( T_VARIABLE($paths) T_AS T_VARIABLE($path) ) { T_IF ( T_STRING ( T_VARIABLE($file) = T_VARIABLE($path) . . T_VARIABLE($suggestion) . T_VARIABLE($extension) ) ) { T_RETURN T_VARIABLE($file) ; } } } } } T_FUNCTION(path_to_theme) ( ) { T_GLOBAL T_VARIABLE($theme_path) ; T_IF ( ! T_ISSET ( T_VARIABLE($theme_path) ) ) { T_STRING ( ) ; } T_RETURN T_VARIABLE($theme_path) ; } T_FUNCTION(drupal_find_theme_functions) ( T_VARIABLE($cache) , T_VARIABLE($prefixes) ) { T_VARIABLE($templates) = T_ARRAY ( ) ; T_VARIABLE($functions) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($cache) T_AS T_VARIABLE($hook) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_FOREACH ( T_VARIABLE($prefixes) T_AS T_VARIABLE($prefix) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($matches) = T_STRING ( . T_VARIABLE($prefix) . . T_VARIABLE($info) [ ] . , T_VARIABLE($functions) [ ] ) ; T_IF ( T_VARIABLE($matches) ) { T_FOREACH ( T_VARIABLE($matches) T_AS T_VARIABLE($match) ) { T_VARIABLE($new_hook) = T_STRING ( T_VARIABLE($prefix) . , , T_VARIABLE($match) ) ; T_VARIABLE($templates) [ T_VARIABLE($new_hook) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($match) , T_DOUBLE_ARROW T_VARIABLE($info) [ ] , ) ; } } } T_IF ( T_STRING ( T_VARIABLE($prefix) . . T_VARIABLE($hook) ) ) { T_VARIABLE($templates) [ T_VARIABLE($hook) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($prefix) . . T_VARIABLE($hook) , ) ; } } } T_RETURN T_VARIABLE($templates) ; } T_FUNCTION(drupal_find_theme_templates) ( T_VARIABLE($cache) , T_VARIABLE($extension) , T_VARIABLE($path) ) { T_VARIABLE($templates) = T_ARRAY ( ) ; T_VARIABLE($theme_paths) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($theme_info) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($theme_info) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($theme_paths) [ T_VARIABLE($theme_info) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($theme_info) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($theme_info) T_OBJECT_OPERATOR T_STRING ) ; } } T_FOREACH ( T_VARIABLE($theme_paths) T_AS T_VARIABLE($basetheme) T_DOUBLE_ARROW T_VARIABLE($subthemes) ) { T_FOREACH ( T_VARIABLE($subthemes) T_AS T_VARIABLE($subtheme) T_DOUBLE_ARROW T_VARIABLE($subtheme_path) ) { T_IF ( T_ISSET ( T_VARIABLE($theme_paths) [ T_VARIABLE($subtheme) ] ) ) { T_VARIABLE($theme_paths) [ T_VARIABLE($basetheme) ] = T_STRING ( T_VARIABLE($theme_paths) [ T_VARIABLE($basetheme) ] , T_VARIABLE($theme_paths) [ T_VARIABLE($subtheme) ] ) ; } } } T_GLOBAL T_VARIABLE($theme) ; T_VARIABLE($subtheme_paths) = T_ISSET ( T_VARIABLE($theme_paths) [ T_VARIABLE($theme) ] ) ? T_VARIABLE($theme_paths) [ T_VARIABLE($theme) ] : T_ARRAY ( ) ; T_VARIABLE($regex) = T_STRING ( , , T_VARIABLE($extension) ) . ; T_VARIABLE($files) = T_STRING ( T_VARIABLE($regex) , T_VARIABLE($path) , , T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($template) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_IF ( T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($subtheme_paths) , , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) T_IS_NOT_IDENTICAL T_LNUMBER ) { T_CONTINUE ; } T_IF ( ( T_VARIABLE($pos) = T_STRING ( T_VARIABLE($template) , ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($template) = T_STRING ( T_VARIABLE($template) , T_LNUMBER , T_VARIABLE($pos) ) ; } T_VARIABLE($hook) = T_STRING ( T_VARIABLE($template) , , ) ; T_IF ( T_ISSET ( T_VARIABLE($cache) [ T_VARIABLE($hook) ] ) ) { T_VARIABLE($templates) [ T_VARIABLE($hook) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($template) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) , ) ; } } T_VARIABLE($patterns) = T_STRING ( T_VARIABLE($files) ) ; T_FOREACH ( T_VARIABLE($cache) T_AS T_VARIABLE($hook) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($pattern) = T_STRING ( T_VARIABLE($info) [ ] , , ) ; T_VARIABLE($matches) = T_STRING ( . T_VARIABLE($pattern) . , T_VARIABLE($patterns) ) ; T_IF ( T_VARIABLE($matches) ) { T_FOREACH ( T_VARIABLE($matches) T_AS T_VARIABLE($match) ) { T_VARIABLE($file) = T_STRING ( T_VARIABLE($match) , T_LNUMBER , T_STRING ( T_VARIABLE($match) , ) ) ; T_VARIABLE($templates) [ T_STRING ( T_VARIABLE($file) , , ) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($files) [ T_VARIABLE($match) ] T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($info) [ ] , ) ; } } } } T_RETURN T_VARIABLE($templates) ; } T_FUNCTION(theme_get_settings) ( T_VARIABLE($key) = T_STRING ) { T_VARIABLE($defaults) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_STRING ( ) ) { T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($defaults) [ . T_VARIABLE($type) ] = T_LNUMBER ; } } T_VARIABLE($settings) = T_STRING ( T_VARIABLE($defaults) , T_STRING ( , T_ARRAY ( ) ) ) ; T_IF ( T_VARIABLE($key) ) { T_VARIABLE($settings) = T_STRING ( T_VARIABLE($settings) , T_STRING ( T_STRING ( , , . T_VARIABLE($key) . ) , T_ARRAY ( ) ) ) ; } T_IF ( ! T_STRING ( ) T_BOOLEAN_OR ! T_STRING ( ) ) { T_VARIABLE($settings) [ ] = T_LNUMBER ; } T_RETURN T_VARIABLE($settings) ; } T_FUNCTION(theme_get_setting) ( T_VARIABLE($setting_name) , T_VARIABLE($refresh) = T_STRING ) { T_GLOBAL T_VARIABLE($theme_key) ; T_STATIC T_VARIABLE($settings) ; T_IF ( T_EMPTY ( T_VARIABLE($settings) ) T_BOOLEAN_OR T_VARIABLE($refresh) ) { T_VARIABLE($settings) = T_STRING ( T_VARIABLE($theme_key) ) ; T_VARIABLE($themes) = T_STRING ( ) ; T_VARIABLE($theme_object) = T_VARIABLE($themes) [ T_VARIABLE($theme_key) ] ; T_IF ( T_VARIABLE($settings) [ ] T_IS_EQUAL ) { T_VARIABLE($settings) [ ] = T_STRING ( , ) ; } T_IF ( ! T_VARIABLE($settings) [ ] ) { T_VARIABLE($settings) [ ] = ; } T_IF ( T_VARIABLE($settings) [ ] ) { T_IF ( T_VARIABLE($settings) [ ] ) { T_VARIABLE($settings) [ ] = T_STRING ( ) . T_STRING ( T_VARIABLE($theme_object) T_OBJECT_OPERATOR T_STRING ) . ; } T_ELSEIF ( T_VARIABLE($settings) [ ] ) { T_VARIABLE($settings) [ ] = T_STRING ( ) . T_VARIABLE($settings) [ ] ; } } T_IF ( T_VARIABLE($settings) [ ] ) { T_IF ( T_VARIABLE($settings) [ ] ) { T_IF ( T_STRING ( T_VARIABLE($favicon) = T_STRING ( T_VARIABLE($theme_object) T_OBJECT_OPERATOR T_STRING ) . ) ) { T_VARIABLE($settings) [ ] = T_STRING ( ) . T_VARIABLE($favicon) ; } T_ELSE { T_VARIABLE($settings) [ ] = T_STRING ( ) . ; } } T_ELSEIF ( T_VARIABLE($settings) [ ] ) { T_VARIABLE($settings) [ ] = T_STRING ( ) . T_VARIABLE($settings) [ ] ; } T_ELSE { T_VARIABLE($settings) [ ] = T_STRING ; } } } T_RETURN T_ISSET ( T_VARIABLE($settings) [ T_VARIABLE($setting_name) ] ) ? T_VARIABLE($settings) [ T_VARIABLE($setting_name) ] : T_STRING ; } T_FUNCTION(theme_render_template) ( T_VARIABLE($file) , T_VARIABLE($variables) ) { T_STRING ( T_VARIABLE($variables) , T_STRING ) ; T_STRING ( ) ; T_INCLUDE T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) ; T_VARIABLE($contents) = T_STRING ( ) ; T_STRING ( ) ; T_RETURN T_VARIABLE($contents) ; } T_FUNCTION(theme_placeholder) ( T_VARIABLE($text) ) { T_RETURN . T_STRING ( T_VARIABLE($text) ) . ; } T_FUNCTION(theme_status_messages) ( T_VARIABLE($display) = T_STRING ) { T_VARIABLE($output) = ; T_FOREACH ( T_STRING ( T_VARIABLE($display) ) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($messages) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($type) T_ENCAPSED_AND_WHITESPACE ; T_IF ( T_STRING ( T_VARIABLE($messages) ) > T_LNUMBER ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($messages) T_AS T_VARIABLE($message) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($message) . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($messages) [ T_LNUMBER ] ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_links) ( T_VARIABLE($links) , T_VARIABLE($attributes) = T_ARRAY ( T_DOUBLE_ARROW ) ) { T_VARIABLE($output) = ; T_IF ( T_STRING ( T_VARIABLE($links) ) > T_LNUMBER ) { T_VARIABLE($output) = . T_STRING ( T_VARIABLE($attributes) ) . ; T_VARIABLE($num_links) = T_STRING ( T_VARIABLE($links) ) ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($links) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($link) ) { T_VARIABLE($class) = T_VARIABLE($key) ; T_IF ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($class) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($num_links) ) { T_VARIABLE($class) T_CONCAT_EQUAL ; } T_IF ( T_ISSET ( T_VARIABLE($link) [ ] ) T_BOOLEAN_AND T_VARIABLE($link) [ ] T_IS_EQUAL T_VARIABLE($_GET) [ ] ) { T_VARIABLE($class) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($class) . ; T_IF ( T_ISSET ( T_VARIABLE($link) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($link) [ ] , T_VARIABLE($link) [ ] , T_VARIABLE($link) ) ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($link) [ ] ) ) { T_IF ( T_EMPTY ( T_VARIABLE($link) [ ] ) ) { T_VARIABLE($link) [ ] = T_STRING ( T_VARIABLE($link) [ ] ) ; } T_VARIABLE($span_attributes) = ; T_IF ( T_ISSET ( T_VARIABLE($link) [ ] ) ) { T_VARIABLE($span_attributes) = T_STRING ( T_VARIABLE($link) [ ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($span_attributes) . . T_VARIABLE($link) [ ] . ; } T_VARIABLE($i) T_INC ; T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_image) ( T_VARIABLE($path) , T_VARIABLE($alt) = , T_VARIABLE($title) = , T_VARIABLE($attributes) = T_STRING , T_VARIABLE($getsize) = T_STRING ) { T_IF ( ! T_VARIABLE($getsize) T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($path) ) T_BOOLEAN_AND ( T_LIST ( T_VARIABLE($width) , T_VARIABLE($height) , T_VARIABLE($type) , T_VARIABLE($image_attributes) ) = @ T_STRING ( T_VARIABLE($path) ) ) ) ) { T_VARIABLE($attributes) = T_STRING ( T_VARIABLE($attributes) ) ; T_VARIABLE($url) = ( T_STRING ( T_VARIABLE($path) ) T_IS_EQUAL T_VARIABLE($path) ) ? T_VARIABLE($path) : ( T_STRING ( ) . T_VARIABLE($path) ) ; T_RETURN . T_STRING ( T_VARIABLE($url) ) . . T_STRING ( T_VARIABLE($alt) ) . . T_STRING ( T_VARIABLE($title) ) . . ( T_ISSET ( T_VARIABLE($image_attributes) ) ? T_VARIABLE($image_attributes) : ) . T_VARIABLE($attributes) . ; } } T_FUNCTION(theme_breadcrumb) ( T_VARIABLE($breadcrumb) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($breadcrumb) ) ) { T_RETURN . T_STRING ( , T_VARIABLE($breadcrumb) ) . ; } } T_FUNCTION(theme_help) ( ) { T_IF ( T_VARIABLE($help) = T_STRING ( ) ) { T_RETURN . T_VARIABLE($help) . ; } } T_FUNCTION(theme_submenu) ( T_VARIABLE($links) ) { T_RETURN . T_STRING ( , T_VARIABLE($links) ) . ; } T_FUNCTION(theme_table) ( T_VARIABLE($header) , T_VARIABLE($rows) , T_VARIABLE($attributes) = T_ARRAY ( ) , T_VARIABLE($caption) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($header) ) ) { T_STRING ( ) ; T_VARIABLE($attributes) [ ] = T_EMPTY ( T_VARIABLE($attributes) [ ] ) ? : ( T_VARIABLE($attributes) [ ] . ) ; } T_VARIABLE($output) = . T_STRING ( T_VARIABLE($attributes) ) . ; T_IF ( T_ISSET ( T_VARIABLE($caption) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($caption) . ; } T_IF ( T_STRING ( T_VARIABLE($header) ) ) { T_VARIABLE($ts) = T_STRING ( T_VARIABLE($header) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ( T_STRING ( T_VARIABLE($rows) ) ? : ) ; T_FOREACH ( T_VARIABLE($header) T_AS T_VARIABLE($cell) ) { T_VARIABLE($cell) = T_STRING ( T_VARIABLE($cell) , T_VARIABLE($header) , T_VARIABLE($ts) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($cell) , T_STRING ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ( T_STRING ( T_VARIABLE($rows) ) ? : ) ; } T_ELSE { T_VARIABLE($ts) = T_ARRAY ( ) ; } T_IF ( T_STRING ( T_VARIABLE($rows) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($flip) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($class) = ; T_FOREACH ( T_VARIABLE($rows) T_AS T_VARIABLE($number) T_DOUBLE_ARROW T_VARIABLE($row) ) { T_VARIABLE($attributes) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($row) [ ] ) ) { T_FOREACH ( T_VARIABLE($row) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_VARIABLE($key) T_IS_EQUAL ) { T_VARIABLE($cells) = T_VARIABLE($value) ; } T_ELSE { T_VARIABLE($attributes) [ T_VARIABLE($key) ] = T_VARIABLE($value) ; } } } T_ELSE { T_VARIABLE($cells) = T_VARIABLE($row) ; } T_IF ( T_STRING ( T_VARIABLE($cells) ) ) { T_VARIABLE($class) = T_VARIABLE($flip) [ T_VARIABLE($class) ] ; T_IF ( T_ISSET ( T_VARIABLE($attributes) [ ] ) ) { T_VARIABLE($attributes) [ ] T_CONCAT_EQUAL . T_VARIABLE($class) ; } T_ELSE { T_VARIABLE($attributes) [ ] = T_VARIABLE($class) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($attributes) ) . ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($cells) T_AS T_VARIABLE($cell) ) { T_VARIABLE($cell) = T_STRING ( T_VARIABLE($cell) , T_VARIABLE($header) , T_VARIABLE($ts) , T_VARIABLE($i) T_INC ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($cell) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_table_select_header_cell) ( ) { T_STRING ( ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW ) ; } T_FUNCTION(theme_tablesort_indicator) ( T_VARIABLE($style) ) { T_IF ( T_VARIABLE($style) T_IS_EQUAL ) { T_RETURN T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ; } T_ELSE { T_RETURN T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ; } } T_FUNCTION(theme_box) ( T_VARIABLE($title) , T_VARIABLE($content) , T_VARIABLE($region) = ) { T_VARIABLE($output) = . T_VARIABLE($title) . . T_VARIABLE($content) . ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_mark) ( T_VARIABLE($type) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL T_STRING ) { T_RETURN . T_STRING ( ) . ; } T_ELSE T_IF ( T_VARIABLE($type) T_IS_EQUAL T_STRING ) { T_RETURN . T_STRING ( ) . ; } } } T_FUNCTION(theme_item_list) ( T_VARIABLE($items) = T_ARRAY ( ) , T_VARIABLE($title) = T_STRING , T_VARIABLE($type) = , T_VARIABLE($attributes) = T_STRING ) { T_VARIABLE($output) = ; T_IF ( T_ISSET ( T_VARIABLE($title) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($title) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($items) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($type) . T_STRING ( T_VARIABLE($attributes) ) . ; T_VARIABLE($num_items) = T_STRING ( T_VARIABLE($items) ) ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($item) ) { T_VARIABLE($attributes) = T_ARRAY ( ) ; T_VARIABLE($children) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($item) ) ) { T_FOREACH ( T_VARIABLE($item) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_VARIABLE($key) T_IS_EQUAL ) { T_VARIABLE($data) = T_VARIABLE($value) ; } T_ELSEIF ( T_VARIABLE($key) T_IS_EQUAL ) { T_VARIABLE($children) = T_VARIABLE($value) ; } T_ELSE { T_VARIABLE($attributes) [ T_VARIABLE($key) ] = T_VARIABLE($value) ; } } } T_ELSE { T_VARIABLE($data) = T_VARIABLE($item) ; } T_IF ( T_STRING ( T_VARIABLE($children) ) > T_LNUMBER ) { T_VARIABLE($data) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($children) , T_STRING , T_VARIABLE($type) , T_VARIABLE($attributes) ) ; } T_IF ( T_VARIABLE($i) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($attributes) [ ] = T_EMPTY ( T_VARIABLE($attributes) [ ] ) ? : ( T_VARIABLE($attributes) [ ] . ) ; } T_IF ( T_VARIABLE($i) T_IS_EQUAL T_VARIABLE($num_items) - T_LNUMBER ) { T_VARIABLE($attributes) [ ] = T_EMPTY ( T_VARIABLE($attributes) [ ] ) ? : ( T_VARIABLE($attributes) [ ] . ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($attributes) ) . . T_VARIABLE($data) . ; } T_VARIABLE($output) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($type) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_more_help_link) ( T_VARIABLE($url) ) { T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($url) ) ) ) . ; } T_FUNCTION(theme_xml_icon) ( T_VARIABLE($url) ) { T_IF ( T_VARIABLE($image) = T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ) { T_RETURN . T_STRING ( T_VARIABLE($url) ) . . T_VARIABLE($image) . ; } } T_FUNCTION(theme_feed_icon) ( T_VARIABLE($url) , T_VARIABLE($title) ) { T_IF ( T_VARIABLE($image) = T_STRING ( , , T_STRING ( ) , T_VARIABLE($title) ) ) { T_RETURN . T_STRING ( T_VARIABLE($url) ) . . T_VARIABLE($image) . ; } } T_FUNCTION(theme_more_link) ( T_VARIABLE($url) , T_VARIABLE($title) ) { T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($url) ) , T_DOUBLE_ARROW T_VARIABLE($title) ) ) . ; } T_FUNCTION(theme_closure) ( T_VARIABLE($main) = T_LNUMBER ) { T_VARIABLE($footer) = T_STRING ( , T_VARIABLE($main) ) ; T_RETURN T_STRING ( , T_VARIABLE($footer) ) . T_STRING ( ) ; } T_FUNCTION(theme_blocks) ( T_VARIABLE($region) ) { T_VARIABLE($output) = ; T_IF ( T_VARIABLE($list) = T_STRING ( T_VARIABLE($region) ) ) { T_FOREACH ( T_VARIABLE($list) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($block) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($block) ) ; } } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($region) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_username) ( T_VARIABLE($object) ) { T_IF ( T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_LNUMBER ) . ; } T_ELSE { T_VARIABLE($name) = T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($output) = T_STRING ( T_VARIABLE($name) , . T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( T_VARIABLE($name) ) ; } } T_ELSE T_IF ( T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ) { T_IF ( ! T_EMPTY ( T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($output) = T_STRING ( T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($output) = T_STRING ( , T_STRING ( ) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_progress_bar) ( T_VARIABLE($percent) , T_VARIABLE($message) ) { T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($percent) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($percent) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($message) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_indentation) ( T_VARIABLE($size) = T_LNUMBER ) { T_VARIABLE($output) = ; T_FOR ( T_VARIABLE($n) = T_LNUMBER ; T_VARIABLE($n) < T_VARIABLE($size) ; T_VARIABLE($n) T_INC ) { T_VARIABLE($output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_theme_table_cell) ( T_VARIABLE($cell) , T_VARIABLE($header) = T_STRING ) { T_VARIABLE($attributes) = ; T_IF ( T_STRING ( T_VARIABLE($cell) ) ) { T_VARIABLE($data) = T_ISSET ( T_VARIABLE($cell) [ ] ) ? T_VARIABLE($cell) [ ] : ; T_VARIABLE($header) T_OR_EQUAL T_ISSET ( T_VARIABLE($cell) [ ] ) ; T_UNSET ( T_VARIABLE($cell) [ ] ) ; T_UNSET ( T_VARIABLE($cell) [ ] ) ; T_VARIABLE($attributes) = T_STRING ( T_VARIABLE($cell) ) ; } T_ELSE { T_VARIABLE($data) = T_VARIABLE($cell) ; } T_IF ( T_VARIABLE($header) ) { T_VARIABLE($output) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($attributes) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($data) T_ENCAPSED_AND_WHITESPACE ; } T_ELSE { T_VARIABLE($output) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($attributes) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($data) T_ENCAPSED_AND_WHITESPACE ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(template_preprocess) ( & T_VARIABLE($variables) , T_VARIABLE($hook) ) { T_GLOBAL T_VARIABLE($user) ; T_STATIC T_VARIABLE($count) = T_ARRAY ( ) ; T_VARIABLE($count) [ T_VARIABLE($hook) ] = T_ISSET ( T_VARIABLE($count) [ T_VARIABLE($hook) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($count) [ T_VARIABLE($hook) ] ) ? T_VARIABLE($count) [ T_VARIABLE($hook) ] : T_LNUMBER ; T_VARIABLE($variables) [ ] = ( T_VARIABLE($count) [ T_VARIABLE($hook) ] \% T_LNUMBER ) ? : ; T_VARIABLE($variables) [ ] = T_VARIABLE($count) [ T_VARIABLE($hook) ] T_INC ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ; T_VARIABLE($variables) [ ] = T_STRING ; T_VARIABLE($variables) [ ] = T_STRING ; T_IF ( T_VARIABLE($variables) [ ] = T_STRING ( ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($variables) [ ] = T_STRING ; } T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($user) ; } } T_FUNCTION(template_preprocess_page) ( & T_VARIABLE($variables) ) { T_IF ( T_STRING ( ) ) { T_STRING ( . T_STRING ( T_STRING ( ) ) . ) ; } T_GLOBAL T_VARIABLE($theme) ; T_VARIABLE($regions) = T_STRING ( T_VARIABLE($theme) ) ; T_FOREACH ( T_STRING ( T_VARIABLE($regions) ) T_AS T_VARIABLE($region) ) { T_IF ( ! ( ! T_VARIABLE($variables) [ ] T_BOOLEAN_AND ( T_VARIABLE($region) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($region) T_IS_EQUAL ) ) ) { T_VARIABLE($blocks) = T_STRING ( , T_VARIABLE($region) ) ; } T_ELSE { T_VARIABLE($blocks) = ; } T_ISSET ( T_VARIABLE($variables) [ T_VARIABLE($region) ] ) ? T_VARIABLE($variables) [ T_VARIABLE($region) ] T_CONCAT_EQUAL T_VARIABLE($blocks) : T_VARIABLE($variables) [ T_VARIABLE($region) ] = T_VARIABLE($blocks) ; } T_VARIABLE($variables) [ ] = ; T_IF ( ! T_EMPTY ( T_VARIABLE($variables) [ ] ) ) { T_VARIABLE($variables) [ ] = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($variables) [ ] ) ) { T_VARIABLE($variables) [ ] = ( T_VARIABLE($variables) [ ] T_IS_EQUAL ) ? : ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($mission) = T_STRING ( T_STRING ( ) ) ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($head_title) = T_ARRAY ( T_STRING ( T_STRING ( ) ) , T_STRING ( , ) ) ; } T_ELSE { T_VARIABLE($head_title) = T_ARRAY ( T_STRING ( , ) ) ; T_IF ( T_STRING ( , ) ) { T_VARIABLE($head_title) [ ] = T_STRING ( , ) ; } } T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($head_title) ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_STRING ( , T_STRING ) ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ? : ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] ? T_STRING ( ) : ; T_VARIABLE($variables) [ ] = T_ISSET ( T_VARIABLE($mission) ) ? T_VARIABLE($mission) : ; T_VARIABLE($variables) [ ] = T_STRING ( ) ? T_STRING ( ) : T_ARRAY ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ? T_STRING ( ) : T_ARRAY ( ) ; T_VARIABLE($variables) [ ] = ( T_STRING ( ) ? T_STRING ( ) : ) ; T_VARIABLE($variables) [ ] = ( T_STRING ( ) ? T_STRING ( , ) : ) ; T_VARIABLE($variables) [ ] = ( T_STRING ( ) ? T_STRING ( , ) : ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_IF ( T_VARIABLE($node) = T_STRING ( ) ) { T_VARIABLE($variables) [ ] = T_VARIABLE($node) ; } T_VARIABLE($body_classes) = T_ARRAY ( ) ; T_VARIABLE($body_classes) [ ] = T_VARIABLE($variables) [ ] ? : ; T_VARIABLE($body_classes) [ ] = T_VARIABLE($variables) [ ] ? : ; T_VARIABLE($body_classes) [ ] = T_STRING ( , , . T_STRING ( T_STRING ( T_STRING ( T_LNUMBER ) ) ) ) ; T_IF ( T_ISSET ( T_VARIABLE($variables) [ ] ) T_BOOLEAN_AND T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($body_classes) [ ] = . T_STRING ( T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_VARIABLE($variables) [ ] T_IS_EQUAL ) { T_VARIABLE($body_classes) [ ] = ; } T_ELSEIF ( T_VARIABLE($variables) [ ] T_IS_EQUAL ) { T_VARIABLE($body_classes) [ ] = ; } T_ELSE { T_VARIABLE($body_classes) [ ] = . T_VARIABLE($variables) [ ] ; } T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($body_classes) ) ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($suggestion) = ; T_VARIABLE($suggestions) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($arg) = T_STRING ( T_VARIABLE($i) T_INC ) ) { T_VARIABLE($suggestions) [ ] = T_VARIABLE($suggestion) . . T_VARIABLE($arg) ; T_IF ( ! T_STRING ( T_VARIABLE($arg) ) ) { T_VARIABLE($suggestion) T_CONCAT_EQUAL . T_VARIABLE($arg) ; } } T_IF ( T_STRING ( ) ) { T_VARIABLE($suggestions) [ ] = ; } T_IF ( T_VARIABLE($suggestions) ) { T_VARIABLE($variables) [ ] = T_VARIABLE($suggestions) ; } } T_FUNCTION(template_preprocess_node) ( & T_VARIABLE($variables) ) { T_VARIABLE($node) = T_VARIABLE($variables) [ ] ; T_IF ( T_STRING ( ) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($node) ) ; } T_ELSE { T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; } T_IF ( T_VARIABLE($variables) [ ] T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($variables) [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($variables) [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($variables) [ ] = ; } T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW ) ) : ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($node) ) ; T_VARIABLE($variables) [ ] = T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) = T_STRING ( T_ARRAY_CAST T_VARIABLE($node) , T_VARIABLE($variables) ) ; T_IF ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($node) ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ? T_STRING ( , T_VARIABLE($node) ) : ; } T_ELSE { T_VARIABLE($variables) [ ] = ; T_VARIABLE($variables) [ ] = ; } T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(template_preprocess_block) ( & T_VARIABLE($variables) ) { T_STATIC T_VARIABLE($block_counter) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($block_counter) [ T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($block_counter) [ T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ] = T_LNUMBER ; } T_VARIABLE($variables) [ ] = ( T_VARIABLE($block_counter) [ T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ] \% T_LNUMBER ) ? : ; T_VARIABLE($variables) [ ] = T_VARIABLE($block_counter) [ T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ] T_INC ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ; }",13,1
"T_OPEN_TAG T_FUNCTION(_drupal_maintenance_theme) ( ) { T_GLOBAL T_VARIABLE($theme) , T_VARIABLE($theme_key) ; T_IF ( T_ISSET ( T_VARIABLE($theme) ) ) { T_RETURN ; } T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING ( ) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND ( T_STRING T_IS_EQUAL T_BOOLEAN_OR T_STRING T_IS_EQUAL ) ) { T_VARIABLE($theme) = ; } T_ELSE { T_VARIABLE($module_list) [ ] [ ] = ; T_VARIABLE($module_list) [ ] [ ] = ; T_STRING ( T_STRING , T_STRING , T_STRING , T_VARIABLE($module_list) ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_VARIABLE($theme) = T_STRING ( , ) ; } T_VARIABLE($themes) = T_STRING ( ) ; T_VARIABLE($theme_key) = T_VARIABLE($theme) ; T_VARIABLE($base_theme) = T_ARRAY ( ) ; T_VARIABLE($ancestor) = T_VARIABLE($theme) ; T_WHILE ( T_VARIABLE($ancestor) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($themes) [ T_VARIABLE($ancestor) ] T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($base_theme) [ ] = T_VARIABLE($new_base_theme) = T_VARIABLE($themes) [ T_VARIABLE($themes) [ T_VARIABLE($ancestor) ] T_OBJECT_OPERATOR T_STRING ] ; T_VARIABLE($ancestor) = T_VARIABLE($themes) [ T_VARIABLE($ancestor) ] T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($themes) [ T_VARIABLE($theme) ] , T_STRING ( T_VARIABLE($base_theme) ) , ) ; T_STRING ( T_STRING ( , ) . , ) ; T_STRING ( T_STRING ( , ) . , ) ; T_STRING ( T_STRING ( , ) . , ) ; T_STRING ( T_STRING ( , ) . , ) ; } T_FUNCTION(_theme_load_offline_registry) ( T_VARIABLE($theme) , T_VARIABLE($base_theme) = T_STRING , T_VARIABLE($theme_engine) = T_STRING ) { T_VARIABLE($registry) = T_STRING ( T_VARIABLE($theme) , T_VARIABLE($base_theme) , T_VARIABLE($theme_engine) ) ; T_STRING ( T_VARIABLE($registry) ) ; } T_FUNCTION(theme_task_list) ( T_VARIABLE($items) , T_VARIABLE($active) = T_STRING ) { T_VARIABLE($done) = T_ISSET ( T_VARIABLE($items) [ T_VARIABLE($active) ] ) T_BOOLEAN_OR T_VARIABLE($active) T_IS_EQUAL T_STRING ; T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($item) ) { T_IF ( T_VARIABLE($active) T_IS_EQUAL T_VARIABLE($k) ) { T_VARIABLE($class) = ; T_VARIABLE($done) = T_STRING ; } T_ELSE { T_VARIABLE($class) = T_VARIABLE($done) ? : ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($class) . . T_VARIABLE($item) . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_install_page) ( T_VARIABLE($content) ) { T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($content) ; T_VARIABLE($variables) [ ] = T_STRING ; T_STRING ( T_VARIABLE($variables) ) ; T_VARIABLE($messages) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($messages) [ ] ) ) { T_VARIABLE($title) = T_STRING ( T_VARIABLE($messages) [ ] ) > T_LNUMBER ? T_STRING ( ) : T_STRING ( ) ; T_VARIABLE($variables) [ ] T_CONCAT_EQUAL . T_VARIABLE($title) . ; T_VARIABLE($variables) [ ] T_CONCAT_EQUAL T_STRING ( , ) ; T_VARIABLE($variables) [ ] T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; } T_IF ( T_ISSET ( T_VARIABLE($messages) [ ] ) ) { T_VARIABLE($title) = T_STRING ( T_VARIABLE($messages) [ ] ) > T_LNUMBER ? T_STRING ( ) : T_STRING ( ) ; T_VARIABLE($variables) [ ] T_CONCAT_EQUAL . T_VARIABLE($title) . ; T_VARIABLE($variables) [ ] T_CONCAT_EQUAL T_STRING ( , ) ; } T_IF ( T_ISSET ( T_VARIABLE($messages) [ ] ) ) { T_VARIABLE($title) = T_STRING ( T_VARIABLE($messages) [ ] ) > T_LNUMBER ? T_STRING ( ) : T_STRING ( ) ; T_VARIABLE($variables) [ ] T_CONCAT_EQUAL . T_VARIABLE($title) . ; T_VARIABLE($variables) [ ] T_CONCAT_EQUAL T_STRING ( , ) ; } T_GLOBAL T_VARIABLE($theme_path) ; T_VARIABLE($theme_path) = ; T_RETURN T_STRING ( , T_VARIABLE($variables) ) ; } T_FUNCTION(theme_update_page) ( T_VARIABLE($content) , T_VARIABLE($show_messages) = T_STRING ) { T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($content) ; T_VARIABLE($variables) [ ] = T_VARIABLE($show_messages) ; T_STRING ( T_VARIABLE($variables) ) ; T_VARIABLE($messages) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($messages) [ ] ) ) { T_VARIABLE($title) = T_STRING ( T_VARIABLE($messages) [ ] ) > T_LNUMBER ? : ; T_VARIABLE($variables) [ ] T_CONCAT_EQUAL . T_VARIABLE($title) . ; T_VARIABLE($variables) [ ] T_CONCAT_EQUAL T_STRING ( , ) ; } T_GLOBAL T_VARIABLE($theme_path) ; T_VARIABLE($theme_path) = ; T_RETURN T_STRING ( , T_VARIABLE($variables) ) ; } T_FUNCTION(template_preprocess_maintenance_page) ( & T_VARIABLE($variables) ) { T_IF ( T_STRING ( ) ) { T_STRING ( . T_STRING ( T_STRING ( ) ) . ) ; } T_GLOBAL T_VARIABLE($theme) ; T_VARIABLE($theme_data) = T_STRING ( ) ; T_VARIABLE($regions) = T_VARIABLE($theme_data) [ T_VARIABLE($theme) ] T_OBJECT_OPERATOR T_STRING [ ] ; T_FOREACH ( T_STRING ( T_VARIABLE($regions) ) T_AS T_VARIABLE($region) ) { T_VARIABLE($region_content) = T_STRING ( T_VARIABLE($region) ) ; T_ISSET ( T_VARIABLE($variables) [ T_VARIABLE($region) ] ) ? T_VARIABLE($variables) [ T_VARIABLE($region) ] T_CONCAT_EQUAL T_VARIABLE($region_content) : T_VARIABLE($variables) [ T_VARIABLE($region) ] = T_VARIABLE($region_content) ; } T_VARIABLE($variables) [ ] = ; T_IF ( ! T_EMPTY ( T_VARIABLE($variables) [ ] ) ) { T_VARIABLE($variables) [ ] = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($variables) [ ] ) ) { T_VARIABLE($variables) [ ] = ( T_VARIABLE($variables) [ ] T_IS_EQUAL ) ? : ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($head_title) = T_ARRAY ( T_STRING ( T_STRING ( ) ) , T_STRING ( , ) ) ; } T_ELSE { T_VARIABLE($head_title) = T_ARRAY ( T_STRING ( , ) ) ; T_IF ( T_STRING ( , ) ) { T_VARIABLE($head_title) [ ] = T_STRING ( , ) ; } } T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($head_title) ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = ; T_VARIABLE($variables) [ ] = ; T_VARIABLE($variables) [ ] = T_STRING ( T_STRING ( , T_STRING ) ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = ; T_VARIABLE($variables) [ ] = T_VARIABLE($GLOBALS) [ ] ; T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ? : ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] ? T_STRING ( ) : ; T_VARIABLE($variables) [ ] = ; T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; T_VARIABLE($variables) [ ] = ; T_VARIABLE($variables) [ ] = ( T_STRING ( ) ? T_STRING ( , ) : ) ; T_VARIABLE($variables) [ ] = ( T_STRING ( ) ? T_STRING ( , ) : ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = ; T_VARIABLE($body_classes) = T_ARRAY ( ) ; T_VARIABLE($body_classes) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($variables) [ ] ) T_BOOLEAN_AND ! T_VARIABLE($variables) [ ] ) { T_VARIABLE($body_classes) [ ] = ; } T_IF ( T_VARIABLE($variables) [ ] T_IS_EQUAL ) { T_VARIABLE($body_classes) [ ] = ; } T_ELSEIF ( T_VARIABLE($variables) [ ] T_IS_EQUAL ) { T_VARIABLE($body_classes) [ ] = ; } T_ELSE { T_VARIABLE($body_classes) [ ] = . T_VARIABLE($variables) [ ] ; } T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($body_classes) ) ; T_IF ( T_ISSET ( T_VARIABLE($variables) [ ] ) T_BOOLEAN_AND ! T_VARIABLE($variables) [ ] ) { T_VARIABLE($variables) [ ] = ; } }",12,1
"T_OPEN_TAG T_STRING ( , - T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(unicode_check) ( ) { T_LIST ( T_VARIABLE($GLOBALS) [ ] ) = T_STRING ( ) ; } T_FUNCTION(_unicode_check) ( ) { T_VARIABLE($t) = T_STRING ( ) ; T_STRING ( T_STRING , ) ; T_IF ( T_STRING ( , ) ) { T_RETURN T_ARRAY ( T_STRING , T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ) ; } T_IF ( ! T_STRING ( ) ) { T_RETURN T_ARRAY ( T_STRING , T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ) ; } T_IF ( T_STRING ( ) T_IS_NOT_EQUAL T_LNUMBER ) { T_RETURN T_ARRAY ( T_STRING , T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ) ; } T_IF ( T_STRING ( ) T_IS_NOT_EQUAL T_LNUMBER ) { T_RETURN T_ARRAY ( T_STRING , T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ) ; } T_IF ( T_STRING ( ) T_IS_NOT_EQUAL ) { T_RETURN T_ARRAY ( T_STRING , T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ) ; } T_IF ( T_STRING ( ) T_IS_NOT_EQUAL ) { T_RETURN T_ARRAY ( T_STRING , T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ) ; } T_STRING ( ) ; T_STRING ( ) ; T_RETURN T_ARRAY ( T_STRING , ) ; } T_FUNCTION(unicode_requirements) ( ) { T_VARIABLE($t) = T_STRING ( ) ; T_VARIABLE($libraries) = T_ARRAY ( T_STRING T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_STRING T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_STRING T_DOUBLE_ARROW T_VARIABLE($t) ( ) , ) ; T_VARIABLE($severities) = T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING , T_STRING T_DOUBLE_ARROW T_STRING , T_STRING T_DOUBLE_ARROW T_STRING , ) ; T_LIST ( T_VARIABLE($library) , T_VARIABLE($description) ) = T_STRING ( ) ; T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($libraries) [ T_VARIABLE($library) ] , ) ; T_IF ( T_VARIABLE($description) ) { T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($description) ; } T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($severities) [ T_VARIABLE($library) ] ; T_RETURN T_VARIABLE($requirements) ; } T_FUNCTION(drupal_xml_parser_create) ( & T_VARIABLE($data) ) { T_VARIABLE($encoding) = ; T_VARIABLE($bom) = T_STRING ; T_IF ( ! T_STRING ( T_VARIABLE($data) , , T_LNUMBER ) ) { T_VARIABLE($bom) = T_STRING ; T_VARIABLE($data) = T_STRING ( T_VARIABLE($data) , T_LNUMBER ) ; } T_IF ( ! T_VARIABLE($bom) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($data) , T_VARIABLE($match) ) ) { T_VARIABLE($encoding) = T_VARIABLE($match) [ T_LNUMBER ] ; } T_VARIABLE($php_supported) = T_ARRAY ( , , ) ; T_IF ( ! T_STRING ( T_STRING ( T_VARIABLE($encoding) ) , T_VARIABLE($php_supported) ) ) { T_VARIABLE($out) = T_STRING ( T_VARIABLE($data) , T_VARIABLE($encoding) ) ; T_IF ( T_VARIABLE($out) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($encoding) = ; T_VARIABLE($data) = T_STRING ( , , T_VARIABLE($out) ) ; } T_ELSE { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($encoding) ) , T_STRING ) ; T_RETURN T_LNUMBER ; } } T_VARIABLE($xml_parser) = T_STRING ( T_VARIABLE($encoding) ) ; T_STRING ( T_VARIABLE($xml_parser) , T_STRING , ) ; T_RETURN T_VARIABLE($xml_parser) ; } T_FUNCTION(drupal_convert_to_utf8) ( T_VARIABLE($data) , T_VARIABLE($encoding) ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($out) = @ T_STRING ( T_VARIABLE($encoding) , , T_VARIABLE($data) ) ; } T_ELSE T_IF ( T_STRING ( ) ) { T_VARIABLE($out) = @ T_STRING ( T_VARIABLE($data) , , T_VARIABLE($encoding) ) ; } T_ELSE T_IF ( T_STRING ( ) ) { T_VARIABLE($out) = @ T_STRING ( T_VARIABLE($encoding) . , T_VARIABLE($data) ) ; } T_ELSE { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($encoding) ) , T_STRING ) ; T_RETURN T_STRING ; } T_RETURN T_VARIABLE($out) ; } T_FUNCTION(drupal_truncate_bytes) ( T_VARIABLE($string) , T_VARIABLE($len) ) { T_IF ( T_STRING ( T_VARIABLE($string) ) T_IS_SMALLER_OR_EQUAL T_VARIABLE($len) ) { T_RETURN T_VARIABLE($string) ; } T_IF ( ( T_STRING ( T_VARIABLE($string) [ T_VARIABLE($len) ] ) < T_LNUMBER ) T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($string) [ T_VARIABLE($len) ] ) T_IS_GREATER_OR_EQUAL T_LNUMBER ) ) { T_RETURN T_STRING ( T_VARIABLE($string) , T_LNUMBER , T_VARIABLE($len) ) ; } T_WHILE ( T_DEC T_VARIABLE($len) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($string) [ T_VARIABLE($len) ] ) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($string) [ T_VARIABLE($len) ] ) < T_LNUMBER ) { } ; T_RETURN T_STRING ( T_VARIABLE($string) , T_LNUMBER , T_VARIABLE($len) ) ; } T_FUNCTION(truncate_utf8) ( T_VARIABLE($string) , T_VARIABLE($len) , T_VARIABLE($wordsafe) = T_STRING , T_VARIABLE($dots) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($string) ) T_IS_SMALLER_OR_EQUAL T_VARIABLE($len) ) { T_RETURN T_VARIABLE($string) ; } T_IF ( T_VARIABLE($dots) ) { T_VARIABLE($len) T_MINUS_EQUAL T_LNUMBER ; } T_IF ( T_VARIABLE($wordsafe) ) { T_VARIABLE($string) = T_STRING ( T_VARIABLE($string) , T_LNUMBER , T_VARIABLE($len) + T_LNUMBER ) ; T_IF ( T_VARIABLE($last_space) = T_STRING ( T_VARIABLE($string) , ) ) { T_VARIABLE($string) = T_STRING ( T_VARIABLE($string) , T_LNUMBER , T_VARIABLE($last_space) ) ; } T_ELSE { T_VARIABLE($string) = T_STRING ( T_VARIABLE($string) , T_LNUMBER , T_VARIABLE($len) ) ; } } T_ELSE { T_VARIABLE($string) = T_STRING ( T_VARIABLE($string) , T_LNUMBER , T_VARIABLE($len) ) ; } T_IF ( T_VARIABLE($dots) ) { T_VARIABLE($string) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($string) ; } T_FUNCTION(mime_header_encode) ( T_VARIABLE($string) ) { T_IF ( T_STRING ( , T_VARIABLE($string) ) ) { T_VARIABLE($chunk_size) = T_LNUMBER ; T_VARIABLE($len) = T_STRING ( T_VARIABLE($string) ) ; T_VARIABLE($output) = ; T_WHILE ( T_VARIABLE($len) > T_LNUMBER ) { T_VARIABLE($chunk) = T_STRING ( T_VARIABLE($string) , T_VARIABLE($chunk_size) ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($chunk) ) . ; T_VARIABLE($c) = T_STRING ( T_VARIABLE($chunk) ) ; T_VARIABLE($string) = T_STRING ( T_VARIABLE($string) , T_VARIABLE($c) ) ; T_VARIABLE($len) T_MINUS_EQUAL T_VARIABLE($c) ; } T_RETURN T_STRING ( T_VARIABLE($output) ) ; } T_RETURN T_VARIABLE($string) ; } T_FUNCTION(mime_header_decode) ( T_VARIABLE($header) ) { T_VARIABLE($header) = T_STRING ( , , T_VARIABLE($header) ) ; T_RETURN T_STRING ( , , T_VARIABLE($header) ) ; } T_FUNCTION(_mime_header_decode) ( T_VARIABLE($matches) ) { T_VARIABLE($data) = ( T_VARIABLE($matches) [ T_LNUMBER ] T_IS_EQUAL ) ? T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) : T_STRING ( , , T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) ) ; T_IF ( T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) T_IS_NOT_EQUAL ) { T_VARIABLE($data) = T_STRING ( T_VARIABLE($data) , T_VARIABLE($matches) [ T_LNUMBER ] ) ; } T_RETURN T_VARIABLE($data) ; } T_FUNCTION(decode_entities) ( T_VARIABLE($text) , T_VARIABLE($exclude) = T_ARRAY ( ) ) { T_STATIC T_VARIABLE($table) ; T_IF ( ! T_ISSET ( T_VARIABLE($table) ) ) { T_VARIABLE($table) = T_STRING ( T_STRING ( T_STRING ) ) ; T_VARIABLE($table) = T_STRING ( , T_VARIABLE($table) ) ; T_VARIABLE($table) [ ] = ; } T_VARIABLE($newtable) = T_STRING ( T_VARIABLE($table) , T_VARIABLE($exclude) ) ; T_RETURN T_STRING ( , , T_VARIABLE($text) ) ; } T_FUNCTION(_decode_entities) ( T_VARIABLE($prefix) , T_VARIABLE($codepoint) , T_VARIABLE($original) , & T_VARIABLE($table) , & T_VARIABLE($exclude) ) { T_IF ( ! T_VARIABLE($prefix) ) { T_IF ( T_ISSET ( T_VARIABLE($table) [ T_VARIABLE($original) ] ) ) { T_RETURN T_VARIABLE($table) [ T_VARIABLE($original) ] ; } T_ELSE { T_RETURN T_VARIABLE($original) ; } } T_IF ( T_VARIABLE($prefix) T_IS_EQUAL ) { T_VARIABLE($codepoint) = T_STRING ( T_VARIABLE($codepoint) , T_LNUMBER , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($codepoint) = T_STRING ( , , T_VARIABLE($codepoint) ) ; } T_IF ( T_VARIABLE($codepoint) < T_LNUMBER ) { T_VARIABLE($str) = T_STRING ( T_VARIABLE($codepoint) ) ; } T_ELSE T_IF ( T_VARIABLE($codepoint) < T_LNUMBER ) { T_VARIABLE($str) = T_STRING ( T_LNUMBER | ( T_VARIABLE($codepoint) T_SR T_LNUMBER ) ) . T_STRING ( T_LNUMBER | ( T_VARIABLE($codepoint) & T_LNUMBER ) ) ; } T_ELSE T_IF ( T_VARIABLE($codepoint) < T_LNUMBER ) { T_VARIABLE($str) = T_STRING ( T_LNUMBER | ( T_VARIABLE($codepoint) T_SR T_LNUMBER ) ) . T_STRING ( T_LNUMBER | ( ( T_VARIABLE($codepoint) T_SR T_LNUMBER ) & T_LNUMBER ) ) . T_STRING ( T_LNUMBER | ( T_VARIABLE($codepoint) & T_LNUMBER ) ) ; } T_ELSE T_IF ( T_VARIABLE($codepoint) < T_LNUMBER ) { T_VARIABLE($str) = T_STRING ( T_LNUMBER | ( T_VARIABLE($codepoint) T_SR T_LNUMBER ) ) . T_STRING ( T_LNUMBER | ( ( T_VARIABLE($codepoint) T_SR T_LNUMBER ) & T_LNUMBER ) ) . T_STRING ( T_LNUMBER | ( ( T_VARIABLE($codepoint) T_SR T_LNUMBER ) & T_LNUMBER ) ) . T_STRING ( T_LNUMBER | ( T_VARIABLE($codepoint) & T_LNUMBER ) ) ; } T_IF ( T_STRING ( T_VARIABLE($str) , T_VARIABLE($exclude) ) ) { T_RETURN T_VARIABLE($original) ; } T_ELSE { T_RETURN T_VARIABLE($str) ; } } T_FUNCTION(drupal_strlen) ( T_VARIABLE($text) ) { T_GLOBAL T_VARIABLE($multibyte) ; T_IF ( T_VARIABLE($multibyte) T_IS_EQUAL T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($text) ) ; } T_ELSE { T_RETURN T_STRING ( T_STRING ( , , T_VARIABLE($text) ) ) ; } } T_FUNCTION(drupal_strtoupper) ( T_VARIABLE($text) ) { T_GLOBAL T_VARIABLE($multibyte) ; T_IF ( T_VARIABLE($multibyte) T_IS_EQUAL T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($text) ) ; } T_ELSE { T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_RETURN T_VARIABLE($text) ; } } T_FUNCTION(drupal_strtolower) ( T_VARIABLE($text) ) { T_GLOBAL T_VARIABLE($multibyte) ; T_IF ( T_VARIABLE($multibyte) T_IS_EQUAL T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($text) ) ; } T_ELSE { T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_RETURN T_VARIABLE($text) ; } } T_FUNCTION(_unicode_caseflip) ( T_VARIABLE($matches) ) { T_RETURN T_VARIABLE($matches) [ T_LNUMBER ] [ T_LNUMBER ] . T_STRING ( T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] [ T_LNUMBER ] ) ^ T_LNUMBER ) ; } T_FUNCTION(drupal_ucfirst) ( T_VARIABLE($text) ) { T_RETURN T_STRING ( T_STRING ( T_VARIABLE($text) , T_LNUMBER , T_LNUMBER ) ) . T_STRING ( T_VARIABLE($text) , T_LNUMBER ) ; } T_FUNCTION(drupal_substr) ( T_VARIABLE($text) , T_VARIABLE($start) , T_VARIABLE($length) = T_STRING ) { T_GLOBAL T_VARIABLE($multibyte) ; T_IF ( T_VARIABLE($multibyte) T_IS_EQUAL T_STRING ) { T_RETURN T_VARIABLE($length) T_IS_IDENTICAL T_STRING ? T_STRING ( T_VARIABLE($text) , T_VARIABLE($start) ) : T_STRING ( T_VARIABLE($text) , T_VARIABLE($start) , T_VARIABLE($length) ) ; } T_ELSE { T_VARIABLE($strlen) = T_STRING ( T_VARIABLE($text) ) ; T_VARIABLE($bytes) = T_LNUMBER ; T_IF ( T_VARIABLE($start) > T_LNUMBER ) { T_VARIABLE($bytes) = - T_LNUMBER ; T_VARIABLE($chars) = - T_LNUMBER ; T_WHILE ( T_VARIABLE($bytes) < T_VARIABLE($strlen) T_BOOLEAN_AND T_VARIABLE($chars) < T_VARIABLE($start) ) { T_VARIABLE($bytes) T_INC ; T_VARIABLE($c) = T_STRING ( T_VARIABLE($text) [ T_VARIABLE($bytes) ] ) ; T_IF ( T_VARIABLE($c) < T_LNUMBER T_BOOLEAN_OR T_VARIABLE($c) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($chars) T_INC ; } } } T_ELSE T_IF ( T_VARIABLE($start) < T_LNUMBER ) { T_VARIABLE($start) = T_STRING ( T_VARIABLE($start) ) ; T_VARIABLE($bytes) = T_VARIABLE($strlen) ; T_VARIABLE($chars) = T_LNUMBER ; T_WHILE ( T_VARIABLE($bytes) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($chars) < T_VARIABLE($start) ) { T_VARIABLE($bytes) T_DEC ; T_VARIABLE($c) = T_STRING ( T_VARIABLE($text) [ T_VARIABLE($bytes) ] ) ; T_IF ( T_VARIABLE($c) < T_LNUMBER T_BOOLEAN_OR T_VARIABLE($c) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($chars) T_INC ; } } } T_VARIABLE($istart) = T_VARIABLE($bytes) ; T_IF ( T_VARIABLE($length) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($bytes) = T_VARIABLE($strlen) - T_LNUMBER ; } T_ELSE T_IF ( T_VARIABLE($length) > T_LNUMBER ) { T_VARIABLE($bytes) = T_VARIABLE($istart) ; T_VARIABLE($chars) = T_LNUMBER ; T_WHILE ( T_VARIABLE($bytes) < T_VARIABLE($strlen) T_BOOLEAN_AND T_VARIABLE($chars) < T_VARIABLE($length) ) { T_VARIABLE($bytes) T_INC ; T_VARIABLE($c) = T_STRING ( T_VARIABLE($text) [ T_VARIABLE($bytes) ] ) ; T_IF ( T_VARIABLE($c) < T_LNUMBER T_BOOLEAN_OR T_VARIABLE($c) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($chars) T_INC ; } } T_VARIABLE($bytes) T_DEC ; } T_ELSE T_IF ( T_VARIABLE($length) < T_LNUMBER ) { T_VARIABLE($length) = T_STRING ( T_VARIABLE($length) ) ; T_VARIABLE($bytes) = T_VARIABLE($strlen) - T_LNUMBER ; T_VARIABLE($chars) = T_LNUMBER ; T_WHILE ( T_VARIABLE($bytes) T_IS_GREATER_OR_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($chars) < T_VARIABLE($length) ) { T_VARIABLE($c) = T_STRING ( T_VARIABLE($text) [ T_VARIABLE($bytes) ] ) ; T_IF ( T_VARIABLE($c) < T_LNUMBER T_BOOLEAN_OR T_VARIABLE($c) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($chars) T_INC ; } T_VARIABLE($bytes) T_DEC ; } } T_VARIABLE($iend) = T_VARIABLE($bytes) ; T_RETURN T_STRING ( T_VARIABLE($text) , T_VARIABLE($istart) , T_STRING ( T_LNUMBER , T_VARIABLE($iend) - T_VARIABLE($istart) + T_LNUMBER ) ) ; } }",10,0
"T_OPEN_TAG T_FUNCTION(xmlrpc_value) ( T_VARIABLE($data) , T_VARIABLE($type) = T_STRING ) { T_VARIABLE($xmlrpc_value) = T_NEW T_STRING ( ) ; T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($data) ; T_IF ( ! T_VARIABLE($type) ) { T_VARIABLE($type) = T_STRING ( T_VARIABLE($xmlrpc_value) ) ; } T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($type) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_FOREACH ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($value) ) ; } } T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER , T_VARIABLE($j) = T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($i) < T_VARIABLE($j) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] ) ; } } T_RETURN T_VARIABLE($xmlrpc_value) ; } T_FUNCTION(xmlrpc_value_calculate_type) ( & T_VARIABLE($xmlrpc_value) ) { T_IF ( T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN ; } T_IF ( T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN T_EMPTY ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) - T_LNUMBER ) T_IS_IDENTICAL T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ? : ; } T_IF ( T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) { T_RETURN ; } T_IF ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) { T_RETURN ; } T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN ; } T_RETURN ; } T_FUNCTION(xmlrpc_value_get_xml) ( T_VARIABLE($xmlrpc_value) ) { T_SWITCH ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) { T_CASE : T_RETURN . ( ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ? : ) . ; T_BREAK ; T_CASE : T_RETURN . T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING . ; T_BREAK ; T_CASE : T_RETURN . T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING . ; T_BREAK ; T_CASE : T_RETURN . T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) . ; T_BREAK ; T_CASE : T_VARIABLE($return) = . ; T_FOREACH ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($item) ) { T_VARIABLE($return) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($item) ) . ; } T_VARIABLE($return) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($return) ; T_BREAK ; T_CASE : T_VARIABLE($return) = . ; T_FOREACH ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($return) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($name) ) . ; T_VARIABLE($return) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($value) ) . ; } T_VARIABLE($return) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($return) ; T_BREAK ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($xmlrpc_value) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; } T_RETURN T_STRING ; } T_FUNCTION(xmlrpc_message) ( T_VARIABLE($message) ) { T_VARIABLE($xmlrpc_message) = T_NEW T_STRING ( ) ; T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($message) ; T_RETURN T_VARIABLE($xmlrpc_message) ; } T_FUNCTION(xmlrpc_message_parse) ( & T_VARIABLE($xmlrpc_message) ) { T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_STRING ( . , , T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) T_IS_EQUAL ) { T_RETURN T_STRING ; } T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING , T_STRING , T_STRING ) ; T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING , , ) ; T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING , ) ; T_STRING ( T_VARIABLE($xmlrpc_message) ) ; T_IF ( ! T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN T_STRING ; } T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($xmlrpc_message) = T_STRING ( ) ; T_IF ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] [ ] ; T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] [ ] ; } T_RETURN T_STRING ; } T_FUNCTION(xmlrpc_message_set) ( T_VARIABLE($value) = T_STRING ) { T_STATIC T_VARIABLE($xmlrpc_message) ; T_IF ( T_VARIABLE($value) ) { T_VARIABLE($xmlrpc_message) = T_VARIABLE($value) ; } T_RETURN T_VARIABLE($xmlrpc_message) ; } T_FUNCTION(xmlrpc_message_get) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(xmlrpc_message_tag_open) ( T_VARIABLE($parser) , T_VARIABLE($tag) , T_VARIABLE($attr) ) { T_VARIABLE($xmlrpc_message) = T_STRING ( ) ; T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($tag) ; T_SWITCH ( T_VARIABLE($tag) ) { T_CASE : T_CASE : T_CASE : T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($tag) ; T_BREAK ; T_CASE : T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ ] = ; T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( ) ; T_BREAK ; T_CASE : T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ ] = ; T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( ) ; T_BREAK ; } T_STRING ( T_VARIABLE($xmlrpc_message) ) ; } T_FUNCTION(xmlrpc_message_cdata) ( T_VARIABLE($parser) , T_VARIABLE($cdata) ) { T_VARIABLE($xmlrpc_message) = T_STRING ( ) ; T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_VARIABLE($cdata) ; T_STRING ( T_VARIABLE($xmlrpc_message) ) ; } T_FUNCTION(xmlrpc_message_tag_close) ( T_VARIABLE($parser) , T_VARIABLE($tag) ) { T_VARIABLE($xmlrpc_message) = T_STRING ( ) ; T_VARIABLE($value_flag) = T_STRING ; T_SWITCH ( T_VARIABLE($tag) ) { T_CASE : T_CASE : T_VARIABLE($value) = T_INT_CAST T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($value_flag) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($value) = T_DOUBLE_CAST T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($value_flag) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($value) = T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($value_flag) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($value) = T_STRING ( T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($value_flag) = T_STRING ; T_BREAK ; T_CASE : T_IF ( T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) T_IS_NOT_EQUAL T_BOOLEAN_OR T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($value) = T_STRING_CAST T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($value_flag) = T_STRING ; } T_UNSET ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($value) = T_BOOL_CAST T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($value_flag) = T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($value) = T_STRING ( T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($value_flag) = T_STRING ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($value) = T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($value_flag) = T_STRING ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; } T_IF ( T_VARIABLE($value_flag) ) { T_IF ( T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) { T_IF ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) - T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) - T_LNUMBER ] [ T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) - T_LNUMBER ] ] = T_VARIABLE($value) ; } T_ELSE { T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING ) - T_LNUMBER ] [ ] = T_VARIABLE($value) ; } } T_ELSE { T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($value) ; } } T_IF ( ! T_STRING ( T_VARIABLE($tag) , T_ARRAY ( , , ) ) ) { T_VARIABLE($xmlrpc_message) T_OBJECT_OPERATOR T_STRING = ; } T_STRING ( T_VARIABLE($xmlrpc_message) ) ; } T_FUNCTION(xmlrpc_request) ( T_VARIABLE($method) , T_VARIABLE($args) ) { T_VARIABLE($xmlrpc_request) = T_NEW T_STRING ( ) ; T_VARIABLE($xmlrpc_request) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($method) ; T_VARIABLE($xmlrpc_request) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($args) ; T_VARIABLE($xmlrpc_request) T_OBJECT_OPERATOR T_STRING = T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($xmlrpc_request) T_OBJECT_OPERATOR T_STRING } T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC ; T_FOREACH ( T_VARIABLE($xmlrpc_request) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($arg) ) { T_VARIABLE($xmlrpc_request) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; T_VARIABLE($v) = T_STRING ( T_VARIABLE($arg) ) ; T_VARIABLE($xmlrpc_request) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_STRING ( T_VARIABLE($v) ) ; T_VARIABLE($xmlrpc_request) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; } T_VARIABLE($xmlrpc_request) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($xmlrpc_request) ; } T_FUNCTION(xmlrpc_error) ( T_VARIABLE($code) = T_STRING , T_VARIABLE($message) = T_STRING ) { T_STATIC T_VARIABLE($xmlrpc_error) ; T_IF ( T_ISSET ( T_VARIABLE($code) ) ) { T_VARIABLE($xmlrpc_error) = T_NEW T_STRING ( ) ; T_VARIABLE($xmlrpc_error) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($xmlrpc_error) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($code) ; T_VARIABLE($xmlrpc_error) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($message) ; T_STRING ( , ) ; } T_RETURN T_VARIABLE($xmlrpc_error) ; } T_FUNCTION(xmlrpc_error_get_xml) ( T_VARIABLE($xmlrpc_error) ) { T_RETURN T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($xmlrpc_error) T_OBJECT_OPERATOR T_STRING } T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($xmlrpc_error) T_OBJECT_OPERATOR T_STRING } T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC ; } T_FUNCTION(xmlrpc_date) ( T_VARIABLE($time) ) { T_VARIABLE($xmlrpc_date) = T_NEW T_STRING ( ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($time) ) ) { T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($time) ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($time) ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($time) ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($time) ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($time) ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($time) ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($time) ) ; } T_ELSE { T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($time) ; T_VARIABLE($time) = T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($time) ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($time) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($time) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($time) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($time) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($time) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($time) , T_LNUMBER , T_LNUMBER ) ; } T_RETURN T_VARIABLE($xmlrpc_date) ; } T_FUNCTION(xmlrpc_date_get_xml) ( T_VARIABLE($xmlrpc_date) ) { T_RETURN . T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING . T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING . T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($xmlrpc_date) T_OBJECT_OPERATOR T_STRING . ; } T_FUNCTION(xmlrpc_base64) ( T_VARIABLE($data) ) { T_VARIABLE($xmlrpc_base64) = T_NEW T_STRING ( ) ; T_VARIABLE($xmlrpc_base64) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($xmlrpc_base64) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($data) ; T_RETURN T_VARIABLE($xmlrpc_base64) ; } T_FUNCTION(xmlrpc_base64_get_xml) ( T_VARIABLE($xmlrpc_base64) ) { T_RETURN . T_STRING ( T_VARIABLE($xmlrpc_base64) T_OBJECT_OPERATOR T_STRING ) . ; } T_FUNCTION(_xmlrpc) ( ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($url) = T_STRING ( T_VARIABLE($args) ) ; T_IF ( T_STRING ( T_VARIABLE($args) [ T_LNUMBER ] ) ) { T_VARIABLE($method) = ; T_VARIABLE($multicall_args) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($args) [ T_LNUMBER ] T_AS T_VARIABLE($call) ) { T_VARIABLE($multicall_args) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($call) ) , T_DOUBLE_ARROW T_VARIABLE($call) ) ; } T_VARIABLE($args) = T_ARRAY ( T_VARIABLE($multicall_args) ) ; } T_ELSE { T_VARIABLE($method) = T_STRING ( T_VARIABLE($args) ) ; } T_VARIABLE($xmlrpc_request) = T_STRING ( T_VARIABLE($method) , T_VARIABLE($args) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($url) , T_ARRAY ( T_DOUBLE_ARROW ) , , T_VARIABLE($xmlrpc_request) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ; } T_VARIABLE($message) = T_STRING ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_STRING ( T_VARIABLE($message) ) ) { T_STRING ( - T_LNUMBER , T_STRING ( ) ) ; T_RETURN T_STRING ; } T_IF ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_STRING ( T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ; } T_RETURN T_VARIABLE($message) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] ; } T_FUNCTION(xmlrpc_errno) ( ) { T_VARIABLE($error) = T_STRING ( ) ; T_RETURN T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(xmlrpc_error_msg) ( ) { T_VARIABLE($error) = T_STRING ( ) ; T_RETURN T_VARIABLE($error) T_OBJECT_OPERATOR T_STRING ; }",10,0
"T_OPEN_TAG T_FUNCTION(xmlrpc_server) ( T_VARIABLE($callbacks) ) { T_VARIABLE($xmlrpc_server) = T_NEW T_STRING ( ) ; T_VARIABLE($defaults) = T_ARRAY ( T_DOUBLE_ARROW , T_ARRAY ( , , T_ARRAY ( , ) , ) , T_ARRAY ( , , T_ARRAY ( ) , ) , T_ARRAY ( , , T_ARRAY ( ) , ) , T_ARRAY ( , , T_ARRAY ( , ) , ) ) ; T_FOREACH ( T_STRING ( T_VARIABLE($defaults) , T_ARRAY_CAST T_VARIABLE($callbacks) ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($callback) ) { T_IF ( T_STRING ( T_VARIABLE($key) ) ) { T_VARIABLE($method) = T_VARIABLE($callback) [ T_LNUMBER ] ; T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($method) ] = T_VARIABLE($callback) [ T_LNUMBER ] ; T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($method) ] = T_VARIABLE($callback) [ T_LNUMBER ] ; T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($method) ] = T_VARIABLE($callback) [ T_LNUMBER ] ; } T_ELSE { T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] = T_VARIABLE($callback) ; T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] = ; T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] = ; } } T_VARIABLE($data) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($data) ) { T_EXIT ( ) ; } T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($data) ) ; T_IF ( ! T_STRING ( T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( - T_LNUMBER , T_STRING ( ) ) ; } T_IF ( T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) { T_STRING ( - T_LNUMBER , T_STRING ( ) ) ; } T_STRING ( T_VARIABLE($xmlrpc_server) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($xmlrpc_server) , T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING , T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( T_VARIABLE($result) ) ; } T_VARIABLE($r) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($xml) = . T_STRING ( T_VARIABLE($r) ) . ; T_STRING ( T_VARIABLE($xml) ) ; } T_FUNCTION(xmlrpc_server_error) ( T_VARIABLE($error) , T_VARIABLE($message) = T_STRING ) { T_IF ( T_VARIABLE($message) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($error) ) ) { T_VARIABLE($error) = T_STRING ( T_VARIABLE($error) , T_VARIABLE($message) ) ; } T_STRING ( T_STRING ( T_VARIABLE($error) ) ) ; } T_FUNCTION(xmlrpc_server_output) ( T_VARIABLE($xml) ) { T_VARIABLE($xml) = . . T_VARIABLE($xml) ; T_STRING ( ) ; T_STRING ( . T_STRING ( T_VARIABLE($xml) ) ) ; T_STRING ( ) ; T_STRING ( . T_STRING ( ) ) ; T_ECHO T_VARIABLE($xml) ; T_EXIT ; } T_FUNCTION(xmlrpc_server_set) ( T_VARIABLE($xmlrpc_server) = T_STRING ) { T_STATIC T_VARIABLE($server) ; T_IF ( ! T_ISSET ( T_VARIABLE($server) ) ) { T_VARIABLE($server) = T_VARIABLE($xmlrpc_server) ; } T_RETURN T_VARIABLE($server) ; } T_FUNCTION(xmlrpc_server_get) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(xmlrpc_server_call) ( T_VARIABLE($xmlrpc_server) , T_VARIABLE($methodname) , T_VARIABLE($args) ) { T_IF ( T_VARIABLE($args) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($args) ) ) { T_VARIABLE($args) = T_ARRAY ( T_VARIABLE($args) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($methodname) ] ) ) { T_RETURN T_STRING ( - T_LNUMBER , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_VARIABLE($method) = T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($methodname) ] ; T_VARIABLE($signature) = T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($methodname) ] ; T_IF ( T_STRING ( T_VARIABLE($signature) ) ) { T_VARIABLE($ok) = T_STRING ; T_VARIABLE($return_type) = T_STRING ( T_VARIABLE($signature) ) ; T_IF ( T_STRING ( T_VARIABLE($args) ) T_IS_NOT_EQUAL T_STRING ( T_VARIABLE($signature) ) ) { T_RETURN T_STRING ( - T_LNUMBER , T_STRING ( ) ) ; } T_FOREACH ( T_VARIABLE($signature) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($type) ) { T_VARIABLE($arg) = T_VARIABLE($args) [ T_VARIABLE($key) ] ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_CASE : T_IF ( T_STRING ( T_VARIABLE($arg) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($arg) ) ) { T_VARIABLE($ok) = T_STRING ; } T_BREAK ; T_CASE : T_CASE : T_IF ( ! T_STRING ( T_VARIABLE($arg) ) ) { T_VARIABLE($ok) = T_STRING ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($arg) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($arg) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($ok) = T_STRING ; } T_BREAK ; T_CASE : T_CASE : T_IF ( ! T_STRING ( T_VARIABLE($arg) ) ) { T_VARIABLE($ok) = T_STRING ; } T_BREAK ; T_CASE : T_CASE : T_IF ( ! T_VARIABLE($arg) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($ok) = T_STRING ; } T_BREAK ; } T_IF ( ! T_VARIABLE($ok) ) { T_RETURN T_STRING ( - T_LNUMBER , T_STRING ( ) ) ; } } } T_IF ( ! T_STRING ( T_VARIABLE($method) ) ) { T_RETURN T_STRING ( - T_LNUMBER , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($method) ) ) ) ; } T_RETURN T_STRING ( T_VARIABLE($method) , T_VARIABLE($args) ) ; } T_FUNCTION(xmlrpc_server_multicall) ( T_VARIABLE($methodcalls) ) { T_VARIABLE($return) = T_ARRAY ( ) ; T_VARIABLE($xmlrpc_server) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($methodcalls) T_AS T_VARIABLE($call) ) { T_VARIABLE($ok) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($call) [ ] ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($call) [ ] ) ) { T_VARIABLE($result) = T_STRING ( T_LNUMBER , T_STRING ( ) ) ; T_VARIABLE($ok) = T_STRING ; } T_VARIABLE($method) = T_VARIABLE($call) [ ] ; T_VARIABLE($params) = T_VARIABLE($call) [ ] ; T_IF ( T_VARIABLE($method) T_IS_EQUAL ) { T_VARIABLE($result) = T_STRING ( - T_LNUMBER , T_STRING ( ) ) ; } T_ELSEIF ( T_VARIABLE($ok) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($xmlrpc_server) , T_VARIABLE($method) , T_VARIABLE($params) ) ; } T_IF ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($return) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($return) [ ] = T_VARIABLE($result) ; } } T_RETURN T_VARIABLE($return) ; } T_FUNCTION(xmlrpc_server_list_methods) ( ) { T_VARIABLE($xmlrpc_server) = T_STRING ( ) ; T_RETURN T_STRING ( T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING ) ; } T_FUNCTION(xmlrpc_server_get_capabilities) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_FUNCTION(xmlrpc_server_method_signature) ( T_VARIABLE($methodname) ) { T_VARIABLE($xmlrpc_server) = T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($methodname) ] ) ) { T_RETURN T_STRING ( - T_LNUMBER , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($methodname) ) ) ) ; } T_IF ( ! T_STRING ( T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($methodname) ] ) ) { T_RETURN T_STRING ( - T_LNUMBER , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($methodname) ) ) ) ; } T_VARIABLE($return) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($methodname) ] T_AS T_VARIABLE($type) ) { T_VARIABLE($return) [ ] = T_VARIABLE($type) ; } T_RETURN T_VARIABLE($return) ; } T_FUNCTION(xmlrpc_server_method_help) ( T_VARIABLE($method) ) { T_VARIABLE($xmlrpc_server) = T_STRING ( ) ; T_RETURN T_VARIABLE($xmlrpc_server) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($method) ] ; }",11,0
"T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING ( T_STRING ) ; T_VARIABLE($return) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($return) ) ) { T_SWITCH ( T_VARIABLE($return) ) { T_CASE T_STRING : T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_STRING ( ) ; T_BREAK ; } } T_ELSEIF ( T_ISSET ( T_VARIABLE($return) ) ) { T_PRINT T_STRING ( , T_VARIABLE($return) ) ; } T_STRING ( ) ;",0,0
"T_OPEN_TAG T_REQUIRE_ONCE ; T_STRING ( , ) ; T_FUNCTION(install_main) ( ) { T_REQUIRE_ONCE ; T_STRING ( T_STRING ) ; T_GLOBAL T_VARIABLE($profile) , T_VARIABLE($install_locale) , T_VARIABLE($conf) ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_STRING ( ) ; T_STRING ( ) ; T_INCLUDE_ONCE ; T_VARIABLE($module_list) [ ] [ ] = ; T_VARIABLE($module_list) [ ] [ ] = ; T_STRING ( T_STRING , T_STRING , T_STRING , T_VARIABLE($module_list) ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( ) ; T_VARIABLE($verify) = T_STRING ( ) ; T_IF ( T_VARIABLE($verify) ) { T_REQUIRE_ONCE ; T_VARIABLE($conf) [ ] = ; T_REQUIRE_ONCE ; T_STRING ( ) ; T_VARIABLE($task) = T_STRING ( ) ; T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_STRING ( ) ; } } T_ELSE { T_REQUIRE_ONCE ; T_VARIABLE($conf) [ ] = ; T_VARIABLE($task) = T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($profile) = T_STRING ( , , T_VARIABLE($_GET) [ ] ) ; } T_ELSEIF ( T_VARIABLE($profile) = T_STRING ( ) ) { T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) ) ; } T_ELSE { T_STRING ( ) ; } T_REQUIRE_ONCE T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) T_ENCAPSED_AND_WHITESPACE ; T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($install_locale) = T_STRING ( , , T_VARIABLE($_GET) [ ] ) ; } T_ELSEIF ( ( T_VARIABLE($install_locale) = T_STRING ( T_VARIABLE($profile) ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($install_locale) ) ; } T_IF ( ! T_VARIABLE($task) ) { T_STRING ( T_VARIABLE($profile) , T_VARIABLE($verify) ) ; T_VARIABLE($modules) = T_STRING ( T_VARIABLE($profile) , T_VARIABLE($install_locale) ) ; T_VARIABLE($messages) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($messages) [ ] ) ) { T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_PRINT T_STRING ( , ) ; T_EXIT ; } T_IF ( ! T_VARIABLE($verify) ) { T_STRING ( T_VARIABLE($profile) , T_VARIABLE($install_locale) ) ; } T_STRING ( ) ; T_STRING ( , T_STRING ( T_VARIABLE($modules) , T_ARRAY ( ) ) ) ; } T_STRING ( T_VARIABLE($profile) , T_VARIABLE($task) ) ; } T_FUNCTION(install_verify_drupal) ( ) { T_VARIABLE($result) = @ T_STRING ( , ) ; T_IF ( T_VARIABLE($result) ) { T_RETURN T_STRING ( T_STRING ( T_VARIABLE($result) ) ) ; } } T_FUNCTION(install_verify_settings) ( ) { T_GLOBAL T_VARIABLE($db_prefix) , T_VARIABLE($db_type) , T_VARIABLE($db_url) ; T_IF ( ! T_EMPTY ( T_VARIABLE($db_url) ) ) { T_INCLUDE_ONCE ; T_VARIABLE($url) = T_STRING ( T_STRING ( T_VARIABLE($db_url) ) ? T_VARIABLE($db_url) [ ] : T_VARIABLE($db_url) ) ; T_VARIABLE($db_user) = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($db_pass) = T_ISSET ( T_VARIABLE($url) [ ] ) ? T_STRING ( T_VARIABLE($url) [ ] ) : T_STRING ; T_VARIABLE($db_host) = T_STRING ( T_VARIABLE($url) [ ] ) ; T_VARIABLE($db_port) = T_ISSET ( T_VARIABLE($url) [ ] ) ? T_STRING ( T_VARIABLE($url) [ ] ) : ; T_VARIABLE($db_path) = T_STRING ( T_STRING ( T_VARIABLE($url) [ ] ) , ) ; T_VARIABLE($settings_file) = . T_STRING ( T_STRING , T_STRING ) . ; T_VARIABLE($form_state) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($db_prefix) , T_VARIABLE($db_type) , T_VARIABLE($db_user) , T_VARIABLE($db_pass) , T_VARIABLE($db_host) , T_VARIABLE($db_port) , T_VARIABLE($db_path) , T_VARIABLE($settings_file) , T_VARIABLE($form_state) ) ; T_IF ( ! T_STRING ( ) ) { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_FUNCTION(install_change_settings) ( T_VARIABLE($profile) = , T_VARIABLE($install_locale) = ) { T_GLOBAL T_VARIABLE($db_url) , T_VARIABLE($db_type) , T_VARIABLE($db_prefix) ; T_VARIABLE($url) = T_STRING ( T_STRING ( T_VARIABLE($db_url) ) ? T_VARIABLE($db_url) [ ] : T_VARIABLE($db_url) ) ; T_VARIABLE($db_user) = T_ISSET ( T_VARIABLE($url) [ ] ) ? T_STRING ( T_VARIABLE($url) [ ] ) : ; T_VARIABLE($db_pass) = T_ISSET ( T_VARIABLE($url) [ ] ) ? T_STRING ( T_VARIABLE($url) [ ] ) : ; T_VARIABLE($db_host) = T_ISSET ( T_VARIABLE($url) [ ] ) ? T_STRING ( T_VARIABLE($url) [ ] ) : ; T_VARIABLE($db_port) = T_ISSET ( T_VARIABLE($url) [ ] ) ? T_STRING ( T_VARIABLE($url) [ ] ) : ; T_VARIABLE($db_path) = T_STRING ( T_STRING ( T_VARIABLE($url) [ ] ) , ) ; T_VARIABLE($conf_path) = . T_STRING ( T_STRING , T_STRING ) ; T_VARIABLE($settings_file) = T_VARIABLE($conf_path) . ; T_INCLUDE_ONCE ; T_STRING ( ) ; T_IF ( T_VARIABLE($db_url) T_IS_EQUAL ) { T_VARIABLE($db_user) = T_VARIABLE($db_pass) = T_VARIABLE($db_path) = ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($db_url) ) ) { T_STRING ( ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($profile) , T_VARIABLE($install_locale) , T_VARIABLE($settings_file) , T_VARIABLE($db_url) , T_VARIABLE($db_type) , T_VARIABLE($db_prefix) , T_VARIABLE($db_user) , T_VARIABLE($db_pass) , T_VARIABLE($db_host) , T_VARIABLE($db_port) , T_VARIABLE($db_path) ) ; T_STRING ( T_STRING ( ) ) ; T_PRINT T_STRING ( , T_VARIABLE($output) ) ; T_EXIT ; } T_FUNCTION(install_settings_form) ( & T_VARIABLE($form_state) , T_VARIABLE($profile) , T_VARIABLE($install_locale) , T_VARIABLE($settings_file) , T_VARIABLE($db_url) , T_VARIABLE($db_type) , T_VARIABLE($db_prefix) , T_VARIABLE($db_user) , T_VARIABLE($db_pass) , T_VARIABLE($db_host) , T_VARIABLE($db_port) , T_VARIABLE($db_path) ) { T_IF ( T_EMPTY ( T_VARIABLE($db_host) ) ) { T_VARIABLE($db_host) = ; } T_VARIABLE($db_types) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($db_types) [ ] ) ) { T_UNSET ( T_VARIABLE($db_types) [ ] ) ; } T_IF ( T_STRING ( T_VARIABLE($db_types) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) , ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . , ) ; T_IF ( T_STRING ( T_VARIABLE($db_types) ) > T_LNUMBER ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($db_types) , T_DOUBLE_ARROW ( T_VARIABLE($db_type) ? T_VARIABLE($db_type) : T_STRING ( T_VARIABLE($db_types) ) ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_VARIABLE($db_path_description) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($db_types) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($db_types) = T_STRING ( T_VARIABLE($db_types) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($db_types) [ T_LNUMBER ] , ) ; T_VARIABLE($db_path_description) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db_types) [ T_LNUMBER ] , T_DOUBLE_ARROW T_STRING ( ) ) ) ; } } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($db_path) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($db_path_description) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($db_user) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($db_pass) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($db_host) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($db_port) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($prefix) = ( T_VARIABLE($profile) T_IS_EQUAL ) ? : T_VARIABLE($profile) . ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($db_prefix) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($prefix) ) ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($settings_file) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) . ( T_VARIABLE($install_locale) ? T_ENCAPSED_AND_WHITESPACE T_VARIABLE($install_locale) : ) ; T_VARIABLE($form) [ ] = T_STRING ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(install_settings_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($db_url) ; T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) , T_VARIABLE($form) ) ; } T_FUNCTION(_install_settings_form_validate) ( T_VARIABLE($db_prefix) , T_VARIABLE($db_type) , T_VARIABLE($db_user) , T_VARIABLE($db_pass) , T_VARIABLE($db_host) , T_VARIABLE($db_port) , T_VARIABLE($db_path) , T_VARIABLE($settings_file) , & T_VARIABLE($form_state) , T_VARIABLE($form) = T_STRING ) { T_GLOBAL T_VARIABLE($db_url) ; T_IF ( ! T_EMPTY ( T_VARIABLE($db_prefix) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($db_prefix) ) T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($db_prefix) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($db_prefix) ) ) , ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($db_port) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($db_port) ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($form) ) ) { T_VARIABLE($_db_url) = T_STRING ( T_VARIABLE($db_url) ) ? T_VARIABLE($db_url) [ ] : T_VARIABLE($db_url) ; T_VARIABLE($db_type) = T_STRING ( T_VARIABLE($_db_url) , T_LNUMBER , T_STRING ( T_VARIABLE($_db_url) , ) ) ; } T_VARIABLE($databases) = T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($db_type) , T_VARIABLE($databases) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($settings_file) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($db_type) ) ) ) ; } T_ELSE { T_VARIABLE($db_url) = T_VARIABLE($db_type) . . T_STRING ( T_VARIABLE($db_user) ) . ( T_VARIABLE($db_pass) ? . T_STRING ( T_VARIABLE($db_pass) ) : ) . . ( T_VARIABLE($db_host) ? T_STRING ( T_VARIABLE($db_host) ) : ) . ( T_VARIABLE($db_port) ? T_ENCAPSED_AND_WHITESPACE T_VARIABLE($db_port) : ) . . T_STRING ( T_VARIABLE($db_path) ) ; T_IF ( T_ISSET ( T_VARIABLE($form) ) ) { T_STRING ( T_VARIABLE($form) [ ] , T_VARIABLE($db_url) , T_VARIABLE($form_state) ) ; } T_VARIABLE($success) = T_ARRAY ( ) ; T_VARIABLE($function) = . T_VARIABLE($db_type) ; T_IF ( ! T_VARIABLE($function) ( T_VARIABLE($db_url) , T_VARIABLE($success) ) ) { T_IF ( T_ISSET ( T_VARIABLE($success) [ ] ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($success) , ) ) ) ) ; } T_ELSE { T_STRING ( , ) ; } } } } T_FUNCTION(install_settings_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($profile) , T_VARIABLE($install_locale) ; T_VARIABLE($settings) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($settings) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] , T_DOUBLE_ARROW T_STRING , ) ; T_STRING ( T_VARIABLE($settings) ) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($profile) . ( T_VARIABLE($install_locale) ? T_ENCAPSED_AND_WHITESPACE T_VARIABLE($install_locale) : ) ) ; } T_FUNCTION(install_find_profiles) ( ) { T_RETURN T_STRING ( , , T_ARRAY ( , , ) , T_LNUMBER , T_STRING , , T_LNUMBER ) ; } T_FUNCTION(install_select_profile) ( ) { T_INCLUDE_ONCE ; T_VARIABLE($profiles) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($profiles) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($profile) = T_STRING ( T_VARIABLE($profiles) ) ; T_REQUIRE_ONCE T_VARIABLE($profile) T_OBJECT_OPERATOR T_STRING ; T_RETURN T_VARIABLE($profile) T_OBJECT_OPERATOR T_STRING ; } T_ELSEIF ( T_STRING ( T_VARIABLE($profiles) ) > T_LNUMBER ) { T_FOREACH ( T_VARIABLE($profiles) T_AS T_VARIABLE($profile) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_POST) [ ] T_IS_EQUAL T_VARIABLE($profile) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN T_VARIABLE($profile) T_OBJECT_OPERATOR T_STRING ; } } T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_PRINT T_STRING ( , T_STRING ( , T_VARIABLE($profiles) ) ) ; T_EXIT ; } } T_FUNCTION(install_select_profile_form) ( & T_VARIABLE($form_state) , T_VARIABLE($profiles) ) { T_FOREACH ( T_VARIABLE($profiles) T_AS T_VARIABLE($profile) ) { T_INCLUDE_ONCE ( T_VARIABLE($profile) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($function) = T_VARIABLE($profile) T_OBJECT_OPERATOR T_STRING . ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($details) = T_VARIABLE($function) ( ) ; } T_VARIABLE($name) = T_ISSET ( T_VARIABLE($details) [ ] ) ? T_VARIABLE($details) [ ] : T_VARIABLE($profile) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($form) [ ] [ T_VARIABLE($name) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($profile) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($details) [ ] ) ? T_VARIABLE($details) [ ] : , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(install_find_locales) ( T_VARIABLE($profilename) ) { T_VARIABLE($locales) = T_STRING ( . T_VARIABLE($profilename) . , , T_ARRAY ( , , ) , T_LNUMBER , T_STRING ) ; T_STRING ( T_VARIABLE($locales) , T_OBJECT_CAST T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_RETURN T_VARIABLE($locales) ; } T_FUNCTION(install_select_locale) ( T_VARIABLE($profilename) ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_VARIABLE($locales) = T_STRING ( T_VARIABLE($profilename) ) ; T_IF ( T_STRING ( T_VARIABLE($locales) ) T_IS_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($profilename) T_IS_EQUAL ) { T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($profilename) . . T_STRING ( ) . . T_VARIABLE($profilename) . . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($output) = . T_VARIABLE($profilename) . . T_STRING ( ) . . T_VARIABLE($profilename) . . T_STRING ( ) . ; } T_PRINT T_STRING ( , T_VARIABLE($output) ) ; T_EXIT ; } T_RETURN T_STRING ; } T_ELSE { T_VARIABLE($function) = T_VARIABLE($profilename) . ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($details) = T_VARIABLE($function) ( ) ; T_IF ( T_ISSET ( T_VARIABLE($details) [ ] ) ) { T_FOREACH ( T_VARIABLE($locales) T_AS T_VARIABLE($locale) ) { T_IF ( T_VARIABLE($details) [ ] T_IS_EQUAL T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ; } } } } T_FOREACH ( T_VARIABLE($locales) T_AS T_VARIABLE($locale) ) { T_IF ( T_VARIABLE($_POST) [ ] T_IS_EQUAL T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ; } } T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_PRINT T_STRING ( , T_STRING ( , T_VARIABLE($locales) ) ) ; T_EXIT ; } } T_FUNCTION(install_select_locale_form) ( & T_VARIABLE($form_state) , T_VARIABLE($locales) ) { T_INCLUDE_ONCE ; T_VARIABLE($languages) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($locales) T_AS T_VARIABLE($locale) ) { T_VARIABLE($name) = T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($languages) [ T_VARIABLE($name) ] ) ) { T_VARIABLE($name) = T_VARIABLE($languages) [ T_VARIABLE($name) ] [ T_LNUMBER ] . ( T_ISSET ( T_VARIABLE($languages) [ T_VARIABLE($name) ] [ T_LNUMBER ] ) ? . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($languages) [ T_VARIABLE($name) ] [ T_LNUMBER ] ) ) : ) ; } T_VARIABLE($form) [ ] [ T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW ( T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? T_STRING : T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($name) . ( T_VARIABLE($locale) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? . T_STRING ( ) : ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(install_no_profile_error) ( ) { T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_PRINT T_STRING ( , . T_STRING ( ) . ) ; T_EXIT ; } T_FUNCTION(install_already_done_error) ( ) { T_GLOBAL T_VARIABLE($base_url) ; T_STRING ( T_STRING ( ) ) ; T_PRINT T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($base_url) ) ) ) ; T_EXIT ; } T_FUNCTION(install_tasks) ( T_VARIABLE($profile) , T_VARIABLE($task) ) { T_GLOBAL T_VARIABLE($base_url) , T_VARIABLE($install_locale) ; T_VARIABLE($messages) = T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ? T_VARIABLE($_SESSION) [ ] : ; T_STRING ( T_STRING ) ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($messages) ; T_VARIABLE($url) = T_VARIABLE($base_url) . . T_VARIABLE($install_locale) . . T_VARIABLE($profile) ; T_IF ( T_EMPTY ( T_VARIABLE($task) ) ) { T_STRING ( , ) ; T_VARIABLE($task) = ; } T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_VARIABLE($modules) = T_STRING ( , T_ARRAY ( ) ) ; T_VARIABLE($files) = T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($operations) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($modules) T_AS T_VARIABLE($module) ) { T_VARIABLE($operations) [ ] = T_ARRAY ( , T_ARRAY ( T_VARIABLE($module) , T_VARIABLE($files) [ T_VARIABLE($module) ] T_OBJECT_OPERATOR T_STRING [ ] ) ) ; } T_VARIABLE($batch) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($operations) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_STRING ( , ) ; T_STRING ( T_VARIABLE($batch) ) ; T_STRING ( T_VARIABLE($url) , T_VARIABLE($url) ) ; } T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_INCLUDE_ONCE ; T_VARIABLE($output) = T_STRING ( ) ; } T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($install_locale) ) T_BOOLEAN_AND ( T_VARIABLE($install_locale) T_IS_NOT_EQUAL ) ) { T_INCLUDE_ONCE ; T_STRING ( T_VARIABLE($install_locale) , T_STRING , T_STRING , T_STRING , T_STRING , T_STRING , T_LNUMBER , T_STRING ) ; T_VARIABLE($batch) = T_STRING ( T_VARIABLE($install_locale) , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($batch) ) ) { T_STRING ( , T_VARIABLE($batch) [ ] ) ; T_STRING ( , ) ; T_STRING ( T_VARIABLE($batch) ) ; T_STRING ( T_VARIABLE($url) , T_VARIABLE($url) ) ; } } T_VARIABLE($task) = ; } T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_VARIABLE($output) = T_STRING ( ) ; } T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_IF ( T_STRING ( , T_STRING ) T_BOOLEAN_OR T_STRING ( , T_STRING ) ) { T_STRING ( ) ; } T_VARIABLE($form) = T_STRING ( , T_VARIABLE($url) ) ; T_IF ( ! T_STRING ( , T_STRING ) T_BOOLEAN_AND ! T_STRING ( , T_STRING ) ) { T_VARIABLE($output) = T_VARIABLE($form) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($settings_dir) = . T_STRING ( ) ; T_VARIABLE($settings_file) = T_VARIABLE($settings_dir) . ; T_IF ( ! T_STRING ( T_VARIABLE($settings_file) , T_STRING | T_STRING | T_STRING ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($settings_dir) , T_STRING , ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($settings_dir) , T_DOUBLE_ARROW T_VARIABLE($settings_file) , T_DOUBLE_ARROW ) ) , ) ; } T_ELSE { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($settings_dir) , T_DOUBLE_ARROW T_VARIABLE($settings_file) ) ) ) ; } T_STRING ( ) ; T_STRING ( T_STRING ( , ) . , ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_STRING ( , ) ; T_STRING ( ) ; } T_ELSE { T_VARIABLE($task) = ; } } T_IF ( ! T_STRING ( T_VARIABLE($task) , T_STRING ( ) ) ) { T_VARIABLE($function) = T_VARIABLE($profile) . ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($output) = T_VARIABLE($function) ( T_VARIABLE($task) , T_VARIABLE($url) ) ; } T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_VARIABLE($task) = ; } } T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($install_locale) ) T_BOOLEAN_AND ( T_VARIABLE($install_locale) T_IS_NOT_EQUAL ) ) { T_INCLUDE_ONCE ; T_VARIABLE($batch) = T_STRING ( T_VARIABLE($install_locale) , , T_STRING ( , T_ARRAY ( ) ) ) ; T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($batch) ) ) { T_STRING ( , ) ; T_STRING ( T_VARIABLE($batch) ) ; T_STRING ( T_VARIABLE($url) , T_VARIABLE($url) ) ; } } T_VARIABLE($task) = ; } T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_VARIABLE($output) = T_STRING ( ) ; } T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; T_VARIABLE($messages) = T_STRING ( ) ; T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . ( T_ISSET ( T_VARIABLE($messages) [ ] ) ? T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) : T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) . ; T_VARIABLE($task) = ; } T_IF ( T_VARIABLE($task) T_IS_EQUAL ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( , T_VARIABLE($profile) ) ; } T_STRING ( T_VARIABLE($task) ) ; T_STRING ( , T_VARIABLE($task) ) ; T_IF ( T_ISSET ( T_VARIABLE($output) ) ) { T_PRINT T_STRING ( , T_VARIABLE($output) ) ; } } T_FUNCTION(_install_module_batch) ( T_VARIABLE($module) , T_VARIABLE($module_name) , & T_VARIABLE($context) ) { T_STRING ( T_VARIABLE($module) ) ; T_STRING ( T_ARRAY ( T_VARIABLE($module) ) ) ; T_VARIABLE($context) [ ] [ ] = T_VARIABLE($module) ; T_VARIABLE($context) [ ] = . T_VARIABLE($module_name) . ; } T_FUNCTION(_install_profile_batch_finished) ( T_VARIABLE($success) , T_VARIABLE($results) ) { T_STRING ( , ) ; } T_FUNCTION(_install_locale_initial_batch_finished) ( T_VARIABLE($success) , T_VARIABLE($results) ) { T_STRING ( , ) ; } T_FUNCTION(_install_locale_remaining_batch_finished) ( T_VARIABLE($success) , T_VARIABLE($results) ) { T_STRING ( , ) ; } T_FUNCTION(install_reserved_tasks) ( ) { T_RETURN T_ARRAY ( , , , , , , , , ) ; } T_FUNCTION(install_check_requirements) ( T_VARIABLE($profile) , T_VARIABLE($verify) ) { T_IF ( ! T_VARIABLE($verify) ) { T_VARIABLE($writable) = T_STRING ; T_VARIABLE($conf_path) = . T_STRING ( T_STRING , T_STRING ) ; T_VARIABLE($settings_file) = T_VARIABLE($conf_path) . ; T_VARIABLE($file) = T_VARIABLE($conf_path) ; T_IF ( T_STRING ( T_VARIABLE($conf_path) , T_STRING , ) ) { T_IF ( T_STRING ( T_VARIABLE($settings_file) , T_STRING ) ) { T_VARIABLE($writable) = T_STRING ( T_VARIABLE($settings_file) , T_STRING | T_STRING ) ; T_VARIABLE($file) = T_VARIABLE($settings_file) ; } T_ELSE { T_VARIABLE($writable) = T_STRING ( T_VARIABLE($conf_path) , T_STRING | T_STRING , ) ; } } T_IF ( ! T_VARIABLE($writable) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($file) , T_DOUBLE_ARROW ) ) , ) ; } } T_VARIABLE($requirements) = T_STRING ( T_VARIABLE($profile) ) ; T_VARIABLE($severity) = T_STRING ( T_VARIABLE($requirements) ) ; T_IF ( T_VARIABLE($severity) T_IS_EQUAL T_STRING ) { T_FOREACH ( T_VARIABLE($requirements) T_AS T_VARIABLE($requirement) ) { T_IF ( T_ISSET ( T_VARIABLE($requirement) [ ] ) T_BOOLEAN_AND T_VARIABLE($requirement) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($message) = T_VARIABLE($requirement) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($requirement) [ ] ) T_BOOLEAN_AND T_VARIABLE($requirement) [ ] ) { T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($requirement) [ ] , T_DOUBLE_ARROW T_VARIABLE($requirement) [ ] ) ) . ; } T_STRING ( T_VARIABLE($message) , ) ; } } } T_IF ( T_VARIABLE($severity) T_IS_EQUAL T_STRING ) { T_FOREACH ( T_VARIABLE($requirements) T_AS T_VARIABLE($requirement) ) { T_IF ( T_ISSET ( T_VARIABLE($requirement) [ ] ) T_BOOLEAN_AND T_VARIABLE($requirement) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($message) = T_VARIABLE($requirement) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($requirement) [ ] ) T_BOOLEAN_AND T_VARIABLE($requirement) [ ] ) { T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($requirement) [ ] , T_DOUBLE_ARROW T_VARIABLE($requirement) [ ] ) ) . ; } T_STRING ( T_VARIABLE($message) , ) ; } } } } T_FUNCTION(install_task_list) ( T_VARIABLE($active) = T_STRING ) { T_VARIABLE($tasks) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($profiles) = T_STRING ( ) ; T_VARIABLE($profile) = T_ISSET ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($profiles) [ T_VARIABLE($_GET) [ ] ] ) ? T_VARIABLE($_GET) [ ] : ; T_VARIABLE($locales) = T_STRING ( T_VARIABLE($profile) ) ; T_IF ( T_STRING ( T_VARIABLE($profiles) ) T_IS_EQUAL T_LNUMBER ) { T_UNSET ( T_VARIABLE($tasks) [ ] ) ; T_VARIABLE($tasks) [ ] = T_STRING ( ) ; } T_IF ( T_VARIABLE($profile) ) { T_VARIABLE($function) = T_VARIABLE($profile) . ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($result) = T_VARIABLE($function) ( ) ; T_IF ( T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($tasks) T_PLUS_EQUAL T_VARIABLE($result) ; } } } T_IF ( T_STRING ( T_VARIABLE($locales) ) < T_LNUMBER T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_OR T_VARIABLE($_GET) [ ] T_IS_EQUAL ) { T_UNSET ( T_VARIABLE($tasks) [ ] ) ; } T_ELSE { T_VARIABLE($tasks) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ; } T_VARIABLE($tasks) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_STRING ( T_VARIABLE($active) , T_ARRAY ( , ) ) ) { T_VARIABLE($active) = T_STRING ; } T_STRING ( , T_STRING ( T_VARIABLE($tasks) , T_VARIABLE($active) ) ) ; } T_FUNCTION(install_configure_form) ( & T_VARIABLE($form_state) , T_VARIABLE($url) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( ) . , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_VARIABLE($url) ; T_VARIABLE($form) [ ] = T_STRING ; T_VARIABLE($hook_form_alter) = T_VARIABLE($_GET) [ ] . ; T_IF ( T_STRING ( T_VARIABLE($hook_form_alter) ) ) { T_VARIABLE($hook_form_alter) ( T_VARIABLE($form) , T_ARRAY ( ) , ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(install_configure_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] [ ] ) ) { T_STRING ( T_VARIABLE($form) [ ] [ ] [ ] , T_VARIABLE($error) ) ; } T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] [ ] ) ) { T_STRING ( T_VARIABLE($form) [ ] [ ] [ ] , T_VARIABLE($error) ) ; } T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( T_VARIABLE($form) [ ] [ ] , T_VARIABLE($error) ) ; } } T_FUNCTION(install_configure_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_IF ( T_VARIABLE($form_state) [ ] [ ] [ T_LNUMBER ] ) { T_STRING ( T_ARRAY ( ) ) ; } T_STRING ( , T_STRING ) ; T_VARIABLE($form_state) [ ] = T_VARIABLE($form_state) [ ] ; T_VARIABLE($form_state) [ ] = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($account) = T_STRING ( T_LNUMBER ) ; T_VARIABLE($merge_data) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_STRING ( T_VARIABLE($account) , T_STRING ( T_VARIABLE($form_state) [ ] , T_VARIABLE($merge_data) ) ) ; T_STRING ( T_VARIABLE($form_state) [ ] ) ; T_VARIABLE($form_state) [ ] = T_VARIABLE($form_state) [ ] ; T_UNSET ( T_VARIABLE($form_state) [ ] ) ; T_STRING ( , T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; } T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_STRING ( , T_STRING ( ) ) ; } T_STRING ( ) ;",13,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_icon) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_image) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_description) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($last_checked) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($feed_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($feed_title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($source_url) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_date) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($content) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($categories) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($categories) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($feed_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($feed_title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($feed_age) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($source_url) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($summary_list) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($source_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($pager) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_FUNCTION(aggregator_admin_overview) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(aggregator_view) ( ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($feed) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , , ) , ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ? T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ) ) : T_STRING ( ) ) , ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ? T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING + T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING - T_STRING ( ) ) ) ) : T_STRING ( ) ) , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($category) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , , ) , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(aggregator_form_feed) ( & T_VARIABLE($form_state) , T_VARIABLE($edit) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ) { T_VARIABLE($period) = T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) , ) ; T_IF ( T_VARIABLE($edit) [ ] T_IS_EQUAL ) { T_VARIABLE($edit) [ ] = T_LNUMBER ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_VARIABLE($period) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_VARIABLE($options) = T_ARRAY ( ) ; T_VARIABLE($values) = T_ARRAY ( ) ; T_VARIABLE($categories) = T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_WHILE ( T_VARIABLE($category) = T_STRING ( T_VARIABLE($categories) ) ) { T_VARIABLE($options) [ T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) T_VARIABLE($values) [ ] = T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($options) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($values) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_VARIABLE($edit) [ ] ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(aggregator_form_feed_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_IF ( ! T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_STRING ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; } T_WHILE ( T_VARIABLE($feed) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($form_state) [ ] [ ] ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_IF ( T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($form_state) [ ] [ ] ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } } } } T_FUNCTION(aggregator_form_feed_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_VARIABLE($title) = T_VARIABLE($form_state) [ ] [ ] ; T_UNSET ( T_VARIABLE($form_state) [ ] [ ] ) ; } T_STRING ( T_VARIABLE($form_state) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_IF ( T_STRING ( T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_ELSE { T_VARIABLE($form_state) [ ] = . T_VARIABLE($form_state) [ ] [ ] ; T_RETURN ; } } T_ELSE { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($title) ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($title) ) ) ) ; T_IF ( T_STRING ( T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_ELSE { T_VARIABLE($form_state) [ ] = ; T_RETURN ; } } } T_ELSE { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } } T_FUNCTION(aggregator_admin_remove_feed) ( T_VARIABLE($form_state) , T_VARIABLE($feed) ) { T_RETURN T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($feed) , ) , ) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) [ ] ) ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(aggregator_admin_remove_feed_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($form_state) [ ] = ; } T_FUNCTION(aggregator_admin_refresh_feed) ( T_VARIABLE($feed) ) { T_STRING ( T_VARIABLE($feed) ) ; T_STRING ( ) ; } T_FUNCTION(aggregator_admin_settings) ( ) { T_VARIABLE($items) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) + T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) , ) ; T_VARIABLE($period) = T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($items) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($period) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(aggregator_form_category) ( & T_VARIABLE($form_state) , T_VARIABLE($edit) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_VARIABLE($edit) [ ] ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(aggregator_form_category_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($category) = T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ) ; } T_ELSE { T_VARIABLE($category) = T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) ; } T_IF ( T_VARIABLE($category) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } } } T_FUNCTION(aggregator_form_category_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_VARIABLE($title) = T_VARIABLE($form_state) [ ] [ ] ; T_UNSET ( T_VARIABLE($form_state) [ ] [ ] ) ; } T_STRING ( T_VARIABLE($form_state) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_IF ( T_STRING ( T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_ELSE { T_VARIABLE($form_state) [ ] = . T_VARIABLE($form_state) [ ] [ ] ; T_RETURN ; } } T_ELSE { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($title) ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($title) ) ) ) ; T_IF ( T_STRING ( T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_ELSE { T_VARIABLE($form_state) [ ] = ; T_RETURN ; } } } T_ELSE { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } }",11,1
"T_OPEN_TAG T_FUNCTION(aggregator_install) ( ) { T_STRING ( ) ; } T_FUNCTION(aggregator_uninstall) ( ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(aggregator_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_RETURN T_VARIABLE($schema) ; }",3,0
"T_OPEN_TAG T_FUNCTION(aggregator_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; } } T_FUNCTION(aggregator_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , ) ; } T_FUNCTION(aggregator_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(_aggregator_category_title) ( T_VARIABLE($category) ) { T_RETURN T_VARIABLE($category) [ ] ; } T_FUNCTION(aggregator_init) ( ) { T_STRING ( T_STRING ( , ) . ) ; } T_FUNCTION(_aggregator_has_categories) ( ) { T_RETURN T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_STRING ( ) ) ; } T_FUNCTION(aggregator_perm) ( ) { T_RETURN T_ARRAY ( , ) ; } T_FUNCTION(aggregator_cron) ( ) { T_VARIABLE($result) = T_STRING ( , T_STRING ( ) ) ; T_WHILE ( T_VARIABLE($feed) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($feed) ) ; } } T_FUNCTION(aggregator_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_IF ( T_STRING ( ) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($category) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($block) [ . T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ] [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($feed) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($block) [ . T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ] [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_LIST ( T_VARIABLE($type) , T_VARIABLE($id) ) = T_STRING ( , T_VARIABLE($delta) ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($value) = T_STRING ( T_STRING ( , T_VARIABLE($id) ) ) ; } T_ELSE { T_VARIABLE($value) = T_STRING ( T_STRING ( , T_VARIABLE($id) ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($value) , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ) ; T_RETURN T_VARIABLE($form) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_LIST ( T_VARIABLE($type) , T_VARIABLE($id) ) = T_STRING ( , T_VARIABLE($delta) ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($value) = T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($id) ) ; } T_ELSE { T_VARIABLE($value) = T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($id) ) ; } } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_LIST ( T_VARIABLE($type) , T_VARIABLE($id) ) = T_STRING ( , T_VARIABLE($delta) ) ; T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_IF ( T_VARIABLE($feed) = T_STRING ( T_STRING ( , T_VARIABLE($id) ) ) ) { T_VARIABLE($block) [ ] = T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($read_more) = T_STRING ( , T_STRING ( . T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( ) ) ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($category) = T_STRING ( T_STRING ( , T_VARIABLE($id) ) ) ) { T_VARIABLE($block) [ ] = T_STRING ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($read_more) = T_STRING ( , T_STRING ( . T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( ) ) ; } T_BREAK ; } T_VARIABLE($items) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($items) [ ] = T_STRING ( , T_VARIABLE($item) ) ; } T_IF ( T_STRING ( T_VARIABLE($items) ) > T_LNUMBER ) { T_VARIABLE($block) [ ] = T_STRING ( , T_VARIABLE($items) ) . T_VARIABLE($read_more) ; } } T_IF ( T_ISSET ( T_VARIABLE($block) ) ) { T_RETURN T_VARIABLE($block) ; } } } T_FUNCTION(aggregator_save_category) ( T_VARIABLE($edit) ) { T_VARIABLE($link_path) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($link_path) T_CONCAT_EQUAL T_VARIABLE($edit) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] ) ; T_VARIABLE($op) = ; } T_ELSE { T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_VARIABLE($edit) [ ] = ; T_VARIABLE($op) = ; } } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] ) ; T_VARIABLE($link_path) T_CONCAT_EQUAL T_STRING ( , ) ; T_VARIABLE($op) = ; } T_IF ( T_ISSET ( T_VARIABLE($op) ) ) { T_STRING ( , T_VARIABLE($op) , T_VARIABLE($link_path) , T_VARIABLE($edit) [ ] ) ; } } T_FUNCTION(aggregator_save_feed) ( T_VARIABLE($edit) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_VARIABLE($edit) [ ] ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] ) ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($items) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($items) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($items) ) ) { T_STRING ( . T_STRING ( , T_VARIABLE($items) ) ) ; } T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_STRING ( , T_VARIABLE($edit) [ ] ) ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] ) ; T_VARIABLE($edit) [ ] = T_STRING ( , ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_FOREACH ( T_VARIABLE($edit) [ ] T_AS T_VARIABLE($cid) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_VARIABLE($value) ) { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($cid) ) ; } } } } } T_FUNCTION(aggregator_remove) ( T_VARIABLE($feed) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($feed) [ ] ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($items) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ; } T_IF ( ! T_EMPTY ( T_VARIABLE($items) ) ) { T_STRING ( . T_STRING ( , T_VARIABLE($items) ) ) ; } T_STRING ( , T_VARIABLE($feed) [ ] ) ; T_STRING ( , T_VARIABLE($feed) [ ] ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) [ ] ) ) ) ; } T_FUNCTION(aggregator_element_start) ( T_VARIABLE($parser) , T_VARIABLE($name) , T_VARIABLE($attributes) ) { T_GLOBAL T_VARIABLE($item) , T_VARIABLE($element) , T_VARIABLE($tag) , T_VARIABLE($items) , T_VARIABLE($channel) ; T_SWITCH ( T_VARIABLE($name) ) { T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($element) = T_VARIABLE($name) ; T_BREAK ; T_CASE : T_IF ( T_VARIABLE($element) T_IS_NOT_EQUAL ) { T_VARIABLE($element) = T_VARIABLE($name) ; } T_CASE : T_IF ( ! T_EMPTY ( T_VARIABLE($attributes) [ ] ) T_BOOLEAN_AND T_VARIABLE($attributes) [ ] T_IS_EQUAL ) { T_IF ( T_VARIABLE($element) T_IS_EQUAL ) { T_VARIABLE($items) [ T_VARIABLE($item) ] [ ] = T_VARIABLE($attributes) [ ] ; } T_ELSE { T_VARIABLE($channel) [ ] = T_VARIABLE($attributes) [ ] ; } } T_BREAK ; T_CASE : T_VARIABLE($element) = T_VARIABLE($name) ; T_VARIABLE($item) T_PLUS_EQUAL T_LNUMBER ; T_BREAK ; T_CASE : T_VARIABLE($element) = ; T_VARIABLE($item) T_PLUS_EQUAL T_LNUMBER ; T_BREAK ; } T_VARIABLE($tag) = T_VARIABLE($name) ; } T_FUNCTION(aggregator_element_end) ( T_VARIABLE($parser) , T_VARIABLE($name) ) { T_GLOBAL T_VARIABLE($element) ; T_SWITCH ( T_VARIABLE($name) ) { T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($element) = ; T_BREAK ; T_CASE : T_IF ( T_VARIABLE($element) T_IS_EQUAL ) { T_VARIABLE($element) = ; } } } T_FUNCTION(aggregator_element_data) ( T_VARIABLE($parser) , T_VARIABLE($data) ) { T_GLOBAL T_VARIABLE($channel) , T_VARIABLE($element) , T_VARIABLE($items) , T_VARIABLE($item) , T_VARIABLE($image) , T_VARIABLE($tag) ; T_VARIABLE($items) T_PLUS_EQUAL T_ARRAY ( T_VARIABLE($item) T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_SWITCH ( T_VARIABLE($element) ) { T_CASE : T_VARIABLE($items) [ T_VARIABLE($item) ] T_PLUS_EQUAL T_ARRAY ( T_VARIABLE($tag) T_DOUBLE_ARROW ) ; T_VARIABLE($items) [ T_VARIABLE($item) ] [ T_VARIABLE($tag) ] T_CONCAT_EQUAL T_VARIABLE($data) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($image) T_PLUS_EQUAL T_ARRAY ( T_VARIABLE($tag) T_DOUBLE_ARROW ) ; T_VARIABLE($image) [ T_VARIABLE($tag) ] T_CONCAT_EQUAL T_VARIABLE($data) ; T_BREAK ; T_CASE : T_IF ( T_VARIABLE($data) ) { T_VARIABLE($items) [ T_VARIABLE($item) ] T_PLUS_EQUAL T_ARRAY ( T_VARIABLE($tag) T_DOUBLE_ARROW ) ; T_VARIABLE($items) [ T_VARIABLE($item) ] [ T_VARIABLE($tag) ] T_CONCAT_EQUAL T_VARIABLE($data) ; } T_BREAK ; T_CASE : T_VARIABLE($items) [ T_VARIABLE($item) ] T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($items) [ T_VARIABLE($item) ] [ ] T_CONCAT_EQUAL T_VARIABLE($data) ; T_BREAK ; T_CASE : T_VARIABLE($items) [ T_VARIABLE($item) ] T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($items) [ T_VARIABLE($item) ] [ ] T_CONCAT_EQUAL T_VARIABLE($data) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($channel) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($channel) [ ] T_CONCAT_EQUAL T_VARIABLE($data) ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_BREAK ; T_DEFAULT : T_VARIABLE($channel) T_PLUS_EQUAL T_ARRAY ( T_VARIABLE($tag) T_DOUBLE_ARROW ) ; T_VARIABLE($channel) [ T_VARIABLE($tag) ] T_CONCAT_EQUAL T_VARIABLE($data) ; } } T_FUNCTION(aggregator_refresh) ( T_VARIABLE($feed) ) { T_GLOBAL T_VARIABLE($channel) , T_VARIABLE($image) ; T_VARIABLE($headers) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($feed) [ ] ) { T_VARIABLE($headers) [ ] = T_VARIABLE($feed) [ ] ; } T_IF ( T_VARIABLE($feed) [ ] ) { T_VARIABLE($headers) [ ] = T_STRING ( , T_VARIABLE($feed) [ ] ) . ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($feed) [ ] , T_VARIABLE($headers) ) ; T_SWITCH ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) { T_CASE T_LNUMBER : T_STRING ( , T_STRING ( ) , T_VARIABLE($feed) [ ] ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) [ ] ) ) ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($feed) [ ] = T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) [ ] , T_DOUBLE_ARROW T_VARIABLE($feed) [ ] ) ) ; T_CASE T_LNUMBER : T_CASE T_LNUMBER : T_CASE T_LNUMBER : T_IF ( T_STRING ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($feed) ) ) { T_VARIABLE($modified) = T_EMPTY ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ ] ) ? T_LNUMBER : T_STRING ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_FOREACH ( T_VARIABLE($channel) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($channel) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($value) ) ; } T_FOREACH ( T_VARIABLE($image) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($image) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($value) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($image) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($image) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($image) [ ] ) ) { T_VARIABLE($image) = . T_STRING ( T_VARIABLE($image) [ ] ) . . T_STRING ( T_VARIABLE($image) [ ] ) . . T_STRING ( T_VARIABLE($image) [ ] ) . ; } T_ELSE { T_VARIABLE($image) = T_STRING ; } T_VARIABLE($etag) = T_EMPTY ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ ] ) ? : T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ ] ; T_STRING ( , T_VARIABLE($feed) [ ] , T_STRING ( ) , T_VARIABLE($channel) [ ] , T_VARIABLE($channel) [ ] , T_VARIABLE($image) , T_VARIABLE($etag) , T_VARIABLE($modified) , T_VARIABLE($feed) [ ] ) ; T_STRING ( ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) [ ] ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) [ ] ) ) ) ; T_BREAK ; } T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_DEFAULT : T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) [ ] , T_DOUBLE_ARROW T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) , T_STRING ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) [ ] , T_DOUBLE_ARROW T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_STRING ( , ) ; } } T_FUNCTION(aggregator_parse_w3cdtf) ( T_VARIABLE($date_str) ) { T_IF ( T_STRING ( , T_VARIABLE($date_str) , T_VARIABLE($match) ) ) { T_LIST ( T_VARIABLE($year) , T_VARIABLE($month) , T_VARIABLE($day) , T_VARIABLE($hours) , T_VARIABLE($minutes) , T_VARIABLE($seconds) ) = T_ARRAY ( T_VARIABLE($match) [ T_LNUMBER ] , T_VARIABLE($match) [ T_LNUMBER ] , T_VARIABLE($match) [ T_LNUMBER ] , T_VARIABLE($match) [ T_LNUMBER ] , T_VARIABLE($match) [ T_LNUMBER ] , T_VARIABLE($match) [ T_LNUMBER ] ) ; T_VARIABLE($epoch) = T_STRING ( T_VARIABLE($hours) , T_VARIABLE($minutes) , T_VARIABLE($seconds) , T_VARIABLE($month) , T_VARIABLE($day) , T_VARIABLE($year) ) ; T_IF ( T_VARIABLE($match) [ T_LNUMBER ] T_IS_NOT_EQUAL ) { T_LIST ( T_VARIABLE($tz_mod) , T_VARIABLE($tz_hour) , T_VARIABLE($tz_min) ) = T_ARRAY ( T_VARIABLE($match) [ T_LNUMBER ] , T_VARIABLE($match) [ T_LNUMBER ] , T_VARIABLE($match) [ T_LNUMBER ] ) ; T_IF ( ! T_VARIABLE($tz_hour) ) { T_VARIABLE($tz_hour) = T_LNUMBER ; } T_IF ( ! T_VARIABLE($tz_min) ) { T_VARIABLE($tz_min) = T_LNUMBER ; } T_VARIABLE($offset_secs) = ( ( T_VARIABLE($tz_hour) * T_LNUMBER ) + T_VARIABLE($tz_min) ) * T_LNUMBER ; T_IF ( T_VARIABLE($tz_mod) T_IS_EQUAL ) { T_VARIABLE($offset_secs) T_MUL_EQUAL - T_LNUMBER ; } T_VARIABLE($epoch) T_PLUS_EQUAL T_VARIABLE($offset_secs) ; } T_RETURN T_VARIABLE($epoch) ; } T_ELSE { T_RETURN T_STRING ; } } T_FUNCTION(aggregator_parse_feed) ( & T_VARIABLE($data) , T_VARIABLE($feed) ) { T_GLOBAL T_VARIABLE($items) , T_VARIABLE($image) , T_VARIABLE($channel) ; T_UNSET ( T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] , T_VARIABLE($GLOBALS) [ ] ) ; T_VARIABLE($items) = T_ARRAY ( ) ; T_VARIABLE($image) = T_ARRAY ( ) ; T_VARIABLE($channel) = T_ARRAY ( ) ; T_VARIABLE($xml_parser) = T_STRING ( T_VARIABLE($data) ) ; T_STRING ( T_VARIABLE($xml_parser) , , ) ; T_STRING ( T_VARIABLE($xml_parser) , ) ; T_IF ( ! T_STRING ( T_VARIABLE($xml_parser) , T_VARIABLE($data) , T_LNUMBER ) ) { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) [ ] , T_DOUBLE_ARROW T_STRING ( T_STRING ( T_VARIABLE($xml_parser) ) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($xml_parser) ) ) , T_STRING ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) [ ] , T_DOUBLE_ARROW T_STRING ( T_STRING ( T_VARIABLE($xml_parser) ) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($xml_parser) ) ) ) , ) ; T_RETURN T_LNUMBER ; } T_STRING ( T_VARIABLE($xml_parser) ) ; T_VARIABLE($items) = T_STRING ( T_VARIABLE($items) ) ; T_VARIABLE($title) = T_VARIABLE($link) = T_VARIABLE($author) = T_VARIABLE($description) = T_VARIABLE($guid) = T_STRING ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($item) ) { T_UNSET ( T_VARIABLE($title) , T_VARIABLE($link) , T_VARIABLE($author) , T_VARIABLE($description) , T_VARIABLE($guid) ) ; T_FOREACH ( T_VARIABLE($item) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($item) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($value) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($title) = T_VARIABLE($item) [ ] ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($title) = T_STRING ( , , T_STRING ( T_VARIABLE($item) [ ] , T_LNUMBER ) ) ; } T_ELSE { T_VARIABLE($title) = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($link) = T_VARIABLE($item) [ ] ; } T_ELSE { T_VARIABLE($link) = T_VARIABLE($feed) [ ] ; } T_VARIABLE($guid) = T_ISSET ( T_VARIABLE($item) [ ] ) ? T_VARIABLE($item) [ ] : ; T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; } T_VARIABLE($date) = ; T_FOREACH ( T_ARRAY ( , , , , , , , , , ) T_AS T_VARIABLE($key) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($date) = T_VARIABLE($item) [ T_VARIABLE($key) ] ; T_BREAK ; } } T_VARIABLE($timestamp) = T_STRING ( T_VARIABLE($date) ) ; T_IF ( T_VARIABLE($timestamp) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($timestamp) = T_STRING ( T_VARIABLE($date) ) ; T_IF ( ! T_VARIABLE($timestamp) ) { T_VARIABLE($timestamp) = T_STRING ( ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($guid) ) ) { T_VARIABLE($entry) = T_STRING ( T_STRING ( , T_VARIABLE($feed) [ ] , T_VARIABLE($guid) ) ) ; } T_ELSE T_IF ( T_VARIABLE($link) T_BOOLEAN_AND T_VARIABLE($link) T_IS_NOT_EQUAL T_VARIABLE($feed) [ ] T_BOOLEAN_AND T_VARIABLE($link) T_IS_NOT_EQUAL T_VARIABLE($feed) [ ] ) { T_VARIABLE($entry) = T_STRING ( T_STRING ( , T_VARIABLE($feed) [ ] , T_VARIABLE($link) ) ) ; } T_ELSE { T_VARIABLE($entry) = T_STRING ( T_STRING ( , T_VARIABLE($feed) [ ] , T_VARIABLE($title) ) ) ; } T_VARIABLE($item) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW ( T_ISSET ( T_VARIABLE($entry) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($entry) T_OBJECT_OPERATOR T_STRING : ) , T_DOUBLE_ARROW T_VARIABLE($feed) [ ] , T_DOUBLE_ARROW T_VARIABLE($timestamp) , T_DOUBLE_ARROW T_VARIABLE($title) , T_DOUBLE_ARROW T_VARIABLE($link) , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_VARIABLE($guid) ) ) ; } T_VARIABLE($age) = T_STRING ( ) - T_STRING ( , T_LNUMBER ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($feed) [ ] , T_VARIABLE($age) ) ; T_VARIABLE($items) = T_ARRAY ( ) ; T_VARIABLE($num_rows) = T_STRING ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($items) [ ] = T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($num_rows) = T_STRING ; } T_IF ( T_VARIABLE($num_rows) ) { T_STRING ( . T_STRING ( , T_VARIABLE($items) ) . ) ; T_STRING ( , T_VARIABLE($feed) [ ] , T_VARIABLE($age) ) ; } T_RETURN T_LNUMBER ; } T_FUNCTION(aggregator_save_item) ( T_VARIABLE($edit) ) { T_IF ( T_VARIABLE($edit) [ ] T_BOOLEAN_AND T_VARIABLE($edit) [ ] ) { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] ) ; } T_ELSE T_IF ( T_VARIABLE($edit) [ ] ) { T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_STRING ( , T_VARIABLE($edit) [ ] ) ; } T_ELSE T_IF ( T_VARIABLE($edit) [ ] T_BOOLEAN_AND T_VARIABLE($edit) [ ] ) { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] ) ; T_VARIABLE($edit) [ ] = T_STRING ( , ) ; T_VARIABLE($categories) = T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_WHILE ( T_VARIABLE($category) = T_STRING ( T_VARIABLE($categories) ) ) { T_STRING ( , T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($edit) [ ] ) ; } } } T_FUNCTION(aggregator_feed_load) ( T_VARIABLE($fid) ) { T_STATIC T_VARIABLE($feeds) ; T_IF ( ! T_ISSET ( T_VARIABLE($feeds) [ T_VARIABLE($fid) ] ) ) { T_VARIABLE($feeds) [ T_VARIABLE($fid) ] = T_STRING ( T_STRING ( , T_VARIABLE($fid) ) ) ; } T_RETURN T_VARIABLE($feeds) [ T_VARIABLE($fid) ] ; } T_FUNCTION(aggregator_category_load) ( T_VARIABLE($cid) ) { T_STATIC T_VARIABLE($categories) ; T_IF ( ! T_ISSET ( T_VARIABLE($categories) [ T_VARIABLE($cid) ] ) ) { T_VARIABLE($categories) [ T_VARIABLE($cid) ] = T_STRING ( T_STRING ( , T_VARIABLE($cid) ) ) ; } T_RETURN T_VARIABLE($categories) [ T_VARIABLE($cid) ] ; } T_FUNCTION(theme_aggregator_block_item) ( T_VARIABLE($item) , T_VARIABLE($feed) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($output) = ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) ) { T_IF ( T_VARIABLE($image) = T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($image) , , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ) ) . ; } } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) . ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(aggregator_filter_xss) ( T_VARIABLE($value) ) { T_RETURN T_STRING ( T_VARIABLE($value) , T_STRING ( , T_STRING ( , ) , - T_LNUMBER , T_STRING ) ) ; } T_FUNCTION(_aggregator_items) ( T_VARIABLE($count) ) { T_RETURN T_STRING ( T_VARIABLE($count) , , ) ; }",13,1
"T_OPEN_TAG T_FUNCTION(aggregator_page_last) ( ) { T_STRING ( T_STRING ( ) , T_STRING ( , ) . . T_STRING ( ) ) ; T_VARIABLE($items) = T_STRING ( ) ; T_RETURN T_STRING ( T_VARIABLE($items) , T_STRING ( T_LNUMBER ) ) ; } T_FUNCTION(aggregator_page_source) ( T_VARIABLE($arg1) , T_VARIABLE($arg2) = T_STRING ) { T_VARIABLE($feed) = T_STRING ( T_VARIABLE($arg2) ) ? T_VARIABLE($arg2) : T_VARIABLE($arg1) ; T_VARIABLE($feed) = T_OBJECT_CAST T_VARIABLE($feed) ; T_STRING ( T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($feed_source) = T_STRING ( , T_VARIABLE($feed) ) ; T_VARIABLE($items) = T_STRING ( . T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING . ) ; T_RETURN T_STRING ( T_VARIABLE($items) , T_STRING ( T_LNUMBER ) , T_VARIABLE($feed_source) ) ; } T_FUNCTION(aggregator_page_category) ( T_VARIABLE($arg1) , T_VARIABLE($arg2) = T_STRING ) { T_STRING ( T_STRING ( T_STRING ( ) , T_ARRAY ( T_STRING ( T_STRING ( ) , ) ) ) ) ; T_VARIABLE($category) = T_STRING ( T_VARIABLE($arg2) ) ? T_VARIABLE($arg2) : T_VARIABLE($arg1) ; T_STRING ( T_STRING ( . T_VARIABLE($category) [ ] ) , T_STRING ( , ) . . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($category) [ ] ) ) ) ; T_VARIABLE($items) = T_STRING ( . T_VARIABLE($category) [ ] . ) ; T_RETURN T_STRING ( T_VARIABLE($items) , T_STRING ( T_LNUMBER ) ) ; } T_FUNCTION(aggregator_feed_items_load) ( T_VARIABLE($sql) ) { T_VARIABLE($items) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($sql) ) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($result_category) = T_STRING ( , T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($item_categories) = T_STRING ( T_VARIABLE($result_category) ) ) { T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($item_categories) ; } T_VARIABLE($items) [ T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($item) ; } } T_RETURN T_VARIABLE($items) ; } T_FUNCTION(_aggregator_page_list) ( T_VARIABLE($items) , T_VARIABLE($op) , T_VARIABLE($feed_source) = ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND ( T_VARIABLE($op) T_IS_EQUAL ) ) { T_VARIABLE($output) = T_STRING ( T_VARIABLE($items) , T_VARIABLE($feed_source) ) ; } T_ELSE { T_VARIABLE($output) = T_VARIABLE($feed_source) ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($item) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($item) ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($output) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(aggregator_categorize_items) ( T_VARIABLE($items) , T_VARIABLE($feed_source) = ) { T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] = ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed_source) ) ; T_VARIABLE($categories) = T_ARRAY ( ) ; T_VARIABLE($done) = T_STRING ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($item) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($item) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( ) ; T_VARIABLE($categories_result) = T_STRING ( , T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($selected) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($category) = T_STRING ( T_VARIABLE($categories_result) ) ) { T_IF ( ! T_VARIABLE($done) ) { T_VARIABLE($categories) [ T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($selected) [ ] = T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ; } } T_VARIABLE($done) = T_STRING ; T_VARIABLE($form) [ ] [ T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_VARIABLE($selected) , T_DOUBLE_ARROW T_VARIABLE($categories) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(aggregator_categorize_items_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( T_VARIABLE($form) , T_STRING ( ) ) ; } } T_FUNCTION(aggregator_categorize_items_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($iid) T_DOUBLE_ARROW T_VARIABLE($selection) ) { T_STRING ( , T_VARIABLE($iid) ) ; T_FOREACH ( T_VARIABLE($selection) T_AS T_VARIABLE($cid) ) { T_IF ( T_VARIABLE($cid) ) { T_STRING ( , T_VARIABLE($cid) , T_VARIABLE($iid) ) ; } } } } T_STRING ( T_STRING ( ) ) ; } T_FUNCTION(theme_aggregator_categorize_items) ( T_VARIABLE($form) ) { T_VARIABLE($output) = T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($form) [ ] ) { T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_IF ( T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_DOUBLE_ARROW ) , ) ; } } } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_ARRAY ( , T_STRING ( ) ) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_STRING ( , T_VARIABLE($output) ) ; } T_FUNCTION(template_preprocess_aggregator_wrapper) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; } T_FUNCTION(template_preprocess_aggregator_item) ( & T_VARIABLE($variables) ) { T_VARIABLE($item) = T_VARIABLE($variables) [ ] ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = ; T_VARIABLE($variables) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($variables) [ ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_STRING ( , T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) T_IS_EQUAL T_STRING ( ) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_ELSE { T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING , , T_STRING ( , ) ) ; } T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($category) ) { T_VARIABLE($variables) [ ] [ T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(aggregator_page_sources) ( ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($output) = ; T_WHILE ( T_VARIABLE($feed) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($summary_items) = T_ARRAY ( ) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($items) = T_STRING ( , T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_STRING ( , T_LNUMBER ) ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($items) ) ) { T_VARIABLE($summary_items) [ ] = T_STRING ( , T_VARIABLE($item) ) ; } } T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING = T_STRING ( . T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($summary_items) , T_VARIABLE($feed) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN T_STRING ( , T_VARIABLE($output) ) ; } T_FUNCTION(aggregator_page_categories) ( ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($output) = ; T_WHILE ( T_VARIABLE($category) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($summary_items) = T_ARRAY ( ) ; T_VARIABLE($items) = T_STRING ( , T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_STRING ( , T_LNUMBER ) ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($items) ) ) { T_VARIABLE($summary_items) [ ] = T_STRING ( , T_VARIABLE($item) ) ; } } T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING = T_STRING ( . T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($summary_items) , T_VARIABLE($category) ) ; } T_RETURN T_STRING ( , T_VARIABLE($output) ) ; } T_FUNCTION(aggregator_page_rss) ( ) { T_VARIABLE($result) = T_STRING ; T_IF ( T_STRING ( T_LNUMBER ) ) { T_VARIABLE($category) = T_STRING ( T_STRING ( , T_STRING ( T_LNUMBER ) ) ) ; T_VARIABLE($sql) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_STRING ( , T_LNUMBER ) ) ; } T_ELSE { T_VARIABLE($category) = T_STRING ; T_VARIABLE($sql) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_STRING ( , T_LNUMBER ) ) ; } T_VARIABLE($feeds) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($feeds) [ ] = T_VARIABLE($item) ; } T_RETURN T_STRING ( , T_VARIABLE($feeds) , T_VARIABLE($category) ) ; } T_FUNCTION(theme_aggregator_page_rss) ( T_VARIABLE($feeds) , T_VARIABLE($category) = T_STRING ) { T_STRING ( ) ; T_VARIABLE($items) = ; T_VARIABLE($feed_length) = T_STRING ( , ) ; T_FOREACH ( T_VARIABLE($feeds) T_AS T_VARIABLE($feed) ) { T_SWITCH ( T_VARIABLE($feed_length) ) { T_CASE : T_VARIABLE($teaser) = T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($teaser) T_IS_NOT_EQUAL T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($teaser) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( ) . ; } T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($teaser) ; T_BREAK ; T_CASE : T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING = ; T_BREAK ; } T_VARIABLE($items) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_VARIABLE($site_name) = T_STRING ( , ) ; T_VARIABLE($url) = T_STRING ( ( T_ISSET ( T_VARIABLE($category) ) ? . T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING : ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_VARIABLE($description) = T_ISSET ( T_VARIABLE($category) ) ? T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($site_name) , T_DOUBLE_ARROW T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ) : T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($site_name) ) ) ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($site_name) ) ) , T_VARIABLE($url) , T_VARIABLE($description) , T_VARIABLE($items) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_PRINT T_VARIABLE($output) ; } T_FUNCTION(aggregator_page_opml) ( T_VARIABLE($cid) = T_STRING ) { T_IF ( T_VARIABLE($cid) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($cid) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( ) ; } T_VARIABLE($feeds) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($feeds) [ ] = T_VARIABLE($item) ; } T_RETURN T_STRING ( , T_VARIABLE($feeds) ) ; } T_FUNCTION(theme_aggregator_page_opml) ( T_VARIABLE($feeds) ) { T_STRING ( ) ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( , ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($feeds) T_AS T_VARIABLE($feed) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_PRINT T_VARIABLE($output) ; } T_FUNCTION(template_preprocess_aggregator_summary_items) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(template_preprocess_aggregator_summary_item) ( & T_VARIABLE($variables) ) { T_VARIABLE($item) = T_VARIABLE($variables) [ ] ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($variables) [ ] = ; T_VARIABLE($variables) [ ] = ; T_IF ( ! T_EMPTY ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(template_preprocess_aggregator_feed_source) ( & T_VARIABLE($variables) ) { T_VARIABLE($feed) = T_VARIABLE($variables) [ ] ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_STRING ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ) ; T_IF ( T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($feed) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_ELSE { T_VARIABLE($variables) [ ] = T_STRING ( ) ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] , ) ; } }",11,0
"T_OPEN_TAG T_CLOSE_TAG T_OPEN_TAG T_STRING ( ) ; T_STRING ( T_STRING ( , ) . ) ; T_FOREACH ( T_VARIABLE($block_regions) T_AS T_VARIABLE($region) T_DOUBLE_ARROW T_VARIABLE($title) ) { T_STRING ( , , , , . T_VARIABLE($region) , T_STRING , T_STRING ) ; T_STRING ( , , , , . T_VARIABLE($region) ) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($throttle) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($row) = T_LNUMBER ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($block_regions) T_AS T_VARIABLE($region) T_DOUBLE_ARROW T_VARIABLE($title) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($region) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($throttle) ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($region) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_EMPTY ( T_VARIABLE($block_listing) [ T_VARIABLE($region) ] ) ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($throttle) ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($block_listing) [ T_VARIABLE($region) ] T_AS T_VARIABLE($delta) T_DOUBLE_ARROW T_VARIABLE($data) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($row) \% T_LNUMBER T_IS_EQUAL T_LNUMBER ? : ; T_CLOSE_TAG T_OPEN_TAG T_PRINT T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ? . T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($throttle) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($row) T_INC ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDFOREACH ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDFOREACH ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($form_submit) ; T_CLOSE_TAG",1,0
"T_OPEN_TAG T_FUNCTION(block_admin_display) ( T_VARIABLE($theme) = T_STRING ) { T_GLOBAL T_VARIABLE($custom_theme) ; T_VARIABLE($custom_theme) = T_ISSET ( T_VARIABLE($theme) ) ? T_VARIABLE($theme) : T_STRING ( , ) ; T_VARIABLE($blocks) = T_STRING ( ) ; T_STRING ( T_VARIABLE($blocks) , ) ; T_RETURN T_STRING ( , T_VARIABLE($blocks) , T_VARIABLE($theme) ) ; } T_FUNCTION(block_admin_display_form) ( & T_VARIABLE($form_state) , T_VARIABLE($blocks) , T_VARIABLE($theme) = T_STRING ) { T_GLOBAL T_VARIABLE($theme_key) , T_VARIABLE($custom_theme) ; T_STRING ( T_STRING ( , ) . , , , T_STRING ) ; T_VARIABLE($custom_theme) = T_ISSET ( T_VARIABLE($theme) ) ? T_VARIABLE($theme) : T_STRING ( , ) ; T_STRING ( ) ; T_VARIABLE($throttle) = T_STRING ( ) ; T_VARIABLE($block_regions) = T_STRING ( T_VARIABLE($theme_key) ) + T_ARRAY ( T_STRING T_DOUBLE_ARROW . T_STRING ( ) . ) ; T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_LNUMBER ) ? T_STRING ( . T_VARIABLE($theme_key) ) : T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_FOREACH ( T_VARIABLE($blocks) T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($block) ) { T_VARIABLE($key) = T_VARIABLE($block) [ ] . . T_VARIABLE($block) [ ] ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($block) [ ] , ) ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($block) [ ] , ) ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($block) [ ] ) ) ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($theme_key) ) ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($block) [ ] , ) ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($block) [ ] , T_DOUBLE_ARROW T_VARIABLE($block_regions) , ) ; T_IF ( T_VARIABLE($throttle) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($block) [ ] ) ? T_VARIABLE($block) [ ] : T_STRING ) ; } T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , . T_VARIABLE($block) [ ] . . T_VARIABLE($block) [ ] ) ) ; T_IF ( T_VARIABLE($block) [ ] T_IS_EQUAL ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , . T_VARIABLE($block) [ ] ) ) ; } } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(block_admin_display_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_FOREACH ( T_VARIABLE($form_state) [ ] T_AS T_VARIABLE($block) ) { T_VARIABLE($block) [ ] = T_VARIABLE($block) [ ] T_IS_NOT_EQUAL T_STRING ; T_VARIABLE($block) [ ] = T_VARIABLE($block) [ ] ? T_VARIABLE($block) [ ] : ; T_STRING ( , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] , T_ISSET ( T_VARIABLE($block) [ ] ) ? T_VARIABLE($block) [ ] : T_LNUMBER , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] ) ; } T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } T_FUNCTION(_block_compare) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_GLOBAL T_VARIABLE($theme_key) ; T_STATIC T_VARIABLE($regions) ; T_IF ( ! T_ISSET ( T_VARIABLE($regions) ) ) { T_VARIABLE($regions) = T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($theme_key) ) ) ) ; T_VARIABLE($regions) [ T_STRING ] = T_STRING ( T_VARIABLE($regions) ) ; } T_VARIABLE($status) = T_VARIABLE($b) [ ] - T_VARIABLE($a) [ ] ; T_IF ( T_VARIABLE($status) ) { T_RETURN T_VARIABLE($status) ; } T_VARIABLE($place) = T_VARIABLE($regions) [ T_VARIABLE($a) [ ] ] - T_VARIABLE($regions) [ T_VARIABLE($b) [ ] ] ; T_IF ( T_VARIABLE($place) ) { T_RETURN T_VARIABLE($place) ; } T_VARIABLE($weight) = T_VARIABLE($a) [ ] - T_VARIABLE($b) [ ] ; T_IF ( T_VARIABLE($weight) ) { T_RETURN T_VARIABLE($weight) ; } T_RETURN T_STRING ( T_VARIABLE($a) [ ] , T_VARIABLE($b) [ ] ) ; } T_FUNCTION(block_admin_configure) ( & T_VARIABLE($form_state) , T_VARIABLE($module) = T_STRING , T_VARIABLE($delta) = T_LNUMBER ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($module) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($delta) ) ; T_VARIABLE($edit) = T_STRING ( T_STRING ( , T_VARIABLE($module) , T_VARIABLE($delta) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($module) T_IS_EQUAL ? T_STRING ( ) : T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_IF ( T_VARIABLE($settings) = T_STRING ( T_VARIABLE($module) , , , T_VARIABLE($delta) ) ) { T_FOREACH ( T_VARIABLE($settings) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($k) ] = T_VARIABLE($v) ; } } T_VARIABLE($info) = T_STRING ( T_VARIABLE($module) , , ) ; T_IF ( T_ISSET ( T_VARIABLE($info) [ T_VARIABLE($delta) ] ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($info) [ T_VARIABLE($delta) ] [ ] ) ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , ) ; T_VARIABLE($default_role_options) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($module) , T_VARIABLE($delta) ) ; T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($default_role_options) [ ] = T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($role_options) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($role_options) [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($default_role_options) , T_DOUBLE_ARROW T_VARIABLE($role_options) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($access) = T_STRING ( ) ; T_IF ( T_VARIABLE($edit) [ ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND ! T_VARIABLE($access) ) { T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; } T_ELSE { T_VARIABLE($options) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($description) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_IF ( T_VARIABLE($access) ) { T_VARIABLE($options) [ ] = T_STRING ( ) ; T_VARIABLE($description) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_VARIABLE($description) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(block_admin_configure_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL ) { T_IF ( T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_OR T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ) ) { T_STRING ( , T_STRING ( ) ) ; } } } T_FUNCTION(block_admin_configure_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) T_AS T_VARIABLE($rid) ) { T_STRING ( , T_VARIABLE($rid) , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; } T_STRING ( T_VARIABLE($form_state) [ ] [ ] , , , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] ) ; T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } } T_FUNCTION(block_add_block_form) ( & T_VARIABLE($form_state) ) { T_RETURN T_STRING ( T_VARIABLE($form_state) , , T_STRING ) ; } T_FUNCTION(block_add_block_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_OR T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) ) { T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(block_add_block_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($delta) = T_STRING ( , ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($theme) ) { T_IF ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_LNUMBER , T_VARIABLE($delta) , T_STRING ) ; } } T_FOREACH ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) T_AS T_VARIABLE($rid) ) { T_STRING ( , T_VARIABLE($rid) , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($delta) ) ; } T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(block_box_delete) ( & T_VARIABLE($form_state) , T_VARIABLE($bid) = T_LNUMBER ) { T_VARIABLE($box) = T_STRING ( T_VARIABLE($bid) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($box) [ ] ? T_VARIABLE($box) [ ] : T_VARIABLE($box) [ ] ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($bid) ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($box) [ ] ) ) , , , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(block_box_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(template_preprocess_block_admin_display_form) ( & T_VARIABLE($variables) ) { T_GLOBAL T_VARIABLE($theme_key) ; T_VARIABLE($block_regions) = T_STRING ( T_VARIABLE($theme_key) ) ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($block_regions) + T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) ) ; T_FOREACH ( T_VARIABLE($block_regions) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_STRING ( T_VARIABLE($key) , . T_VARIABLE($value) . ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($key) ] = T_ARRAY ( ) ; } T_VARIABLE($variables) [ ] [ T_STRING ] = T_ARRAY ( ) ; T_VARIABLE($last_region) = ; T_FOREACH ( T_STRING ( T_VARIABLE($variables) [ ] ) T_AS T_VARIABLE($i) ) { T_VARIABLE($block) = & T_VARIABLE($variables) [ ] [ T_VARIABLE($i) ] ; T_IF ( T_ISSET ( T_VARIABLE($block) [ ] ) ) { T_VARIABLE($region) = T_VARIABLE($block) [ ] [ ] ; T_VARIABLE($variables) [ ] [ T_VARIABLE($i) ] [ ] [ ] [ ] = . T_VARIABLE($region) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($i) ] [ ] [ ] [ ] = . T_VARIABLE($region) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($region) ] [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($block) [ ] [ ] ) ? T_VARIABLE($block) [ ] [ ] : ; T_VARIABLE($variables) [ ] [ T_VARIABLE($region) ] [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($block) [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($block) [ ] [ ] , ) T_IS_NOT_IDENTICAL T_STRING ? T_STRING : T_STRING ; T_VARIABLE($variables) [ ] [ T_VARIABLE($region) ] [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($block) [ ] ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($region) ] [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($block) [ ] ) . T_STRING ( T_VARIABLE($block) [ ] ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($region) ] [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($block) [ ] ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($region) ] [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($variables) [ ] ? T_STRING ( T_VARIABLE($block) [ ] ) : ; T_VARIABLE($variables) [ ] [ T_VARIABLE($region) ] [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($block) [ ] ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($region) ] [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING = ! T_EMPTY ( T_VARIABLE($block) [ ] ) ? T_STRING ( T_VARIABLE($block) [ ] ) : ; T_VARIABLE($variables) [ ] [ T_VARIABLE($region) ] [ T_VARIABLE($i) ] T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($last_region) = T_VARIABLE($region) ; } } T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] ) ; }",10,0
"T_OPEN_TAG T_FUNCTION(block_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , , , ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_STRING ( , ) ; T_VARIABLE($schema) [ ] [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($schema) ; }",3,0
"T_OPEN_TAG T_STRING ( , - T_LNUMBER ) ; T_STRING ( , - T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(block_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($throttle) = T_STRING ( ) ; T_VARIABLE($output) = . T_STRING ( ) . ; T_IF ( T_VARIABLE($throttle) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; } } T_FUNCTION(block_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(block_perm) ( ) { T_RETURN T_ARRAY ( , ) ; } T_FUNCTION(block_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($default) = T_STRING ( , ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($theme) ) { T_VARIABLE($items) [ . T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] ) , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($key) ) , T_DOUBLE_ARROW T_VARIABLE($key) T_IS_EQUAL T_VARIABLE($default) ? T_STRING : T_STRING , T_DOUBLE_ARROW T_VARIABLE($key) T_IS_EQUAL T_VARIABLE($default) ? - T_LNUMBER : T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($theme) ) , ) ; } T_RETURN T_VARIABLE($items) ; } T_FUNCTION(_block_themes_access) ( T_VARIABLE($theme) ) { T_RETURN T_STRING ( ) T_BOOLEAN_AND ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_OR T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ( , ) ) ; } T_FUNCTION(block_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($blocks) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($block) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($blocks) [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($blocks) [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] [ ] = T_STRING ; } T_RETURN T_VARIABLE($blocks) ; T_CASE : T_VARIABLE($box) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_IF ( T_VARIABLE($delta) ) { T_VARIABLE($box) = T_STRING ( T_VARIABLE($delta) ) ; } T_IF ( T_STRING ( T_VARIABLE($box) [ ] ) ) { T_RETURN T_STRING ( T_VARIABLE($box) ) ; } T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($edit) , T_VARIABLE($delta) ) ; T_BREAK ; T_CASE : T_VARIABLE($block) = T_STRING ( T_STRING ( , T_VARIABLE($delta) ) ) ; T_VARIABLE($data) [ ] = T_STRING ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; T_RETURN T_VARIABLE($data) ; } } T_FUNCTION(_block_rehash) ( ) { T_GLOBAL T_VARIABLE($theme_key) ; T_STRING ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($theme_key) ) ; T_VARIABLE($old_blocks) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($old_block) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($old_blocks) [ T_VARIABLE($old_block) [ ] ] [ T_VARIABLE($old_block) [ ] ] = T_VARIABLE($old_block) ; } T_VARIABLE($blocks) = T_ARRAY ( ) ; T_VARIABLE($regions) = T_STRING ( T_VARIABLE($theme_key) ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_VARIABLE($module_blocks) = T_STRING ( T_VARIABLE($module) , , ) ; T_IF ( T_VARIABLE($module_blocks) ) { T_FOREACH ( T_VARIABLE($module_blocks) T_AS T_VARIABLE($delta) T_DOUBLE_ARROW T_VARIABLE($block) ) { T_IF ( T_EMPTY ( T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] ) ) { T_VARIABLE($block) [ ] = T_VARIABLE($module) ; T_VARIABLE($block) [ ] = T_VARIABLE($delta) ; T_VARIABLE($block) [ ] = T_VARIABLE($theme_key) ; T_IF ( ! T_ISSET ( T_VARIABLE($block) [ ] ) ) { T_VARIABLE($block) [ ] = ; } T_STRING ( , T_VARIABLE($block) ) ; T_VARIABLE($block) [ ] = T_VARIABLE($block) [ ] ? T_VARIABLE($block) [ ] : T_STRING ; T_VARIABLE($blocks) [ ] = T_VARIABLE($block) ; } T_ELSE { T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] [ ] = T_VARIABLE($block) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($regions) [ T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] [ ] ] ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] [ ] , T_DOUBLE_ARROW T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] [ ] ) ) , ) ; T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] [ ] = T_LNUMBER ; T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] [ ] = T_STRING ; } T_ELSE { T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] [ ] = T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] [ ] ? T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] [ ] : T_STRING ; } T_VARIABLE($blocks) [ ] = T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] ; T_UNSET ( T_VARIABLE($old_blocks) [ T_VARIABLE($module) ] [ T_VARIABLE($delta) ] ) ; } } } } T_FOREACH ( T_VARIABLE($old_blocks) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($old_module_blocks) ) { T_FOREACH ( T_VARIABLE($old_module_blocks) T_AS T_VARIABLE($delta) T_DOUBLE_ARROW T_VARIABLE($block) ) { T_STRING ( , T_VARIABLE($module) , T_VARIABLE($delta) , T_VARIABLE($theme_key) ) ; } } T_RETURN T_VARIABLE($blocks) ; } T_FUNCTION(block_box_get) ( T_VARIABLE($bid) ) { T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($bid) ) ) ; } T_FUNCTION(block_box_form) ( T_VARIABLE($edit) = T_ARRAY ( ) ) { T_VARIABLE($edit) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = - T_LNUMBER ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($edit) [ ] = T_STRING ; } T_VARIABLE($form) [ ] [ ] = T_STRING ( T_VARIABLE($edit) [ ] , - T_LNUMBER ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(block_box_save) ( T_VARIABLE($edit) , T_VARIABLE($delta) ) { T_IF ( ! T_STRING ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($edit) [ ] = T_STRING ; } T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($delta) ) ; T_RETURN T_STRING ; } T_FUNCTION(block_user) ( T_VARIABLE($type) , T_VARIABLE($edit) , & T_VARIABLE($account) , T_VARIABLE($category) = T_STRING ) { T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_IF ( T_VARIABLE($category) T_IS_EQUAL ) { T_VARIABLE($rids) = T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($result) = T_STRING ( . T_STRING ( T_VARIABLE($rids) ) . , T_VARIABLE($rids) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) ; T_WHILE ( T_VARIABLE($block) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($data) = T_STRING ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING , , ) ; T_IF ( T_VARIABLE($data) [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] [ ] ) { T_VARIABLE($return) = T_STRING ; T_VARIABLE($form) [ ] [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($data) [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] [ ] ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] ) ? T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] : ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($return) ) ) { T_RETURN T_VARIABLE($form) ; } } T_BREAK ; T_CASE : T_IF ( T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($edit) [ ] = T_ARRAY ( ) ; } T_RETURN T_VARIABLE($edit) ; } } T_FUNCTION(block_list) ( T_VARIABLE($region) ) { T_GLOBAL T_VARIABLE($user) , T_VARIABLE($theme_key) ; T_STATIC T_VARIABLE($blocks) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($blocks) ) ) { T_VARIABLE($rids) = T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( . T_STRING ( T_VARIABLE($rids) ) . , , ) , T_STRING ( T_ARRAY ( T_VARIABLE($theme_key) ) , T_VARIABLE($rids) ) ) ; T_WHILE ( T_VARIABLE($block) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($blocks) [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($blocks) [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( ) ; } T_IF ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($enabled) = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] ; } T_ELSE { T_VARIABLE($enabled) = ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) ; } } T_ELSE { T_VARIABLE($enabled) = T_STRING ; } T_IF ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING < T_LNUMBER ) { T_VARIABLE($path) = T_STRING ( T_VARIABLE($_GET) [ ] ) ; T_VARIABLE($page_match) = T_STRING ( T_VARIABLE($path) , T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($path) T_IS_NOT_EQUAL T_VARIABLE($_GET) [ ] ) { T_VARIABLE($page_match) = T_VARIABLE($page_match) T_BOOLEAN_OR T_STRING ( T_VARIABLE($_GET) [ ] , T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($page_match) = ! ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_LOGICAL_XOR T_VARIABLE($page_match) ) ; } T_ELSE { T_VARIABLE($page_match) = T_STRING ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) ; } } T_ELSE { T_VARIABLE($page_match) = T_STRING ; } T_IF ( T_VARIABLE($enabled) T_BOOLEAN_AND T_VARIABLE($page_match) ) { T_IF ( ! ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ( T_STRING ( , ) > T_LNUMBER ) ) ) { T_IF ( ! T_STRING ( T_STRING ( ) ) T_BOOLEAN_AND T_VARIABLE($_SERVER) [ ] T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($cid) = T_STRING ( T_VARIABLE($block) ) ) T_BOOLEAN_AND ( T_VARIABLE($cache) = T_STRING ( T_VARIABLE($cid) , ) ) ) { T_VARIABLE($array) = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($array) = T_STRING ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING , , , T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($cid) ) ) { T_STRING ( T_VARIABLE($cid) , T_VARIABLE($array) , , T_STRING ) ; } } T_IF ( T_ISSET ( T_VARIABLE($array) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($array) ) ) { T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($block) T_OBJECT_OPERATOR T_VARIABLE($k) = T_VARIABLE($v) ; } } } T_IF ( T_ISSET ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ? : T_STRING ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING = ; } T_VARIABLE($blocks) [ T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ] [ T_CURLY_OPEN T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING } T_ENCAPSED_AND_WHITESPACE T_CURLY_OPEN T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING } ] = T_VARIABLE($block) ; } } } } T_IF ( ! T_ISSET ( T_VARIABLE($blocks) [ T_VARIABLE($region) ] ) ) { T_VARIABLE($blocks) [ T_VARIABLE($region) ] = T_ARRAY ( ) ; } T_RETURN T_VARIABLE($blocks) [ T_VARIABLE($region) ] ; } T_FUNCTION(_block_get_cache_id) ( T_VARIABLE($block) ) { T_GLOBAL T_VARIABLE($theme) , T_VARIABLE($base_root) , T_VARIABLE($user) ; T_IF ( T_STRING ( , T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($cid_parts) = T_ARRAY ( ) ; T_VARIABLE($cid_parts) [ ] = T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($cid_parts) [ ] = T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($cid_parts) [ ] = T_VARIABLE($theme) ; T_IF ( T_STRING ( ) ) { T_GLOBAL T_VARIABLE($language) ; T_VARIABLE($cid_parts) [ ] = T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING & T_STRING ) { T_VARIABLE($cid_parts) [ ] = . T_STRING ( , T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) ; } T_ELSEIF ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING & T_STRING ) { T_VARIABLE($cid_parts) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING & T_STRING ) { T_VARIABLE($cid_parts) [ ] = T_VARIABLE($base_root) . T_STRING ( ) ; } T_RETURN T_STRING ( , T_VARIABLE($cid_parts) ) ; } }",13,1
"T_OPEN_TAG T_FUNCTION(blog_node_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ) ; } T_FUNCTION(blog_perm) ( ) { T_RETURN T_ARRAY ( , , , , ) ; } T_FUNCTION(blog_access) ( T_VARIABLE($op) , T_VARIABLE($node) , T_VARIABLE($account) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_RETURN T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_OR ( T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_OR ( T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_FUNCTION(blog_user) ( T_VARIABLE($type) , & T_VARIABLE($edit) , & T_VARIABLE($user) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( , T_VARIABLE($user) ) ) { T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; } } T_FUNCTION(blog_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(blog_form) ( & T_VARIABLE($node) ) { T_GLOBAL T_VARIABLE($nid) ; T_VARIABLE($iid) = T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_INT_CAST T_VARIABLE($_GET) [ ] : T_LNUMBER ; T_VARIABLE($type) = T_STRING ( , T_VARIABLE($node) ) ; T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($nid) T_BOOLEAN_AND T_VARIABLE($blog) = T_STRING ( T_VARIABLE($nid) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = . T_VARIABLE($blog) T_OBJECT_OPERATOR T_STRING . . T_STRING ( T_VARIABLE($blog) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($nid) ) . ; } T_IF ( T_VARIABLE($iid) T_BOOLEAN_AND T_VARIABLE($item) = T_STRING ( T_STRING ( , T_VARIABLE($iid) ) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = . T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING . . T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) . ; } } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_STRING , T_DOUBLE_ARROW - T_LNUMBER ) ; T_VARIABLE($form) [ ] = T_STRING ( T_VARIABLE($node) , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(blog_view) ( T_VARIABLE($node) , T_VARIABLE($teaser) = T_STRING , T_VARIABLE($page) = T_STRING ) { T_IF ( T_VARIABLE($page) ) { T_STRING ( T_ARRAY ( T_STRING ( T_STRING ( ) , T_STRING ) , T_STRING ( T_STRING ( ) , ) , T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) , . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_RETURN T_STRING ( T_VARIABLE($node) , T_VARIABLE($teaser) ) ; } T_FUNCTION(blog_link) ( T_VARIABLE($type) , T_VARIABLE($node) = T_STRING , T_VARIABLE($teaser) = T_STRING ) { T_VARIABLE($links) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_IF ( T_STRING ( T_LNUMBER ) T_IS_NOT_EQUAL T_BOOLEAN_OR T_STRING ( T_LNUMBER ) T_IS_NOT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ) ; } } T_RETURN T_VARIABLE($links) ; } T_FUNCTION(blog_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(blog_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($block) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($block) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( ) , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_VARIABLE($node_title_list) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($block) [ ] = T_VARIABLE($node_title_list) ; T_VARIABLE($block) [ ] T_CONCAT_EQUAL T_STRING ( , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($block) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($block) ; } } } }",10,1
"T_OPEN_TAG T_FUNCTION(blog_page_user) ( T_VARIABLE($account) ) { T_GLOBAL T_VARIABLE($user) ; T_STRING ( T_VARIABLE($title) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($items) = T_ARRAY ( ) ; T_IF ( ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($items) [ ] = T_STRING ( T_STRING ( ) , ) ; } T_ELSE T_IF ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($items) [ ] = T_STRING ( ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($items) ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( ) , T_STRING ( , T_LNUMBER ) , T_LNUMBER , T_STRING , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($has_posts) = T_STRING ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_LNUMBER ) ; T_VARIABLE($has_posts) = T_STRING ; } T_IF ( T_VARIABLE($has_posts) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_STRING ( , T_LNUMBER ) ) ; } T_ELSE { T_IF ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($account) ) ) ) ) ; } } T_STRING ( T_STRING ( . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING . ) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($title) ) ) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(blog_page_last) ( ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($output) = ; T_VARIABLE($items) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($items) [ ] = T_STRING ( T_STRING ( ) , ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($items) ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( ) , T_STRING ( , T_LNUMBER ) ) ; T_VARIABLE($has_posts) = T_STRING ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_LNUMBER ) ; T_VARIABLE($has_posts) = T_STRING ; } T_IF ( T_VARIABLE($has_posts) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_STRING ( , T_LNUMBER ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) ) ; } T_STRING ( T_STRING ( ) , T_STRING ( ) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(blog_feed_user) ( T_VARIABLE($account) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( ) , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_STRING ( , T_LNUMBER ) ) ; T_VARIABLE($channel) [ ] = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING . ; T_VARIABLE($channel) [ ] = T_STRING ( . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_VARIABLE($items) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($items) [ ] = T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($items) , T_VARIABLE($channel) ) ; } T_FUNCTION(blog_feed_last) ( ) { T_VARIABLE($result) = T_STRING ( T_STRING ( ) , T_LNUMBER , T_STRING ( , T_LNUMBER ) ) ; T_VARIABLE($channel) [ ] = T_STRING ( , ) . ; T_VARIABLE($channel) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_VARIABLE($items) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($items) [ ] = T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($items) , T_VARIABLE($channel) ) ; }",7,0
"T_OPEN_TAG T_FUNCTION(blogapi_update_6000) ( ) { T_STRING ( . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ) ; T_RETURN T_ARRAY ( ) ; }",0,0
"T_OPEN_TAG T_FUNCTION(blogapi_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(blogapi_perm) ( ) { T_RETURN T_ARRAY ( ) ; } T_FUNCTION(blogapi_xmlrpc) ( ) {} T_FUNCTION(blogapi_blogger_get_users_blogs) ( T_VARIABLE($appid) , T_VARIABLE($username) , T_VARIABLE($password) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($types) = T_STRING ( ) ; T_VARIABLE($structs) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($types) T_AS T_VARIABLE($type) ) { T_VARIABLE($structs) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_VARIABLE($type) , T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($type) ) ; } T_RETURN T_VARIABLE($structs) ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } } T_FUNCTION(blogapi_blogger_get_user_info) ( T_VARIABLE($appkey) , T_VARIABLE($username) , T_VARIABLE($password) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($name) = T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($name) [ T_LNUMBER ] , T_DOUBLE_ARROW T_VARIABLE($name) [ T_LNUMBER ] , T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ) ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } } T_FUNCTION(blogapi_blogger_new_post) ( T_VARIABLE($appkey) , T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($content) , T_VARIABLE($publish) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } T_IF ( ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($blogid) ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_VARIABLE($error) ; } T_VARIABLE($edit) = T_ARRAY ( ) ; T_VARIABLE($edit) [ ] = T_VARIABLE($blogid) ; T_VARIABLE($node_type_default) = T_STRING ( . T_VARIABLE($edit) [ ] , T_ARRAY ( , ) ) ; T_VARIABLE($edit) [ ] = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($edit) [ ] = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($edit) [ ] = T_STRING ( , T_VARIABLE($node_type_default) ) ; T_VARIABLE($edit) [ ] = T_STRING ( . T_VARIABLE($edit) [ ] , T_LNUMBER ) ; T_VARIABLE($edit) [ ] = T_STRING ( , T_VARIABLE($node_type_default) ) ; T_VARIABLE($edit) [ ] = T_STRING ; T_VARIABLE($edit) [ ] = T_VARIABLE($publish) ; T_IF ( T_STRING ( T_VARIABLE($content) ) ) { T_VARIABLE($edit) [ ] = T_VARIABLE($content) [ ] ; T_VARIABLE($edit) [ ] = T_VARIABLE($content) [ ] ; T_STRING ( T_VARIABLE($edit) , T_VARIABLE($content) ) ; } T_ELSE { T_VARIABLE($edit) [ ] = T_STRING ( T_VARIABLE($content) ) ; T_VARIABLE($edit) [ ] = T_VARIABLE($content) ; } T_IF ( ! T_STRING ( , T_VARIABLE($edit) [ ] ) ) { T_RETURN T_STRING ( T_STRING ( ) ) ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($edit) [ ] = T_STRING ( T_STRING ( ) , , ) ; } T_STRING ( T_VARIABLE($edit) , ) ; T_STRING ( T_VARIABLE($edit) ) ; T_IF ( T_VARIABLE($errors) = T_STRING ( ) ) { T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($errors) ) ) ; } T_VARIABLE($node) = T_STRING ( T_VARIABLE($edit) ) ; T_STRING ( T_VARIABLE($node) ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_STRING , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_RETURN T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_RETURN T_STRING ( T_STRING ( ) ) ; } T_FUNCTION(blogapi_blogger_edit_post) ( T_VARIABLE($appkey) , T_VARIABLE($postid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($content) , T_VARIABLE($publish) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } T_VARIABLE($node) = T_STRING ( T_VARIABLE($postid) ) ; T_IF ( ! T_VARIABLE($node) ) { T_RETURN T_STRING ( T_STRING ( ) ) ; } T_UNSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_STRING ( , T_VARIABLE($node) ) ) { T_RETURN T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($publish) ; T_IF ( T_STRING ( T_VARIABLE($content) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($content) [ ] ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($content) [ ] ; T_STRING ( T_VARIABLE($node) , T_VARIABLE($content) ) ; } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($content) ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($content) ; } T_STRING ( T_VARIABLE($node) , ) ; T_STRING ( T_VARIABLE($node) ) ; T_IF ( T_VARIABLE($errors) = T_STRING ( ) ) { T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($errors) ) ) ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , , ) ; } T_VARIABLE($node) = T_STRING ( T_VARIABLE($node) ) ; T_STRING ( T_VARIABLE($node) ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_STRING , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_RETURN T_STRING ; } T_RETURN T_STRING ( T_STRING ( ) ) ; } T_FUNCTION(blogapi_blogger_get_post) ( T_VARIABLE($appkey) , T_VARIABLE($postid) , T_VARIABLE($username) , T_VARIABLE($password) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } T_VARIABLE($node) = T_STRING ( T_VARIABLE($postid) ) ; T_RETURN T_STRING ( T_VARIABLE($node) , T_STRING ) ; } T_FUNCTION(blogapi_blogger_delete_post) ( T_VARIABLE($appkey) , T_VARIABLE($postid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($publish) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } T_STRING ( T_VARIABLE($postid) ) ; T_RETURN T_STRING ; } T_FUNCTION(blogapi_blogger_get_recent_posts) ( T_VARIABLE($appkey) , T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($number_of_posts) , T_VARIABLE($bodies) = T_STRING ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } T_IF ( ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($blogid) ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_VARIABLE($error) ; } T_IF ( T_VARIABLE($bodies) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($blogid) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_VARIABLE($number_of_posts) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($blogid) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_VARIABLE($number_of_posts) ) ; } T_VARIABLE($blogs) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($blog) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($blogs) [ ] = T_STRING ( T_VARIABLE($blog) , T_VARIABLE($bodies) ) ; } T_RETURN T_VARIABLE($blogs) ; } T_FUNCTION(blogapi_metaweblog_new_post) ( T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($content) , T_VARIABLE($publish) ) { T_RETURN T_STRING ( , T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($content) , T_VARIABLE($publish) ) ; } T_FUNCTION(blogapi_metaweblog_edit_post) ( T_VARIABLE($postid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($content) , T_VARIABLE($publish) ) { T_RETURN T_STRING ( , T_VARIABLE($postid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($content) , T_VARIABLE($publish) ) ; } T_FUNCTION(blogapi_metaweblog_get_post) ( T_VARIABLE($postid) , T_VARIABLE($username) , T_VARIABLE($password) ) { T_RETURN T_STRING ( , T_VARIABLE($postid) , T_VARIABLE($username) , T_VARIABLE($password) ) ; } T_FUNCTION(blogapi_metaweblog_new_media_object) ( T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($file) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } T_VARIABLE($name) = T_STRING ( T_VARIABLE($file) [ ] ) ; T_VARIABLE($data) = T_VARIABLE($file) [ ] ; T_IF ( ! T_VARIABLE($data) ) { T_RETURN T_STRING ( T_STRING ( ) ) ; } T_IF ( ! T_VARIABLE($file) = T_STRING ( T_VARIABLE($data) , T_VARIABLE($name) ) ) { T_RETURN T_STRING ( T_STRING ( ) ) ; } T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($file) ) , ) ; } T_FUNCTION(blogapi_metaweblog_get_category_list) ( T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) ) { T_IF ( ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($blogid) ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_VARIABLE($error) ; } T_VARIABLE($vocabularies) = T_STRING ( , , T_VARIABLE($blogid) , ) ; T_VARIABLE($categories) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($vocabularies) ) { T_FOREACH ( T_VARIABLE($vocabularies) T_AS T_VARIABLE($vocabulary) ) { T_VARIABLE($terms) = T_STRING ( , , T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , - T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($terms) T_AS T_VARIABLE($term) ) { T_VARIABLE($term_name) = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; T_FOREACH ( T_STRING ( , , T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , ) T_AS T_VARIABLE($parent) ) { T_VARIABLE($term_name) = T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($term_name) ; } T_VARIABLE($categories) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($term_name) , T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ; } } } T_RETURN T_VARIABLE($categories) ; } T_FUNCTION(blogapi_metaweblog_get_recent_posts) ( T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($number_of_posts) ) { T_RETURN T_STRING ( , T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($number_of_posts) , T_STRING ) ; } T_FUNCTION(blogapi_mt_get_recent_post_titles) ( T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($number_of_posts) ) { T_RETURN T_STRING ( , T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($number_of_posts) , T_STRING ) ; } T_FUNCTION(blogapi_mt_get_category_list) ( T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) ) { T_RETURN T_STRING ( T_VARIABLE($blogid) , T_VARIABLE($username) , T_VARIABLE($password) ) ; } T_FUNCTION(blogapi_mt_get_post_categories) ( T_VARIABLE($postid) , T_VARIABLE($username) , T_VARIABLE($password) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } T_VARIABLE($node) = T_STRING ( T_VARIABLE($postid) ) ; T_VARIABLE($terms) = T_STRING ( , , T_VARIABLE($node) , ) ; T_VARIABLE($categories) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($terms) T_AS T_VARIABLE($term) ) { T_VARIABLE($term_name) = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; T_FOREACH ( T_STRING ( , , T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , ) T_AS T_VARIABLE($parent) ) { T_VARIABLE($term_name) = T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($term_name) ; } T_VARIABLE($categories) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($term_name) , T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ) ; } T_RETURN T_VARIABLE($categories) ; } T_FUNCTION(blogapi_mt_set_post_categories) ( T_VARIABLE($postid) , T_VARIABLE($username) , T_VARIABLE($password) , T_VARIABLE($categories) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } T_VARIABLE($node) = T_STRING ( T_VARIABLE($postid) ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($categories) T_AS T_VARIABLE($category) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($category) [ ] ; } T_STRING ( T_VARIABLE($node) ) ; T_RETURN T_STRING ; } T_FUNCTION(blogapi_mt_supported_text_filters) ( ) { T_VARIABLE($formats) = T_STRING ( ) ; T_VARIABLE($filters) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($formats) T_AS T_VARIABLE($format) ) { T_VARIABLE($filter) [ ] = T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($filter) [ ] = T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($filters) [ ] = T_VARIABLE($filter) ; } T_RETURN T_VARIABLE($filters) ; } T_FUNCTION(blogap_mti_publish_post) ( T_VARIABLE($postid) , T_VARIABLE($username) , T_VARIABLE($password) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($username) , T_VARIABLE($password) ) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } T_VARIABLE($node) = T_STRING ( T_VARIABLE($postid) ) ; T_IF ( ! T_VARIABLE($node) ) { T_RETURN T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_IF ( ! T_STRING ( , T_VARIABLE($node) ) ) { T_RETURN T_STRING ( T_STRING ( ) ) ; } T_STRING ( T_VARIABLE($node) ) ; T_RETURN T_STRING ; } T_FUNCTION(blogapi_error) ( T_VARIABLE($message) ) { T_STATIC T_VARIABLE($xmlrpcusererr) ; T_IF ( ! T_STRING ( T_VARIABLE($message) ) ) { T_VARIABLE($message) = T_ARRAY ( T_VARIABLE($message) ) ; } T_VARIABLE($message) = T_STRING ( , T_VARIABLE($message) ) ; T_RETURN T_STRING ( T_VARIABLE($xmlrpcusererr) + T_LNUMBER , T_STRING ( T_VARIABLE($message) ) ) ; } T_FUNCTION(blogapi_validate_user) ( T_VARIABLE($username) , T_VARIABLE($password) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($user) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($username) , T_DOUBLE_ARROW T_VARIABLE($password) ) ) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_STRING ( , T_VARIABLE($user) ) ) { T_RETURN T_VARIABLE($user) ; } T_ELSE { T_RETURN T_STRING ( ) ; } } T_ELSE { T_RETURN T_STRING ( ) ; } } T_FUNCTION(blogapi_blogger_title) ( & T_VARIABLE($contents) ) { T_IF ( T_STRING ( , T_VARIABLE($contents) , T_VARIABLE($title) ) ) { T_VARIABLE($title) = T_STRING ( T_VARIABLE($title) [ T_LNUMBER ] ) ; T_VARIABLE($contents) = T_STRING ( , , T_VARIABLE($contents) ) ; } T_ELSE { T_LIST ( T_VARIABLE($title) , T_VARIABLE($contents) ) = T_STRING ( , T_VARIABLE($contents) , T_LNUMBER ) ; } T_RETURN T_VARIABLE($title) ; } T_FUNCTION(blogapi_admin_settings) ( ) { T_VARIABLE($node_types) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($defaults) = T_ISSET ( T_VARIABLE($node_types) [ ] ) ? T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) : T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($defaults) ) , T_DOUBLE_ARROW T_VARIABLE($node_types) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(blogapi_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(blogapi_init) ( ) { T_IF ( T_STRING ( ) ) { T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ) ) ; } } T_FUNCTION(blogapi_rsd) ( ) { T_GLOBAL T_VARIABLE($base_url) ; T_VARIABLE($xmlrpc) = T_VARIABLE($base_url) . ; T_VARIABLE($base) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_VARIABLE($blogid) = T_LNUMBER ; T_STRING ( ) ; T_PRINT T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_VARIABLE($base) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($xmlrpc) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($blogid) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($xmlrpc) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($blogid) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($xmlrpc) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($blogid) T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC ; } T_FUNCTION(_blogapi_mt_extra) ( & T_VARIABLE($node) , T_VARIABLE($struct) ) { T_IF ( T_STRING ( T_VARIABLE($node) ) ) { T_VARIABLE($was_array) = T_STRING ; T_VARIABLE($node) = T_OBJECT_CAST T_VARIABLE($node) ; } T_IF ( T_STRING ( , T_VARIABLE($struct) ) ) { T_SWITCH ( T_VARIABLE($struct) [ ] ) { T_CASE T_LNUMBER : T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_BREAK ; } } T_IF ( T_VARIABLE($struct) [ ] ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($struct) [ ] . . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($struct) [ ] ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($struct) [ ] ; } T_IF ( T_VARIABLE($struct) [ ] ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($struct) [ ] ; } T_IF ( T_VARIABLE($struct) [ ] ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( T_VARIABLE($struct) [ ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($struct) [ ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($struct) [ ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($struct) [ ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($struct) [ ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($struct) [ ] T_OBJECT_OPERATOR T_STRING ) , , ) ; } T_IF ( T_VARIABLE($was_array) ) { T_VARIABLE($node) = T_ARRAY_CAST T_VARIABLE($node) ; } } T_FUNCTION(_blogapi_get_post) ( T_VARIABLE($node) , T_VARIABLE($bodies) = T_STRING ) { T_VARIABLE($xmlrpcval) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , ) ; T_IF ( T_VARIABLE($bodies) ) { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($comment) = T_LNUMBER ; } T_ELSE T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($comment) = T_LNUMBER ; } T_VARIABLE($xmlrpcval) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($xmlrpcval) [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($xmlrpcval) [ ] = T_INT_CAST T_VARIABLE($comment) ; T_VARIABLE($xmlrpcval) [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_RETURN T_VARIABLE($xmlrpcval) ; } T_FUNCTION(_blogapi_validate_blogid) ( T_VARIABLE($blogid) ) { T_VARIABLE($types) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($blogid) , T_VARIABLE($types) , T_STRING ) ) { T_RETURN T_STRING ; } T_RETURN T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($blogid) ) ) ) ; } T_FUNCTION(_blogapi_get_node_types) ( ) { T_VARIABLE($available_types) = T_STRING ( T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ) ) ) ; T_VARIABLE($types) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_IF ( T_STRING ( , T_VARIABLE($type) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($type) , T_VARIABLE($available_types) ) ) { T_VARIABLE($types) [ ] = T_VARIABLE($type) ; } } T_RETURN T_VARIABLE($types) ; }",11,1
"T_OPEN_TAG T_CLOSE_TAG T_OPEN_TAG T_FOREACH ( T_VARIABLE($book_menus) T_AS T_VARIABLE($book_id) T_DOUBLE_ARROW T_VARIABLE($menu) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($book_id) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($menu) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDFOREACH ; T_CLOSE_TAG",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($base_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($language_rtl) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($div_close) = ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($depth) ; T_VARIABLE($i) T_INC ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($i) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($div_close) T_CONCAT_EQUAL ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDFOR ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($contents) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($div_close) ; T_CLOSE_TAG T_INLINE_HTML",0,1
"T_OPEN_TAG T_CLOSE_TAG T_OPEN_TAG T_IF ( T_VARIABLE($tree) T_BOOLEAN_OR T_VARIABLE($has_links) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($book_id) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($tree) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($has_links) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($prev_url) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($prev_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) . T_VARIABLE($prev_title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($parent_url) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($parent_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($next_url) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($next_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($next_title) . T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG",1,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($depth) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($children) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_FUNCTION(book_admin_overview) ( ) { T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($book) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING ( T_VARIABLE($book) [ ] , T_VARIABLE($book) [ ] , T_VARIABLE($book) [ ] ) , T_STRING ( T_STRING ( ) , . T_VARIABLE($book) [ ] ) ) ; } T_VARIABLE($headers) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) ; T_RETURN T_STRING ( , T_VARIABLE($headers) , T_VARIABLE($rows) ) ; } T_FUNCTION(book_admin_settings) ( ) { T_VARIABLE($types) = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( ) ) , T_DOUBLE_ARROW T_VARIABLE($types) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_VARIABLE($types) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(book_admin_settings_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($child_type) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] [ T_VARIABLE($child_type) ] ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; } } T_FUNCTION(book_admin_edit) ( T_VARIABLE($form_state) , T_VARIABLE($node) ) { T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_VARIABLE($node) ; T_VARIABLE($form) [ ] = T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(book_admin_edit_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($order) = T_STRING ( T_STRING ( T_VARIABLE($form) [ ] [ ] ) ) ; T_VARIABLE($form) [ ] = T_STRING ( T_VARIABLE($order) , T_VARIABLE($form) [ ] ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_IF ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] ) { T_VARIABLE($row) = T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ; T_VARIABLE($values) = T_VARIABLE($form_state) [ ] [ ] [ T_VARIABLE($key) ] ; T_IF ( T_VARIABLE($row) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($values) [ ] T_BOOLEAN_OR T_VARIABLE($row) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($values) [ ] ) { T_VARIABLE($row) [ ] [ ] = T_VARIABLE($values) [ ] ; T_VARIABLE($row) [ ] [ ] = T_VARIABLE($values) [ ] ; T_STRING ( T_VARIABLE($row) [ ] ) ; } T_IF ( T_VARIABLE($row) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($values) [ ] ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($values) [ ] , T_STRING ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($values) [ ] ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($values) [ ] ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($values) [ ] ) ) ; T_STRING ( T_VARIABLE($node) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } } } T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_FUNCTION(_book_admin_table) ( T_VARIABLE($node) ) { T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($tree) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($tree) = T_STRING ( T_VARIABLE($tree) ) ; T_IF ( T_VARIABLE($tree) [ ] ) { T_STRING ( T_VARIABLE($tree) [ ] , T_VARIABLE($form) ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(_book_admin_table_tree) ( T_VARIABLE($tree) , & T_VARIABLE($form) ) { T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($data) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($data) [ ] , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($data) [ ] [ ] ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($data) [ ] [ ] ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($data) [ ] [ ] ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($data) [ ] [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($data) [ ] [ ] , T_DOUBLE_ARROW T_LNUMBER , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($data) [ ] [ ] , T_DOUBLE_ARROW T_LNUMBER , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($data) [ ] [ ] , ) , ) ; T_IF ( T_VARIABLE($data) [ ] ) { T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($form) ) ; } } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(theme_book_admin_table) ( T_VARIABLE($form) ) { T_STRING ( , , , , , , T_STRING , T_STRING - T_LNUMBER ) ; T_STRING ( , , , ) ; T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($destination) = T_STRING ( ) ; T_VARIABLE($access) = T_STRING ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_VARIABLE($nid) = T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] ; T_VARIABLE($href) = T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] [ ] = ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] [ ] = ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] [ ] = ; T_VARIABLE($data) = T_ARRAY ( T_STRING ( , T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] - T_LNUMBER ) . T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) , T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) , T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) . T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) , T_STRING ( T_STRING ( ) , T_VARIABLE($href) ) , T_VARIABLE($access) ? T_STRING ( T_STRING ( ) , . T_VARIABLE($nid) . , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) : , T_VARIABLE($access) ? T_STRING ( T_STRING ( ) , . T_VARIABLE($nid) . , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) : , ) ; T_VARIABLE($row) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($data) ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ) { T_VARIABLE($row) = T_STRING ( T_VARIABLE($row) , T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ; } T_VARIABLE($row) [ ] = T_EMPTY ( T_VARIABLE($row) [ ] ) ? : T_VARIABLE($row) [ ] . ; T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } T_RETURN T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_FUNCTION(_book_admin_sort_tree) ( & T_VARIABLE($tree) ) { T_STRING ( T_VARIABLE($tree) , ) ; T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($subtree) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] ) ) { T_STRING ( T_VARIABLE($tree) [ T_VARIABLE($key) ] [ ] ) ; } } } T_FUNCTION(_book_admin_compare) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_VARIABLE($weight) = T_VARIABLE($a) [ ] [ ] - T_VARIABLE($b) [ ] [ ] ; T_IF ( T_VARIABLE($weight) ) { T_RETURN T_VARIABLE($weight) ; } T_RETURN T_STRING ( T_VARIABLE($a) [ ] [ ] , T_VARIABLE($b) [ ] [ ] ) ; }",11,1
"T_OPEN_TAG T_FUNCTION(book_install) ( ) { T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(book_uninstall) ( ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(_book_install_type_create) ( ) { T_VARIABLE($book_node_type) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($book_node_type) = T_OBJECT_CAST T_STRING ( T_VARIABLE($book_node_type) ) ; T_STRING ( T_VARIABLE($book_node_type) ) ; T_STRING ( , T_ARRAY ( ) ) ; T_STRING ( , T_ARRAY ( ) ) ; T_STRING ( , ) ; } T_FUNCTION(book_update_6000) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_STRING ( ) ; T_VARIABLE($replace) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($query) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($query) ) ) { T_VARIABLE($fixed_perm) = T_STRING ( T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($replace) ) ; T_IF ( T_STRING ( T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($fixed_perm) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($fixed_perm) T_IS_NOT_EQUAL T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($ret) [ ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($fixed_perm) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) ; } } T_IF ( T_STRING ( T_STRING ( ) ) ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_STRING ( T_VARIABLE($ret) , , T_VARIABLE($schema) [ ] ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($ret) , , T_VARIABLE($schema) [ ] ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_LNUMBER ; T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($a) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($a) ; } T_VARIABLE($ret) [ ] = T_STRING ; T_RETURN T_VARIABLE($ret) ; } T_ELSE { T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($ret) , , T_VARIABLE($schema) [ ] ) ; T_RETURN T_VARIABLE($ret) ; } } T_ELSEIF ( T_VARIABLE($_SESSION) [ ] ) { T_VARIABLE($update_count) = T_LNUMBER ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($_SESSION) [ ] [ ] , T_VARIABLE($update_count) ) ; T_VARIABLE($has_rows) = T_STRING ; T_WHILE ( T_VARIABLE($book) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($has_rows) = T_STRING ; T_IF ( T_VARIABLE($book) [ ] T_BOOLEAN_AND ! T_STRING ( T_STRING ( , T_VARIABLE($book) [ ] ) ) ) { T_IF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($book) [ ] = T_LNUMBER ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($book) ; T_VARIABLE($ret) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ; } T_ELSE { T_VARIABLE($book) [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ ] ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($book) ; } } } T_IF ( T_VARIABLE($has_rows) ) { T_VARIABLE($_SESSION) [ ] [ ] T_PLUS_EQUAL T_VARIABLE($update_count) ; } T_ELSE { T_IF ( ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] ; } T_VARIABLE($_SESSION) [ ] = T_STRING ; } T_VARIABLE($ret) [ ] = T_STRING ; T_RETURN T_VARIABLE($ret) ; } T_ELSE { T_VARIABLE($update_count) = T_LNUMBER ; T_WHILE ( T_VARIABLE($update_count) T_BOOLEAN_AND T_VARIABLE($_SESSION) [ ] ) { T_VARIABLE($book) = T_STRING ( T_VARIABLE($_SESSION) [ ] ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($book) [ ] ) ; T_WHILE ( T_VARIABLE($a) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($a) ; } T_IF ( T_VARIABLE($book) [ ] ) { T_VARIABLE($parent) = T_STRING ( T_STRING ( , T_VARIABLE($book) [ ] ) ) ; T_VARIABLE($book) = T_STRING ( T_VARIABLE($book) , T_VARIABLE($parent) ) ; } T_ELSE { T_VARIABLE($book) [ ] = T_LNUMBER ; T_VARIABLE($book) [ ] = T_VARIABLE($book) [ ] ; } T_VARIABLE($book) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_VARIABLE($book) [ ] , T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_VARIABLE($book) [ ] , ) ; T_VARIABLE($book) = T_STRING ( T_VARIABLE($book) , T_STRING ( T_STRING ( , T_VARIABLE($book) [ ] ) ) ) ; T_IF ( T_STRING ( T_VARIABLE($book) ) ) { T_STRING ( , T_VARIABLE($book) [ ] , T_VARIABLE($book) [ ] , T_VARIABLE($book) [ ] ) ; } T_ELSE { T_VARIABLE($book) [ ] = T_STRING ( T_STRING ( , T_VARIABLE($book) [ ] ) ) ; T_IF ( T_STRING ( T_VARIABLE($book) ) ) { T_STRING ( , T_VARIABLE($book) [ ] , T_VARIABLE($book) [ ] , T_VARIABLE($book) [ ] ) ; } } T_VARIABLE($update_count) T_DEC ; } T_VARIABLE($ret) [ ] = T_STRING ; } T_IF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($ret) [ ] = T_STRING ; T_VARIABLE($ret) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(book_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_RETURN T_VARIABLE($schema) ; }",11,0
"T_OPEN_TAG T_FUNCTION(book_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , ) ; } T_FUNCTION(book_perm) ( ) { T_RETURN T_ARRAY ( , , , ) ; } T_FUNCTION(book_link) ( T_VARIABLE($type) , T_VARIABLE($node) = T_STRING , T_VARIABLE($teaser) = T_STRING ) { T_VARIABLE($links) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( ! T_VARIABLE($teaser) ) { T_VARIABLE($child_type) = T_STRING ( , ) ; T_IF ( ( T_STRING ( ) T_BOOLEAN_OR T_STRING ( ) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($child_type) ) T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] < T_STRING ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW . T_STRING ( , , T_VARIABLE($child_type) ) , T_DOUBLE_ARROW . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] , ) ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } } } T_RETURN T_VARIABLE($links) ; } T_FUNCTION(book_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(_book_outline_access) ( T_VARIABLE($node) ) { T_RETURN T_STRING ( ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($node) ) ; } T_FUNCTION(_book_outline_remove_access) ( T_VARIABLE($node) ) { T_RETURN T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] T_IS_NOT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($node) ) ; } T_FUNCTION(book_init) ( ) { T_STRING ( T_STRING ( , ) . ) ; } T_FUNCTION(book_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_VARIABLE($block) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($block) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($block) [ T_LNUMBER ] [ ] = T_STRING | T_STRING ; T_RETURN T_VARIABLE($block) ; T_CASE : T_VARIABLE($current_bid) = T_LNUMBER ; T_IF ( T_VARIABLE($node) = T_STRING ( ) ) { T_VARIABLE($current_bid) = T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ? T_LNUMBER : T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ; } T_IF ( T_STRING ( , ) T_IS_EQUAL ) { T_VARIABLE($block) [ ] = T_STRING ( ) ; T_VARIABLE($book_menus) = T_ARRAY ( ) ; T_VARIABLE($pseudo_tree) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($book_id) T_DOUBLE_ARROW T_VARIABLE($book) ) { T_IF ( T_VARIABLE($book) [ ] T_IS_EQUAL T_VARIABLE($current_bid) ) { T_VARIABLE($book_menus) [ T_VARIABLE($book_id) ] = T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_ELSE { T_VARIABLE($book) [ ] = T_STRING ; T_VARIABLE($pseudo_tree) [ T_LNUMBER ] [ ] = T_VARIABLE($book) ; T_VARIABLE($book_menus) [ T_VARIABLE($book_id) ] = T_STRING ( T_VARIABLE($pseudo_tree) ) ; } } T_VARIABLE($block) [ ] = T_STRING ( , T_VARIABLE($book_menus) ) ; } T_ELSEIF ( T_VARIABLE($current_bid) ) { T_VARIABLE($title) = T_STRING ( T_STRING ( T_STRING ( ) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) ; T_IF ( T_VARIABLE($title) ) { T_VARIABLE($tree) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($data) = T_STRING ( T_VARIABLE($tree) ) ; T_VARIABLE($block) [ ] = T_STRING ( , T_VARIABLE($data) [ ] ) ; T_VARIABLE($block) [ ] = ( T_VARIABLE($data) [ ] ) ? T_STRING ( T_VARIABLE($data) [ ] ) : ; } } T_RETURN T_VARIABLE($block) ; T_CASE : T_VARIABLE($options) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; T_CASE : T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_BREAK ; } } T_FUNCTION(theme_book_title_link) ( T_VARIABLE($link) ) { T_VARIABLE($link) [ ] [ ] [ ] = ; T_RETURN T_STRING ( T_VARIABLE($link) [ ] , T_VARIABLE($link) [ ] , T_VARIABLE($link) [ ] ) ; } T_FUNCTION(book_get_books) ( ) { T_STATIC T_VARIABLE($all_books) ; T_IF ( ! T_ISSET ( T_VARIABLE($all_books) ) ) { T_VARIABLE($all_books) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($nids) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($book) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($nids) [ ] = T_VARIABLE($book) [ ] ; } T_IF ( T_VARIABLE($nids) ) { T_VARIABLE($result2) = T_STRING ( T_STRING ( . T_STRING ( , T_VARIABLE($nids) ) . ) ) ; T_WHILE ( T_VARIABLE($link) = T_STRING ( T_VARIABLE($result2) ) ) { T_VARIABLE($link) [ ] = T_VARIABLE($link) [ ] ; T_VARIABLE($link) [ ] = T_STRING ( T_VARIABLE($link) [ ] ) ; T_VARIABLE($all_books) [ T_VARIABLE($link) [ ] ] = T_VARIABLE($link) ; } } } T_RETURN T_VARIABLE($all_books) ; } T_FUNCTION(book_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] [ ] . T_IS_EQUAL T_VARIABLE($form_id) ) { T_VARIABLE($node) = T_VARIABLE($form) [ ] ; T_VARIABLE($access) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($access) ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND ( ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) { T_VARIABLE($access) = T_STRING ; } } T_IF ( T_VARIABLE($access) ) { T_STRING ( T_VARIABLE($form) , T_VARIABLE($node) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; } } } T_FUNCTION(_book_parent_select) ( T_VARIABLE($book_link) ) { T_IF ( T_STRING ( , T_STRING ) ) { T_RETURN T_ARRAY ( ) ; } T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_IF ( T_VARIABLE($book_link) [ ] T_IS_IDENTICAL T_VARIABLE($book_link) [ ] ) { T_IF ( T_VARIABLE($book_link) [ ] T_IS_IDENTICAL T_VARIABLE($book_link) [ ] ) { T_VARIABLE($form) [ ] T_CONCAT_EQUAL . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($form) [ ] T_CONCAT_EQUAL . T_STRING ( ) . ; } } T_ELSEIF ( ! T_VARIABLE($book_link) [ ] ) { T_VARIABLE($form) [ ] T_CONCAT_EQUAL . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($book_link) [ ] , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($book_link) [ ] , T_ARRAY ( T_VARIABLE($book_link) [ ] ) , T_VARIABLE($book_link) [ ] ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(_book_add_form_elements) ( & T_VARIABLE($form) , T_VARIABLE($node) ) { T_VARIABLE($form) [ ] = T_STRING ; T_STRING ( , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_FOREACH ( T_ARRAY ( , , , , , , , , ) T_AS T_VARIABLE($key) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] , ) ; } T_VARIABLE($form) [ ] [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($options) = T_ARRAY ( ) ; T_VARIABLE($nid) = T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : ; T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($nid) T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] T_IS_EQUAL T_LNUMBER ) ) { T_VARIABLE($options) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($book) ) { T_VARIABLE($options) [ T_VARIABLE($book) [ ] ] = T_VARIABLE($book) [ ] ; } } T_IF ( T_STRING ( ) T_BOOLEAN_AND ( T_VARIABLE($nid) T_IS_EQUAL T_BOOLEAN_OR ( T_VARIABLE($nid) T_IS_NOT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) ) { T_VARIABLE($options) = T_ARRAY ( T_VARIABLE($nid) T_DOUBLE_ARROW . T_STRING ( ) . ) + T_VARIABLE($options) ; } T_IF ( ! T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) { T_VARIABLE($options) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW . T_STRING ( ) . ) + T_VARIABLE($options) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_BOOL_CAST T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , ) ; } T_FUNCTION(_book_update_outline) ( & T_VARIABLE($node) ) { T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($new) = T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_LNUMBER ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($parent) = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_OR ! T_VARIABLE($parent) T_BOOLEAN_OR T_VARIABLE($parent) [ ] T_IS_NOT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ; } } T_IF ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($new) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ; } T_ELSE { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] T_IS_NOT_EQUAL T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) { T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } } T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(book_update_bid) ( T_VARIABLE($book_link) ) { T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($book_link) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) ] ; T_VARIABLE($i) T_INC ) { T_VARIABLE($match) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($args) [ ] = T_VARIABLE($book_link) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) ] ; } T_VARIABLE($result) = T_STRING ( . T_STRING ( , T_VARIABLE($match) ) , T_VARIABLE($args) ) ; T_VARIABLE($mlids) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($a) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($mlids) [ ] = T_VARIABLE($a) [ ] ; } T_IF ( T_VARIABLE($mlids) ) { T_STRING ( . T_STRING ( , T_VARIABLE($mlids) ) . , T_VARIABLE($book_link) [ ] ) ; } } T_FUNCTION(book_get_flat_menu) ( T_VARIABLE($book_link) ) { T_STATIC T_VARIABLE($flat) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($flat) [ T_VARIABLE($book_link) [ ] ] ) ) { T_VARIABLE($tree) = T_STRING ( T_VARIABLE($book_link) [ ] , T_VARIABLE($book_link) ) ; T_VARIABLE($flat) [ T_VARIABLE($book_link) [ ] ] = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($tree) , T_VARIABLE($flat) [ T_VARIABLE($book_link) [ ] ] ) ; } T_RETURN T_VARIABLE($flat) [ T_VARIABLE($book_link) [ ] ] ; } T_FUNCTION(_book_flatten_menu) ( T_VARIABLE($tree) , & T_VARIABLE($flat) ) { T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($data) ) { T_IF ( ! T_VARIABLE($data) [ ] [ ] ) { T_VARIABLE($flat) [ T_VARIABLE($data) [ ] [ ] ] = T_VARIABLE($data) [ ] ; T_IF ( T_VARIABLE($data) [ ] ) { T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($flat) ) ; } } } } T_FUNCTION(book_prev) ( T_VARIABLE($book_link) ) { T_IF ( T_VARIABLE($book_link) [ ] T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_VARIABLE($flat) = T_STRING ( T_VARIABLE($book_link) ) ; T_VARIABLE($curr) = T_STRING ; T_DO { T_VARIABLE($prev) = T_VARIABLE($curr) ; T_LIST ( T_VARIABLE($key) , T_VARIABLE($curr) ) = T_STRING ( T_VARIABLE($flat) ) ; } T_WHILE ( T_VARIABLE($key) T_BOOLEAN_AND T_VARIABLE($key) T_IS_NOT_EQUAL T_VARIABLE($book_link) [ ] ) ; T_IF ( T_VARIABLE($key) T_IS_EQUAL T_VARIABLE($book_link) [ ] ) { T_IF ( T_VARIABLE($prev) [ ] T_IS_EQUAL T_VARIABLE($book_link) [ ] T_BOOLEAN_AND T_VARIABLE($prev) [ ] ) { T_VARIABLE($data) = T_STRING ( T_STRING ( T_VARIABLE($prev) ) ) ; T_WHILE ( T_VARIABLE($data) [ ] ) { T_VARIABLE($data) = T_STRING ( T_VARIABLE($data) [ ] ) ; } T_RETURN T_VARIABLE($data) [ ] ; } T_ELSE { T_RETURN T_VARIABLE($prev) ; } } } T_FUNCTION(book_next) ( T_VARIABLE($book_link) ) { T_VARIABLE($flat) = T_STRING ( T_VARIABLE($book_link) ) ; T_DO { T_LIST ( T_VARIABLE($key) , T_VARIABLE($curr) ) = T_STRING ( T_VARIABLE($flat) ) ; } T_WHILE ( T_VARIABLE($key) T_BOOLEAN_AND T_VARIABLE($key) T_IS_NOT_EQUAL T_VARIABLE($book_link) [ ] ) ; T_IF ( T_VARIABLE($key) T_IS_EQUAL T_VARIABLE($book_link) [ ] ) { T_RETURN T_STRING ( T_VARIABLE($flat) ) ; } } T_FUNCTION(book_children) ( T_VARIABLE($book_link) ) { T_VARIABLE($flat) = T_STRING ( T_VARIABLE($book_link) ) ; T_VARIABLE($children) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($book_link) [ ] ) { T_DO { T_VARIABLE($link) = T_STRING ( T_VARIABLE($flat) ) ; } T_WHILE ( T_VARIABLE($link) T_BOOLEAN_AND ( T_VARIABLE($link) [ ] T_IS_NOT_EQUAL T_VARIABLE($book_link) [ ] ) ) ; T_WHILE ( ( T_VARIABLE($link) = T_STRING ( T_VARIABLE($flat) ) ) T_BOOLEAN_AND T_VARIABLE($link) [ ] T_IS_EQUAL T_VARIABLE($book_link) [ ] ) { T_VARIABLE($data) [ ] = T_VARIABLE($link) ; T_VARIABLE($data) [ ] = ; T_VARIABLE($children) [ ] = T_VARIABLE($data) ; } } T_RETURN T_VARIABLE($children) ? T_STRING ( T_VARIABLE($children) ) : ; } T_FUNCTION(book_menu_name) ( T_VARIABLE($bid) ) { T_RETURN . T_VARIABLE($bid) ; } T_FUNCTION(book_build_active_trail) ( T_VARIABLE($book_link) ) { T_STATIC T_VARIABLE($trail) ; T_IF ( ! T_ISSET ( T_VARIABLE($trail) ) ) { T_VARIABLE($trail) = T_ARRAY ( ) ; T_VARIABLE($trail) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($tree) = T_STRING ( T_VARIABLE($book_link) [ ] , T_VARIABLE($book_link) ) ; T_VARIABLE($curr) = T_STRING ( T_VARIABLE($tree) ) ; T_WHILE ( T_VARIABLE($curr) ) { T_IF ( T_VARIABLE($curr) [ ] [ ] T_IS_EQUAL T_VARIABLE($book_link) [ ] ) { T_VARIABLE($trail) [ ] = T_VARIABLE($curr) [ ] ; T_VARIABLE($curr) = T_STRING ; } T_ELSE { T_IF ( T_VARIABLE($curr) [ ] T_BOOLEAN_AND T_VARIABLE($curr) [ ] [ ] ) { T_VARIABLE($trail) [ ] = T_VARIABLE($curr) [ ] ; T_VARIABLE($tree) = T_VARIABLE($curr) [ ] ; } T_VARIABLE($curr) = T_STRING ( T_VARIABLE($tree) ) ; } } } T_RETURN T_VARIABLE($trail) ; } T_FUNCTION(book_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($teaser) , T_VARIABLE($page) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($info) [ ] = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_IF ( T_VARIABLE($info) [ ] ) { T_VARIABLE($info) [ ] [ ] = T_VARIABLE($info) [ ] [ ] ; T_VARIABLE($info) [ ] [ ] = T_VARIABLE($info) [ ] [ ] ; T_VARIABLE($info) [ ] [ ] = T_STRING ( T_VARIABLE($info) [ ] [ ] ) ; T_RETURN T_VARIABLE($info) ; } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($teaser) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_VARIABLE($page) ) { T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ; } } } T_BREAK ; T_CASE : T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND ! T_STRING ( ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ; } T_BREAK ; T_CASE : T_CASE : T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] T_IS_EQUAL ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_STRING ( T_VARIABLE($node) ) ; } T_BREAK ; T_CASE : T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_WHILE ( T_VARIABLE($child) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($child_node) = T_STRING ( T_VARIABLE($child) [ ] ) ; T_VARIABLE($child_node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($child_node) T_OBJECT_OPERATOR T_STRING ; T_STRING ( T_VARIABLE($child_node) ) ; } } T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ; } T_BREAK ; T_CASE : T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_STRING ( ) T_BOOLEAN_OR T_STRING ( ) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($_GET) [ ] ) ) { T_VARIABLE($parent) = T_STRING ( T_VARIABLE($_GET) [ ] ) ; T_IF ( T_VARIABLE($parent) T_BOOLEAN_AND T_VARIABLE($parent) [ ] ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($parent) [ ] ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($parent) [ ] ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($parent) [ ] ; } } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_PLUS_EQUAL T_STRING ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : ) ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ; } } T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_BREAK ; } } T_FUNCTION(_book_parent_depth_limit) ( T_VARIABLE($book_link) ) { T_RETURN T_STRING - T_LNUMBER - ( ( T_VARIABLE($book_link) [ ] T_BOOLEAN_AND T_VARIABLE($book_link) [ ] ) ? T_STRING ( T_VARIABLE($book_link) ) : T_LNUMBER ) ; } T_FUNCTION(book_form_node_delete_confirm_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($form) [ ] [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) . , T_DOUBLE_ARROW - T_LNUMBER , ) ; } } T_FUNCTION(_book_link_defaults) ( T_VARIABLE($nid) ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($nid) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) ) ; } T_FUNCTION(template_preprocess_book_navigation) ( & T_VARIABLE($variables) ) { T_VARIABLE($book_link) = T_VARIABLE($variables) [ ] ; T_VARIABLE($variables) [ ] = T_VARIABLE($book_link) [ ] ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($book_link) [ ] ) ; T_VARIABLE($variables) [ ] = . T_VARIABLE($book_link) [ ] ; T_VARIABLE($variables) [ ] = T_VARIABLE($book_link) [ ] ; T_VARIABLE($variables) [ ] = ; T_IF ( T_VARIABLE($book_link) [ ] ) { T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($book_link) ) ; T_IF ( T_VARIABLE($prev) = T_STRING ( T_VARIABLE($book_link) ) ) { T_VARIABLE($prev_href) = T_STRING ( T_VARIABLE($prev) [ ] ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($prev_href) ) ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($prev_href) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($prev) [ ] ) ; } T_IF ( T_VARIABLE($book_link) [ ] T_BOOLEAN_AND T_VARIABLE($parent) = T_STRING ( T_VARIABLE($book_link) [ ] ) ) { T_VARIABLE($parent_href) = T_STRING ( T_VARIABLE($parent) [ ] ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($parent_href) ) ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($parent_href) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($parent) [ ] ) ; } T_IF ( T_VARIABLE($next) = T_STRING ( T_VARIABLE($book_link) ) ) { T_VARIABLE($next_href) = T_STRING ( T_VARIABLE($next) [ ] ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($next_href) ) ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($next_href) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($next) [ ] ) ; } } T_VARIABLE($variables) [ ] = T_STRING ; T_VARIABLE($links) = T_ARRAY ( , , , , , ) ; T_FOREACH ( T_VARIABLE($links) T_AS T_VARIABLE($link) ) { T_IF ( T_ISSET ( T_VARIABLE($variables) [ T_VARIABLE($link) ] ) ) { T_VARIABLE($variables) [ ] = T_STRING ; } T_ELSE { T_VARIABLE($variables) [ T_VARIABLE($link) ] = ; } } } T_FUNCTION(_book_toc_recurse) ( T_VARIABLE($tree) , T_VARIABLE($indent) , & T_VARIABLE($toc) , T_VARIABLE($exclude) , T_VARIABLE($depth_limit) ) { T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($data) ) { T_IF ( T_VARIABLE($data) [ ] [ ] > T_VARIABLE($depth_limit) ) { T_BREAK ; } T_IF ( ! T_STRING ( T_VARIABLE($data) [ ] [ ] , T_VARIABLE($exclude) ) ) { T_VARIABLE($toc) [ T_VARIABLE($data) [ ] [ ] ] = T_VARIABLE($indent) . . T_STRING ( T_VARIABLE($data) [ ] [ ] , T_LNUMBER , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($data) [ ] ) { T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($indent) . , T_VARIABLE($toc) , T_VARIABLE($exclude) , T_VARIABLE($depth_limit) ) ; } } } } T_FUNCTION(book_toc) ( T_VARIABLE($bid) , T_VARIABLE($exclude) = T_ARRAY ( ) , T_VARIABLE($depth_limit) ) { T_VARIABLE($tree) = T_STRING ( T_STRING ( T_VARIABLE($bid) ) ) ; T_VARIABLE($toc) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($tree) , , T_VARIABLE($toc) , T_VARIABLE($exclude) , T_VARIABLE($depth_limit) ) ; T_RETURN T_VARIABLE($toc) ; } T_FUNCTION(template_preprocess_book_export_html) ( & T_VARIABLE($variables) ) { T_GLOBAL T_VARIABLE($base_url) , T_VARIABLE($language) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($base_url) ; T_VARIABLE($variables) [ ] = T_VARIABLE($language) ; T_VARIABLE($variables) [ ] = ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) ? T_STRING : T_STRING ; T_VARIABLE($variables) [ ] = T_STRING ( ) ; } T_FUNCTION(book_export_traverse) ( T_VARIABLE($tree) , T_VARIABLE($visit_func) ) { T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($data) ) { T_IF ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($data) [ ] [ ] , T_STRING ) ) { T_VARIABLE($children) = ; T_IF ( T_VARIABLE($data) [ ] ) { T_VARIABLE($children) = T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($visit_func) ) ; } T_IF ( T_STRING ( T_VARIABLE($visit_func) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($visit_func) , T_VARIABLE($node) , T_VARIABLE($children) ) ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($node) , T_VARIABLE($children) ) ; } } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(book_node_export) ( T_VARIABLE($node) , T_VARIABLE($children) = ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($node) , T_STRING , T_STRING ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ( , T_VARIABLE($node) , T_VARIABLE($children) ) ; } T_FUNCTION(template_preprocess_book_node_export_html) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING [ ] ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(book_type_is_allowed) ( T_VARIABLE($type) ) { T_RETURN T_STRING ( T_VARIABLE($type) , T_STRING ( , T_ARRAY ( ) ) ) ; } T_FUNCTION(book_node_type) ( T_VARIABLE($op) , T_VARIABLE($type) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_IF ( ! T_EMPTY ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($allowed_types) = T_STRING ( , T_ARRAY ( ) ) ; T_VARIABLE($key) = T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($allowed_types) ) ; T_IF ( T_VARIABLE($key) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($allowed_types) [ T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($allowed_types) [ T_VARIABLE($key) ] ? T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING : T_LNUMBER ; T_UNSET ( T_VARIABLE($allowed_types) [ T_VARIABLE($key) ] ) ; T_STRING ( , T_VARIABLE($allowed_types) ) ; } T_IF ( T_STRING ( , ) T_IS_EQUAL T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ; } } T_BREAK ; } } T_FUNCTION(book_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; } } T_FUNCTION(book_link_load) ( T_VARIABLE($mlid) ) { T_IF ( T_VARIABLE($item) = T_STRING ( T_STRING ( , T_VARIABLE($mlid) ) ) ) { T_STRING ( T_VARIABLE($item) ) ; T_RETURN T_VARIABLE($item) ; } T_RETURN T_STRING ; } T_FUNCTION(book_menu_subtree_data) ( T_VARIABLE($item) ) { T_STATIC T_VARIABLE($tree) = T_ARRAY ( ) ; T_VARIABLE($cid) = . T_VARIABLE($item) [ ] . . T_VARIABLE($item) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($tree) [ T_VARIABLE($cid) ] ) ) { T_VARIABLE($cache) = T_STRING ( T_VARIABLE($cid) , ) ; T_IF ( T_VARIABLE($cache) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($data) = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($match) = T_ARRAY ( ) ; T_VARIABLE($args) = T_ARRAY ( T_VARIABLE($item) [ ] ) ; T_VARIABLE($i) = T_LNUMBER ; T_WHILE ( T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($item) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) ] ) { T_VARIABLE($match) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($args) [ ] = T_VARIABLE($item) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) ] ; T_VARIABLE($i) T_INC ; } T_VARIABLE($sql) = . T_STRING ( , T_VARIABLE($match) ) . ; T_VARIABLE($data) [ ] = T_STRING ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($args) ) , T_ARRAY ( ) , T_VARIABLE($item) [ ] ) ; T_VARIABLE($data) [ ] = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($data) [ ] ) ; T_STRING ( T_VARIABLE($cid) , T_VARIABLE($data) , ) ; } T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($data) [ ] ) ; T_VARIABLE($tree) [ T_VARIABLE($cid) ] = T_VARIABLE($data) [ ] ; } T_RETURN T_VARIABLE($tree) [ T_VARIABLE($cid) ] ; }",13,0
"T_OPEN_TAG T_FUNCTION(book_render) ( ) { T_VARIABLE($book_list) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($book) ) { T_VARIABLE($book_list) [ ] = T_STRING ( T_VARIABLE($book) [ ] , T_VARIABLE($book) [ ] , T_VARIABLE($book) [ ] ) ; } T_RETURN T_STRING ( , T_VARIABLE($book_list) ) ; } T_FUNCTION(book_export) ( T_VARIABLE($type) , T_VARIABLE($nid) ) { T_VARIABLE($type) = T_STRING ( T_VARIABLE($type) ) ; T_VARIABLE($export_function) = . T_VARIABLE($type) ; T_IF ( T_STRING ( T_VARIABLE($export_function) ) ) { T_PRINT T_STRING ( T_VARIABLE($export_function) , T_VARIABLE($nid) ) ; } T_ELSE { T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } } T_FUNCTION(book_export_html) ( T_VARIABLE($nid) ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($export_data) = T_ARRAY ( ) ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($nid) ) ; T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($tree) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($contents) = T_STRING ( T_VARIABLE($tree) , ) ; } T_RETURN T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($contents) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ; } T_ELSE { T_STRING ( ) ; } } T_FUNCTION(book_outline) ( T_VARIABLE($node) ) { T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_RETURN T_STRING ( , T_VARIABLE($node) ) ; } T_FUNCTION(book_outline_form) ( & T_VARIABLE($form_state) , T_VARIABLE($node) ) { T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($form) [ ] = T_VARIABLE($node) ; T_VARIABLE($form) [ ] = ; T_STRING ( T_VARIABLE($form) , T_VARIABLE($node) ) ; T_VARIABLE($form) [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ? T_STRING ( ) : T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(book_remove_button_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_state) [ ] = . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING . ; } T_FUNCTION(book_outline_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($node) = T_VARIABLE($form) [ ] ; T_VARIABLE($form_state) [ ] = . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($book_link) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( ! T_VARIABLE($book_link) [ ] ) { T_STRING ( T_STRING ( ) ) ; T_RETURN ; } T_VARIABLE($book_link) [ ] = T_STRING ( T_VARIABLE($book_link) [ ] ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($book_link) ; T_IF ( T_STRING ( T_VARIABLE($node) ) ) { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) { T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING . ; } T_ELSE { T_STRING ( T_STRING ( ) ) ; } } T_ELSE { T_STRING ( T_STRING ( ) , ) ; } } T_FUNCTION(book_remove_form) ( & T_VARIABLE($form_state) , T_VARIABLE($node) ) { T_VARIABLE($form) [ ] = T_VARIABLE($node) ; T_VARIABLE($title) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) { T_VARIABLE($description) = T_STRING ( , T_VARIABLE($title) ) ; } T_ELSE { T_VARIABLE($description) = T_STRING ( , T_VARIABLE($title) ) ; } T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_VARIABLE($title) ) , . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($description) , T_STRING ( ) ) ; } T_FUNCTION(book_remove_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($node) = T_VARIABLE($form) [ ] ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) { T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($form_state) [ ] = . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(book_form_update) ( ) { T_VARIABLE($cid) = . T_VARIABLE($_POST) [ ] ; T_VARIABLE($bid) = T_VARIABLE($_POST) [ ] [ ] ; T_VARIABLE($cache) = T_STRING ( T_VARIABLE($cid) , ) ; T_IF ( T_VARIABLE($cache) ) { T_VARIABLE($form) = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] [ ] [ ] [ T_VARIABLE($bid) ] ) ) { T_VARIABLE($book_link) = T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($book_link) [ ] = T_VARIABLE($bid) ; T_VARIABLE($form) [ ] [ ] = T_STRING ( T_VARIABLE($book_link) ) ; T_STRING ( T_VARIABLE($cid) , T_VARIABLE($form) , , T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form_state) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) [ ] [ ] , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($output) = T_STRING ( T_VARIABLE($form) [ ] [ ] ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($output) ) ) ; } T_ELSE { T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; } } T_ELSE { T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; } T_EXIT ( ) ; }",9,1
"T_OPEN_TAG T_FUNCTION(color_requirements) ( T_VARIABLE($phase) ) { T_VARIABLE($requirements) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($info) = T_STRING ( ) ; T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($info) [ ] , ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($requirements) [ ] [ ] = T_STRING ; } T_ELSE { T_VARIABLE($requirements) [ ] [ ] = T_STRING ; T_VARIABLE($requirements) [ ] [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } } T_ELSE { T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) , ) ; } T_VARIABLE($requirements) [ ] [ ] = T_STRING ( ) ; } T_RETURN T_VARIABLE($requirements) ; }",1,0
"T_OPEN_TAG T_FUNCTION(color_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(color_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(color_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_VARIABLE($form_id) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_STRING ( T_LNUMBER ) ) T_BOOLEAN_AND T_STRING ( ) ) { T_IF ( T_STRING ( , T_STRING ) T_IS_NOT_EQUAL T_STRING ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] T_PLUS_EQUAL T_STRING ( T_VARIABLE($form_state) , T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($form) [ ] [ ] = ; } } T_IF ( T_VARIABLE($form_id) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($form_id) T_IS_EQUAL ) { T_VARIABLE($themes) = T_STRING ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($theme) ) { T_IF ( T_VARIABLE($screenshot) = T_STRING ( . T_VARIABLE($theme) . , T_STRING ) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($theme) ] [ ] ) ) { T_VARIABLE($form) [ T_VARIABLE($theme) ] [ ] [ ] = T_STRING ( , T_VARIABLE($screenshot) , , , T_ARRAY ( T_DOUBLE_ARROW ) , T_STRING ) ; } } } } } T_FUNCTION(_color_page_alter) ( & T_VARIABLE($vars) ) { T_GLOBAL T_VARIABLE($language) , T_VARIABLE($theme_key) ; T_VARIABLE($color_paths) = T_STRING ( . T_VARIABLE($theme_key) . , T_ARRAY ( ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($color_paths) ) ) { T_VARIABLE($new_theme_css) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($vars) [ ] [ ] [ ] T_AS T_VARIABLE($old_path) T_DOUBLE_ARROW T_VARIABLE($old_preprocess) ) { T_VARIABLE($new_theme_css) [ T_VARIABLE($old_path) ] = T_VARIABLE($old_preprocess) ; T_FOREACH ( T_VARIABLE($color_paths) T_AS T_VARIABLE($color_path) ) { T_IF ( T_STRING ( T_VARIABLE($old_path) ) T_IS_EQUAL T_STRING ( T_VARIABLE($color_path) ) ) { T_UNSET ( T_VARIABLE($new_theme_css) [ T_VARIABLE($old_path) ] ) ; T_VARIABLE($new_theme_css) [ T_VARIABLE($color_path) ] = T_VARIABLE($old_preprocess) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) { T_VARIABLE($rtl_old_path) = T_STRING ( , , T_VARIABLE($old_path) ) ; T_VARIABLE($rtl_color_path) = T_STRING ( , , T_VARIABLE($color_path) ) ; T_IF ( T_STRING ( T_VARIABLE($rtl_color_path) ) ) { T_UNSET ( T_VARIABLE($new_theme_css) [ T_VARIABLE($rtl_old_path) ] ) ; T_VARIABLE($new_theme_css) [ T_VARIABLE($rtl_color_path) ] = T_VARIABLE($old_preprocess) ; } } T_BREAK ; } } } T_VARIABLE($vars) [ ] [ ] [ ] = T_VARIABLE($new_theme_css) ; T_VARIABLE($vars) [ ] = T_STRING ( T_VARIABLE($vars) [ ] ) ; } T_VARIABLE($logo) = T_STRING ( . T_VARIABLE($theme_key) . , T_STRING ) ; T_IF ( T_VARIABLE($logo) T_BOOLEAN_AND T_VARIABLE($vars) [ ] T_BOOLEAN_AND T_STRING ( . T_VARIABLE($theme_key) . , T_VARIABLE($vars) [ ] ) ) { T_VARIABLE($vars) [ ] = T_STRING ( ) . T_VARIABLE($logo) ; } } T_FUNCTION(color_get_info) ( T_VARIABLE($theme) ) { T_VARIABLE($path) = T_STRING ( , T_VARIABLE($theme) ) ; T_VARIABLE($file) = T_VARIABLE($path) . ; T_IF ( T_VARIABLE($path) T_BOOLEAN_AND T_STRING ( T_VARIABLE($file) ) ) { T_INCLUDE T_VARIABLE($file) ; T_RETURN T_VARIABLE($info) ; } } T_FUNCTION(color_get_palette) ( T_VARIABLE($theme) , T_VARIABLE($default) = T_STRING ) { T_VARIABLE($fields) = T_ARRAY ( , , , , ) ; T_VARIABLE($info) = T_STRING ( T_VARIABLE($theme) ) ; T_VARIABLE($keys) = T_STRING ( T_VARIABLE($info) [ ] ) ; T_FOREACH ( T_STRING ( , T_STRING ( T_VARIABLE($keys) ) ) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($scheme) ) { T_VARIABLE($palette) [ T_VARIABLE($fields) [ T_VARIABLE($k) ] ] = T_VARIABLE($scheme) ; } T_RETURN T_VARIABLE($default) ? T_VARIABLE($palette) : T_STRING ( . T_VARIABLE($theme) . , T_VARIABLE($palette) ) ; } T_FUNCTION(color_scheme_form) ( & T_VARIABLE($form_state) , T_VARIABLE($theme) ) { T_VARIABLE($base) = T_STRING ( , ) ; T_VARIABLE($info) = T_STRING ( T_VARIABLE($theme) ) ; T_STRING ( , , , T_STRING ) ; T_STRING ( ) ; T_STRING ( T_VARIABLE($base) . , , , T_STRING ) ; T_STRING ( T_VARIABLE($base) . ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($theme) , T_STRING ) ) ) , ) ; T_VARIABLE($current) = T_STRING ( , T_STRING ( . T_VARIABLE($theme) . , T_ARRAY ( ) ) ) ; T_VARIABLE($current) = T_ISSET ( T_VARIABLE($info) [ ] [ T_VARIABLE($current) ] ) ? T_VARIABLE($current) : ( T_VARIABLE($current) T_IS_EQUAL ? T_STRING ( T_VARIABLE($info) [ ] ) : ) ; T_VARIABLE($info) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($info) [ ] , T_DOUBLE_ARROW T_VARIABLE($current) , ) ; T_VARIABLE($palette) = T_STRING ( T_VARIABLE($theme) ) ; T_VARIABLE($names) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_STRING ; T_FOREACH ( T_VARIABLE($palette) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($name) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($names) [ T_VARIABLE($name) ] , T_DOUBLE_ARROW T_VARIABLE($value) , T_DOUBLE_ARROW T_LNUMBER , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($info) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(theme_color_scheme_form) ( T_VARIABLE($form) ) { T_VARIABLE($theme) = T_VARIABLE($form) [ ] [ ] ; T_VARIABLE($info) = T_VARIABLE($form) [ ] [ ] ; T_VARIABLE($path) = T_STRING ( , T_VARIABLE($theme) ) . ; T_STRING ( T_VARIABLE($path) . T_VARIABLE($info) [ ] ) ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($name) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($name) ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . T_VARIABLE($path) . T_VARIABLE($info) [ ] . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(color_scheme_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_RETURN ; } T_VARIABLE($theme) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($info) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($palette) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($scheme) = T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_FOREACH ( T_VARIABLE($palette) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($color) ) { T_VARIABLE($palette) [ T_VARIABLE($k) ] = T_STRING ( T_VARIABLE($scheme) ) ; } } T_IF ( T_STRING ( ) ) { T_VARIABLE($source) = T_STRING ( , T_VARIABLE($theme) ) . . T_VARIABLE($info) [ ] ; T_LIST ( T_VARIABLE($width) , T_VARIABLE($height) ) = T_STRING ( T_VARIABLE($source) ) ; T_VARIABLE($required) = T_VARIABLE($width) * T_VARIABLE($height) * T_LNUMBER ; T_VARIABLE($usage) = T_STRING ( ) ; T_VARIABLE($limit) = T_STRING ( T_STRING ( ) ) ; T_IF ( T_VARIABLE($usage) + T_VARIABLE($required) > T_VARIABLE($limit) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($usage) + T_VARIABLE($required) - T_VARIABLE($limit) ) , T_DOUBLE_ARROW ) ) , ) ; T_RETURN ; } } T_FOREACH ( T_STRING ( . T_VARIABLE($theme) . , T_ARRAY ( ) ) T_AS T_VARIABLE($file) ) { @ T_STRING ( T_VARIABLE($file) ) ; } T_IF ( T_ISSET ( T_VARIABLE($file) ) T_BOOLEAN_AND T_VARIABLE($file) = T_STRING ( T_VARIABLE($file) ) ) { @ T_STRING ( T_VARIABLE($file) ) ; } T_IF ( T_STRING ( , T_STRING ( T_VARIABLE($theme) , T_STRING ) ) T_IS_EQUAL T_STRING ( , T_VARIABLE($palette) ) T_BOOLEAN_OR T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_STRING ( . T_VARIABLE($theme) . ) ; T_STRING ( . T_VARIABLE($theme) . ) ; T_STRING ( . T_VARIABLE($theme) . ) ; T_STRING ( . T_VARIABLE($theme) . ) ; T_STRING ( . T_VARIABLE($theme) . ) ; T_RETURN ; } T_VARIABLE($id) = T_VARIABLE($theme) . . T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($palette) ) . T_STRING ( ) ) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($paths) [ ] = T_STRING ( ) . ; T_VARIABLE($paths) [ ] = T_VARIABLE($paths) [ ] . . T_VARIABLE($id) ; T_FOREACH ( T_VARIABLE($paths) T_AS T_VARIABLE($path) ) { T_STRING ( T_VARIABLE($path) , T_STRING ) ; } T_VARIABLE($paths) [ ] = T_VARIABLE($paths) [ ] . ; T_VARIABLE($paths) [ ] = T_VARIABLE($id) ; T_VARIABLE($paths) [ ] = T_STRING ( , T_VARIABLE($theme) ) . ; T_VARIABLE($paths) [ ] = T_VARIABLE($paths) [ ] = T_ARRAY ( ) ; T_STRING ( . T_VARIABLE($theme) . , T_VARIABLE($palette) ) ; T_STRING ( . T_VARIABLE($theme) . , T_VARIABLE($paths) [ ] . ) ; T_FOREACH ( T_VARIABLE($info) [ ] T_AS T_VARIABLE($file) ) { T_VARIABLE($base) = T_STRING ( T_VARIABLE($file) ) ; T_VARIABLE($source) = T_VARIABLE($paths) [ ] . T_VARIABLE($file) ; T_STRING ( T_VARIABLE($source) , T_VARIABLE($paths) [ ] . T_VARIABLE($base) ) ; T_VARIABLE($paths) [ ] [ T_VARIABLE($file) ] = T_VARIABLE($base) ; T_VARIABLE($paths) [ ] [ ] = T_VARIABLE($paths) [ ] . T_VARIABLE($base) ; } T_IF ( T_VARIABLE($info) [ ] ) { T_STRING ( T_VARIABLE($theme) , T_VARIABLE($info) , T_VARIABLE($paths) , T_VARIABLE($palette) ) ; } T_VARIABLE($css) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($info) [ ] T_AS T_VARIABLE($stylesheet) ) { T_VARIABLE($files) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($paths) [ ] . T_VARIABLE($stylesheet) ) ) { T_VARIABLE($files) [ ] = T_VARIABLE($stylesheet) ; T_VARIABLE($rtl_file) = T_STRING ( , , T_VARIABLE($stylesheet) ) ; T_IF ( T_STRING ( T_VARIABLE($paths) [ ] . T_VARIABLE($rtl_file) ) ) { T_VARIABLE($files) [ ] = T_VARIABLE($rtl_file) ; } } T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($file) ) { T_VARIABLE($style) = T_STRING ( T_VARIABLE($paths) [ ] . T_VARIABLE($file) , T_STRING ) ; T_VARIABLE($base) = T_STRING ( ) . T_STRING ( T_VARIABLE($paths) [ ] . T_VARIABLE($file) ) . ; T_STRING ( T_STRING , T_VARIABLE($base) ) ; T_VARIABLE($style) = T_STRING ( , , T_VARIABLE($style) ) ; T_VARIABLE($style) = T_STRING ( T_VARIABLE($theme) , T_VARIABLE($info) , T_VARIABLE($paths) , T_VARIABLE($palette) , T_VARIABLE($style) ) ; T_VARIABLE($base_file) = T_STRING ( T_VARIABLE($file) ) ; T_VARIABLE($css) [ ] = T_VARIABLE($paths) [ ] . T_VARIABLE($base_file) ; T_STRING ( T_VARIABLE($paths) [ ] . T_VARIABLE($base_file) , T_VARIABLE($style) , T_VARIABLE($paths) ) ; } } T_STRING ( . T_VARIABLE($theme) . , T_VARIABLE($css) ) ; T_STRING ( . T_VARIABLE($theme) . , T_VARIABLE($paths) [ ] ) ; } T_FUNCTION(_color_rewrite_stylesheet) ( T_VARIABLE($theme) , & T_VARIABLE($info) , & T_VARIABLE($paths) , T_VARIABLE($palette) , T_VARIABLE($style) ) { T_VARIABLE($themes) = T_STRING ( ) ; T_VARIABLE($conversion) = T_VARIABLE($palette) ; T_UNSET ( T_VARIABLE($conversion) [ ] ) ; T_FOREACH ( T_VARIABLE($conversion) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($conversion) [ T_VARIABLE($k) ] = T_STRING ( T_VARIABLE($v) ) ; } T_VARIABLE($default) = T_STRING ( T_VARIABLE($theme) , T_STRING ) ; T_VARIABLE($split) = ; T_IF ( T_STRING ( T_VARIABLE($style) , T_VARIABLE($split) ) T_IS_NOT_IDENTICAL T_STRING ) { T_LIST ( T_VARIABLE($style) , T_VARIABLE($fixed) ) = T_STRING ( T_VARIABLE($split) , T_VARIABLE($style) ) ; } T_VARIABLE($style) = T_STRING ( , T_VARIABLE($style) , - T_LNUMBER , T_STRING ) ; T_VARIABLE($is_color) = T_STRING ; T_VARIABLE($output) = ; T_VARIABLE($base) = ; T_FOREACH ( T_VARIABLE($style) T_AS T_VARIABLE($chunk) ) { T_IF ( T_VARIABLE($is_color) ) { T_VARIABLE($chunk) = T_STRING ( T_VARIABLE($chunk) ) ; T_IF ( T_VARIABLE($key) = T_STRING ( T_VARIABLE($chunk) , T_VARIABLE($default) ) ) { T_VARIABLE($chunk) = T_VARIABLE($conversion) [ T_VARIABLE($key) ] ; } T_ELSE { T_VARIABLE($chunk) = T_STRING ( T_VARIABLE($palette) [ T_VARIABLE($base) ] , T_VARIABLE($default) [ T_VARIABLE($base) ] , T_VARIABLE($chunk) , T_VARIABLE($info) [ ] ) ; } } T_ELSE { T_IF ( T_STRING ( , T_VARIABLE($chunk) ) ) { T_VARIABLE($base) = ; } T_ELSE T_IF ( T_STRING ( , T_VARIABLE($chunk) ) ) { T_VARIABLE($base) = ; } T_ELSE { T_VARIABLE($base) = ; } } T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($chunk) ; T_VARIABLE($is_color) = ! T_VARIABLE($is_color) ; } T_IF ( T_ISSET ( T_VARIABLE($fixed) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($fixed) ; } T_FOREACH ( T_VARIABLE($paths) [ ] T_AS T_VARIABLE($before) T_DOUBLE_ARROW T_VARIABLE($after) ) { T_VARIABLE($before) = T_STRING ( ) . T_VARIABLE($paths) [ ] . T_VARIABLE($before) ; T_VARIABLE($before) = T_STRING ( , , T_VARIABLE($before) ) ; T_VARIABLE($output) = T_STRING ( T_VARIABLE($before) , T_VARIABLE($after) , T_VARIABLE($output) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_color_save_stylesheet) ( T_VARIABLE($file) , T_VARIABLE($style) , & T_VARIABLE($paths) ) { T_STRING ( T_VARIABLE($style) , T_VARIABLE($file) , T_STRING ) ; T_VARIABLE($paths) [ ] [ ] = T_VARIABLE($file) ; @ T_STRING ( T_VARIABLE($file) , T_LNUMBER ) ; } T_FUNCTION(_color_render_images) ( T_VARIABLE($theme) , & T_VARIABLE($info) , & T_VARIABLE($paths) , T_VARIABLE($palette) ) { T_VARIABLE($source) = T_VARIABLE($paths) [ ] . . T_VARIABLE($info) [ ] ; T_VARIABLE($source) = T_STRING ( T_VARIABLE($source) ) ; T_VARIABLE($width) = T_STRING ( T_VARIABLE($source) ) ; T_VARIABLE($height) = T_STRING ( T_VARIABLE($source) ) ; T_VARIABLE($target) = T_STRING ( T_VARIABLE($width) , T_VARIABLE($height) ) ; T_STRING ( T_VARIABLE($target) , T_STRING ) ; T_FOREACH ( T_VARIABLE($info) [ ] T_AS T_VARIABLE($color) T_DOUBLE_ARROW T_VARIABLE($fill) ) { T_STRING ( T_VARIABLE($target) , T_VARIABLE($fill) [ T_LNUMBER ] , T_VARIABLE($fill) [ T_LNUMBER ] , T_VARIABLE($fill) [ T_LNUMBER ] + T_VARIABLE($fill) [ T_LNUMBER ] , T_VARIABLE($fill) [ T_LNUMBER ] + T_VARIABLE($fill) [ T_LNUMBER ] , T_STRING ( T_VARIABLE($target) , T_VARIABLE($palette) [ T_VARIABLE($color) ] ) ) ; } T_FOR ( T_VARIABLE($y) = T_LNUMBER ; T_VARIABLE($y) < T_VARIABLE($info) [ ] [ T_LNUMBER ] ; T_INC T_VARIABLE($y) ) { T_VARIABLE($color) = T_STRING ( T_VARIABLE($target) , T_VARIABLE($palette) [ ] , T_VARIABLE($palette) [ ] , T_VARIABLE($y) / ( T_VARIABLE($info) [ ] [ T_LNUMBER ] - T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($target) , T_VARIABLE($info) [ ] [ T_LNUMBER ] , T_VARIABLE($info) [ ] [ T_LNUMBER ] + T_VARIABLE($y) , T_VARIABLE($info) [ ] [ T_LNUMBER ] + T_VARIABLE($info) [ ] [ T_LNUMBER ] , T_VARIABLE($info) [ ] [ T_LNUMBER ] + T_VARIABLE($y) + T_LNUMBER , T_VARIABLE($color) ) ; } T_STRING ( T_VARIABLE($target) , T_VARIABLE($source) , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_VARIABLE($width) , T_VARIABLE($height) ) ; T_STRING ( T_VARIABLE($source) ) ; T_FOREACH ( T_VARIABLE($info) [ ] T_AS T_VARIABLE($file) T_DOUBLE_ARROW T_VARIABLE($coord) ) { T_LIST ( T_VARIABLE($x) , T_VARIABLE($y) , T_VARIABLE($width) , T_VARIABLE($height) ) = T_VARIABLE($coord) ; T_VARIABLE($base) = T_STRING ( T_VARIABLE($file) ) ; T_VARIABLE($image) = T_VARIABLE($paths) [ ] . T_VARIABLE($base) ; T_IF ( T_VARIABLE($file) T_IS_EQUAL ) { T_VARIABLE($slice) = T_STRING ( T_LNUMBER , T_LNUMBER ) ; T_STRING ( T_VARIABLE($slice) , T_VARIABLE($target) , T_LNUMBER , T_LNUMBER , T_VARIABLE($x) , T_VARIABLE($y) , T_LNUMBER , T_LNUMBER , T_VARIABLE($width) , T_VARIABLE($height) ) ; T_STRING ( . T_VARIABLE($theme) . , T_VARIABLE($image) ) ; } T_ELSE { T_VARIABLE($slice) = T_STRING ( T_VARIABLE($width) , T_VARIABLE($height) ) ; T_STRING ( T_VARIABLE($slice) , T_VARIABLE($target) , T_LNUMBER , T_LNUMBER , T_VARIABLE($x) , T_VARIABLE($y) , T_VARIABLE($width) , T_VARIABLE($height) ) ; } T_STRING ( T_VARIABLE($slice) , T_VARIABLE($image) ) ; T_STRING ( T_VARIABLE($slice) ) ; T_VARIABLE($paths) [ ] [ ] = T_VARIABLE($image) ; @ T_STRING ( T_STRING ( T_VARIABLE($image) ) , T_LNUMBER ) ; T_VARIABLE($paths) [ ] [ T_VARIABLE($file) ] = T_VARIABLE($base) ; } T_STRING ( T_VARIABLE($target) ) ; } T_FUNCTION(_color_shift) ( T_VARIABLE($given) , T_VARIABLE($ref1) , T_VARIABLE($ref2) , T_VARIABLE($target) ) { T_VARIABLE($target) = T_STRING ( T_VARIABLE($target) , T_STRING ) ; T_VARIABLE($ref1) = T_STRING ( T_VARIABLE($ref1) , T_STRING ) ; T_VARIABLE($ref2) = T_STRING ( T_VARIABLE($ref2) , T_STRING ) ; T_VARIABLE($numerator) = T_LNUMBER ; T_VARIABLE($denominator) = T_LNUMBER ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_INC T_VARIABLE($i) ) { T_VARIABLE($numerator) T_PLUS_EQUAL ( T_VARIABLE($ref2) [ T_VARIABLE($i) ] - T_VARIABLE($ref1) [ T_VARIABLE($i) ] ) * ( T_VARIABLE($ref2) [ T_VARIABLE($i) ] - T_VARIABLE($ref1) [ T_VARIABLE($i) ] ) ; T_VARIABLE($denominator) T_PLUS_EQUAL ( T_VARIABLE($target) [ T_VARIABLE($i) ] - T_VARIABLE($ref1) [ T_VARIABLE($i) ] ) * ( T_VARIABLE($target) [ T_VARIABLE($i) ] - T_VARIABLE($ref1) [ T_VARIABLE($i) ] ) ; } T_VARIABLE($delta) = ( T_VARIABLE($denominator) > T_LNUMBER ) ? ( T_LNUMBER - T_STRING ( T_VARIABLE($numerator) / T_VARIABLE($denominator) ) ) : T_LNUMBER ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_INC T_VARIABLE($i) ) { T_VARIABLE($ref3) [ T_VARIABLE($i) ] = T_VARIABLE($target) [ T_VARIABLE($i) ] + ( T_VARIABLE($ref1) [ T_VARIABLE($i) ] - T_VARIABLE($target) [ T_VARIABLE($i) ] ) * T_VARIABLE($delta) ; } T_VARIABLE($ref2) = T_STRING ( T_VARIABLE($ref2) ) ; T_VARIABLE($ref3) = T_STRING ( T_VARIABLE($ref3) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_INC T_VARIABLE($i) ) { T_VARIABLE($shift) [ T_VARIABLE($i) ] = T_VARIABLE($ref2) [ T_VARIABLE($i) ] - T_VARIABLE($ref3) [ T_VARIABLE($i) ] ; } T_VARIABLE($given) = T_STRING ( T_VARIABLE($given) , T_STRING ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_INC T_VARIABLE($i) ) { T_VARIABLE($result) [ T_VARIABLE($i) ] = T_VARIABLE($target) [ T_VARIABLE($i) ] + ( T_VARIABLE($given) [ T_VARIABLE($i) ] - T_VARIABLE($target) [ T_VARIABLE($i) ] ) * T_VARIABLE($delta) ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_INC T_VARIABLE($i) ) { T_VARIABLE($result) [ T_VARIABLE($i) ] = T_STRING ( T_LNUMBER , T_STRING ( T_LNUMBER , T_VARIABLE($result) [ T_VARIABLE($i) ] + T_VARIABLE($shift) [ T_VARIABLE($i) ] ) ) ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_STRING ( T_VARIABLE($result) , T_STRING ) ; } T_FUNCTION(_color_gd) ( T_VARIABLE($img) , T_VARIABLE($hex) ) { T_VARIABLE($c) = T_STRING ( T_ARRAY ( T_VARIABLE($img) ) , T_STRING ( T_VARIABLE($hex) ) ) ; T_RETURN T_STRING ( , T_VARIABLE($c) ) ; } T_FUNCTION(_color_blend) ( T_VARIABLE($img) , T_VARIABLE($hex1) , T_VARIABLE($hex2) , T_VARIABLE($alpha) ) { T_VARIABLE($in1) = T_STRING ( T_VARIABLE($hex1) ) ; T_VARIABLE($in2) = T_STRING ( T_VARIABLE($hex2) ) ; T_VARIABLE($out) = T_ARRAY ( T_VARIABLE($img) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_INC T_VARIABLE($i) ) { T_VARIABLE($out) [ ] = T_VARIABLE($in1) [ T_VARIABLE($i) ] + ( T_VARIABLE($in2) [ T_VARIABLE($i) ] - T_VARIABLE($in1) [ T_VARIABLE($i) ] ) * T_VARIABLE($alpha) ; } T_RETURN T_STRING ( , T_VARIABLE($out) ) ; } T_FUNCTION(_color_unpack) ( T_VARIABLE($hex) , T_VARIABLE($normalize) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($hex) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($hex) = T_VARIABLE($hex) [ T_LNUMBER ] . T_VARIABLE($hex) [ T_LNUMBER ] . T_VARIABLE($hex) [ T_LNUMBER ] . T_VARIABLE($hex) [ T_LNUMBER ] . T_VARIABLE($hex) [ T_LNUMBER ] . T_VARIABLE($hex) [ T_LNUMBER ] ; } T_VARIABLE($c) = T_STRING ( T_VARIABLE($hex) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_GREATER_OR_EQUAL T_LNUMBER ; T_VARIABLE($i) T_MINUS_EQUAL T_LNUMBER ) { T_VARIABLE($out) [ ] = ( ( T_VARIABLE($c) T_SR T_VARIABLE($i) ) & T_LNUMBER ) / ( T_VARIABLE($normalize) ? T_LNUMBER : T_LNUMBER ) ; } T_RETURN T_VARIABLE($out) ; } T_FUNCTION(_color_pack) ( T_VARIABLE($rgb) , T_VARIABLE($normalize) = T_STRING ) { T_VARIABLE($out) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($rgb) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($v) ) { T_VARIABLE($out) T_OR_EQUAL ( ( T_VARIABLE($v) * ( T_VARIABLE($normalize) ? T_LNUMBER : T_LNUMBER ) ) T_SL ( T_LNUMBER - T_VARIABLE($k) * T_LNUMBER ) ) ; } T_RETURN . T_STRING ( T_STRING ( T_VARIABLE($out) ) , T_LNUMBER , T_LNUMBER , T_STRING ) ; } T_FUNCTION(_color_hsl2rgb) ( T_VARIABLE($hsl) ) { T_VARIABLE($h) = T_VARIABLE($hsl) [ T_LNUMBER ] ; T_VARIABLE($s) = T_VARIABLE($hsl) [ T_LNUMBER ] ; T_VARIABLE($l) = T_VARIABLE($hsl) [ T_LNUMBER ] ; T_VARIABLE($m2) = ( T_VARIABLE($l) T_IS_SMALLER_OR_EQUAL T_DNUMBER ) ? T_VARIABLE($l) * ( T_VARIABLE($s) + T_LNUMBER ) : T_VARIABLE($l) + T_VARIABLE($s) - T_VARIABLE($l) * T_VARIABLE($s) ; T_VARIABLE($m1) = T_VARIABLE($l) * T_LNUMBER - T_VARIABLE($m2) ; T_RETURN T_ARRAY ( T_STRING ( T_VARIABLE($m1) , T_VARIABLE($m2) , T_VARIABLE($h) + T_DNUMBER ) , T_STRING ( T_VARIABLE($m1) , T_VARIABLE($m2) , T_VARIABLE($h) ) , T_STRING ( T_VARIABLE($m1) , T_VARIABLE($m2) , T_VARIABLE($h) - T_DNUMBER ) , ) ; } T_FUNCTION(_color_hue2rgb) ( T_VARIABLE($m1) , T_VARIABLE($m2) , T_VARIABLE($h) ) { T_VARIABLE($h) = ( T_VARIABLE($h) < T_LNUMBER ) ? T_VARIABLE($h) + T_LNUMBER : ( ( T_VARIABLE($h) > T_LNUMBER ) ? T_VARIABLE($h) - T_LNUMBER : T_VARIABLE($h) ) ; T_IF ( T_VARIABLE($h) * T_LNUMBER < T_LNUMBER ) T_RETURN T_VARIABLE($m1) + ( T_VARIABLE($m2) - T_VARIABLE($m1) ) * T_VARIABLE($h) * T_LNUMBER ; T_IF ( T_VARIABLE($h) * T_LNUMBER < T_LNUMBER ) T_RETURN T_VARIABLE($m2) ; T_IF ( T_VARIABLE($h) * T_LNUMBER < T_LNUMBER ) T_RETURN T_VARIABLE($m1) + ( T_VARIABLE($m2) - T_VARIABLE($m1) ) * ( T_DNUMBER - T_VARIABLE($h) ) * T_LNUMBER ; T_RETURN T_VARIABLE($m1) ; } T_FUNCTION(_color_rgb2hsl) ( T_VARIABLE($rgb) ) { T_VARIABLE($r) = T_VARIABLE($rgb) [ T_LNUMBER ] ; T_VARIABLE($g) = T_VARIABLE($rgb) [ T_LNUMBER ] ; T_VARIABLE($b) = T_VARIABLE($rgb) [ T_LNUMBER ] ; T_VARIABLE($min) = T_STRING ( T_VARIABLE($r) , T_STRING ( T_VARIABLE($g) , T_VARIABLE($b) ) ) ; T_VARIABLE($max) = T_STRING ( T_VARIABLE($r) , T_STRING ( T_VARIABLE($g) , T_VARIABLE($b) ) ) ; T_VARIABLE($delta) = T_VARIABLE($max) - T_VARIABLE($min) ; T_VARIABLE($l) = ( T_VARIABLE($min) + T_VARIABLE($max) ) / T_LNUMBER ; T_VARIABLE($s) = T_LNUMBER ; T_IF ( T_VARIABLE($l) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($l) < T_LNUMBER ) { T_VARIABLE($s) = T_VARIABLE($delta) / ( T_VARIABLE($l) < T_DNUMBER ? ( T_LNUMBER * T_VARIABLE($l) ) : ( T_LNUMBER - T_LNUMBER * T_VARIABLE($l) ) ) ; } T_VARIABLE($h) = T_LNUMBER ; T_IF ( T_VARIABLE($delta) > T_LNUMBER ) { T_IF ( T_VARIABLE($max) T_IS_EQUAL T_VARIABLE($r) T_BOOLEAN_AND T_VARIABLE($max) T_IS_NOT_EQUAL T_VARIABLE($g) ) T_VARIABLE($h) T_PLUS_EQUAL ( T_VARIABLE($g) - T_VARIABLE($b) ) / T_VARIABLE($delta) ; T_IF ( T_VARIABLE($max) T_IS_EQUAL T_VARIABLE($g) T_BOOLEAN_AND T_VARIABLE($max) T_IS_NOT_EQUAL T_VARIABLE($b) ) T_VARIABLE($h) T_PLUS_EQUAL ( T_LNUMBER + ( T_VARIABLE($b) - T_VARIABLE($r) ) / T_VARIABLE($delta) ) ; T_IF ( T_VARIABLE($max) T_IS_EQUAL T_VARIABLE($b) T_BOOLEAN_AND T_VARIABLE($max) T_IS_NOT_EQUAL T_VARIABLE($r) ) T_VARIABLE($h) T_PLUS_EQUAL ( T_LNUMBER + ( T_VARIABLE($r) - T_VARIABLE($g) ) / T_VARIABLE($delta) ) ; T_VARIABLE($h) T_DIV_EQUAL T_LNUMBER ; } T_RETURN T_ARRAY ( T_VARIABLE($h) , T_VARIABLE($s) , T_VARIABLE($l) ) ; }",13,1
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) . . T_VARIABLE($new) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) . . T_VARIABLE($author) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_FUNCTION(comment_admin) ( T_VARIABLE($type) = ) { T_VARIABLE($edit) = T_VARIABLE($_POST) ; T_IF ( T_ISSET ( T_VARIABLE($edit) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($edit) [ ] T_IS_EQUAL ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($edit) [ ] ) T_BOOLEAN_AND T_VARIABLE($edit) [ ] ) { T_RETURN T_STRING ( ) ; } T_ELSE { T_RETURN T_STRING ( , T_VARIABLE($type) , T_STRING ( T_LNUMBER ) ) ; } } T_FUNCTION(comment_admin_overview) ( T_VARIABLE($type) = , T_VARIABLE($arg) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($options) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($arg) T_IS_EQUAL ? : ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($options) [ T_VARIABLE($key) ] = T_VARIABLE($value) [ T_LNUMBER ] ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($status) = ( T_VARIABLE($arg) T_IS_EQUAL ) ? T_STRING : T_STRING ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING ( T_VARIABLE($form) [ ] [ ] ) , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($status) ) ; T_VARIABLE($destination) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($comment) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($comments) [ T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ] = ; T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($form) [ ] [ T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) , T_DOUBLE_ARROW . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($comment) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($comments) ) ? T_VARIABLE($comments) : T_ARRAY ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(comment_admin_overview_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_state) [ ] [ ] = T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_ARRAY ( T_LNUMBER ) ) ; T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; T_STRING ( ) ; } } T_FUNCTION(comment_admin_overview_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($operations) = T_STRING ( ) ; T_IF ( T_VARIABLE($operations) [ T_VARIABLE($form_state) [ ] [ ] ] [ T_LNUMBER ] ) { T_VARIABLE($query) = T_VARIABLE($operations) [ T_VARIABLE($form_state) [ ] [ ] ] [ T_LNUMBER ] ; T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($cid) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_VARIABLE($value) ) { T_STRING ( T_VARIABLE($query) , T_VARIABLE($cid) ) ; T_VARIABLE($comment) = T_STRING ( T_VARIABLE($cid) ) ; T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($comment) , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; } } T_FUNCTION(theme_comment_admin_overview) ( T_VARIABLE($form) ) { T_VARIABLE($output) = T_STRING ( T_VARIABLE($form) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($form) [ ] ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } } T_ELSE { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($form) [ ] [ ] , T_VARIABLE($rows) ) ; T_IF ( T_VARIABLE($form) [ ] [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(comment_multiple_delete_confirm) ( & T_VARIABLE($form_state) ) { T_VARIABLE($edit) = T_VARIABLE($form_state) [ ] ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($comment_counter) = T_LNUMBER ; T_FOREACH ( T_STRING ( T_VARIABLE($edit) [ ] ) T_AS T_VARIABLE($cid) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($comment) = T_STRING ( T_VARIABLE($cid) ) ; T_IF ( T_STRING ( T_VARIABLE($comment) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($subject) = T_STRING ( T_STRING ( , T_VARIABLE($cid) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($cid) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($cid) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($subject) ) . ) ; T_VARIABLE($comment_counter) T_INC ; } } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_IF ( ! T_VARIABLE($comment_counter) ) { T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } } T_FUNCTION(comment_multiple_delete_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($cid) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($comment) = T_STRING ( T_VARIABLE($cid) ) ; T_STRING ( T_VARIABLE($comment) ) ; T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($form_state) [ ] = ; } T_FUNCTION(comment_delete) ( T_VARIABLE($cid) = T_STRING ) { T_VARIABLE($comment) = T_STRING ( T_STRING ( , T_VARIABLE($cid) ) ) ; T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($output) = ; T_IF ( T_STRING ( T_VARIABLE($comment) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($comment) ) ; } T_ELSE { T_STRING ( T_STRING ( ) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(comment_confirm_delete) ( & T_VARIABLE($form_state) , T_VARIABLE($comment) ) { T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_VARIABLE($comment) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) , . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , ) ; } T_FUNCTION(comment_confirm_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_STRING ( ) ) ; T_VARIABLE($comment) = T_VARIABLE($form) [ ] ; T_STRING ( T_VARIABLE($comment) ) ; T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( ) ; T_VARIABLE($form_state) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(_comment_delete_thread) ( T_VARIABLE($comment) ) { T_IF ( ! T_STRING ( T_VARIABLE($comment) ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( , , T_STRING ) ; T_RETURN ; } T_STRING ( , T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( T_VARIABLE($comment) , ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($comment) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_STRING ( T_VARIABLE($comment) ) ; } }",11,0
"T_OPEN_TAG T_FUNCTION(comment_enable) ( ) { T_STRING ( ) ; } T_FUNCTION(comment_update_1) ( ) { T_STRING ( , T_STRING ( ) , T_STRING ( ) ) ; T_IF ( ( T_VARIABLE($last) = T_STRING ( , T_STRING ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_STRING ( , T_STRING ( T_STRING ( ) , T_VARIABLE($last) ) ) ; } T_RETURN T_ARRAY ( ) ; } T_FUNCTION(comment_update_6001) ( ) { T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(comment_update_6002) ( ) { T_STRING ( , ) ; T_VARIABLE($settings) = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($types) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($settings) T_AS T_VARIABLE($setting) T_DOUBLE_ARROW T_VARIABLE($default) ) { T_VARIABLE($value) = T_STRING ( T_VARIABLE($setting) , T_VARIABLE($default) ) ; T_FOREACH ( T_VARIABLE($types) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($object) ) { T_STRING ( T_VARIABLE($setting) . . T_VARIABLE($type) , T_VARIABLE($value) ) ; } T_STRING ( T_VARIABLE($setting) ) ; } T_RETURN T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; } T_FUNCTION(comment_update_6003) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(comment_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_RETURN T_VARIABLE($schema) ; }",6,0
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(comment_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; } } T_FUNCTION(comment_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(comment_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(comment_node_type) ( T_VARIABLE($op) , T_VARIABLE($info) ) { T_VARIABLE($settings) = T_ARRAY ( , , , , , , , , , ) ; T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_FOREACH ( T_VARIABLE($settings) T_AS T_VARIABLE($setting) ) { T_STRING ( T_VARIABLE($setting) . . T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ; } T_BREAK ; } } T_FUNCTION(comment_perm) ( ) { T_RETURN T_ARRAY ( , , , ) ; } T_FUNCTION(comment_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($blocks) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($block) [ ] = T_STRING ( ) ; T_VARIABLE($block) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($block) ; } } T_FUNCTION(comment_get_recent) ( T_VARIABLE($number) = T_LNUMBER ) { T_VARIABLE($result) = T_STRING ( T_STRING ( , ) , T_LNUMBER , T_VARIABLE($number) ) ; T_VARIABLE($nids) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($nids) [ ] = T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($comments) = T_ARRAY ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($nids) ) ) { T_VARIABLE($result) = T_STRING ( . T_STRING ( , T_VARIABLE($nids) ) . , T_STRING , T_LNUMBER , T_VARIABLE($number) ) ; T_WHILE ( T_VARIABLE($comment) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($comments) [ ] = T_VARIABLE($comment) ; } } T_RETURN T_VARIABLE($comments) ; } T_FUNCTION(comment_new_page_count) ( T_VARIABLE($num_comments) , T_VARIABLE($new_replies) , T_VARIABLE($node) ) { T_VARIABLE($comments_per_page) = T_STRING ( , T_VARIABLE($node) ) ; T_VARIABLE($mode) = T_STRING ( , T_VARIABLE($node) ) ; T_VARIABLE($order) = T_STRING ( , T_VARIABLE($node) ) ; T_VARIABLE($pagenum) = T_STRING ; T_VARIABLE($flat) = T_STRING ( T_VARIABLE($mode) , T_ARRAY ( T_STRING , T_STRING ) ) ; T_IF ( T_VARIABLE($num_comments) T_IS_SMALLER_OR_EQUAL T_VARIABLE($comments_per_page) T_BOOLEAN_OR ( T_VARIABLE($flat) T_BOOLEAN_AND T_VARIABLE($order) T_IS_EQUAL T_STRING ) ) { T_VARIABLE($pageno) = T_LNUMBER ; } T_ELSE { T_IF ( T_VARIABLE($flat) ) { T_VARIABLE($count) = T_VARIABLE($num_comments) - T_VARIABLE($new_replies) ; } T_ELSE { T_IF ( T_VARIABLE($order) T_IS_EQUAL T_STRING ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($new_replies) ) ; T_VARIABLE($thread) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($result_count) = T_STRING ( . T_VARIABLE($thread) . , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($new_replies) ) ; T_VARIABLE($thread) = T_STRING ( T_STRING ( T_VARIABLE($result) ) , T_LNUMBER , - T_LNUMBER ) ; T_VARIABLE($result_count) = T_STRING ( . T_VARIABLE($thread) . , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($count) = T_STRING ( T_VARIABLE($result_count) ) ; } T_VARIABLE($pageno) = T_VARIABLE($count) / T_VARIABLE($comments_per_page) ; } T_IF ( T_VARIABLE($pageno) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($pagenum) = . T_STRING ( T_VARIABLE($pageno) ) ; } T_RETURN T_VARIABLE($pagenum) ; } T_FUNCTION(theme_comment_block) ( ) { T_VARIABLE($items) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($comment) ) { T_VARIABLE($items) [ ] = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) . . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_IF ( T_VARIABLE($items) ) { T_RETURN T_STRING ( , T_VARIABLE($items) ) ; } } T_FUNCTION(comment_link) ( T_VARIABLE($type) , T_VARIABLE($node) = T_STRING , T_VARIABLE($teaser) = T_STRING ) { T_VARIABLE($links) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($teaser) ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($all) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($all) ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($all) , , ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW ) ; T_VARIABLE($new) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($new) ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($new) , , ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($all) , T_VARIABLE($new) , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW ) ; } } T_ELSE { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW ) ; } T_ELSE { T_VARIABLE($links) [ ] [ ] = T_STRING ( , T_VARIABLE($node) ) ; } } } } } T_ELSE { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) { T_IF ( T_STRING ( ) ) { T_IF ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) T_IS_EQUAL T_STRING ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW ) ; } } T_ELSE { T_VARIABLE($links) [ ] [ ] = T_STRING ( , T_VARIABLE($node) ) ; } } } } T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($links) = T_STRING ( T_VARIABLE($node) , T_VARIABLE($teaser) ) ; } T_IF ( T_ISSET ( T_VARIABLE($links) [ ] ) ) { T_VARIABLE($links) [ ] [ ] = T_STRING ; } T_RETURN T_VARIABLE($links) ; } T_FUNCTION(comment_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_VARIABLE($form_id) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] [ ] ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_STRING ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_STRING ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ) ) , ) ; T_IF ( ! T_STRING ( , T_STRING ( ) ) ) { T_VARIABLE($form) [ ] [ ] [ ] = T_STRING ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_IF ( T_VARIABLE($form) [ ] [ ] . T_IS_EQUAL T_VARIABLE($form_id) ) { T_VARIABLE($node) = T_VARIABLE($form) [ ] ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) , ) ; } } } T_FUNCTION(comment_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($arg) = T_LNUMBER ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_BREAK ; T_CASE : T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; } T_BREAK ; T_CASE : T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; T_CASE : T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($text) = ; T_VARIABLE($comments) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; T_WHILE ( T_VARIABLE($comment) = T_STRING ( T_VARIABLE($comments) ) ) { T_VARIABLE($text) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; } T_RETURN T_VARIABLE($text) ; T_CASE : T_VARIABLE($comments) = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_RETURN T_STRING ( T_VARIABLE($comments) , , ) ; T_CASE : T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING ) { T_RETURN T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ) ) ) ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } } T_FUNCTION(comment_user) ( T_VARIABLE($type) , T_VARIABLE($edit) , & T_VARIABLE($user) , T_VARIABLE($category) = T_STRING ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(comment_access) ( T_VARIABLE($op) , T_VARIABLE($comment) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_RETURN ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) T_IS_EQUAL T_LNUMBER ) T_BOOLEAN_OR T_STRING ( ) ; } } T_FUNCTION(comment_node_url) ( ) { T_RETURN T_STRING ( T_LNUMBER ) . . T_STRING ( T_LNUMBER ) ; } T_FUNCTION(comment_save) ( T_VARIABLE($edit) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND ( T_STRING ( ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($edit) [ ] ) T_IS_EQUAL T_STRING ) ) { T_IF ( ! T_STRING ( ) ) { T_VARIABLE($edit) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ? T_STRING : T_STRING , ) ; T_IF ( T_VARIABLE($edit) [ ] ) { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] ) ; T_STRING ( T_VARIABLE($edit) , ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($edit) [ ] , T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($edit) [ ] ) ) ) ; } T_ELSE { T_IF ( T_VARIABLE($edit) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($max) = T_STRING ( T_STRING ( , T_VARIABLE($edit) [ ] ) ) ; T_VARIABLE($max) = T_STRING ( T_VARIABLE($max) , ) ; T_VARIABLE($thread) = T_STRING ( T_STRING ( T_VARIABLE($max) ) + T_LNUMBER ) . ; } T_ELSE { T_VARIABLE($parent) = T_STRING ( T_VARIABLE($edit) [ ] ) ; T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING = T_STRING_CAST T_STRING ( T_STRING_CAST T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($max) = T_STRING ( T_STRING ( , T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($edit) [ ] ) ) ; T_IF ( T_VARIABLE($max) T_IS_EQUAL ) { T_VARIABLE($thread) = T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING . . T_STRING ( T_LNUMBER ) . ; } T_ELSE { T_VARIABLE($max) = T_STRING ( T_VARIABLE($max) , ) ; T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($max) ) ; T_VARIABLE($parent_depth) = T_STRING ( T_STRING ( , T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($last) = T_VARIABLE($parts) [ T_VARIABLE($parent_depth) ] ; T_VARIABLE($thread) = T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING . . T_STRING ( T_STRING ( T_VARIABLE($last) ) + T_LNUMBER ) . ; } } T_VARIABLE($edit) [ ] = T_STRING ( ) ; T_IF ( T_VARIABLE($edit) [ ] T_IS_IDENTICAL T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($edit) [ ] = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_STRING ( ) , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($thread) , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] ) ; T_VARIABLE($edit) [ ] = T_STRING ( , ) ; T_STRING ( T_VARIABLE($edit) , ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($edit) [ ] , T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($edit) [ ] ) ) ) ; } T_STRING ( T_VARIABLE($edit) [ ] ) ; T_STRING ( ) ; T_IF ( T_VARIABLE($edit) [ ] T_IS_EQUAL T_STRING ) { T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_STRING ( T_VARIABLE($edit) , ) ; } T_RETURN T_VARIABLE($edit) [ ] ; } T_ELSE { T_RETURN T_STRING ; } } T_ELSE { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) , T_STRING ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ) , ) ; T_RETURN T_STRING ; } } T_FUNCTION(comment_links) ( T_VARIABLE($comment) , T_VARIABLE($return) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($links) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($return) ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) T_IS_EQUAL T_STRING ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE T_IF ( T_STRING ( ) ) { T_IF ( T_STRING ( , T_VARIABLE($comment) ) ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($node) = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($links) [ ] [ ] = T_STRING ( , T_VARIABLE($node) ) ; } } T_RETURN T_VARIABLE($links) ; } T_FUNCTION(comment_render) ( T_VARIABLE($node) , T_VARIABLE($cid) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($output) = ; T_IF ( T_STRING ( ) ) { T_VARIABLE($nid) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_EMPTY ( T_VARIABLE($nid) ) ) { T_VARIABLE($nid) = T_LNUMBER ; } T_VARIABLE($mode) = T_STRING ( , T_VARIABLE($node) ) ; T_VARIABLE($order) = T_STRING ( , T_VARIABLE($node) ) ; T_VARIABLE($comments_per_page) = T_STRING ( , T_VARIABLE($node) ) ; T_IF ( T_VARIABLE($cid) T_BOOLEAN_AND T_STRING ( T_VARIABLE($cid) ) ) { T_VARIABLE($query) = ; T_VARIABLE($query_args) = T_ARRAY ( T_VARIABLE($cid) ) ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query_args) [ ] = T_STRING ; } T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) , , ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) , T_VARIABLE($query_args) ) ; T_IF ( T_VARIABLE($comment) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($links) = T_STRING ( , , T_VARIABLE($comment) , T_LNUMBER ) ; T_STRING ( , T_VARIABLE($links) , T_VARIABLE($node) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) , T_VARIABLE($links) ) ; } } T_ELSE { T_VARIABLE($query_count) = ; T_VARIABLE($query) = ; T_VARIABLE($query_args) = T_ARRAY ( T_VARIABLE($nid) ) ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($query_count) T_CONCAT_EQUAL ; T_VARIABLE($query_args) [ ] = T_STRING ; } T_IF ( T_VARIABLE($order) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($mode) T_IS_EQUAL T_STRING ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($query) T_CONCAT_EQUAL ; } } T_ELSE T_IF ( T_VARIABLE($order) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($mode) T_IS_EQUAL T_STRING ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($query) T_CONCAT_EQUAL ; } } T_VARIABLE($query) = T_STRING ( T_VARIABLE($query) , , ) ; T_VARIABLE($query_count) = T_STRING ( T_VARIABLE($query_count) , , ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) , T_VARIABLE($comments_per_page) , T_LNUMBER , T_VARIABLE($query_count) , T_VARIABLE($query_args) ) ; T_VARIABLE($divs) = T_LNUMBER ; T_VARIABLE($num_rows) = T_STRING ; T_VARIABLE($comments) = ; T_STRING ( T_STRING ( , ) . ) ; T_WHILE ( T_VARIABLE($comment) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($comment) = T_STRING ( T_VARIABLE($comment) ) ; T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( , T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) - T_LNUMBER ; T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($mode) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING > T_VARIABLE($divs) ) { T_VARIABLE($divs) T_INC ; T_VARIABLE($comments) T_CONCAT_EQUAL ; } T_ELSE { T_WHILE ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING < T_VARIABLE($divs) ) { T_VARIABLE($divs) T_DEC ; T_VARIABLE($comments) T_CONCAT_EQUAL ; } } } T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_STRING ) { T_VARIABLE($comments) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) ) ; } T_ELSE T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_STRING ) { T_VARIABLE($comments) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) ) ; } T_ELSE T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_STRING ) { T_VARIABLE($comments) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) ) ; } T_ELSE T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_STRING ) { T_VARIABLE($comments) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) ) ; } T_VARIABLE($num_rows) = T_STRING ; } T_WHILE ( T_VARIABLE($divs) T_DEC > T_LNUMBER ) { T_VARIABLE($comments) T_CONCAT_EQUAL ; } T_VARIABLE($comment_controls) = T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($num_rows) T_BOOLEAN_AND ( T_VARIABLE($comment_controls) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($comment_controls) T_IS_EQUAL T_STRING ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($mode) , T_VARIABLE($order) , T_VARIABLE($comments_per_page) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($comments) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_VARIABLE($comments_per_page) , T_LNUMBER ) ; T_IF ( T_VARIABLE($num_rows) T_BOOLEAN_AND ( T_VARIABLE($comment_controls) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($comment_controls) T_IS_EQUAL T_STRING ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($mode) , T_VARIABLE($order) , T_VARIABLE($comments_per_page) ) ; } } T_VARIABLE($reply) = T_STRING ( T_LNUMBER ) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_LNUMBER ) T_IS_EQUAL ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($nid) ) T_IS_EQUAL T_STRING T_BOOLEAN_AND ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) T_IS_EQUAL T_STRING ) T_BOOLEAN_AND ! T_VARIABLE($reply) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($nid) ) , T_STRING ( ) ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($output) , T_VARIABLE($node) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(comment_operations) ( T_VARIABLE($action) = T_STRING ) { T_IF ( T_VARIABLE($action) T_IS_EQUAL ) { T_VARIABLE($operations) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , . T_STRING . ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , ) ) ; } T_ELSE T_IF ( T_VARIABLE($action) T_IS_EQUAL ) { T_VARIABLE($operations) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , . T_STRING . ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , ) ) ; } T_ELSE { T_VARIABLE($operations) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , . T_STRING . ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , . T_STRING . ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , ) ) ; } T_RETURN T_VARIABLE($operations) ; } T_FUNCTION(_comment_load) ( T_VARIABLE($cid) ) { T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($cid) ) ) ; } T_FUNCTION(comment_num_all) ( T_VARIABLE($nid) ) { T_STATIC T_VARIABLE($cache) ; T_IF ( ! T_ISSET ( T_VARIABLE($cache) [ T_VARIABLE($nid) ] ) ) { T_VARIABLE($cache) [ T_VARIABLE($nid) ] = T_STRING ( T_STRING ( , T_VARIABLE($nid) ) ) ; } T_RETURN T_VARIABLE($cache) [ T_VARIABLE($nid) ] ; } T_FUNCTION(comment_num_replies) ( T_VARIABLE($pid) ) { T_STATIC T_VARIABLE($cache) ; T_IF ( ! T_ISSET ( T_VARIABLE($cache) [ T_VARIABLE($pid) ] ) ) { T_VARIABLE($cache) [ T_VARIABLE($pid) ] = T_STRING ( T_STRING ( , T_VARIABLE($pid) , T_STRING ) ) ; } T_RETURN T_VARIABLE($cache) [ T_VARIABLE($pid) ] ; } T_FUNCTION(comment_num_new) ( T_VARIABLE($nid) , T_VARIABLE($timestamp) = T_LNUMBER ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_IF ( ! T_VARIABLE($timestamp) ) { T_VARIABLE($timestamp) = T_STRING ( T_VARIABLE($nid) ) ; } T_VARIABLE($timestamp) = ( T_VARIABLE($timestamp) > T_STRING ? T_VARIABLE($timestamp) : T_STRING ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( , T_VARIABLE($nid) , T_VARIABLE($timestamp) , T_STRING ) ) ; T_RETURN T_VARIABLE($result) ; } T_ELSE { T_RETURN T_LNUMBER ; } } T_FUNCTION(comment_validate) ( T_VARIABLE($edit) ) { T_GLOBAL T_VARIABLE($user) ; T_STRING ( T_VARIABLE($edit) , ) ; T_IF ( T_ISSET ( T_VARIABLE($edit) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($edit) [ ] ) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($edit) [ ] ) T_BOOLEAN_AND ! T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_OR T_ISSET ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($edit) [ ] ) ; T_IF ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) > T_STRING ) { T_IF ( T_VARIABLE($edit) [ ] ) { T_VARIABLE($taken) = T_STRING ( T_STRING ( , T_VARIABLE($edit) [ ] ) ) ; T_IF ( T_VARIABLE($taken) T_IS_NOT_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; } } T_ELSE T_IF ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) T_IS_EQUAL T_STRING ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_VARIABLE($edit) [ ] ) { T_IF ( ! T_STRING ( T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } } T_ELSE T_IF ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) T_IS_EQUAL T_STRING ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_VARIABLE($edit) [ ] ) { T_IF ( ! T_STRING ( T_VARIABLE($edit) [ ] , T_STRING ) ) { T_STRING ( , T_STRING ( ) ) ; } } } } T_RETURN T_VARIABLE($edit) ; } T_FUNCTION(comment_form) ( & T_VARIABLE($form_state) , T_VARIABLE($edit) , T_VARIABLE($title) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($op) = T_ISSET ( T_VARIABLE($_POST) [ ] ) ? T_VARIABLE($_POST) [ ] : ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($edit) [ ] ) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) T_IS_NOT_EQUAL T_STRING ) { T_STRING ( T_STRING ( , ) . ) ; } T_VARIABLE($edit) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) T_BOOLEAN_AND T_STRING ( ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($author) = T_VARIABLE($edit) [ ] ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($author) = T_VARIABLE($edit) [ ] ; } T_ELSE { T_VARIABLE($author) = T_VARIABLE($edit) [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($status) = T_VARIABLE($edit) [ ] ; } T_ELSE { T_VARIABLE($status) = T_LNUMBER ; } T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($date) = T_VARIABLE($edit) [ ] ; } T_ELSE { T_VARIABLE($date) = T_STRING ( T_VARIABLE($edit) [ ] , , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_IF ( T_VARIABLE($edit) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($author) , T_DOUBLE_ARROW - T_LNUMBER , ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($author) , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($date) , T_DOUBLE_ARROW - T_LNUMBER ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($status) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW - T_LNUMBER ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($user) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } } T_ELSE T_IF ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) T_IS_EQUAL T_STRING ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ? T_VARIABLE($edit) [ ] : T_STRING ( , T_STRING ( ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; } T_ELSE T_IF ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) T_IS_EQUAL T_STRING ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ? T_VARIABLE($edit) [ ] : T_STRING ( , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; } T_IF ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($default) = T_VARIABLE($edit) [ ] ; } T_ELSE { T_VARIABLE($default) = ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($default) , T_DOUBLE_ARROW T_STRING , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($edit) [ ] = T_STRING ; } T_VARIABLE($form) [ ] [ ] = T_STRING ( T_VARIABLE($edit) [ ] ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_STRING ) ; T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ( ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) T_IS_EQUAL T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) T_BOOLEAN_OR ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($form) [ ] = . T_VARIABLE($edit) [ ] . ( T_ISSET ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : ) ; T_IF ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( ) ; } T_IF ( T_EMPTY ( T_VARIABLE($edit) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($form) [ ] = T_STRING ( . T_VARIABLE($edit) [ ] ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(comment_form_box) ( T_VARIABLE($edit) , T_VARIABLE($title) = T_STRING ) { T_RETURN T_STRING ( , T_VARIABLE($title) , T_STRING ( , T_VARIABLE($edit) , T_VARIABLE($title) ) ) ; } T_FUNCTION(comment_form_add_preview) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($edit) = T_VARIABLE($form_state) [ ] ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($output) = ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($edit) [ ] ) ; T_STRING ( T_VARIABLE($form) [ ] [ ] , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( T_VARIABLE($edit) ) ; T_VARIABLE($comment) = T_OBJECT_CAST T_VARIABLE($edit) ; T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ) ; } T_ELSEIF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($account) = T_VARIABLE($user) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($account) ) ) { T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSEIF ( T_EMPTY ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_STRING ( ) ) ; } T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($output) , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($output) = ; T_IF ( T_VARIABLE($edit) [ ] ) { T_VARIABLE($comment) = T_STRING ( T_STRING ( , T_VARIABLE($edit) [ ] , T_STRING ) ) ; T_VARIABLE($comment) = T_STRING ( T_VARIABLE($comment) ) ; T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) ) ; } T_ELSE { T_VARIABLE($suffix) = T_EMPTY ( T_VARIABLE($form) [ ] ) ? : T_VARIABLE($form) [ ] ; T_VARIABLE($form) [ ] = T_VARIABLE($suffix) . T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($edit) [ ] = T_LNUMBER ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($output) , T_DOUBLE_ARROW T_LNUMBER ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(comment_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL T_LNUMBER ) { T_FOREACH ( T_ARRAY ( , , ) T_AS T_VARIABLE($field) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ T_VARIABLE($field) ] ) ) { T_STRING ( . T_VARIABLE($field) , T_VARIABLE($form_state) [ ] [ T_VARIABLE($field) ] , T_STRING ( ) + T_LNUMBER , ) ; } } } T_STRING ( T_VARIABLE($form_state) [ ] ) ; } T_FUNCTION(_comment_form_submit) ( & T_VARIABLE($comment_values) ) { T_VARIABLE($comment_values) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW ) ; T_IF ( ! T_ISSET ( T_VARIABLE($comment_values) [ ] ) ) { T_VARIABLE($comment_values) [ ] = ; } T_VARIABLE($comment_values) [ ] = T_STRING ( T_VARIABLE($comment_values) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($comment_values) [ ] ) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($comment_values) [ ] ) ) ; T_VARIABLE($comment_values) [ ] = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($comment_values) [ ] = T_VARIABLE($comment_values) [ ] ; } T_IF ( T_STRING ( T_VARIABLE($comment_values) [ ] ) T_IS_EQUAL ) { T_VARIABLE($comment_values) [ ] = T_STRING ( T_STRING ( T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($comment_values) [ ] , T_VARIABLE($comment_values) [ ] ) ) ) , T_LNUMBER , T_STRING ) ) ; T_IF ( T_VARIABLE($comment_values) [ ] T_IS_EQUAL ) { T_VARIABLE($comment_values) [ ] = T_STRING ( ) ; } } } T_FUNCTION(comment_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] ) ; T_IF ( T_VARIABLE($cid) = T_STRING ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($page) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_VARIABLE($node) ) ; T_VARIABLE($form_state) [ ] = T_ARRAY ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($page) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($cid) ) ; T_RETURN ; } } T_FUNCTION(theme_comment_view) ( T_VARIABLE($comment) , T_VARIABLE($node) , T_VARIABLE($links) = T_ARRAY ( ) , T_VARIABLE($visible) = T_STRING ) { T_STATIC T_VARIABLE($first_new) = T_STRING ; T_VARIABLE($output) = ; T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($first_new) T_BOOLEAN_AND T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($first_new) = T_STRING ; T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ; T_IF ( T_VARIABLE($visible) ) { T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; T_STRING ( T_VARIABLE($comment) , ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) , T_VARIABLE($links) ) ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($comment) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(comment_controls) ( T_VARIABLE($mode) = T_STRING , T_VARIABLE($order) = T_STRING , T_VARIABLE($comments_per_page) = T_LNUMBER ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($mode) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($order) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($i) ) { T_VARIABLE($options) [ T_VARIABLE($i) ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($i) ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($comments_per_page) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(theme_comment_controls) ( T_VARIABLE($form) ) { T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_RETURN T_STRING ( , T_STRING ( ) , T_VARIABLE($output) ) ; } T_FUNCTION(comment_controls_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($mode) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($order) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($comments_per_page) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($account) = T_STRING ( T_VARIABLE($user) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($mode) , T_DOUBLE_ARROW T_VARIABLE($order) , T_DOUBLE_ARROW T_VARIABLE($comments_per_page) ) ) ; T_IF ( ! T_VARIABLE($account) ) { T_STRING ( T_STRING ( ) , ) ; T_RETURN ; } T_VARIABLE($user) = T_VARIABLE($account) ; } T_ELSE { T_VARIABLE($_SESSION) [ ] = T_VARIABLE($mode) ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($order) ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($comments_per_page) ; } } T_FUNCTION(template_preprocess_comment) ( & T_VARIABLE($variables) ) { T_VARIABLE($comment) = T_VARIABLE($variables) [ ] ; T_VARIABLE($node) = T_VARIABLE($variables) [ ] ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($comment) ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_ISSET ( T_VARIABLE($variables) [ ] ) ? T_STRING ( , T_VARIABLE($variables) [ ] ) : ; T_VARIABLE($variables) [ ] = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ? T_STRING ( ) : ; T_VARIABLE($variables) [ ] = T_STRING ( ) ? T_STRING ( , T_VARIABLE($comment) ) : ; T_VARIABLE($variables) [ ] = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($comment) ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($_GET) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($variables) [ ] = ; } T_ELSE { T_VARIABLE($variables) [ ] = ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) ? : ; } } T_FUNCTION(template_preprocess_comment_folded) ( & T_VARIABLE($variables) ) { T_VARIABLE($comment) = T_VARIABLE($variables) [ ] ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($comment) ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ? T_STRING ( ) : ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_STRING ( ) . . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ; } T_FUNCTION(theme_comment_flat_collapsed) ( T_VARIABLE($comment) , T_VARIABLE($node) ) { T_RETURN T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) , , T_LNUMBER ) ; } T_FUNCTION(theme_comment_flat_expanded) ( T_VARIABLE($comment) , T_VARIABLE($node) ) { T_RETURN T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) , T_STRING ( , , T_VARIABLE($comment) , T_LNUMBER ) ) ; } T_FUNCTION(theme_comment_thread_collapsed) ( T_VARIABLE($comment) , T_VARIABLE($node) ) { T_RETURN T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) , , T_LNUMBER ) ; } T_FUNCTION(theme_comment_thread_expanded) ( T_VARIABLE($comment) , T_VARIABLE($node) ) { T_RETURN T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) , T_STRING ( , , T_VARIABLE($comment) , T_LNUMBER ) ) ; } T_FUNCTION(theme_comment_post_forbidden) ( T_VARIABLE($node) ) { T_GLOBAL T_VARIABLE($user) ; T_STATIC T_VARIABLE($authenticated_post_comments) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($authenticated_post_comments) ) ) { T_VARIABLE($authenticated_post_comments) = T_STRING ( T_STRING , T_STRING ( T_STRING , ) + T_STRING ( T_STRING , ) ) ; } T_IF ( T_VARIABLE($authenticated_post_comments) ) { T_IF ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) T_IS_EQUAL T_STRING ) { T_VARIABLE($destination) = . T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ) ; } T_ELSE { T_VARIABLE($destination) = . T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ) ; } T_IF ( T_STRING ( , T_LNUMBER ) ) { T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) ) ) ; } T_ELSE { T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) ) ) ; } } } } T_FUNCTION(template_preprocess_comment_wrapper) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] ) ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] ) ; T_VARIABLE($variables) [ ] = T_STRING ( . T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING , T_STRING ) ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(theme_comment_submitted) ( T_VARIABLE($comment) ) { T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($comment) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_FUNCTION(_comment_get_modes) ( ) { T_RETURN T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) ; } T_FUNCTION(_comment_get_orders) ( ) { T_RETURN T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) ; } T_FUNCTION(_comment_per_page) ( ) { T_RETURN T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ; } T_FUNCTION(_comment_get_display_setting) ( T_VARIABLE($setting) , T_VARIABLE($node) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_ISSET ( T_VARIABLE($_GET) [ T_VARIABLE($setting) ] ) ) { T_VARIABLE($value) = T_VARIABLE($_GET) [ T_VARIABLE($setting) ] ; } T_ELSE { T_SWITCH ( T_VARIABLE($setting) ) { T_CASE : T_VARIABLE($default) = T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($default) = T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($default) = T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) ; } T_IF ( T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) T_IS_EQUAL T_STRING ) { T_VARIABLE($value) = T_VARIABLE($default) ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_VARIABLE($setting) ) T_BOOLEAN_AND T_VARIABLE($user) T_OBJECT_OPERATOR T_VARIABLE($setting) ) { T_VARIABLE($value) = T_VARIABLE($user) T_OBJECT_OPERATOR T_VARIABLE($setting) ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ . T_VARIABLE($setting) ] ) T_BOOLEAN_AND T_VARIABLE($_SESSION) [ . T_VARIABLE($setting) ] ) { T_VARIABLE($value) = T_VARIABLE($_SESSION) [ . T_VARIABLE($setting) ] ; } T_ELSE { T_VARIABLE($value) = T_VARIABLE($default) ; } } } T_RETURN T_VARIABLE($value) ; } T_FUNCTION(_comment_update_node_statistics) ( T_VARIABLE($nid) ) { T_VARIABLE($count) = T_STRING ( T_STRING ( , T_VARIABLE($nid) , T_STRING ) ) ; T_IF ( T_VARIABLE($count) > T_LNUMBER ) { T_VARIABLE($last_reply) = T_STRING ( T_STRING ( , T_VARIABLE($nid) , T_STRING , T_LNUMBER , T_LNUMBER ) ) ; T_STRING ( , T_VARIABLE($count) , T_VARIABLE($last_reply) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($last_reply) T_OBJECT_OPERATOR T_STRING ? : T_VARIABLE($last_reply) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($last_reply) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($nid) ) ; } T_ELSE { T_VARIABLE($node) = T_STRING ( T_STRING ( , T_VARIABLE($nid) ) ) ; T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($nid) ) ; } } T_FUNCTION(comment_invoke_comment) ( & T_VARIABLE($comment) , T_VARIABLE($op) ) { T_VARIABLE($return) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($name) ) { T_VARIABLE($function) = T_VARIABLE($name) . ; T_VARIABLE($result) = T_VARIABLE($function) ( T_VARIABLE($comment) , T_VARIABLE($op) ) ; T_IF ( T_ISSET ( T_VARIABLE($result) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($return) = T_STRING ( T_VARIABLE($return) , T_VARIABLE($result) ) ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($result) ) ) { T_VARIABLE($return) [ ] = T_VARIABLE($result) ; } } T_RETURN T_VARIABLE($return) ; } T_FUNCTION(int2vancode) ( T_VARIABLE($i) = T_LNUMBER ) { T_VARIABLE($num) = T_STRING ( T_INT_CAST T_VARIABLE($i) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($length) = T_STRING ( T_VARIABLE($num) ) ; T_RETURN T_STRING ( T_VARIABLE($length) + T_STRING ( ) - T_LNUMBER ) . T_VARIABLE($num) ; } T_FUNCTION(vancode2int) ( T_VARIABLE($c) = ) { T_RETURN T_STRING ( T_STRING ( T_VARIABLE($c) , T_LNUMBER ) , T_LNUMBER , T_LNUMBER ) ; } T_FUNCTION(comment_hook_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , ) , ) , ) ; } T_FUNCTION(comment_action_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) , ) ) ) ; } T_FUNCTION(comment_unpublish_action) ( T_VARIABLE($comment) , T_VARIABLE($context) = T_ARRAY ( ) ) { T_IF ( T_ISSET ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($cid) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($subject) = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($cid) = T_VARIABLE($context) [ ] ; T_VARIABLE($subject) = T_STRING ( T_STRING ( , T_VARIABLE($cid) ) ) ; } T_STRING ( , T_STRING , T_VARIABLE($cid) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($subject) ) ) ; } T_FUNCTION(comment_unpublish_by_keyword_action_form) ( T_VARIABLE($context) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($context) [ ] ) ? T_STRING ( T_VARIABLE($context) [ ] ) : , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(comment_unpublish_by_keyword_action_submit) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) ; } T_FUNCTION(comment_unpublish_by_keyword_action) ( T_VARIABLE($comment) , T_VARIABLE($context) ) { T_FOREACH ( T_VARIABLE($context) [ ] T_AS T_VARIABLE($keyword) ) { T_IF ( T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($keyword) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($keyword) ) ) { T_STRING ( , T_STRING , T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ; T_BREAK ; } } }",13,1
"T_OPEN_TAG T_FUNCTION(comment_edit) ( T_VARIABLE($cid) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($comment) = T_STRING ( T_STRING ( , T_VARIABLE($cid) ) ) ; T_VARIABLE($comment) = T_STRING ( T_VARIABLE($comment) ) ; T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_STRING ( , T_VARIABLE($comment) ) ) { T_RETURN T_STRING ( T_ARRAY_CAST T_VARIABLE($comment) ) ; } T_ELSE { T_STRING ( ) ; } } T_FUNCTION(comment_reply) ( T_VARIABLE($node) , T_VARIABLE($pid) = T_STRING ) { T_STRING ( T_ARRAY ( T_STRING ( T_STRING ( ) , T_STRING ) , T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($op) = T_ISSET ( T_VARIABLE($_POST) [ ] ) ? T_VARIABLE($_POST) [ ] : ; T_VARIABLE($output) = ; T_IF ( T_STRING ( ) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($pid) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_STRING ) ; } T_ELSE { T_STRING ( T_STRING ( ) , ) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } } T_ELSE { T_IF ( T_VARIABLE($pid) ) { T_IF ( T_VARIABLE($comment) = T_STRING ( T_STRING ( , T_VARIABLE($pid) , T_STRING ) ) ) { T_IF ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( T_STRING ( ) , ) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($comment) = T_STRING ( T_VARIABLE($comment) ) ; T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($comment) , T_VARIABLE($node) ) ; } T_ELSE { T_STRING ( T_STRING ( ) , ) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } } T_ELSE T_IF ( T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($node) ) ; } T_IF ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_IS_NOT_EQUAL T_STRING ) { T_STRING ( T_STRING ( ) , ) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE T_IF ( T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($pid) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) , ) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } } } T_ELSE { T_STRING ( T_STRING ( ) , ) ; T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_RETURN T_VARIABLE($output) ; }",7,1
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ? : ; T_PRINT . T_VARIABLE($status) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($picture) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($new) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($submitted) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($signature) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($signature) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($links) T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_FUNCTION(contact_admin_categories) ( ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($category) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ? T_STRING ( ) : T_STRING ( ) ) , T_STRING ( T_STRING ( ) , . T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_STRING ( ) , . T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_RETURN T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; } T_FUNCTION(contact_admin_edit) ( T_VARIABLE($form_state) = T_ARRAY ( ) , T_VARIABLE($op) , T_VARIABLE($contact) = T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($contact) ) T_BOOLEAN_OR T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($contact) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($op) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($contact) [ ] , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($contact) [ ] , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($contact) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($contact) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_VARIABLE($contact) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($contact) [ ] , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(contact_admin_edit_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($recipients) = T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_FOREACH ( T_VARIABLE($recipients) T_AS T_VARIABLE($recipient) ) { T_IF ( ! T_STRING ( T_STRING ( T_VARIABLE($recipient) ) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($recipient) ) ) ) ; } } } } T_FUNCTION(contact_admin_edit_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_STRING ( ) ; } T_VARIABLE($recipients) = T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_FOREACH ( T_VARIABLE($recipients) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($recipient) ) { T_VARIABLE($recipients) [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($recipient) ) ; } T_VARIABLE($form_state) [ ] [ ] = T_STRING ( , T_VARIABLE($recipients) ) ; T_IF ( T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_OR T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($form_state) [ ] ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , ) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($form_state) [ ] , ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , ) ) ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(contact_admin_delete) ( & T_VARIABLE($form_state) , T_VARIABLE($contact) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($contact) , ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($contact) [ ] ) ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(contact_admin_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($contact) = T_VARIABLE($form_state) [ ] [ ] ; T_STRING ( , T_VARIABLE($contact) [ ] ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($contact) [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($contact) [ ] ) , T_STRING ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(contact_admin_settings) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; }",8,1
"T_OPEN_TAG T_FUNCTION(contact_install) ( ) { T_STRING ( ) ; } T_FUNCTION(contact_uninstall) ( ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(contact_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) , ) , ) ; T_RETURN T_VARIABLE($schema) ; }",0,0
"T_OPEN_TAG T_FUNCTION(contact_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_IF ( ! T_STRING ( ) ) { T_VARIABLE($menu_note) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_ELSE { T_VARIABLE($menu_note) = ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . . T_VARIABLE($menu_note) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(contact_perm) ( ) { T_RETURN T_ARRAY ( , ) ; } T_FUNCTION(contact_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(_contact_user_tab_access) ( T_VARIABLE($account) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( ! T_ISSET ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_RETURN T_VARIABLE($account) T_BOOLEAN_AND T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ( ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_STRING ( ) ) ; } T_FUNCTION(contact_load) ( T_VARIABLE($cid) ) { T_VARIABLE($contact) = T_STRING ( T_STRING ( , T_VARIABLE($cid) ) ) ; T_RETURN T_EMPTY ( T_VARIABLE($contact) ) ? T_STRING : T_VARIABLE($contact) ; } T_FUNCTION(contact_user) ( T_VARIABLE($type) , & T_VARIABLE($edit) , & T_VARIABLE($user) , T_VARIABLE($category) = T_STRING ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($category) T_IS_EQUAL ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_STRING , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ) ) ) , ) ; T_RETURN T_VARIABLE($form) ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_STRING ) ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($edit) [ ] = T_STRING ( , T_LNUMBER ) ; } } T_FUNCTION(contact_mail) ( T_VARIABLE($key) , & T_VARIABLE($message) , T_VARIABLE($params) ) { T_VARIABLE($language) = T_VARIABLE($message) [ ] ; T_SWITCH ( T_VARIABLE($key) ) { T_CASE : T_CASE : T_VARIABLE($contact) = T_VARIABLE($params) [ ] ; T_VARIABLE($message) [ ] T_CONCAT_EQUAL T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($contact) [ ] , T_DOUBLE_ARROW T_VARIABLE($params) [ ] ) , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($message) [ ] [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($params) [ ] , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($_GET) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($language) ) ) ) , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($message) [ ] [ ] = T_VARIABLE($params) [ ] ; T_BREAK ; T_CASE : T_VARIABLE($contact) = T_VARIABLE($params) [ ] ; T_VARIABLE($message) [ ] T_CONCAT_EQUAL T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($contact) [ ] , T_DOUBLE_ARROW T_VARIABLE($params) [ ] ) , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($message) [ ] [ ] = T_VARIABLE($contact) [ ] ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($user) = T_VARIABLE($params) [ ] ; T_VARIABLE($account) = T_VARIABLE($params) [ ] ; T_VARIABLE($message) [ ] T_CONCAT_EQUAL . T_STRING ( , ) . . T_VARIABLE($params) [ ] ; T_VARIABLE($message) [ ] [ ] = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($message) [ ] [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($language) ) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($_GET) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($language) ) ) , T_DOUBLE_ARROW T_STRING ( , ) ) , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($message) [ ] [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($language) ) ) ) , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($message) [ ] [ ] = T_STRING ( , T_STRING , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($message) [ ] [ ] = T_VARIABLE($params) [ ] ; T_BREAK ; } }",10,1
"T_OPEN_TAG T_FUNCTION(contact_site_page) ( ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( ! T_STRING ( , T_STRING ( , T_LNUMBER ) ) ) { T_VARIABLE($output) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) ) ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(contact_mail_page) ( ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($form) = T_VARIABLE($categories) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($category) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($categories) [ T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($default_category) = T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ; } } T_IF ( T_STRING ( T_VARIABLE($categories) ) > T_LNUMBER ) { T_VARIABLE($form) [ ] = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( , T_STRING ( ) ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_IF ( T_STRING ( T_VARIABLE($categories) ) > T_LNUMBER ) { T_IF ( ! T_ISSET ( T_VARIABLE($default_category) ) ) { T_VARIABLE($default_category) = T_STRING ( ) ; T_VARIABLE($categories) = T_ARRAY ( T_VARIABLE($default_category) ) + T_VARIABLE($categories) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($default_category) , T_DOUBLE_ARROW T_VARIABLE($categories) , T_DOUBLE_ARROW T_STRING , ) ; } T_ELSE { T_VARIABLE($category_keys) = T_STRING ( T_VARIABLE($categories) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($category_keys) ) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_ELSE { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(contact_mail_page_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_VARIABLE($form_state) [ ] [ ] ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( ! T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(contact_mail_page_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($language) ; T_VARIABLE($values) = T_VARIABLE($form_state) [ ] ; T_VARIABLE($from) = T_VARIABLE($values) [ ] ; T_VARIABLE($contact) = T_STRING ( T_VARIABLE($values) [ ] ) ; T_VARIABLE($values) [ ] = T_VARIABLE($contact) ; T_STRING ( , , T_VARIABLE($contact) [ ] , T_STRING ( ) , T_VARIABLE($values) , T_VARIABLE($from) ) ; T_IF ( T_VARIABLE($values) [ ] ) { T_STRING ( , , T_VARIABLE($from) , T_VARIABLE($language) , T_VARIABLE($values) , T_VARIABLE($from) ) ; } T_IF ( T_VARIABLE($contact) [ ] ) { T_STRING ( , , T_VARIABLE($from) , T_VARIABLE($language) , T_VARIABLE($values) , T_VARIABLE($contact) [ ] ) ; } T_STRING ( ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($values) [ ] . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($from) T_ENCAPSED_AND_WHITESPACE , T_DOUBLE_ARROW T_VARIABLE($contact) [ ] ) ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; } T_FUNCTION(contact_user_page) ( T_VARIABLE($account) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( ! T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($output) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ) ) ) ; } T_ELSE T_IF ( ! T_STRING ( , T_STRING ( , T_LNUMBER ) ) ) { T_VARIABLE($output) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) ) ) ; } T_ELSE { T_STRING ( T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($account) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(contact_mail_user) ( & T_VARIABLE($form_state) , T_VARIABLE($recipient) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($form) [ ] = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($recipient) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) . , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($recipient) T_OBJECT_OPERATOR T_STRING ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(contact_mail_user_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) , T_VARIABLE($language) ; T_VARIABLE($account) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($to) = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($from) = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($values) = T_VARIABLE($form_state) [ ] ; T_VARIABLE($values) [ ] = T_VARIABLE($account) ; T_VARIABLE($values) [ ] = T_VARIABLE($user) ; T_STRING ( , , T_VARIABLE($to) , T_STRING ( T_VARIABLE($account) ) , T_VARIABLE($values) , T_VARIABLE($from) ) ; T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_STRING ( , , T_VARIABLE($from) , T_VARIABLE($language) , T_VARIABLE($values) , T_VARIABLE($from) ) ; } T_STRING ( ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; }",10,0
"T_OPEN_TAG T_FUNCTION(dblog_admin_settings) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(dblog_overview) ( ) { T_VARIABLE($filter) = T_STRING ( ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($icons) = T_ARRAY ( T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) , T_STRING T_DOUBLE_ARROW T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) , ) ; T_VARIABLE($classes) = T_ARRAY ( T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , ) ; T_VARIABLE($output) = T_STRING ( ) ; T_VARIABLE($header) = T_ARRAY ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , ) ; T_VARIABLE($sql) = ; T_VARIABLE($tablesort) = T_STRING ( T_VARIABLE($header) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($filter) [ ] ) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) . . T_VARIABLE($filter) [ ] . T_VARIABLE($tablesort) , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($filter) [ ] ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) . T_VARIABLE($tablesort) , T_LNUMBER ) ; } T_WHILE ( T_VARIABLE($dblog) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($icons) [ T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ] , T_STRING ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING , ) , T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($dblog) ) , T_LNUMBER , T_STRING , T_STRING ) , . T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_STRING ( , T_VARIABLE($dblog) ) , T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING , ) , T_DOUBLE_ARROW . T_STRING ( , , T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($classes) [ T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ] ) ; } T_IF ( ! T_VARIABLE($rows) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(dblog_top) ( T_VARIABLE($type) ) { T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING ( T_VARIABLE($header) ) , T_LNUMBER , T_LNUMBER , , T_VARIABLE($type) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($dblog) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_STRING ( T_VARIABLE($dblog) ) , T_LNUMBER , T_STRING , T_STRING ) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(dblog_event) ( T_VARIABLE($id) ) { T_VARIABLE($severity) = T_STRING ( ) ; T_VARIABLE($output) = ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($id) ) ; T_IF ( T_VARIABLE($dblog) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) = T_ARRAY ( T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ) , ) , T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING , ) , ) , T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( , T_VARIABLE($dblog) ) , ) , T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ) , ) , T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ) , ) , T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( T_VARIABLE($dblog) ) , ) , T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_VARIABLE($severity) [ T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ] , ) , T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ) , ) , T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING , ) , ) ; T_VARIABLE($attributes) = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($output) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($rows) , T_VARIABLE($attributes) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(dblog_build_filter_query) ( ) { T_IF ( T_EMPTY ( T_VARIABLE($_SESSION) [ ] ) ) { T_RETURN ; } T_VARIABLE($filters) = T_STRING ( ) ; T_VARIABLE($where) = T_VARIABLE($args) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($_SESSION) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($filter) ) { T_VARIABLE($filter_where) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($filter) T_AS T_VARIABLE($value) ) { T_VARIABLE($filter_where) [ ] = T_VARIABLE($filters) [ T_VARIABLE($key) ] [ ] ; T_VARIABLE($args) [ ] = T_VARIABLE($value) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($filter_where) ) ) { T_VARIABLE($where) [ ] = . T_STRING ( , T_VARIABLE($filter_where) ) . ; } } T_VARIABLE($where) = ! T_EMPTY ( T_VARIABLE($where) ) ? T_STRING ( , T_VARIABLE($where) ) : ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($where) , T_DOUBLE_ARROW T_VARIABLE($args) , ) ; } T_FUNCTION(dblog_filters) ( ) { T_VARIABLE($filters) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($type) ) { T_VARIABLE($types) [ T_VARIABLE($type) ] = T_VARIABLE($type) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($types) ) ) { T_VARIABLE($filters) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($types) , ) ; } T_VARIABLE($filters) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($filters) ; } T_FUNCTION(_dblog_format_message) ( T_VARIABLE($dblog) ) { T_IF ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING T_IS_IDENTICAL ) { T_RETURN T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($dblog) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_FUNCTION(dblog_filter_form) ( ) { T_VARIABLE($session) = & T_VARIABLE($_SESSION) [ ] ; T_VARIABLE($session) = T_STRING ( T_VARIABLE($session) ) ? T_VARIABLE($session) : T_ARRAY ( ) ; T_VARIABLE($filters) = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($session) ) , ) ; T_FOREACH ( T_VARIABLE($filters) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($filter) ) { T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($filter) [ ] , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($filter) [ ] , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($session) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($key) ] [ ] = T_VARIABLE($session) [ T_VARIABLE($key) ] ; } } T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($session) ) ) { T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(dblog_filter_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(dblog_filter_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($op) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($filters) = T_STRING ( ) ; T_SWITCH ( T_VARIABLE($op) ) { T_CASE T_STRING ( ) : T_FOREACH ( T_VARIABLE($filters) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($filter) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ T_VARIABLE($name) ] ) ) { T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($name) ] = T_VARIABLE($form_state) [ ] [ T_VARIABLE($name) ] ; } } T_BREAK ; T_CASE T_STRING ( ) : T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; T_BREAK ; } T_RETURN ; }",11,0
"T_OPEN_TAG T_FUNCTION(dblog_install) ( ) { T_STRING ( ) ; } T_FUNCTION(dblog_uninstall) ( ) { T_STRING ( ) ; } T_FUNCTION(dblog_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_RETURN T_VARIABLE($schema) ; }",2,0
"T_OPEN_TAG T_FUNCTION(dblog_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; } } T_FUNCTION(dblog_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(dblog_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(dblog_init) ( ) { T_IF ( T_STRING ( T_LNUMBER ) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_LNUMBER ) T_IS_EQUAL ) { T_STRING ( T_STRING ( , ) . , , , T_STRING ) ; } } T_FUNCTION(dblog_cron) ( ) { T_VARIABLE($max) = T_STRING ( T_STRING ( ) ) ; T_STRING ( , T_VARIABLE($max) - T_STRING ( , T_LNUMBER ) ) ; } T_FUNCTION(dblog_user) ( T_VARIABLE($op) , & T_VARIABLE($edit) , & T_VARIABLE($user) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(_dblog_get_message_types) ( ) { T_VARIABLE($types) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($object) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($types) [ ] = T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ; } T_RETURN T_VARIABLE($types) ; } T_FUNCTION(dblog_watchdog) ( T_VARIABLE($log) = T_ARRAY ( ) ) { T_VARIABLE($current_db) = T_STRING ( ) ; T_STRING ( , T_VARIABLE($log) [ ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($log) [ ] , T_VARIABLE($log) [ ] , T_STRING ( T_VARIABLE($log) [ ] ) , T_VARIABLE($log) [ ] , T_VARIABLE($log) [ ] , T_VARIABLE($log) [ ] , T_VARIABLE($log) [ ] , T_VARIABLE($log) [ ] , T_VARIABLE($log) [ ] ) ; T_IF ( T_VARIABLE($current_db) ) { T_STRING ( T_VARIABLE($current_db) ) ; } } T_FUNCTION(theme_dblog_filters) ( T_VARIABLE($form) ) { T_VARIABLE($output) = ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($form) [ ] ) . ; T_RETURN T_VARIABLE($output) ; }",7,1
"T_OPEN_TAG T_FUNCTION(filter_admin_overview) ( ) { T_VARIABLE($formats) = T_STRING ( ) ; T_VARIABLE($error) = T_STRING ; T_FOREACH ( T_VARIABLE($formats) T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($format) ) { T_VARIABLE($roles) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_IF ( T_STRING ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($rid) T_ENCAPSED_AND_WHITESPACE ) ) { T_VARIABLE($roles) [ ] = T_VARIABLE($name) ; } } T_VARIABLE($default) = ( T_VARIABLE($id) T_IS_EQUAL T_STRING ( , T_LNUMBER ) ) ; T_VARIABLE($options) [ T_VARIABLE($id) ] = ; T_VARIABLE($form) [ T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($id) ) ; T_VARIABLE($form) [ T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($default) ? T_STRING ( ) : ( T_VARIABLE($roles) ? T_STRING ( , T_VARIABLE($roles) ) : T_STRING ( ) ) ) ; T_VARIABLE($form) [ T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , . T_VARIABLE($id) ) ) ; T_VARIABLE($form) [ T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($default) ? : T_STRING ( T_STRING ( ) , . T_VARIABLE($id) ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(filter_admin_overview_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( T_STRING ( ) ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; } } T_FUNCTION(theme_filter_admin_overview) ( T_VARIABLE($form) ) { T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($form) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($element) ) { T_IF ( T_ISSET ( T_VARIABLE($element) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($element) [ ] [ ] ] ) , T_STRING ( T_VARIABLE($name) ) , T_STRING ( T_VARIABLE($element) [ ] ) , T_STRING ( T_VARIABLE($element) [ ] ) , T_STRING ( T_VARIABLE($element) [ ] ) ) ; T_UNSET ( T_VARIABLE($form) [ T_VARIABLE($name) ] ) ; } } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(filter_admin_format_page) ( T_VARIABLE($format) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_STRING ( ) ) ; T_VARIABLE($format) = T_OBJECT_CAST T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; } T_RETURN T_STRING ( , T_VARIABLE($format) ) ; } T_FUNCTION(filter_admin_format_form) ( & T_VARIABLE($form_state) , T_VARIABLE($format) ) { T_VARIABLE($default) = ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ( , T_LNUMBER ) ) ; T_IF ( T_VARIABLE($default) ) { T_VARIABLE($help) = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($default) ? T_VARIABLE($help) : T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($checked) = T_STRING ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($rid) T_ENCAPSED_AND_WHITESPACE ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($rid) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW ( T_VARIABLE($default) T_BOOLEAN_OR T_VARIABLE($checked) ) , ) ; T_IF ( T_VARIABLE($default) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($rid) ] [ ] = T_STRING ; } } T_VARIABLE($all) = T_STRING ( ) ; T_VARIABLE($enabled) = T_STRING ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_FOREACH ( T_VARIABLE($all) T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($filter) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($id) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($enabled) [ T_VARIABLE($id) ] ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , , , T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING ) , ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($tips) = T_STRING ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; T_VARIABLE($extra) = . T_STRING ( T_STRING ( ) , ) . ; T_VARIABLE($tiplist) = T_STRING ( , T_VARIABLE($tips) , T_STRING , T_VARIABLE($extra) ) ; T_IF ( ! T_VARIABLE($tiplist) ) { T_VARIABLE($tiplist) = . T_STRING ( ) . ; } T_VARIABLE($group) = . T_STRING ( ) . ; T_VARIABLE($group) T_CONCAT_EQUAL T_VARIABLE($tiplist) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( ) . . T_VARIABLE($group) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(filter_admin_format_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( , T_VARIABLE($name) ) ) ; T_IF ( T_VARIABLE($result) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) ) ) ) ; } } } T_FUNCTION(filter_admin_format_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($format) = T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : T_STRING ; T_VARIABLE($current) = T_STRING ( T_VARIABLE($format) ) ; T_VARIABLE($name) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($cache) = T_STRING ; T_IF ( ! T_VARIABLE($format) ) { T_VARIABLE($new) = T_STRING ; T_STRING ( , T_VARIABLE($name) ) ; T_VARIABLE($format) = T_STRING ( T_STRING ( ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) ) ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) ) ; } T_STRING ( , T_VARIABLE($format) ) ; T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($checked) ) { T_IF ( T_VARIABLE($checked) ) { T_LIST ( T_VARIABLE($module) , T_VARIABLE($delta) ) = T_STRING ( , T_VARIABLE($id) ) ; T_VARIABLE($weight) = T_ISSET ( T_VARIABLE($current) [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($current) [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING : T_LNUMBER ; T_STRING ( , T_VARIABLE($format) , T_VARIABLE($module) , T_VARIABLE($delta) , T_VARIABLE($weight) ) ; T_VARIABLE($cache) T_AND_EQUAL ! T_STRING ( T_VARIABLE($module) , , , T_VARIABLE($delta) ) ; } } T_VARIABLE($roles) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($checked) ) { T_IF ( T_VARIABLE($checked) ) { T_VARIABLE($roles) [ ] = T_VARIABLE($id) ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($roles) = . T_STRING ( , T_STRING ( T_STRING ( ) ) ) . ; } T_ELSE { T_VARIABLE($roles) = . T_STRING ( , T_VARIABLE($roles) ) . ; } T_STRING ( , T_VARIABLE($cache) , T_VARIABLE($name) , T_VARIABLE($roles) , T_VARIABLE($format) ) ; T_STRING ( T_VARIABLE($format) . , , T_STRING ) ; T_VARIABLE($return) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($new) ) ) { T_VARIABLE($return) T_CONCAT_EQUAL . T_VARIABLE($format) ; } T_VARIABLE($form_state) [ ] = T_VARIABLE($return) ; T_RETURN ; } T_FUNCTION(filter_admin_delete) ( ) { T_VARIABLE($format) = T_STRING ( T_LNUMBER ) ; T_VARIABLE($format) = T_STRING ( T_STRING ( , T_VARIABLE($format) ) ) ; T_IF ( T_VARIABLE($format) ) { T_IF ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } } T_ELSE { T_STRING ( ) ; } } T_FUNCTION(filter_admin_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($default) = T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_VARIABLE($default) , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($default) , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($default) , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_VARIABLE($form_state) [ ] [ ] . , , T_STRING ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(filter_admin_configure_page) ( T_VARIABLE($format) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_RETURN T_STRING ( , T_VARIABLE($format) ) ; } T_FUNCTION(filter_admin_configure) ( & T_VARIABLE($form_state) , T_VARIABLE($format) ) { T_VARIABLE($list) = T_STRING ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($list) T_AS T_VARIABLE($filter) ) { T_VARIABLE($form_module) = T_STRING ( T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , , , T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($form_module) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($form_module) ) ) { T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_module) ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($form) ) ) { T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(filter_admin_configure_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] . , , T_STRING ) ; } T_FUNCTION(filter_admin_order_page) ( T_VARIABLE($format) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_RETURN T_STRING ( , T_VARIABLE($format) ) ; } T_FUNCTION(filter_admin_order) ( & T_VARIABLE($form_state) , T_VARIABLE($format) = T_STRING ) { T_VARIABLE($filters) = T_STRING ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_FOREACH ( T_VARIABLE($filters) T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($filter) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($id) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($id) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(theme_filter_admin_order) ( T_VARIABLE($form) ) { T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($id) ) { T_IF ( T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($id) ] ) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($id) ] [ ] [ ] = ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($id) ] ) , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($id) ] ) ) , T_DOUBLE_ARROW , ) ; } } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_STRING ( , , , , T_STRING , T_STRING , T_STRING ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(filter_admin_order_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($weight) ) { T_LIST ( T_VARIABLE($module) , T_VARIABLE($delta) ) = T_STRING ( , T_VARIABLE($id) ) ; T_STRING ( , T_VARIABLE($weight) , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($module) , T_VARIABLE($delta) ) ; } T_STRING ( T_STRING ( ) ) ; T_STRING ( T_VARIABLE($form_state) [ ] [ ] . , , T_STRING ) ; }",10,0
"T_OPEN_TAG T_FUNCTION(filter_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , , ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_VARIABLE($schema) [ ] = T_STRING ( , ) ; T_VARIABLE($schema) [ ] [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($schema) ; }",2,0
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(filter_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($arg) [ T_LNUMBER ] . ) ) ) . ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($arg) [ T_LNUMBER ] ) ) ) . ; T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(filter_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; } T_FUNCTION(filter_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(filter_format_load) ( T_VARIABLE($arg) ) { T_RETURN T_STRING ( T_VARIABLE($arg) ) ; } T_FUNCTION(filter_admin_format_title) ( T_VARIABLE($format) ) { T_RETURN T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(filter_perm) ( ) { T_RETURN T_ARRAY ( ) ; } T_FUNCTION(filter_cron) ( ) { T_STRING ( T_STRING , ) ; } T_FUNCTION(filter_filter_tips) ( T_VARIABLE($delta) , T_VARIABLE($format) , T_VARIABLE($long) = T_STRING ) { T_GLOBAL T_VARIABLE($base_url) ; T_SWITCH ( T_VARIABLE($delta) ) { T_CASE T_LNUMBER : T_IF ( T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , T_STRING ) T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($allowed_html) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , ) ) { T_SWITCH ( T_VARIABLE($long) ) { T_CASE T_LNUMBER : T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($allowed_html) ) ) ; T_CASE T_LNUMBER : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($allowed_html) ) ) . ; T_IF ( ! T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , T_LNUMBER ) ) { T_RETURN T_VARIABLE($output) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($tips) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , . T_VARIABLE($base_urlheader) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_STRING ( , T_VARIABLE($allowed_html) , T_VARIABLE($out) ) ; T_FOREACH ( T_VARIABLE($out) [ T_LNUMBER ] T_AS T_VARIABLE($tag) ) { T_IF ( T_STRING ( T_VARIABLE($tag) , T_VARIABLE($tips) ) ) { T_IF ( T_VARIABLE($tips) [ T_VARIABLE($tag) ] ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($tips) [ T_VARIABLE($tag) ] [ T_LNUMBER ] , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( T_VARIABLE($tips) [ T_VARIABLE($tag) ] [ T_LNUMBER ] ) . , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($tips) [ T_VARIABLE($tag) ] [ T_LNUMBER ] , T_DOUBLE_ARROW ) ) ; } } T_ELSE { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($tag) ) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) , ) ; } } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($entities) = T_ARRAY ( T_ARRAY ( T_STRING ( ) , ) , T_ARRAY ( T_STRING ( ) , ) , T_ARRAY ( T_STRING ( ) , ) , T_ARRAY ( T_STRING ( ) , ) , ) ; T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_UNSET ( T_VARIABLE($rows) ) ; T_FOREACH ( T_VARIABLE($entities) T_AS T_VARIABLE($entity) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($entity) [ T_LNUMBER ] , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( T_VARIABLE($entity) [ T_LNUMBER ] ) . , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($entity) [ T_LNUMBER ] , T_DOUBLE_ARROW ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_RETURN T_VARIABLE($output) ; } } T_ELSE { T_RETURN T_STRING ( ) ; } } T_BREAK ; T_CASE T_LNUMBER : T_SWITCH ( T_VARIABLE($long) ) { T_CASE T_LNUMBER : T_RETURN T_STRING ( ) ; T_CASE T_LNUMBER : T_RETURN T_STRING ( ) ; } T_BREAK ; T_CASE T_LNUMBER : T_RETURN T_STRING ( ) ; } } T_FUNCTION(filter_formats) ( T_VARIABLE($index) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_STATIC T_VARIABLE($formats) ; T_VARIABLE($all) = T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($formats) ) ) { T_VARIABLE($formats) = T_ARRAY ( ) ; T_VARIABLE($query) = ; T_VARIABLE($args) = T_ARRAY ( ) ; T_IF ( ! T_VARIABLE($all) ) { T_VARIABLE($where) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($role) ) { T_VARIABLE($where) [ ] = ; T_VARIABLE($args) [ ] = T_VARIABLE($rid) ; } T_VARIABLE($query) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($where) ) . ; T_VARIABLE($args) [ ] = T_STRING ( , T_LNUMBER ) ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) , T_VARIABLE($args) ) ; T_WHILE ( T_VARIABLE($format) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($formats) [ T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($format) ; } } T_IF ( T_ISSET ( T_VARIABLE($index) ) ) { T_RETURN T_ISSET ( T_VARIABLE($formats) [ T_VARIABLE($index) ] ) ? T_VARIABLE($formats) [ T_VARIABLE($index) ] : T_STRING ; } T_RETURN T_VARIABLE($formats) ; } T_FUNCTION(filter_list_all) ( ) { T_VARIABLE($filters) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_VARIABLE($list) = T_STRING ( T_VARIABLE($module) , , ) ; T_IF ( T_ISSET ( T_VARIABLE($list) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($list) ) ) { T_FOREACH ( T_VARIABLE($list) T_AS T_VARIABLE($delta) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($filters) [ T_VARIABLE($module) . . T_VARIABLE($delta) ] = T_OBJECT_CAST T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($module) , T_DOUBLE_ARROW T_VARIABLE($delta) , T_DOUBLE_ARROW T_VARIABLE($name) ) ; } } } T_STRING ( T_VARIABLE($filters) , ) ; T_RETURN T_VARIABLE($filters) ; } T_FUNCTION(_filter_list_cmp) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_RETURN T_STRING ( T_VARIABLE($a) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($b) T_OBJECT_OPERATOR T_STRING ) ; } T_FUNCTION(filter_resolve_format) ( T_VARIABLE($format) ) { T_RETURN T_VARIABLE($format) T_IS_EQUAL T_STRING ? T_STRING ( , T_LNUMBER ) : T_VARIABLE($format) ; } T_FUNCTION(filter_format_allowcache) ( T_VARIABLE($format) ) { T_STATIC T_VARIABLE($cache) = T_ARRAY ( ) ; T_VARIABLE($format) = T_STRING ( T_VARIABLE($format) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($cache) [ T_VARIABLE($format) ] ) ) { T_VARIABLE($cache) [ T_VARIABLE($format) ] = T_STRING ( T_STRING ( , T_VARIABLE($format) ) ) ; } T_RETURN T_VARIABLE($cache) [ T_VARIABLE($format) ] ; } T_FUNCTION(filter_list_format) ( T_VARIABLE($format) ) { T_STATIC T_VARIABLE($filters) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($filters) [ T_VARIABLE($format) ] ) ) { T_VARIABLE($filters) [ T_VARIABLE($format) ] = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($format) ) ; T_WHILE ( T_VARIABLE($filter) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($list) = T_STRING ( T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , , ) ; T_IF ( T_ISSET ( T_VARIABLE($list) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($list) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($list) [ T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($list) [ T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING ] ; T_VARIABLE($filters) [ T_VARIABLE($format) ] [ T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($filter) ; } } } T_RETURN T_VARIABLE($filters) [ T_VARIABLE($format) ] ; } T_FUNCTION(check_markup) ( T_VARIABLE($text) , T_VARIABLE($format) = T_STRING , T_VARIABLE($check) = T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($text) ) T_BOOLEAN_AND ( ! T_VARIABLE($check) T_BOOLEAN_OR T_STRING ( T_VARIABLE($format) ) ) ) { T_VARIABLE($format) = T_STRING ( T_VARIABLE($format) ) ; T_VARIABLE($cache_id) = T_VARIABLE($format) . . T_STRING ( T_VARIABLE($text) ) ; T_IF ( T_VARIABLE($cached) = T_STRING ( T_VARIABLE($cache_id) , ) ) { T_RETURN T_VARIABLE($cached) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($cache) = T_STRING ( T_VARIABLE($format) ) ; T_VARIABLE($text) = T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($text) ) ; T_VARIABLE($filters) = T_STRING ( T_VARIABLE($format) ) ; T_FOREACH ( T_VARIABLE($filters) T_AS T_VARIABLE($filter) ) { T_VARIABLE($text) = T_STRING ( T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , , , T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($format) , T_VARIABLE($text) , T_VARIABLE($cache_id) ) ; } T_FOREACH ( T_VARIABLE($filters) T_AS T_VARIABLE($filter) ) { T_VARIABLE($text) = T_STRING ( T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , , , T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($format) , T_VARIABLE($text) , T_VARIABLE($cache_id) ) ; } T_IF ( T_VARIABLE($cache) ) { T_STRING ( T_VARIABLE($cache_id) , T_VARIABLE($text) , , T_STRING ( ) + ( T_LNUMBER * T_LNUMBER * T_LNUMBER ) ) ; } } T_ELSE { T_VARIABLE($text) = T_STRING ( ) ; } T_RETURN T_VARIABLE($text) ; } T_FUNCTION(filter_form) ( T_VARIABLE($value) = T_STRING , T_VARIABLE($weight) = T_STRING , T_VARIABLE($parents) = T_ARRAY ( ) ) { T_VARIABLE($value) = T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($formats) = T_STRING ( ) ; T_VARIABLE($extra) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($formats) ) > T_LNUMBER ) { T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($weight) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_FOREACH ( T_VARIABLE($formats) T_AS T_VARIABLE($format) ) { T_VARIABLE($parents_for_id) = T_STRING ( T_VARIABLE($parents) , T_ARRAY ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($value) , T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($parents) , T_DOUBLE_ARROW T_STRING ( , T_STRING ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING , T_STRING ) ) , T_DOUBLE_ARROW T_STRING ( . T_STRING ( , T_VARIABLE($parents_for_id) ) ) , ) ; } } T_ELSE { T_VARIABLE($format) = T_STRING ( T_VARIABLE($formats) ) ; T_VARIABLE($form) [ T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($parents) ) ; T_VARIABLE($tips) = T_STRING ( T_STRING ( , T_LNUMBER ) , T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($tips) , T_STRING , T_VARIABLE($extra) ) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($extra) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(filter_form_validate) ( T_VARIABLE($form) ) { T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_IF ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] T_IS_EQUAL T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) { T_RETURN ; } } T_STRING ( T_VARIABLE($form) , T_STRING ( ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($form) [ ] ) ? T_VARIABLE($form) [ ] [ T_LNUMBER ] : T_VARIABLE($form) [ ] ) , T_STRING ) ; } T_FUNCTION(filter_access) ( T_VARIABLE($format) ) { T_VARIABLE($format) = T_STRING ( T_VARIABLE($format) ) ; T_IF ( T_STRING ( ) T_BOOLEAN_OR ( T_VARIABLE($format) T_IS_EQUAL T_STRING ( , T_LNUMBER ) ) ) { T_RETURN T_STRING ; } T_ELSE { T_VARIABLE($formats) = T_STRING ( ) ; T_RETURN T_ISSET ( T_VARIABLE($formats) [ T_VARIABLE($format) ] ) ; } } T_FUNCTION(_filter_tips) ( T_VARIABLE($format) , T_VARIABLE($long) = T_STRING ) { T_IF ( T_VARIABLE($format) T_IS_EQUAL - T_LNUMBER ) { T_VARIABLE($formats) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($formats) = T_ARRAY ( T_STRING ( T_STRING ( , T_VARIABLE($format) ) ) ) ; } T_VARIABLE($tips) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($formats) T_AS T_VARIABLE($format) ) { T_VARIABLE($filters) = T_STRING ( T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($tips) [ T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($filters) T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($filter) ) { T_IF ( T_VARIABLE($tip) = T_STRING ( T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($filter) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($long) ) ) { T_VARIABLE($tips) [ T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($tip) , T_DOUBLE_ARROW T_VARIABLE($id) ) ; } } } T_RETURN T_VARIABLE($tips) ; } T_FUNCTION(theme_filter_tips_more_info) ( ) { T_RETURN . T_STRING ( T_STRING ( ) , ) . ; } T_FUNCTION(filter_filter) ( T_VARIABLE($op) , T_VARIABLE($delta) = T_LNUMBER , T_VARIABLE($format) = - T_LNUMBER , T_VARIABLE($text) = ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_RETURN T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) ; T_CASE : T_SWITCH ( T_VARIABLE($delta) ) { T_CASE T_LNUMBER : T_RETURN T_STRING ( ) ; T_CASE T_LNUMBER : T_RETURN T_STRING ( ) ; T_CASE T_LNUMBER : T_RETURN T_STRING ( ) ; T_CASE T_LNUMBER : T_RETURN T_STRING ( ) ; T_DEFAULT : T_RETURN ; } T_CASE : T_SWITCH ( T_VARIABLE($delta) ) { T_CASE T_LNUMBER : T_RETURN T_STRING ( T_VARIABLE($text) , T_VARIABLE($format) ) ; T_CASE T_LNUMBER : T_RETURN T_STRING ( T_VARIABLE($text) ) ; T_CASE T_LNUMBER : T_RETURN T_STRING ( T_VARIABLE($text) , T_VARIABLE($format) ) ; T_CASE T_LNUMBER : T_RETURN T_STRING ( T_VARIABLE($text) ) ; T_DEFAULT : T_RETURN T_VARIABLE($text) ; } T_CASE : T_SWITCH ( T_VARIABLE($delta) ) { T_CASE T_LNUMBER : T_RETURN T_STRING ( T_VARIABLE($format) ) ; T_CASE T_LNUMBER : T_RETURN T_STRING ( T_VARIABLE($format) ) ; T_DEFAULT : T_RETURN ; } T_DEFAULT : T_RETURN T_VARIABLE($text) ; } } T_FUNCTION(_filter_html_settings) ( T_VARIABLE($format) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , T_STRING ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(_filter_html) ( T_VARIABLE($text) , T_VARIABLE($format) ) { T_IF ( T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , T_STRING ) T_IS_EQUAL T_STRING ) { T_VARIABLE($allowed_tags) = T_STRING ( , T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , ) , - T_LNUMBER , T_STRING ) ; T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) , T_VARIABLE($allowed_tags) ) ; } T_IF ( T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , T_STRING ) T_IS_EQUAL T_STRING ) { T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) ) ; } T_IF ( T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($format) , T_STRING ) ) { T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; } T_RETURN T_STRING ( T_VARIABLE($text) ) ; } T_FUNCTION(_filter_url_settings) ( T_VARIABLE($format) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ . T_VARIABLE($format) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($format) , T_LNUMBER ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(_filter_url) ( T_VARIABLE($text) , T_VARIABLE($format) ) { T_STRING ( T_STRING , T_STRING ( . T_VARIABLE($format) , T_LNUMBER ) ) ; T_VARIABLE($text) = . T_VARIABLE($text) . ; T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) , T_LNUMBER , - T_LNUMBER ) ; T_RETURN T_VARIABLE($text) ; } T_FUNCTION(_filter_htmlcorrector) ( T_VARIABLE($text) ) { T_STATIC T_VARIABLE($no_nesting) , T_VARIABLE($single_use) ; T_IF ( ! T_ISSET ( T_VARIABLE($no_nesting) ) ) { T_VARIABLE($no_nesting) = T_STRING ( T_ARRAY ( , ) ) ; T_VARIABLE($single_use) = T_STRING ( T_ARRAY ( , , , , , , , , , , ) ) ; } T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($split) = T_STRING ( , T_VARIABLE($text) , - T_LNUMBER , T_STRING ) ; T_VARIABLE($tag) = T_STRING ; T_VARIABLE($stack) = T_ARRAY ( ) ; T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($split) T_AS T_VARIABLE($value) ) { T_IF ( T_VARIABLE($tag) ) { T_LIST ( T_VARIABLE($tagname) ) = T_STRING ( , T_STRING ( T_VARIABLE($value) ) , T_LNUMBER ) ; T_IF ( T_VARIABLE($tagname) { T_LNUMBER } T_IS_EQUAL ) { T_VARIABLE($tagname) = T_STRING ( T_VARIABLE($tagname) , T_LNUMBER ) ; T_IF ( ! T_ISSET ( T_VARIABLE($single_use) [ T_VARIABLE($tagname) ] ) ) { T_IF ( T_STRING ( T_VARIABLE($tagname) , T_VARIABLE($stack) ) ) { T_DO { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($stack) [ T_LNUMBER ] . ; } T_WHILE ( T_STRING ( T_VARIABLE($stack) ) T_IS_NOT_EQUAL T_VARIABLE($tagname) ) ; } } } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($stack) ) T_BOOLEAN_AND ( T_VARIABLE($stack) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($tagname) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($no_nesting) [ T_VARIABLE($stack) [ T_LNUMBER ] ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($stack) ) . ; } T_IF ( ! T_ISSET ( T_VARIABLE($single_use) [ T_VARIABLE($tagname) ] ) ) { T_STRING ( T_VARIABLE($stack) , T_VARIABLE($tagname) ) ; } T_ELSE { T_VARIABLE($value) = T_STRING ( T_VARIABLE($value) , ) . ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($value) . ; } } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($value) ; } T_VARIABLE($tag) = ! T_VARIABLE($tag) ; } T_WHILE ( T_STRING ( T_VARIABLE($stack) ) > T_LNUMBER ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($stack) ) . ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_filter_url_parse_full_links) ( T_VARIABLE($match) ) { T_VARIABLE($match) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_VARIABLE($caption) = T_STRING ( T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ) ; T_VARIABLE($match) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_RETURN T_VARIABLE($match) [ T_LNUMBER ] . . T_VARIABLE($match) [ T_LNUMBER ] . . T_VARIABLE($match) [ T_LNUMBER ] . . T_VARIABLE($caption) . . T_VARIABLE($match) [ T_LNUMBER ] ; } T_FUNCTION(_filter_url_parse_partial_links) ( T_VARIABLE($match) ) { T_VARIABLE($match) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_VARIABLE($caption) = T_STRING ( T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ) ; T_VARIABLE($match) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_RETURN T_VARIABLE($match) [ T_LNUMBER ] . . T_VARIABLE($match) [ T_LNUMBER ] . . T_VARIABLE($match) [ T_LNUMBER ] . . T_VARIABLE($caption) . . T_VARIABLE($match) [ T_LNUMBER ] ; } T_FUNCTION(_filter_url_trim) ( T_VARIABLE($text) , T_VARIABLE($length) = T_STRING ) { T_STATIC T_VARIABLE($_length) ; T_IF ( T_VARIABLE($length) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($_length) = T_VARIABLE($length) ; } T_IF ( T_STRING ( T_VARIABLE($text) ) > T_VARIABLE($_length) + T_LNUMBER ) { T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) , T_LNUMBER , T_VARIABLE($_length) ) . ; } T_RETURN T_VARIABLE($text) ; } T_FUNCTION(_filter_autop) ( T_VARIABLE($text) ) { T_VARIABLE($block) = ; T_VARIABLE($chunks) = T_STRING ( , T_VARIABLE($text) , - T_LNUMBER , T_STRING ) ; T_VARIABLE($ignore) = T_STRING ; T_VARIABLE($ignoretag) = ; T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($chunks) T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($chunk) ) { T_IF ( T_VARIABLE($i) \% T_LNUMBER ) { T_VARIABLE($open) = ( T_VARIABLE($chunk) [ T_LNUMBER ] T_IS_NOT_EQUAL ) ; T_LIST ( T_VARIABLE($tag) ) = T_STRING ( , T_STRING ( T_VARIABLE($chunk) , T_LNUMBER - T_VARIABLE($open) ) , T_LNUMBER ) ; T_IF ( ! T_VARIABLE($ignore) ) { T_IF ( T_VARIABLE($open) ) { T_VARIABLE($ignore) = T_STRING ; T_VARIABLE($ignoretag) = T_VARIABLE($tag) ; } } T_ELSE T_IF ( ! T_VARIABLE($open) T_BOOLEAN_AND T_VARIABLE($ignoretag) T_IS_EQUAL T_VARIABLE($tag) ) { T_VARIABLE($ignore) = T_STRING ; T_VARIABLE($ignoretag) = ; } } T_ELSE T_IF ( ! T_VARIABLE($ignore) ) { T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) . ; T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( . T_VARIABLE($block) . , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( . T_VARIABLE($block) . , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( . T_VARIABLE($block) . , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( . T_VARIABLE($block) . , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( . T_VARIABLE($block) . , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) ; T_VARIABLE($chunk) = T_STRING ( , , T_VARIABLE($chunk) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($chunk) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(filter_xss_admin) ( T_VARIABLE($string) ) { T_RETURN T_STRING ( T_VARIABLE($string) , T_ARRAY ( , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ) ) ; } T_FUNCTION(filter_xss) ( T_VARIABLE($string) , T_VARIABLE($allowed_tags) = T_ARRAY ( , , , , , , , , , , ) ) { T_IF ( ! T_STRING ( T_VARIABLE($string) ) ) { T_RETURN ; } T_STRING ( T_VARIABLE($allowed_tags) , T_STRING ) ; T_VARIABLE($string) = T_STRING ( T_STRING ( T_LNUMBER ) , , T_VARIABLE($string) ) ; T_VARIABLE($string) = T_STRING ( , , T_VARIABLE($string) ) ; T_VARIABLE($string) = T_STRING ( , , T_VARIABLE($string) ) ; T_VARIABLE($string) = T_STRING ( , , T_VARIABLE($string) ) ; T_VARIABLE($string) = T_STRING ( , , T_VARIABLE($string) ) ; T_VARIABLE($string) = T_STRING ( , , T_VARIABLE($string) ) ; T_RETURN T_STRING ( , , T_VARIABLE($string) ) ; } T_FUNCTION(_filter_xss_split) ( T_VARIABLE($m) , T_VARIABLE($store) = T_STRING ) { T_STATIC T_VARIABLE($allowed_html) ; T_IF ( T_VARIABLE($store) ) { T_VARIABLE($allowed_html) = T_STRING ( T_VARIABLE($m) ) ; T_RETURN ; } T_VARIABLE($string) = T_VARIABLE($m) [ T_LNUMBER ] ; T_IF ( T_STRING ( T_VARIABLE($string) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL ) { T_RETURN ; } T_ELSE T_IF ( T_STRING ( T_VARIABLE($string) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN ; } T_IF ( ! T_STRING ( , T_VARIABLE($string) , T_VARIABLE($matches) ) ) { T_RETURN ; } T_VARIABLE($slash) = T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] ) ; T_VARIABLE($elem) = & T_VARIABLE($matches) [ T_LNUMBER ] ; T_VARIABLE($attrlist) = & T_VARIABLE($matches) [ T_LNUMBER ] ; T_IF ( ! T_ISSET ( T_VARIABLE($allowed_html) [ T_STRING ( T_VARIABLE($elem) ) ] ) ) { T_RETURN ; } T_IF ( T_VARIABLE($slash) T_IS_NOT_EQUAL ) { T_RETURN T_ENCAPSED_AND_WHITESPACE T_VARIABLE($elem) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($xhtml_slash) = T_STRING ( , T_VARIABLE($attrlist) ) ? : ; T_VARIABLE($attrlist) = T_STRING ( , , T_VARIABLE($attrlist) ) ; T_VARIABLE($attr2) = T_STRING ( , T_STRING ( T_VARIABLE($attrlist) ) ) ; T_VARIABLE($attr2) = T_STRING ( , , T_VARIABLE($attr2) ) ; T_VARIABLE($attr2) = T_STRING ( T_VARIABLE($attr2) ) ? . T_VARIABLE($attr2) : ; T_RETURN T_ENCAPSED_AND_WHITESPACE T_VARIABLE($elem) T_VARIABLE($attr2) T_VARIABLE($xhtml_slash) T_ENCAPSED_AND_WHITESPACE ; } T_FUNCTION(_filter_xss_attributes) ( T_VARIABLE($attr) ) { T_VARIABLE($attrarr) = T_ARRAY ( ) ; T_VARIABLE($mode) = T_LNUMBER ; T_VARIABLE($attrname) = ; T_WHILE ( T_STRING ( T_VARIABLE($attr) ) T_IS_NOT_EQUAL T_LNUMBER ) { T_VARIABLE($working) = T_LNUMBER ; T_SWITCH ( T_VARIABLE($mode) ) { T_CASE T_LNUMBER : T_IF ( T_STRING ( , T_VARIABLE($attr) , T_VARIABLE($match) ) ) { T_VARIABLE($attrname) = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_VARIABLE($skip) = ( T_VARIABLE($attrname) T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_VARIABLE($attrname) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) ; T_VARIABLE($working) = T_VARIABLE($mode) = T_LNUMBER ; T_VARIABLE($attr) = T_STRING ( , , T_VARIABLE($attr) ) ; } T_BREAK ; T_CASE T_LNUMBER : T_IF ( T_STRING ( , T_VARIABLE($attr) ) ) { T_VARIABLE($working) = T_LNUMBER ; T_VARIABLE($mode) = T_LNUMBER ; T_VARIABLE($attr) = T_STRING ( , , T_VARIABLE($attr) ) ; T_BREAK ; } T_IF ( T_STRING ( , T_VARIABLE($attr) ) ) { T_VARIABLE($working) = T_LNUMBER ; T_VARIABLE($mode) = T_LNUMBER ; T_IF ( ! T_VARIABLE($skip) ) { T_VARIABLE($attrarr) [ ] = T_VARIABLE($attrname) ; } T_VARIABLE($attr) = T_STRING ( , , T_VARIABLE($attr) ) ; } T_BREAK ; T_CASE T_LNUMBER : T_IF ( T_STRING ( , T_VARIABLE($attr) , T_VARIABLE($match) ) ) { T_VARIABLE($thisval) = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_IF ( ! T_VARIABLE($skip) ) { T_VARIABLE($attrarr) [ ] = T_VARIABLE($attrname) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($thisval) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($working) = T_LNUMBER ; T_VARIABLE($mode) = T_LNUMBER ; T_VARIABLE($attr) = T_STRING ( , , T_VARIABLE($attr) ) ; T_BREAK ; } T_IF ( T_STRING ( , T_VARIABLE($attr) , T_VARIABLE($match) ) ) { T_VARIABLE($thisval) = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_IF ( ! T_VARIABLE($skip) ) { T_VARIABLE($attrarr) [ ] = T_VARIABLE($attrname) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($thisval) T_ENCAPSED_AND_WHITESPACE ; ; } T_VARIABLE($working) = T_LNUMBER ; T_VARIABLE($mode) = T_LNUMBER ; T_VARIABLE($attr) = T_STRING ( , , T_VARIABLE($attr) ) ; T_BREAK ; } T_IF ( T_STRING ( , T_VARIABLE($attr) , T_VARIABLE($match) ) ) { T_VARIABLE($thisval) = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_IF ( ! T_VARIABLE($skip) ) { T_VARIABLE($attrarr) [ ] = T_VARIABLE($attrname) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($thisval) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($working) = T_LNUMBER ; T_VARIABLE($mode) = T_LNUMBER ; T_VARIABLE($attr) = T_STRING ( , , T_VARIABLE($attr) ) ; } T_BREAK ; } T_IF ( T_VARIABLE($working) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($attr) = T_STRING ( , , T_VARIABLE($attr) ) ; T_VARIABLE($mode) = T_LNUMBER ; } } T_IF ( T_VARIABLE($mode) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($attrarr) [ ] = T_VARIABLE($attrname) ; } T_RETURN T_VARIABLE($attrarr) ; } T_FUNCTION(filter_xss_bad_protocol) ( T_VARIABLE($string) , T_VARIABLE($decode) = T_STRING ) { T_STATIC T_VARIABLE($allowed_protocols) ; T_IF ( ! T_ISSET ( T_VARIABLE($allowed_protocols) ) ) { T_VARIABLE($allowed_protocols) = T_STRING ( T_STRING ( , T_ARRAY ( , , , , , , , , , , ) ) ) ; } T_IF ( T_VARIABLE($decode) ) { T_VARIABLE($string) = T_STRING ( T_VARIABLE($string) ) ; } T_DO { T_VARIABLE($before) = T_VARIABLE($string) ; T_VARIABLE($colonpos) = T_STRING ( T_VARIABLE($string) , ) ; T_IF ( T_VARIABLE($colonpos) > T_LNUMBER ) { T_VARIABLE($protocol) = T_STRING ( T_VARIABLE($string) , T_LNUMBER , T_VARIABLE($colonpos) ) ; T_IF ( T_STRING ( , T_VARIABLE($protocol) ) ) { T_BREAK ; } T_IF ( ! T_ISSET ( T_VARIABLE($allowed_protocols) [ T_STRING ( T_VARIABLE($protocol) ) ] ) ) { T_VARIABLE($string) = T_STRING ( T_VARIABLE($string) , T_VARIABLE($colonpos) + T_LNUMBER ) ; } } } T_WHILE ( T_VARIABLE($before) T_IS_NOT_EQUAL T_VARIABLE($string) ) ; T_RETURN T_STRING ( T_VARIABLE($string) ) ; }",13,1
"T_OPEN_TAG T_FUNCTION(filter_tips_long) ( ) { T_VARIABLE($format) = T_STRING ( T_LNUMBER ) ; T_IF ( T_VARIABLE($format) ) { T_VARIABLE($output) = T_STRING ( , T_STRING ( T_VARIABLE($format) , T_STRING ) , T_STRING ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( , T_STRING ( - T_LNUMBER , T_STRING ) , T_STRING ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_filter_tips) ( T_VARIABLE($tips) , T_VARIABLE($long) = T_STRING , T_VARIABLE($extra) = ) { T_VARIABLE($output) = ; T_VARIABLE($multiple) = T_STRING ( T_VARIABLE($tips) ) > T_LNUMBER ; T_IF ( T_VARIABLE($multiple) ) { T_VARIABLE($output) = T_STRING ( ) . ; } T_IF ( T_STRING ( T_VARIABLE($tips) ) ) { T_IF ( T_VARIABLE($multiple) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; } T_FOREACH ( T_VARIABLE($tips) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($tiplist) ) { T_IF ( T_VARIABLE($multiple) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($name) . ; } T_IF ( T_STRING ( T_VARIABLE($tiplist) ) > T_LNUMBER ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($tiplist) T_AS T_VARIABLE($tip) ) { T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($long) ? . T_STRING ( , , T_VARIABLE($tip) [ ] ) . : ) . T_VARIABLE($tip) [ ] . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_IF ( T_VARIABLE($multiple) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; } } T_IF ( T_VARIABLE($multiple) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; } } T_RETURN T_VARIABLE($output) ; }",3,0
"T_OPEN_TAG T_CLOSE_TAG T_OPEN_TAG T_IF ( T_VARIABLE($new_posts) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($icon) T_ENCAPSED_AND_WHITESPACE ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($new_posts) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum_id) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($forums) T_AS T_VARIABLE($child_id) T_DOUBLE_ARROW T_VARIABLE($forum) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($child_id) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ? : ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDFOREACH ; T_CLOSE_TAG T_INLINE_HTML",1,0
"T_OPEN_TAG T_CLOSE_TAG T_OPEN_TAG T_IF ( T_VARIABLE($time) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($time) , T_DOUBLE_ARROW T_VARIABLE($author) , ) ) ; T_CLOSE_TAG T_OPEN_TAG T_ELSE : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topic_id) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($header) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($topics) T_AS T_VARIABLE($topic) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ELSE : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDFOREACH ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($pager) ; T_CLOSE_TAG",1,0
"T_OPEN_TAG T_CLOSE_TAG T_OPEN_TAG T_IF ( T_VARIABLE($prev) T_BOOLEAN_OR T_VARIABLE($next) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($prev) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($prev_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($prev_title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($next) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($next_url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($next_title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG",0,0
"T_OPEN_TAG T_FUNCTION(forum_form_main) ( T_VARIABLE($type) , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_IF ( ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] T_IS_EQUAL T_STRING ( ) ) T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) ) { T_RETURN T_STRING ( , T_VARIABLE($edit) [ ] ) ; } T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_RETURN T_STRING ( , T_VARIABLE($edit) ) ; T_BREAK ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($edit) ) ; T_BREAK ; } } T_FUNCTION(forum_form_forum) ( & T_VARIABLE($form_state) , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_VARIABLE($edit) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] [ T_LNUMBER ] = T_STRING ( T_VARIABLE($edit) [ ] , T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_VARIABLE($edit) [ ] ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; } T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(forum_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form) [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($container) = T_STRING ; T_VARIABLE($type) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($container) = T_STRING ; T_VARIABLE($type) = T_STRING ( ) ; } T_VARIABLE($status) = T_STRING ( T_VARIABLE($form_state) [ ] ) ; T_SWITCH ( T_VARIABLE($status) ) { T_CASE T_STRING : T_IF ( T_VARIABLE($container) ) { T_VARIABLE($containers) = T_STRING ( , T_ARRAY ( ) ) ; T_VARIABLE($containers) [ ] = T_VARIABLE($form_state) [ ] [ ] ; T_STRING ( , T_VARIABLE($containers) ) ; } T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($type) ) ) ) ; T_BREAK ; T_CASE T_STRING : T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($type) ) ) ) ; T_BREAK ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(forum_form_container) ( & T_VARIABLE($form_state) , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_VARIABLE($edit) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] [ T_LNUMBER ] = T_STRING ( T_VARIABLE($edit) [ ] , T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_VARIABLE($edit) [ ] ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; } T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(forum_confirm_delete) ( & T_VARIABLE($form_state) , T_VARIABLE($tid) ) { T_VARIABLE($term) = T_STRING ( T_VARIABLE($tid) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($tid) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ) , , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(forum_confirm_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(forum_admin_settings) ( ) { T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($number) = T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($number) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($number) = T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($number) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($forder) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_VARIABLE($forder) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(forum_overview) ( & T_VARIABLE($form_state) ) { T_STRING ( , , ) ; T_VARIABLE($vid) = T_STRING ( , ) ; T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($vid) ) ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($form_state) , T_VARIABLE($vocabulary) ) ; T_STRING ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ) { T_VARIABLE($term) = T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] = T_STRING ( T_VARIABLE($term) [ ] , . T_VARIABLE($term) [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] , T_STRING ( , T_ARRAY ( ) ) ) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] = T_STRING ( T_STRING ( ) , . T_VARIABLE($term) [ ] ) ; } T_ELSE { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] = T_STRING ( T_STRING ( ) , . T_VARIABLE($term) [ ] ) ; } } } T_UNSET ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($form) [ ] = ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(_forum_parent_select) ( T_VARIABLE($tid) , T_VARIABLE($title) , T_VARIABLE($child_type) ) { T_VARIABLE($parents) = T_STRING ( T_VARIABLE($tid) ) ; T_IF ( T_VARIABLE($parents) ) { T_VARIABLE($parent) = T_STRING ( T_VARIABLE($parents) ) ; T_VARIABLE($parent) = T_VARIABLE($parent) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($parent) = T_LNUMBER ; } T_VARIABLE($vid) = T_STRING ( , ) ; T_VARIABLE($children) = T_STRING ( T_VARIABLE($vid) , T_VARIABLE($tid) ) ; T_FOREACH ( T_VARIABLE($children) T_AS T_VARIABLE($child) ) { T_VARIABLE($exclude) [ ] = T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($exclude) [ ] = T_VARIABLE($tid) ; T_VARIABLE($tree) = T_STRING ( T_VARIABLE($vid) ) ; T_VARIABLE($options) [ T_LNUMBER ] = . T_STRING ( ) . ; T_IF ( T_VARIABLE($tree) ) { T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($term) ) { T_IF ( ! T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($exclude) ) ) { T_VARIABLE($options) [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( , T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) . T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } } } T_IF ( T_VARIABLE($child_type) T_IS_EQUAL ) { T_VARIABLE($description) = T_STRING ( ) ; } T_ELSE T_IF ( T_VARIABLE($child_type) T_IS_EQUAL ) { T_VARIABLE($description) = T_STRING ( ) ; } T_RETURN T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($title) , T_DOUBLE_ARROW T_VARIABLE($parent) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_VARIABLE($description) , T_DOUBLE_ARROW T_STRING ) ; }",11,0
"T_OPEN_TAG T_FUNCTION(forum_install) ( ) { T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(forum_enable) ( ) { T_IF ( T_VARIABLE($vocabulary) = T_STRING ( T_STRING ( , T_LNUMBER ) ) ) { T_VARIABLE($vocabulary) = T_ARRAY_CAST T_VARIABLE($vocabulary) ; T_VARIABLE($vocabulary) [ ] [ ] = T_LNUMBER ; T_STRING ( T_VARIABLE($vocabulary) ) ; } T_ELSE { T_VARIABLE($vocabulary) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) , ) ; T_STRING ( T_VARIABLE($vocabulary) ) ; T_STRING ( , T_VARIABLE($vocabulary) [ ] ) ; } } T_FUNCTION(forum_uninstall) ( ) { T_STRING ( , ) ; T_VARIABLE($vid) = T_STRING ( , ) ; T_STRING ( T_VARIABLE($vid) ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(forum_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_RETURN T_VARIABLE($schema) ; } T_FUNCTION(forum_update_6000) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($vid) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($vocabularies) = T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($vocabularies) [ T_VARIABLE($vid) ] ) ) { T_VARIABLE($vocabulary) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) , ) ; T_STRING ( T_VARIABLE($vocabulary) ) ; T_STRING ( , T_VARIABLE($vocabulary) [ ] ) ; } T_RETURN T_VARIABLE($ret) ; }",6,0
"T_OPEN_TAG T_FUNCTION(forum_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( . T_STRING ( , ) ) ) ) . ; } } T_FUNCTION(forum_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(forum_term_load) ( T_VARIABLE($tid) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($tid) , T_STRING ( , ) ) ; T_RETURN T_STRING ( T_VARIABLE($result) ) ; } T_FUNCTION(forum_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(forum_init) ( ) { T_STRING ( T_STRING ( , ) . ) ; } T_FUNCTION(forum_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($teaser) , T_VARIABLE($page) ) { T_VARIABLE($vid) = T_STRING ( , ) ; T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($vid) ) ; T_IF ( T_EMPTY ( T_VARIABLE($vocabulary) ) ) { T_RETURN ; } T_IF ( ! T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN ; } T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_IF ( T_VARIABLE($page) T_BOOLEAN_AND T_STRING ( T_VARIABLE($node) , T_VARIABLE($vid) ) T_BOOLEAN_AND T_VARIABLE($tree) = T_STRING ( T_VARIABLE($vid) ) ) { T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($term) ) { T_VARIABLE($forum_terms) [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($term_id) T_DOUBLE_ARROW T_VARIABLE($term) ) { T_IF ( T_STRING ( T_VARIABLE($term_id) , T_VARIABLE($forum_terms) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($term_id) ; } } T_VARIABLE($breadcrumb) [ ] = T_STRING ( T_STRING ( ) , T_STRING ) ; T_VARIABLE($breadcrumb) [ ] = T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , ) ; T_IF ( T_VARIABLE($parents) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($parents) = T_STRING ( T_VARIABLE($parents) ) ; T_FOREACH ( T_VARIABLE($parents) T_AS T_VARIABLE($p) ) { T_VARIABLE($breadcrumb) [ ] = T_STRING ( T_VARIABLE($p) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($p) T_OBJECT_OPERATOR T_STRING ) ; } } T_STRING ( T_VARIABLE($breadcrumb) ) ; T_IF ( ! T_VARIABLE($teaser) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_LNUMBER , ) ; } } T_BREAK ; T_CASE : T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_LNUMBER ) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($vid) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_LNUMBER ) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_LNUMBER ) ; } T_BREAK ; T_CASE : T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($vocabulary) = T_VARIABLE($vid) ; T_VARIABLE($containers) = T_STRING ( , T_ARRAY ( ) ) ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($term) ) { T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($term) , T_VARIABLE($vocabulary) ) ) ) { T_IF ( T_STRING ( T_VARIABLE($term) , T_VARIABLE($containers) ) ) { T_VARIABLE($term) = T_STRING ( T_VARIABLE($term) ) ; T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } } } T_BREAK ; T_CASE : T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($tree) = T_STRING ( T_VARIABLE($vid) ) ) { T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($term) ) { T_VARIABLE($forum_terms) [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($term_id) ) { T_IF ( T_STRING ( T_VARIABLE($term_id) , T_VARIABLE($forum_terms) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($term_id) ; } } T_VARIABLE($old_tid) = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_LNUMBER ) ) ; T_IF ( T_VARIABLE($old_tid) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($old_tid) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($old_tid) ; } } T_BREAK ; T_CASE : T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_BREAK ; } T_CASE : T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_BREAK ; T_CASE : T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; T_CASE : T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_RETURN ; } T_FUNCTION(forum_node_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ) ; } T_FUNCTION(forum_access) ( T_VARIABLE($op) , T_VARIABLE($node) , T_VARIABLE($account) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_RETURN T_STRING ( , T_VARIABLE($account) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_OR ( T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_AND ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_OR ( T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_AND ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_FUNCTION(forum_perm) ( ) { T_RETURN T_ARRAY ( , , , , , ) ; } T_FUNCTION(forum_taxonomy) ( T_VARIABLE($op) , T_VARIABLE($type) , T_VARIABLE($term) = T_STRING ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($term) [ ] T_IS_EQUAL T_STRING ( , ) ) { T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_VARIABLE($results) = T_STRING ( , T_VARIABLE($term) [ ] ) ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($results) ) ) { T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($containers) = T_STRING ( , T_ARRAY ( ) ) ; T_VARIABLE($key) = T_STRING ( T_VARIABLE($term) [ ] , T_VARIABLE($containers) ) ; T_IF ( T_VARIABLE($key) T_IS_NOT_IDENTICAL T_STRING ) { T_UNSET ( T_VARIABLE($containers) [ T_VARIABLE($key) ] ) ; } T_STRING ( , T_VARIABLE($containers) ) ; T_BREAK ; T_CASE : T_STRING ( ) ; } } } T_FUNCTION(forum_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_VARIABLE($vid) = T_STRING ( , ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] [ ] T_IS_EQUAL T_VARIABLE($vid) ) { T_IF ( T_VARIABLE($form_id) T_IS_EQUAL ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_UNSET ( T_VARIABLE($form) [ ] ) ; } T_ELSEIF ( T_VARIABLE($form_id) T_IS_EQUAL ) { T_VARIABLE($form) [ ] [ ] [ ] = T_STRING ; } } T_IF ( T_VARIABLE($form_id) T_IS_EQUAL ) { T_VARIABLE($vid) = T_STRING ( , ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($vid) ] [ ] = T_STRING ; T_VARIABLE($form) [ ] [ T_VARIABLE($vid) ] [ ] [ ] = T_STRING ( ) ; } } T_FUNCTION(forum_load) ( T_VARIABLE($node) ) { T_VARIABLE($forum) = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_RETURN T_VARIABLE($forum) ; } T_FUNCTION(forum_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($blocks) ; T_CASE : T_VARIABLE($form) [ . T_VARIABLE($delta) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($delta) , ) , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ) ; T_RETURN T_VARIABLE($form) ; T_CASE : T_STRING ( . T_VARIABLE($delta) , T_VARIABLE($edit) [ . T_VARIABLE($delta) ] ) ; T_BREAK ; T_CASE : T_IF ( T_STRING ( ) ) { T_SWITCH ( T_VARIABLE($delta) ) { T_CASE T_LNUMBER : T_VARIABLE($title) = T_STRING ( ) ; T_VARIABLE($sql) = T_STRING ( ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING ( , ) , T_LNUMBER , T_STRING ( , ) ) ; T_VARIABLE($content) = T_STRING ( T_VARIABLE($result) ) ; T_BREAK ; T_CASE T_LNUMBER : T_VARIABLE($title) = T_STRING ( ) ; T_VARIABLE($sql) = T_STRING ( ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING ( , ) , T_LNUMBER , T_STRING ( , ) ) ; T_VARIABLE($content) = T_STRING ( T_VARIABLE($result) ) ; T_BREAK ; } T_IF ( ! T_EMPTY ( T_VARIABLE($content) ) ) { T_VARIABLE($block) [ ] = T_VARIABLE($title) ; T_VARIABLE($block) [ ] = T_VARIABLE($content) . T_STRING ( , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN T_VARIABLE($block) ; } } } } T_FUNCTION(forum_form) ( & T_VARIABLE($node) , T_VARIABLE($form_state) ) { T_VARIABLE($type) = T_STRING ( , T_VARIABLE($node) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($vid) = T_STRING ( , ) ; T_VARIABLE($forum_terms) = T_STRING ( T_VARIABLE($node) , T_VARIABLE($vid) ) ; T_VARIABLE($shadow) = ( T_STRING ( T_VARIABLE($forum_terms) ) > T_LNUMBER ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($shadow) , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_VARIABLE($form) [ ] = T_STRING ( T_VARIABLE($node) , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(forum_link_alter) ( & T_VARIABLE($links) , T_VARIABLE($node) ) { T_FOREACH ( T_VARIABLE($links) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($link) ) { T_IF ( T_STRING ( T_VARIABLE($module) , ) ) { T_VARIABLE($tid) = T_STRING ( , , T_VARIABLE($link) [ ] ) ; T_VARIABLE($vid) = T_STRING ( , ) ; T_VARIABLE($term) = T_STRING ( T_VARIABLE($tid) ) ; T_IF ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($vid) ) { T_VARIABLE($links) [ T_VARIABLE($module) ] [ ] = T_STRING ( , , T_VARIABLE($link) [ ] ) ; } } } } T_FUNCTION(forum_get_forums) ( T_VARIABLE($tid) = T_LNUMBER ) { T_VARIABLE($forums) = T_ARRAY ( ) ; T_VARIABLE($vid) = T_STRING ( , ) ; T_VARIABLE($_forums) = T_STRING ( T_VARIABLE($vid) , T_VARIABLE($tid) ) ; T_IF ( T_STRING ( T_VARIABLE($_forums) ) ) { T_VARIABLE($counts) = T_ARRAY ( ) ; T_VARIABLE($sql) = ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($_counts) = T_STRING ( T_VARIABLE($sql) ) ; T_WHILE ( T_VARIABLE($count) = T_STRING ( T_VARIABLE($_counts) ) ) { T_VARIABLE($counts) [ T_VARIABLE($count) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($count) ; } } T_FOREACH ( T_VARIABLE($_forums) T_AS T_VARIABLE($forum) ) { T_IF ( T_STRING ( T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING , T_STRING ( , T_ARRAY ( ) ) ) ) { T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_IF ( ! T_EMPTY ( T_VARIABLE($counts) [ T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($counts) [ T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($counts) [ T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING + T_VARIABLE($counts) [ T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_VARIABLE($sql) = ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($topic) = T_STRING ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($last_post) = T_NEW T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($last_post) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($last_post) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($last_post) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($last_post) ; T_VARIABLE($forums) [ T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($forum) ; } T_RETURN T_VARIABLE($forums) ; } T_FUNCTION(_forum_topics_unread) ( T_VARIABLE($term) , T_VARIABLE($uid) ) { T_VARIABLE($sql) = ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) ) ; T_RETURN T_STRING ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($term) , T_VARIABLE($uid) , T_STRING ) ) ; } T_FUNCTION(forum_get_topics) ( T_VARIABLE($tid) , T_VARIABLE($sortby) , T_VARIABLE($forum_per_page) ) { T_GLOBAL T_VARIABLE($user) , T_VARIABLE($forum_topic_list_header) ; T_VARIABLE($forum_topic_list_header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , ) ; T_VARIABLE($order) = T_STRING ( T_VARIABLE($sortby) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($forum_topic_list_header) ) ; T_VARIABLE($i) T_INC ) { T_IF ( T_VARIABLE($forum_topic_list_header) [ T_VARIABLE($i) ] [ ] T_IS_EQUAL T_VARIABLE($order) [ ] ) { T_VARIABLE($forum_topic_list_header) [ T_VARIABLE($i) ] [ ] = T_VARIABLE($order) [ ] ; } } T_VARIABLE($term) = T_STRING ( T_VARIABLE($tid) ) ; T_VARIABLE($sql) = T_STRING ( ) ; T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($forum_topic_list_header) , ) ; T_VARIABLE($sql) T_CONCAT_EQUAL ; T_VARIABLE($sql_count) = T_STRING ( ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($forum_per_page) , T_LNUMBER , T_VARIABLE($sql_count) , T_VARIABLE($tid) ) ; T_VARIABLE($topics) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($topic) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($tid) ) { T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_ELSE { T_VARIABLE($history) = T_STRING ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($history) ) ; T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_OR ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING > T_VARIABLE($history) ) ; } } T_ELSE { T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_IF ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) { T_VARIABLE($last_reply) = T_NEW T_STRING ( ) ; T_VARIABLE($last_reply) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($last_reply) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($last_reply) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($last_reply) ; } T_VARIABLE($topics) [ ] = T_VARIABLE($topic) ; } T_RETURN T_VARIABLE($topics) ; } T_FUNCTION(_forum_new) ( T_VARIABLE($tid) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($sql) = ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($nid) = T_STRING ( T_STRING ( T_VARIABLE($sql) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($tid) , T_STRING , T_LNUMBER , T_LNUMBER ) ) ; T_RETURN T_VARIABLE($nid) ? T_VARIABLE($nid) : T_LNUMBER ; } T_FUNCTION(template_preprocess_forums) ( & T_VARIABLE($variables) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($vid) = T_STRING ( , ) ; T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($vid) ) ; T_VARIABLE($title) = ! T_EMPTY ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING : ; T_VARIABLE($breadcrumb) [ ] = T_STRING ( T_STRING ( ) , T_STRING ) ; T_IF ( T_VARIABLE($variables) [ ] ) { T_VARIABLE($breadcrumb) [ ] = T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , ) ; } T_IF ( T_VARIABLE($variables) [ ] ) { T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] ) ; T_FOREACH ( T_VARIABLE($variables) [ ] T_AS T_VARIABLE($p) ) { T_IF ( T_VARIABLE($p) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($variables) [ ] ) { T_VARIABLE($title) = T_VARIABLE($p) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($breadcrumb) [ ] = T_STRING ( T_VARIABLE($p) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($p) T_OBJECT_OPERATOR T_STRING ) ; } } } T_STRING ( T_VARIABLE($breadcrumb) ) ; T_STRING ( T_STRING ( T_VARIABLE($title) ) ) ; T_IF ( T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($variables) [ ] ) ) { T_VARIABLE($forum_types) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($type) ) { T_IF ( T_STRING ( , T_VARIABLE($type) ) ) { T_VARIABLE($forum_types) [ T_VARIABLE($type) ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($type) ) ) ) , T_DOUBLE_ARROW . T_STRING ( , , T_VARIABLE($type) ) . . T_VARIABLE($variables) [ ] ) ; } } T_IF ( T_EMPTY ( T_VARIABLE($forum_types) ) ) { T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($forum_types) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($forum_types) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ) , T_DOUBLE_ARROW T_STRING ) ; } } T_VARIABLE($variables) [ ] = T_VARIABLE($forum_types) ; T_IF ( ! T_EMPTY ( T_VARIABLE($variables) [ ] ) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] , T_VARIABLE($variables) [ ] , T_VARIABLE($variables) [ ] ) ; } T_ELSE { T_VARIABLE($variables) [ ] = ; } T_IF ( T_VARIABLE($variables) [ ] T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($variables) [ ] , T_STRING ( , T_ARRAY ( ) ) ) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] , T_VARIABLE($variables) [ ] , T_VARIABLE($variables) [ ] , T_VARIABLE($variables) [ ] ) ; T_STRING ( T_STRING ( . T_VARIABLE($variables) [ ] . ) , . T_VARIABLE($title) ) ; } T_ELSE { T_VARIABLE($variables) [ ] = ; } T_IF ( T_VARIABLE($variables) [ ] T_BOOLEAN_AND ! T_VARIABLE($variables) [ ] ) { T_VARIABLE($variables) [ ] [ ] = ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] ; } T_ELSEIF ( ! T_VARIABLE($variables) [ ] T_BOOLEAN_AND T_VARIABLE($variables) [ ] ) { T_VARIABLE($variables) [ ] [ ] = ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] ; } T_ELSE { T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] ; } } T_ELSE { T_STRING ( T_STRING ( ) ) ; T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; T_VARIABLE($variables) [ ] = ; T_VARIABLE($variables) [ ] = ; } } T_FUNCTION(template_preprocess_forum_list) ( & T_VARIABLE($variables) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($row) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($variables) [ ] T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($forum) ) { T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = ! T_EMPTY ( T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) : ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = ! T_EMPTY ( T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($row) \% T_LNUMBER T_IS_EQUAL T_LNUMBER ? : ; T_VARIABLE($row) T_INC ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING , , ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING - T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($forum) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] ; T_UNSET ( T_VARIABLE($variables) [ ] ) ; } T_FUNCTION(template_preprocess_forum_topic_list) ( & T_VARIABLE($variables) ) { T_GLOBAL T_VARIABLE($forum_topic_list_header) ; T_VARIABLE($ts) = T_STRING ( T_VARIABLE($forum_topic_list_header) ) ; T_VARIABLE($header) = ; T_FOREACH ( T_VARIABLE($forum_topic_list_header) T_AS T_VARIABLE($cell) ) { T_VARIABLE($cell) = T_STRING ( T_VARIABLE($cell) , T_VARIABLE($forum_topic_list_header) , T_VARIABLE($ts) ) ; T_VARIABLE($header) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($cell) , T_STRING ) ; } T_VARIABLE($variables) [ ] = T_VARIABLE($header) ; T_IF ( ! T_EMPTY ( T_VARIABLE($variables) [ ] ) ) { T_VARIABLE($row) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($variables) [ ] T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($topic) ) { T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($row) \% T_LNUMBER T_IS_EQUAL T_LNUMBER ? : ; T_VARIABLE($row) T_INC ; T_IF ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($variables) [ ] ) { T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = ; } T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($topic) ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_ISSET ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING : T_STRING ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = ; T_IF ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING , , ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($id) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($topic) ) , T_DOUBLE_ARROW ) ) ; } } } T_ELSE { T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; } T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] ; T_UNSET ( T_VARIABLE($variables) [ ] ) ; T_VARIABLE($variables) [ ] = T_STRING ( , T_STRING , T_VARIABLE($variables) [ ] , T_LNUMBER ) ; } T_FUNCTION(template_preprocess_forum_icon) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_LNUMBER ) ; T_IF ( T_VARIABLE($variables) [ ] > T_VARIABLE($variables) [ ] ) { T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] ? : ; } T_ELSE { T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] ? : ; } T_IF ( T_VARIABLE($variables) [ ] T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($variables) [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($variables) [ ] = ; } T_IF ( T_VARIABLE($variables) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($variables) [ ] = ; } } T_FUNCTION(template_preprocess_forum_topic_navigation) ( & T_VARIABLE($variables) ) { T_VARIABLE($output) = ; T_VARIABLE($sql) = . T_STRING ( T_STRING ( , T_LNUMBER ) ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( T_VARIABLE($sql) ) , T_ISSET ( T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING : T_LNUMBER ) ; T_VARIABLE($stop) = T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] = T_LNUMBER ; T_WHILE ( T_VARIABLE($topic) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($stop) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($variables) [ ] = T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; } T_IF ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($stop) = T_LNUMBER ; } T_ELSE { T_VARIABLE($variables) [ ] = T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($topic) T_OBJECT_OPERATOR T_STRING ) ; } } } T_FUNCTION(template_preprocess_forum_submitted) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_ISSET ( T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( , T_VARIABLE($variables) [ ] ) : ; T_VARIABLE($variables) [ ] = T_ISSET ( T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( T_STRING ( ) - T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ) : ; } T_FUNCTION(_forum_user_last_visit) ( T_VARIABLE($nid) ) { T_GLOBAL T_VARIABLE($user) ; T_STATIC T_VARIABLE($history) = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($history) ) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($t) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($history) [ T_VARIABLE($t) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($t) T_OBJECT_OPERATOR T_STRING > T_STRING ? T_VARIABLE($t) T_OBJECT_OPERATOR T_STRING : T_STRING ; } } T_RETURN T_ISSET ( T_VARIABLE($history) [ T_VARIABLE($nid) ] ) ? T_VARIABLE($history) [ T_VARIABLE($nid) ] : T_STRING ; } T_FUNCTION(_forum_get_topic_order) ( T_VARIABLE($sortby) ) { T_SWITCH ( T_VARIABLE($sortby) ) { T_CASE T_LNUMBER : T_RETURN T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_BREAK ; T_CASE T_LNUMBER : T_RETURN T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_BREAK ; T_CASE T_LNUMBER : T_RETURN T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_BREAK ; T_CASE T_LNUMBER : T_RETURN T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_BREAK ; } } T_FUNCTION(_forum_get_topic_order_sql) ( T_VARIABLE($sortby) ) { T_VARIABLE($order) = T_STRING ( T_VARIABLE($sortby) ) ; T_RETURN T_VARIABLE($order) [ ] . . T_STRING ( T_VARIABLE($order) [ ] ) ; }",13,1
"T_OPEN_TAG T_FUNCTION(forum_page) ( T_VARIABLE($tid) = T_LNUMBER ) { T_VARIABLE($topics) = ; T_VARIABLE($forum_per_page) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($sortby) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($forums) = T_STRING ( T_VARIABLE($tid) ) ; T_VARIABLE($parents) = T_STRING ( T_VARIABLE($tid) ) ; T_IF ( T_VARIABLE($tid) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($tid) , T_STRING ( , T_ARRAY ( ) ) ) ) { T_VARIABLE($topics) = T_STRING ( T_VARIABLE($tid) , T_VARIABLE($sortby) , T_VARIABLE($forum_per_page) ) ; } T_RETURN T_STRING ( , T_VARIABLE($forums) , T_VARIABLE($topics) , T_VARIABLE($parents) , T_VARIABLE($tid) , T_VARIABLE($sortby) , T_VARIABLE($forum_per_page) ) ; }",0,1
"T_OPEN_TAG T_CLOSE_TAG T_OPEN_TAG T_IF ( T_VARIABLE($forums_defined) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($links) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($forums) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($topics) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG",0,0
"T_OPEN_TAG T_FUNCTION(help_main) ( ) { T_STRING ( T_STRING ( , ) . , , , T_STRING ) ; T_VARIABLE($output) = . T_STRING ( ) . . T_STRING ( ) . . T_STRING ( ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(help_page) ( T_VARIABLE($name) ) { T_VARIABLE($output) = ; T_IF ( T_STRING ( T_VARIABLE($name) , ) ) { T_VARIABLE($module) = T_STRING ( T_STRING ( , T_VARIABLE($name) ) . . T_VARIABLE($name) . ) ; T_STRING ( T_VARIABLE($module) [ ] ) ; T_VARIABLE($temp) = T_STRING ( T_VARIABLE($name) , , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($name) , T_STRING ( ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($temp) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($module) [ ] ) ) ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($temp) ; } T_VARIABLE($admin_tasks) = T_STRING ( T_VARIABLE($name) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($admin_tasks) ) ) { T_STRING ( T_VARIABLE($admin_tasks) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($admin_tasks) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($module) [ ] ) ) ) ; } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(help_links_as_list) ( ) { T_VARIABLE($empty_arg) = T_STRING ( ) ; T_VARIABLE($module_info) = T_STRING ( ) ; T_VARIABLE($modules) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( , T_STRING ) T_AS T_VARIABLE($module) ) { T_IF ( T_STRING ( T_VARIABLE($module) , , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($module) , T_VARIABLE($empty_arg) ) ) { T_VARIABLE($modules) [ T_VARIABLE($module) ] = T_VARIABLE($module_info) [ T_VARIABLE($module) ] T_OBJECT_OPERATOR T_STRING [ ] ; } } T_STRING ( T_VARIABLE($modules) ) ; T_VARIABLE($count) = T_STRING ( T_VARIABLE($modules) ) ; T_VARIABLE($break) = T_STRING ( T_VARIABLE($count) / T_LNUMBER ) ; T_VARIABLE($output) = ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($modules) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($name) , . T_VARIABLE($module) ) . ; T_IF ( ( T_VARIABLE($i) + T_LNUMBER ) \% T_VARIABLE($break) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND ( T_VARIABLE($i) + T_LNUMBER ) T_IS_NOT_EQUAL T_VARIABLE($count) ) { T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($i) + T_LNUMBER T_IS_EQUAL T_VARIABLE($break) * T_LNUMBER ? : ) . ; } T_VARIABLE($i) T_INC ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; }",4,0
"T_OPEN_TAG T_FUNCTION(help_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_FOREACH ( T_STRING ( , T_STRING ) T_AS T_VARIABLE($module) ) { T_VARIABLE($items) [ . T_VARIABLE($module) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($module) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; } T_RETURN T_VARIABLE($items) ; } T_FUNCTION(help_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; } }",0,1
"T_OPEN_TAG T_FUNCTION(locale_install) ( ) { T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(locale_update_6000) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) , ) , ) ; T_STRING ( T_VARIABLE($ret) , , T_VARIABLE($schema) [ ] ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($count) = T_STRING ( T_STRING ( ) ) ; T_STRING ( , T_VARIABLE($count) ) ; T_VARIABLE($default) = T_STRING ( T_STRING ( ) ) ; T_STRING ( , T_OBJECT_CAST T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(locale_update_6001) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(locale_update_6002) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(locale_update_6003) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(locale_update_6004) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE : T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_ARRAY ( , T_LNUMBER ) ) ) ; T_BREAK ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(locale_update_6005) ( ) { T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($content_type) ) { T_VARIABLE($setting) = T_STRING ( . T_VARIABLE($type) , T_STRING ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($setting) ) ) { T_STRING ( , T_VARIABLE($setting) ) ; T_STRING ( ) ; T_STRING ( . T_STRING ( , ) . ) ; } T_ELSEIF ( T_VARIABLE($type) T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($setting) ) ; T_STRING ( . T_STRING ( , ) . . T_STRING ( . T_VARIABLE($content_type) T_OBJECT_OPERATOR T_STRING . , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) . ) ; } T_ELSEIF ( ! T_STRING ( T_VARIABLE($setting) ) ) { T_STRING ( . T_VARIABLE($type) , T_VARIABLE($setting) ) ; T_STRING ( . T_VARIABLE($type) ) ; } } T_VARIABLE($count) = T_STRING ( T_STRING ( ) ) ; T_STRING ( , T_VARIABLE($count) ) ; T_RETURN T_ARRAY ( ) ; } T_FUNCTION(locale_uninstall) ( ) { T_VARIABLE($files) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($file) = T_STRING ( T_VARIABLE($files) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($file) ) ) { T_STRING ( T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_STRING ( ) ; } T_FUNCTION(locale_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_LNUMBER ) ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_RETURN T_VARIABLE($schema) ; }",8,1
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(locale_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_CASE : T_IF ( T_VARIABLE($arg) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($arg) [ T_LNUMBER ] T_IS_EQUAL T_LNUMBER ) { T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; } T_BREAK ; } } T_FUNCTION(locale_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(locale_inc_callback) ( ) { T_VARIABLE($args) = T_STRING ( ) ; T_VARIABLE($function) = T_STRING ( T_VARIABLE($args) ) ; T_INCLUDE_ONCE ; T_RETURN T_STRING ( T_VARIABLE($function) , T_VARIABLE($args) ) ; } T_FUNCTION(locale_perm) ( ) { T_RETURN T_ARRAY ( , ) ; } T_FUNCTION(locale_locale) ( T_VARIABLE($op) = ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ; } } T_FUNCTION(locale_user) ( T_VARIABLE($type) , T_VARIABLE($edit) , & T_VARIABLE($user) , T_VARIABLE($category) = T_STRING ) { T_GLOBAL T_VARIABLE($language) ; T_IF ( T_STRING ( , T_LNUMBER ) > T_LNUMBER T_BOOLEAN_AND ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($category) T_IS_EQUAL ) ) { T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($languages) = T_VARIABLE($languages) [ T_LNUMBER ] ; T_VARIABLE($user_preferred_language) = T_VARIABLE($user) ? T_STRING ( T_VARIABLE($user) ) : T_VARIABLE($language) ; T_VARIABLE($names) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($languages) T_AS T_VARIABLE($langcode) T_DOUBLE_ARROW T_VARIABLE($item) ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($names) [ T_VARIABLE($langcode) ] = T_VARIABLE($name) . ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($name) ? . T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING . : ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($mode) = T_STRING ( , T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW ( T_STRING ( T_VARIABLE($names) ) T_IS_SMALLER_OR_EQUAL T_LNUMBER ? : ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($user_preferred_language) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($names) , T_DOUBLE_ARROW ( T_VARIABLE($mode) T_IS_EQUAL T_STRING ) ? T_STRING ( ) : T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } } T_FUNCTION(locale_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_SWITCH ( T_VARIABLE($form_id) ) { T_CASE : T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) + T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($form) [ ] [ ] , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_BREAK ; T_CASE : T_IF ( T_ISSET ( T_VARIABLE($form) [ ] [ ] ) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; } T_BREAK ; T_DEFAULT : T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] T_IS_EQUAL ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ( T_ISSET ( T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING : ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) + T_STRING ( ) , ) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($default) = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($default) T_OBJECT_OPERATOR T_STRING ) ; } } } } T_FUNCTION(locale_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) , ) ; } T_FUNCTION(locale) ( T_VARIABLE($string) = T_STRING , T_VARIABLE($langcode) = T_STRING , T_VARIABLE($reset) = T_STRING ) { T_GLOBAL T_VARIABLE($language) ; T_STATIC T_VARIABLE($locale_t) ; T_IF ( T_VARIABLE($reset) ) { T_VARIABLE($locale_t) = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($string) ) ) { T_RETURN T_VARIABLE($locale_t) ; } T_VARIABLE($langcode) = T_ISSET ( T_VARIABLE($langcode) ) ? T_VARIABLE($langcode) : T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($locale_t) [ T_VARIABLE($langcode) ] ) ) { T_VARIABLE($locale_t) [ T_VARIABLE($langcode) ] = T_ARRAY ( ) ; T_IF ( T_STRING ( , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($cache) = T_STRING ( . T_VARIABLE($langcode) , ) ) { T_VARIABLE($locale_t) [ T_VARIABLE($langcode) ] = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($langcode) , T_STRING ) ; T_WHILE ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($locale_t) [ T_VARIABLE($langcode) ] [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] = ( T_EMPTY ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ? T_STRING : T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( . T_VARIABLE($langcode) , T_VARIABLE($locale_t) [ T_VARIABLE($langcode) ] ) ; } } } T_IF ( ! T_ISSET ( T_VARIABLE($locale_t) [ T_VARIABLE($langcode) ] [ T_VARIABLE($string) ] ) ) { T_VARIABLE($translation) = T_STRING ( T_STRING ( , T_VARIABLE($langcode) , T_VARIABLE($string) ) ) ; T_IF ( T_VARIABLE($translation) ) { T_VARIABLE($locale_t) [ T_VARIABLE($langcode) ] [ T_VARIABLE($string) ] = ( T_EMPTY ( T_VARIABLE($translation) T_OBJECT_OPERATOR T_STRING ) ? T_STRING : T_VARIABLE($translation) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($translation) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING ) { T_STRING ( , T_STRING , T_VARIABLE($translation) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , , T_STRING ) ; } } T_ELSE { T_STRING ( , T_STRING ( ) , T_VARIABLE($string) , T_STRING ) ; T_VARIABLE($locale_t) [ T_VARIABLE($langcode) ] [ T_VARIABLE($string) ] = T_STRING ; T_STRING ( , , T_STRING ) ; } } T_RETURN ( T_VARIABLE($locale_t) [ T_VARIABLE($langcode) ] [ T_VARIABLE($string) ] T_IS_IDENTICAL T_STRING ? T_VARIABLE($string) : T_VARIABLE($locale_t) [ T_VARIABLE($langcode) ] [ T_VARIABLE($string) ] ) ; } T_FUNCTION(locale_get_plural) ( T_VARIABLE($count) , T_VARIABLE($langcode) = T_STRING ) { T_GLOBAL T_VARIABLE($language) ; T_STATIC T_VARIABLE($locale_formula) , T_VARIABLE($plurals) = T_ARRAY ( ) ; T_VARIABLE($langcode) = T_VARIABLE($langcode) ? T_VARIABLE($langcode) : T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($plurals) [ T_VARIABLE($langcode) ] [ T_VARIABLE($count) ] ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($locale_formula) ) ) { T_VARIABLE($language_list) = T_STRING ( ) ; T_VARIABLE($locale_formula) [ T_VARIABLE($langcode) ] = T_VARIABLE($language_list) [ T_VARIABLE($langcode) ] T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($locale_formula) [ T_VARIABLE($langcode) ] ) { T_VARIABLE($n) = T_VARIABLE($count) ; T_VARIABLE($plurals) [ T_VARIABLE($langcode) ] [ T_VARIABLE($count) ] = @ T_EVAL ( . T_VARIABLE($locale_formula) [ T_VARIABLE($langcode) ] . ) ; T_RETURN T_VARIABLE($plurals) [ T_VARIABLE($langcode) ] [ T_VARIABLE($count) ] ; } T_ELSE { T_VARIABLE($plurals) [ T_VARIABLE($langcode) ] [ T_VARIABLE($count) ] = - T_LNUMBER ; T_RETURN - T_LNUMBER ; } } T_RETURN T_VARIABLE($plurals) [ T_VARIABLE($langcode) ] [ T_VARIABLE($count) ] ; } T_FUNCTION(locale_language_name) ( T_VARIABLE($lang) ) { T_STATIC T_VARIABLE($list) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($list) ) ) { T_VARIABLE($list) = T_STRING ( ) ; } T_RETURN ( T_VARIABLE($lang) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($list) [ T_VARIABLE($lang) ] ) ) ? T_VARIABLE($list) [ T_VARIABLE($lang) ] : T_STRING ( ) ; } T_FUNCTION(locale_language_list) ( T_VARIABLE($field) = , T_VARIABLE($all) = T_STRING ) { T_IF ( T_VARIABLE($all) ) { T_VARIABLE($languages) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($languages) = T_VARIABLE($languages) [ T_LNUMBER ] ; } T_VARIABLE($list) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($languages) T_AS T_VARIABLE($language) ) { T_VARIABLE($list) [ T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ] = ( T_VARIABLE($field) T_IS_EQUAL ) ? T_STRING ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) : T_VARIABLE($language) T_OBJECT_OPERATOR T_VARIABLE($field) ; } T_RETURN T_VARIABLE($list) ; } T_FUNCTION(locale_system_update) ( T_VARIABLE($components) ) { T_INCLUDE_ONCE ; T_IF ( T_VARIABLE($batch) = T_STRING ( T_VARIABLE($components) ) ) { T_STRING ( T_VARIABLE($batch) ) ; } } T_FUNCTION(locale_update_js_files) ( ) { T_GLOBAL T_VARIABLE($language) ; T_VARIABLE($dir) = T_STRING ( T_STRING ( , ) ) ; T_VARIABLE($parsed) = T_STRING ( , T_ARRAY ( ) ) ; T_VARIABLE($javascript) = T_STRING ( T_STRING , T_STRING , T_STRING ) ; T_VARIABLE($files) = T_VARIABLE($new_files) = T_STRING ; T_FOREACH ( T_VARIABLE($javascript) T_AS T_VARIABLE($scope) ) { T_FOREACH ( T_VARIABLE($scope) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($data) ) { T_IF ( T_VARIABLE($type) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($type) T_IS_NOT_EQUAL ) { T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($filepath) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_VARIABLE($files) = T_STRING ; T_IF ( ! T_STRING ( T_VARIABLE($filepath) , T_VARIABLE($parsed) ) ) { T_IF ( T_STRING ( T_VARIABLE($filepath) , T_LNUMBER , T_STRING ( T_VARIABLE($dir) ) ) T_IS_NOT_EQUAL T_VARIABLE($dir) ) { T_STRING ( , T_VARIABLE($filepath) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($filepath) ) ) ; T_VARIABLE($parsed) [ ] = T_VARIABLE($filepath) ; T_VARIABLE($new_files) = T_STRING ; } } } } } } T_IF ( T_VARIABLE($new_files) ) { T_VARIABLE($parsed) T_PLUS_EQUAL T_STRING ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($parsed) [ . T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ] ) ) { T_IF ( T_STRING ( ) ) { T_UNSET ( T_VARIABLE($parsed) [ . T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ] ) ; } T_STRING ( , T_VARIABLE($parsed) ) ; } T_ELSE T_IF ( T_VARIABLE($new_files) ) { T_STRING ( , T_VARIABLE($parsed) ) ; } T_IF ( T_VARIABLE($files) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_VARIABLE($dir) . . T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING . , ) ; } } T_FUNCTION(locale_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($block) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($block) [ T_LNUMBER ] [ ] = T_STRING ; T_RETURN T_VARIABLE($block) ; } T_ELSEIF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( , T_LNUMBER ) > T_LNUMBER T_BOOLEAN_AND T_STRING ( , T_STRING ) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($links) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($languages) [ T_LNUMBER ] T_AS T_VARIABLE($language) ) { T_VARIABLE($links) [ T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($_GET) [ ] , T_DOUBLE_ARROW T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($language) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; } T_STRING ( , T_VARIABLE($links) , T_VARIABLE($_GET) [ ] ) ; T_VARIABLE($block) [ ] = T_STRING ( ) ; T_VARIABLE($block) [ ] = T_STRING ( , T_VARIABLE($links) , T_ARRAY ( ) ) ; T_RETURN T_VARIABLE($block) ; } }",13,1
"T_OPEN_TAG T_FUNCTION(menu_overview_page) ( ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($content) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($menu) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($menu) [ ] = . T_VARIABLE($menu) [ ] ; T_VARIABLE($menu) [ ] = T_ARRAY ( ) ; T_VARIABLE($content) [ ] = T_VARIABLE($menu) ; } T_RETURN T_STRING ( , T_VARIABLE($content) ) ; } T_FUNCTION(menu_overview_form) ( & T_VARIABLE($form_state) , T_VARIABLE($menu) ) { T_GLOBAL T_VARIABLE($menu_admin) ; T_VARIABLE($sql) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($menu) [ ] ) ; T_VARIABLE($tree) = T_STRING ( T_VARIABLE($result) ) ; T_VARIABLE($node_links) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($tree) , T_VARIABLE($node_links) ) ; T_VARIABLE($menu_admin) = T_STRING ; T_STRING ( T_VARIABLE($tree) , T_VARIABLE($node_links) ) ; T_VARIABLE($menu_admin) = T_STRING ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($tree) ) ; T_VARIABLE($form) [ ] = T_VARIABLE($menu) ; T_IF ( T_STRING ( T_VARIABLE($form) ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(_menu_overview_tree_form) ( T_VARIABLE($tree) ) { T_STATIC T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($data) ) { T_VARIABLE($title) = ; T_VARIABLE($item) = T_VARIABLE($data) [ ] ; T_IF ( T_VARIABLE($item) T_BOOLEAN_AND T_VARIABLE($item) [ ] T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($mlid) = . T_VARIABLE($item) [ ] ; T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] = T_VARIABLE($item) ; T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] = T_VARIABLE($item) [ ] ? T_ARRAY ( T_DOUBLE_ARROW ) : T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] [ ] = T_STRING ( T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) . ( T_VARIABLE($item) [ ] ? . T_STRING ( ) . : ) ; T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ! T_VARIABLE($item) [ ] , ) ; T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , ) ; T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($form_state) [ T_VARIABLE($mlid) ] [ ] ) ? T_VARIABLE($form_state) [ T_VARIABLE($mlid) ] [ ] : T_VARIABLE($item) [ ] , ) ; T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , ) ; T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($form_state) [ T_VARIABLE($mlid) ] [ ] ) ? T_VARIABLE($form_state) [ T_VARIABLE($mlid) ] [ ] : T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($operations) = T_ARRAY ( ) ; T_VARIABLE($operations) [ ] = T_STRING ( T_STRING ( ) , . T_VARIABLE($item) [ ] . ) ; T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($item) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($operations) [ ] = T_STRING ( T_STRING ( ) , . T_VARIABLE($item) [ ] . ) ; } T_ELSEIF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($item) [ ] ) { T_VARIABLE($operations) [ ] = T_STRING ( T_STRING ( ) , . T_VARIABLE($item) [ ] . ) ; } T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($operations) T_AS T_VARIABLE($op) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] [ T_VARIABLE($op) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($value) ) ; } } T_IF ( T_VARIABLE($data) [ ] ) { T_STRING ( T_VARIABLE($data) [ ] ) ; } } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(menu_overview_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($order) = T_STRING ( T_STRING ( T_VARIABLE($form) [ ] ) ) ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($order) , T_VARIABLE($form) ) ; T_VARIABLE($updated_items) = T_ARRAY ( ) ; T_VARIABLE($fields) = T_ARRAY ( , , ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($mlid) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] ) ) { T_VARIABLE($element) = T_VARIABLE($form) [ T_VARIABLE($mlid) ] ; T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($field) ) { T_IF ( T_VARIABLE($element) [ T_VARIABLE($field) ] [ ] T_IS_NOT_EQUAL T_VARIABLE($element) [ T_VARIABLE($field) ] [ ] ) { T_VARIABLE($element) [ ] [ T_VARIABLE($field) ] = T_VARIABLE($element) [ T_VARIABLE($field) ] [ ] ; T_VARIABLE($updated_items) [ T_VARIABLE($mlid) ] = T_VARIABLE($element) [ ] ; } } T_IF ( T_VARIABLE($element) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($element) [ ] [ ] ) { T_VARIABLE($element) [ ] [ ] = ! T_VARIABLE($element) [ ] [ ] ; T_VARIABLE($updated_items) [ T_VARIABLE($mlid) ] = T_VARIABLE($element) [ ] ; } } } T_FOREACH ( T_VARIABLE($updated_items) T_AS T_VARIABLE($item) ) { T_VARIABLE($item) [ ] = T_LNUMBER ; T_STRING ( T_VARIABLE($item) ) ; } } T_FUNCTION(theme_menu_overview_form) ( T_VARIABLE($form) ) { T_STRING ( , , , , , , T_STRING , T_STRING - T_LNUMBER ) ; T_STRING ( , , , ) ; T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($mlid) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($mlid) ] [ ] ) ) { T_VARIABLE($element) = & T_VARIABLE($form) [ T_VARIABLE($mlid) ] ; T_VARIABLE($operations) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($element) [ ] ) T_AS T_VARIABLE($op) ) { T_VARIABLE($operations) [ ] = T_STRING ( T_VARIABLE($element) [ ] [ T_VARIABLE($op) ] ) ; } T_WHILE ( T_STRING ( T_VARIABLE($operations) ) < T_LNUMBER ) { T_VARIABLE($operations) [ ] = ; } T_VARIABLE($element) [ ] [ ] [ ] = ; T_VARIABLE($element) [ ] [ ] [ ] = ; T_VARIABLE($element) [ ] [ ] [ ] = ; T_VARIABLE($element) [ ] [ ] = ; T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($row) [ ] = T_STRING ( , T_VARIABLE($element) [ ] [ ] - T_LNUMBER ) . T_STRING ( T_VARIABLE($element) [ ] ) ; T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($element) [ ] ) , T_DOUBLE_ARROW ) ; T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($element) [ ] ) , T_DOUBLE_ARROW ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($element) [ ] ) . T_STRING ( T_VARIABLE($element) [ ] ) . T_STRING ( T_VARIABLE($element) [ ] ) ; T_VARIABLE($row) = T_STRING ( T_VARIABLE($row) , T_VARIABLE($operations) ) ; T_VARIABLE($row) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($row) ) , T_VARIABLE($element) [ ] ) ; T_VARIABLE($row) [ ] = ! T_EMPTY ( T_VARIABLE($row) [ ] ) ? T_VARIABLE($row) [ ] . : ; T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } } T_VARIABLE($output) = ; T_IF ( T_VARIABLE($rows) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(menu_edit_item) ( & T_VARIABLE($form_state) , T_VARIABLE($type) , T_VARIABLE($item) , T_VARIABLE($menu) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_VARIABLE($item) , ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($item) ) ) { T_VARIABLE($item) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($menu) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; } T_FOREACH ( T_ARRAY ( , , , , ) T_AS T_VARIABLE($key) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($item) [ T_VARIABLE($key) ] ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($item) ) ; T_VARIABLE($path) = T_VARIABLE($item) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($item) [ ] [ ] ) ) { T_VARIABLE($path) T_CONCAT_EQUAL . T_VARIABLE($item) [ ] [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($item) [ ] [ ] ) ) { T_VARIABLE($path) T_CONCAT_EQUAL . T_VARIABLE($item) [ ] [ ] ; } T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($path) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; } T_ELSE { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) , ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($item) [ ] [ ] [ ] ) ? T_VARIABLE($item) [ ] [ ] [ ] : , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ! T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($options) = T_STRING ( T_STRING ( ) , T_VARIABLE($item) ) ; T_VARIABLE($default) = T_VARIABLE($item) [ ] . . T_VARIABLE($item) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_VARIABLE($default) ] ) ) { T_VARIABLE($default) = ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($default) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(menu_edit_item_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($item) = & T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($normal_path) = T_STRING ( T_VARIABLE($item) [ ] ) ; T_IF ( T_VARIABLE($item) [ ] T_IS_NOT_EQUAL T_VARIABLE($normal_path) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_VARIABLE($normal_path) ) ) ) ; T_VARIABLE($item) [ ] = T_VARIABLE($normal_path) ; } T_IF ( ! T_STRING ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($parsed_link) = T_STRING ( T_VARIABLE($item) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($parsed_link) [ ] ) ) { T_VARIABLE($item) [ ] [ ] = T_VARIABLE($parsed_link) [ ] ; } T_IF ( T_ISSET ( T_VARIABLE($parsed_link) [ ] ) ) { T_VARIABLE($item) [ ] [ ] = T_VARIABLE($parsed_link) [ ] ; } T_IF ( T_VARIABLE($item) [ ] T_IS_NOT_EQUAL T_VARIABLE($parsed_link) [ ] ) { T_VARIABLE($item) [ ] = T_VARIABLE($parsed_link) [ ] ; } } T_IF ( ! T_STRING ( T_VARIABLE($item) [ ] ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($item) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($item) [ ] ) ) ) ; } } T_FUNCTION(menu_item_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_state) [ ] = . T_VARIABLE($form_state) [ ] [ ] [ ] . ; } T_FUNCTION(menu_edit_item_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($item) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($item) [ ] = T_INT_CAST ! T_VARIABLE($item) [ ] ; T_UNSET ( T_VARIABLE($item) [ ] ) ; T_VARIABLE($item) [ ] [ ] [ ] = T_VARIABLE($item) [ ] ; T_LIST ( T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) = T_STRING ( , T_VARIABLE($item) [ ] ) ; T_IF ( ! T_STRING ( T_VARIABLE($item) ) ) { T_STRING ( T_STRING ( ) , ) ; } T_VARIABLE($form_state) [ ] = . T_VARIABLE($item) [ ] ; } T_FUNCTION(menu_edit_menu) ( & T_VARIABLE($form_state) , T_VARIABLE($type) , T_VARIABLE($menu) = T_ARRAY ( ) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($menu) [ ] ) ; T_VARIABLE($form) [ ] = T_STRING ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ! T_STRING ( T_VARIABLE($menu) [ ] , T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; } T_ELSE { T_VARIABLE($menu) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_STRING ; } T_VARIABLE($form) [ ] = T_VARIABLE($menu) [ ] ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($menu) [ ] , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($menu) [ ] , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(menu_custom_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_state) [ ] = . T_VARIABLE($form_state) [ ] [ ] . ; } T_FUNCTION(menu_delete_menu_page) ( T_VARIABLE($menu) ) { T_IF ( T_STRING ( T_VARIABLE($menu) [ ] , T_STRING ( ) ) ) { T_STRING ( ) ; T_RETURN ; } T_RETURN T_STRING ( , T_VARIABLE($menu) ) ; } T_FUNCTION(menu_delete_menu_confirm) ( & T_VARIABLE($form_state) , T_VARIABLE($menu) ) { T_VARIABLE($form) [ ] = T_VARIABLE($menu) ; T_VARIABLE($caption) = ; T_VARIABLE($num_links) = T_STRING ( T_STRING ( , T_VARIABLE($menu) [ ] ) ) ; T_IF ( T_VARIABLE($num_links) ) { T_VARIABLE($caption) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($num_links) , , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($menu) [ ] ) ) . ; } T_VARIABLE($caption) T_CONCAT_EQUAL . T_STRING ( ) . ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($menu) [ ] ) ) , . T_VARIABLE($menu) [ ] , T_VARIABLE($caption) , T_STRING ( ) ) ; } T_FUNCTION(menu_delete_menu_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($menu) = T_VARIABLE($form) [ ] ; T_VARIABLE($form_state) [ ] = ; T_IF ( T_STRING ( T_VARIABLE($menu) [ ] , T_STRING ( ) ) T_BOOLEAN_OR ! T_STRING ( T_STRING ( , T_VARIABLE($menu) [ ] ) ) ) { T_RETURN ; } T_VARIABLE($result) = T_STRING ( , T_VARIABLE($menu) [ ] ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($item) ) ; } T_VARIABLE($result) = T_STRING ( , . T_VARIABLE($menu) [ ] ) ; T_WHILE ( T_VARIABLE($m) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($m) [ ] ) ; } T_STRING ( , T_VARIABLE($menu) [ ] ) ; T_STRING ( , T_VARIABLE($menu) [ ] ) ; T_STRING ( , T_VARIABLE($menu) [ ] ) ; T_STRING ( , T_VARIABLE($menu) [ ] ) ; T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($t_args) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($menu) [ ] ) ; T_STRING ( T_STRING ( , T_VARIABLE($t_args) ) ) ; T_STRING ( , , T_VARIABLE($t_args) , T_STRING ) ; } T_FUNCTION(menu_edit_menu_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($item) = T_VARIABLE($form_state) [ ] ; T_IF ( T_STRING ( , T_VARIABLE($item) [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_STRING ( T_VARIABLE($item) [ ] ) > T_STRING ) { T_STRING ( , T_STRING ( T_STRING , , ) ) ; } T_IF ( T_VARIABLE($form) [ ] ) { T_VARIABLE($item) [ ] = . T_VARIABLE($item) [ ] ; T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($item) [ ] ) ) T_BOOLEAN_OR T_STRING ( T_STRING ( , T_VARIABLE($item) [ ] , T_LNUMBER , T_LNUMBER ) ) ) { T_STRING ( , T_STRING ( ) ) ; } } } T_FUNCTION(menu_edit_menu_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($menu) = T_VARIABLE($form_state) [ ] ; T_VARIABLE($path) = ; T_IF ( T_VARIABLE($form) [ ] ) { T_VARIABLE($menu) [ ] = . T_VARIABLE($menu) [ ] ; T_VARIABLE($link) [ ] = T_VARIABLE($menu) [ ] ; T_VARIABLE($link) [ ] = T_VARIABLE($path) . T_VARIABLE($menu) [ ] ; T_VARIABLE($link) [ ] = T_VARIABLE($path) . ; T_VARIABLE($link) [ ] = ; T_VARIABLE($link) [ ] = T_STRING ( T_STRING ( , , ) ) ; T_STRING ( T_VARIABLE($link) ) ; T_STRING ( , T_VARIABLE($menu) [ ] , T_VARIABLE($menu) [ ] , T_VARIABLE($menu) [ ] ) ; } T_ELSE { T_STRING ( , T_VARIABLE($menu) [ ] , T_VARIABLE($menu) [ ] , T_VARIABLE($menu) [ ] ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($path) . T_VARIABLE($menu) [ ] ) ; T_WHILE ( T_VARIABLE($m) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($link) = T_STRING ( T_VARIABLE($m) [ ] ) ; T_VARIABLE($link) [ ] = T_VARIABLE($menu) [ ] ; T_STRING ( T_VARIABLE($link) ) ; } } T_VARIABLE($form_state) [ ] = T_VARIABLE($path) . T_VARIABLE($menu) [ ] ; } T_FUNCTION(menu_item_delete_page) ( T_VARIABLE($item) ) { T_IF ( T_VARIABLE($item) [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_VARIABLE($item) [ ] ) { T_STRING ( ) ; T_RETURN ; } T_RETURN T_STRING ( , T_VARIABLE($item) ) ; } T_FUNCTION(menu_item_delete_form) ( & T_VARIABLE($form_state) , T_VARIABLE($item) ) { T_VARIABLE($form) [ ] = T_VARIABLE($item) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($item) [ ] ) ) , . T_VARIABLE($item) [ ] ) ; } T_FUNCTION(menu_item_delete_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($item) = T_VARIABLE($form) [ ] ; T_STRING ( T_VARIABLE($item) [ ] ) ; T_VARIABLE($t_args) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($item) [ ] ) ; T_STRING ( T_STRING ( , T_VARIABLE($t_args) ) ) ; T_STRING ( , , T_VARIABLE($t_args) , T_STRING ) ; T_VARIABLE($form_state) [ ] = . T_VARIABLE($item) [ ] ; } T_FUNCTION(menu_reset_item_confirm) ( & T_VARIABLE($form_state) , T_VARIABLE($item) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($item) ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($item) [ ] ) ) , . T_VARIABLE($item) [ ] , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(menu_reset_item_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($item) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($new_item) = T_STRING ( T_VARIABLE($item) ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = . T_VARIABLE($new_item) [ ] ; } T_FUNCTION(menu_configure) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($menu_options) = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_VARIABLE($menu_options) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($primary) = T_STRING ( , ) ; T_VARIABLE($primary_options) = T_STRING ( T_VARIABLE($menu_options) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($primary) , T_DOUBLE_ARROW T_VARIABLE($primary_options) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($secondary_options) = T_STRING ( T_VARIABLE($menu_options) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_VARIABLE($secondary_options) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($primary_options) [ T_VARIABLE($primary) ] ) ) , ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; }",11,1
"T_OPEN_TAG T_FUNCTION(menu_install) ( ) { T_STRING ( ) ; T_VARIABLE($t) = T_STRING ( ) ; T_STRING ( , , T_VARIABLE($t) ( ) , T_VARIABLE($t) ( ) ) ; T_STRING ( , , T_VARIABLE($t) ( ) , T_VARIABLE($t) ( ) ) ; T_STRING ( , , T_VARIABLE($t) ( ) , T_VARIABLE($t) ( ) ) ; } T_FUNCTION(menu_uninstall) ( ) { T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(menu_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_RETURN T_VARIABLE($schema) ; }",1,0
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_FUNCTION(menu_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; } } T_FUNCTION(menu_perm) ( ) { T_RETURN T_ARRAY ( ) ; } T_FUNCTION(menu_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , T_STRING , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , T_LNUMBER , T_STRING ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(menu_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(menu_enable) ( ) { T_STRING ( ) ; T_VARIABLE($link) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($link) [ ] = ; T_VARIABLE($link) [ ] = ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($menu) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($link) [ ] = T_LNUMBER ; T_VARIABLE($link) [ ] = T_VARIABLE($menu) [ ] ; T_VARIABLE($link) [ ] = . T_VARIABLE($menu) [ ] ; T_IF ( ! T_STRING ( T_STRING ( , T_VARIABLE($link) [ ] , T_VARIABLE($link) [ ] ) ) ) { T_STRING ( T_VARIABLE($link) ) ; } } T_STRING ( ) ; } T_FUNCTION(menu_overview_title) ( T_VARIABLE($menu) ) { T_RETURN T_VARIABLE($menu) [ ] ; } T_FUNCTION(menu_load) ( T_VARIABLE($menu_name) ) { T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($menu_name) ) ) ; } T_FUNCTION(menu_parent_options) ( T_VARIABLE($menus) , T_VARIABLE($item) ) { T_IF ( T_STRING ( , T_STRING ) ) { T_RETURN T_ARRAY ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($limit) = T_VARIABLE($item) [ ] ; } T_ELSE { T_VARIABLE($limit) = T_STRING ( T_VARIABLE($item) ) ; } T_FOREACH ( T_VARIABLE($menus) T_AS T_VARIABLE($menu_name) T_DOUBLE_ARROW T_VARIABLE($title) ) { T_VARIABLE($tree) = T_STRING ( T_VARIABLE($menu_name) , T_STRING ) ; T_VARIABLE($options) [ T_VARIABLE($menu_name) . ] = . T_VARIABLE($title) . ; T_STRING ( T_VARIABLE($tree) , T_VARIABLE($menu_name) , , T_VARIABLE($options) , T_VARIABLE($item) [ ] , T_VARIABLE($limit) ) ; } T_RETURN T_VARIABLE($options) ; } T_FUNCTION(_menu_parents_recurse) ( T_VARIABLE($tree) , T_VARIABLE($menu_name) , T_VARIABLE($indent) , & T_VARIABLE($options) , T_VARIABLE($exclude) , T_VARIABLE($depth_limit) ) { T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($data) ) { T_IF ( T_VARIABLE($data) [ ] [ ] > T_VARIABLE($depth_limit) ) { T_BREAK ; } T_IF ( T_VARIABLE($data) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($exclude) T_BOOLEAN_AND T_VARIABLE($data) [ ] [ ] T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($title) = T_VARIABLE($indent) . . T_STRING ( T_VARIABLE($data) [ ] [ ] , T_LNUMBER , T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($data) [ ] [ ] ) { T_VARIABLE($title) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_VARIABLE($options) [ T_VARIABLE($menu_name) . . T_VARIABLE($data) [ ] [ ] ] = T_VARIABLE($title) ; T_IF ( T_VARIABLE($data) [ ] ) { T_STRING ( T_VARIABLE($data) [ ] , T_VARIABLE($menu_name) , T_VARIABLE($indent) . , T_VARIABLE($options) , T_VARIABLE($exclude) , T_VARIABLE($depth_limit) ) ; } } } } T_FUNCTION(menu_reset_item) ( T_VARIABLE($item) ) { T_VARIABLE($router) = T_STRING ( ) ; T_VARIABLE($new_item) = T_STRING ( T_VARIABLE($router) [ T_VARIABLE($item) [ ] ] ) ; T_FOREACH ( T_ARRAY ( , ) T_AS T_VARIABLE($key) ) { T_VARIABLE($new_item) [ T_VARIABLE($key) ] = T_VARIABLE($item) [ T_VARIABLE($key) ] ; } T_STRING ( T_VARIABLE($new_item) ) ; T_RETURN T_VARIABLE($new_item) ; } T_FUNCTION(menu_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER ) { T_VARIABLE($menus) = T_STRING ( ) ; T_UNSET ( T_VARIABLE($menus) [ ] ) ; T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($blocks) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($menus) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($title) ) { T_VARIABLE($blocks) [ T_VARIABLE($name) ] [ ] = T_STRING ( T_VARIABLE($title) ) ; T_VARIABLE($blocks) [ T_VARIABLE($name) ] [ ] = T_STRING ; } T_RETURN T_VARIABLE($blocks) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($data) [ ] = T_STRING ( T_VARIABLE($menus) [ T_VARIABLE($delta) ] ) ; T_VARIABLE($data) [ ] = T_STRING ( T_VARIABLE($delta) ) ; T_RETURN T_VARIABLE($data) ; } } T_FUNCTION(menu_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_CASE : T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($item) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] ) ) { T_STRING ( T_VARIABLE($item) [ ] ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($item) [ ] ) ; T_VARIABLE($item) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_VARIABLE($item) [ ] ) { T_VARIABLE($item) [ ] [ ] [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( ! T_STRING ( T_VARIABLE($item) ) ) { T_STRING ( T_STRING ( ) , ) ; } } } T_BREAK ; T_CASE : T_VARIABLE($result) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($m) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($m) [ ] ) ; } T_BREAK ; T_CASE : T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($menu_name) = T_STRING ( , ) ; T_VARIABLE($item) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($mlid) = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($menu_name) , T_LNUMBER , T_LNUMBER ) ) ; T_IF ( ! T_VARIABLE($mlid) ) { T_VARIABLE($mlid) = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_LNUMBER ) ) ; } T_IF ( T_VARIABLE($mlid) ) { T_VARIABLE($item) = T_STRING ( T_VARIABLE($mlid) ) ; } } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($item) + T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($menu_name) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_BREAK ; } } T_FUNCTION(_menu_parent_depth_limit) ( T_VARIABLE($item) ) { T_RETURN T_STRING - T_LNUMBER - ( ( T_VARIABLE($item) [ ] T_BOOLEAN_AND T_VARIABLE($item) [ ] ) ? T_STRING ( T_VARIABLE($item) ) : T_LNUMBER ) ; } T_FUNCTION(menu_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING . T_IS_EQUAL T_VARIABLE($form_id) ) { T_VARIABLE($form) [ ] = T_STRING ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($item) = T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_IF ( ! T_VARIABLE($item) [ ] ) { T_VARIABLE($form) [ ] [ ] = T_STRING ; } T_FOREACH ( T_ARRAY ( , , , , , , , , ) T_AS T_VARIABLE($key) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($item) [ T_VARIABLE($key) ] ) ; } T_VARIABLE($form) [ ] [ ] = T_VARIABLE($item) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($options) = T_STRING ( T_STRING ( ) , T_VARIABLE($item) ) ; T_VARIABLE($default) = T_VARIABLE($item) [ ] . . T_VARIABLE($item) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($options) [ T_VARIABLE($default) ] ) ) { T_VARIABLE($default) = ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($default) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; } } T_FUNCTION(menu_node_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_LIST ( T_VARIABLE($form_state) [ ] [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] [ ] ) = T_STRING ( , T_VARIABLE($form_state) [ ] [ ] [ ] ) ; } T_FUNCTION(menu_get_menus) ( T_VARIABLE($all) = T_STRING ) { T_VARIABLE($system_menus) = T_STRING ( ) ; T_VARIABLE($sql) = ; T_IF ( ! T_VARIABLE($all) ) { T_VARIABLE($sql) T_CONCAT_EQUAL . T_STRING ( , T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($system_menus) ) , ) ) . ; } T_VARIABLE($sql) T_CONCAT_EQUAL ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($system_menus) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($r) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ T_VARIABLE($r) [ ] ] = T_VARIABLE($r) [ ] ; } T_RETURN T_VARIABLE($rows) ; }",13,1
"T_OPEN_TAG T_FUNCTION(node_overview_types) ( ) { T_VARIABLE($types) = T_STRING ( ) ; T_VARIABLE($names) = T_STRING ( ) ; T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($names) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($type) = T_VARIABLE($types) [ T_VARIABLE($key) ] ; T_IF ( T_STRING ( T_VARIABLE($type) , ) ) { T_VARIABLE($type_url_str) = T_STRING ( , , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($row) = T_ARRAY ( T_STRING ( T_VARIABLE($name) , . T_VARIABLE($type_url_str) ) , T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) , ) ; T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , . T_VARIABLE($type_url_str) ) ) ; T_IF ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , . T_VARIABLE($type_url_str) . ) ) ; } T_ELSE { T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; } T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; } T_RETURN T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; } T_FUNCTION(node_type_form) ( & T_VARIABLE($form_state) , T_VARIABLE($type) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($type) = T_NEW T_STRING ( ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_VARIABLE($form) [ ] = T_VARIABLE($type) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_IF ( ! T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_ELSE { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_IF ( ! T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_STRING ( ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_STRING ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING : , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( , ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING : , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) { T_IF ( ! T_EMPTY ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; } } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(node_type_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($type) = T_NEW T_STRING ( ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($old_type) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($types) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($form_state) [ ] [ ] ) { T_IF ( T_ISSET ( T_VARIABLE($types) [ T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ] ) T_BOOLEAN_AND T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($old_type) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_IF ( ! T_STRING ( , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( , ) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } T_VARIABLE($names) = T_STRING ( T_VARIABLE($types) ) ; T_IF ( T_ISSET ( T_VARIABLE($names) [ T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ] ) T_BOOLEAN_AND T_VARIABLE($names) [ T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ] T_IS_NOT_EQUAL T_VARIABLE($old_type) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } T_FUNCTION(node_type_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($op) = T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : ; T_VARIABLE($type) = T_NEW T_STRING ( ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) { T_STRING ( T_VARIABLE($type) ) ; } T_ELSEIF ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) { T_VARIABLE($form_state) [ ] = . T_STRING ( , , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) . ; T_RETURN ; } T_VARIABLE($status) = T_STRING ( T_VARIABLE($type) ) ; T_VARIABLE($variables) = T_VARIABLE($form_state) [ ] ; T_FOREACH ( T_VARIABLE($variables) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_ISSET ( T_VARIABLE($type) T_OBJECT_OPERATOR T_VARIABLE($key) ) ) { T_UNSET ( T_VARIABLE($variables) [ T_VARIABLE($key) ] ) ; } } T_UNSET ( T_VARIABLE($variables) [ ] , T_VARIABLE($variables) [ ] , T_VARIABLE($variables) [ ] , T_VARIABLE($variables) [ ] , T_VARIABLE($variables) [ ] , T_VARIABLE($variables) [ ] ) ; T_FOREACH ( T_VARIABLE($variables) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($variable_new) = T_VARIABLE($key) . . T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variable_old) = T_VARIABLE($key) . . T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) { T_STRING ( T_VARIABLE($variable_old) ) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($value) = T_STRING ( T_STRING ( T_VARIABLE($value) ) ) ; } T_STRING ( T_VARIABLE($variable_new) , T_VARIABLE($value) ) ; T_IF ( T_VARIABLE($variable_new) T_IS_NOT_EQUAL T_VARIABLE($variable_old) ) { T_STRING ( T_VARIABLE($variable_old) ) ; } } } T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($t_args) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) { T_STRING ( T_STRING ( , T_VARIABLE($t_args) ) ) ; T_RETURN ; } T_IF ( T_VARIABLE($status) T_IS_EQUAL T_STRING ) { T_STRING ( T_STRING ( , T_VARIABLE($t_args) ) ) ; } T_ELSEIF ( T_VARIABLE($status) T_IS_EQUAL T_STRING ) { T_STRING ( T_STRING ( , T_VARIABLE($t_args) ) ) ; T_STRING ( , , T_VARIABLE($t_args) , T_STRING , T_STRING ( T_STRING ( ) , ) ) ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(node_node_type) ( T_VARIABLE($op) , T_VARIABLE($info) ) { T_IF ( T_VARIABLE($op) T_IS_NOT_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($update_count) = T_STRING ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($update_count) ) { T_STRING ( T_STRING ( T_VARIABLE($update_count) , , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } } T_FUNCTION(node_type_reset) ( & T_VARIABLE($type) ) { T_VARIABLE($info_array) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($info_array) [ T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($info_array) [ T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($info) = T_STRING ( T_VARIABLE($info_array) [ T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ] ) ; T_FOREACH ( T_VARIABLE($info) T_AS T_VARIABLE($field) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($type) T_OBJECT_OPERATOR T_VARIABLE($field) = T_VARIABLE($value) ; } } } T_FUNCTION(node_type_delete_confirm) ( & T_VARIABLE($form_state) , T_VARIABLE($type) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($message) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($caption) = ; T_VARIABLE($num_nodes) = T_STRING ( T_STRING ( , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) ; T_IF ( T_VARIABLE($num_nodes) ) { T_VARIABLE($caption) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($num_nodes) , , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) . ; } T_VARIABLE($caption) T_CONCAT_EQUAL . T_STRING ( ) . ; T_RETURN T_STRING ( T_VARIABLE($form) , T_VARIABLE($message) , , T_VARIABLE($caption) , T_STRING ( ) ) ; } T_FUNCTION(node_type_delete_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($t_args) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( , T_VARIABLE($t_args) ) ) ; T_STRING ( , , T_VARIABLE($t_args) , T_STRING ) ; T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; }",11,0
"T_OPEN_TAG T_FUNCTION(node_configure) ( ) { T_IF ( T_STRING ( T_STRING ( ) ) T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_OR T_STRING ( T_STRING ( ) ) > T_LNUMBER ) { T_VARIABLE($status) = . T_STRING ( ) . ; T_VARIABLE($status) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($status) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(node_configure_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_STRING ( ) ; } } T_FUNCTION(node_configure_rebuild_confirm) ( ) { T_RETURN T_STRING ( T_ARRAY ( ) , T_STRING ( ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(node_configure_rebuild_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_STRING ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(node_node_operations) ( ) { T_VARIABLE($operations) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) , ) ; T_RETURN T_VARIABLE($operations) ; } T_FUNCTION(node_filters) ( ) { T_VARIABLE($filters) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) , ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($filters) [ ] [ ] T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_VARIABLE($filters) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_VARIABLE($taxonomy) = T_STRING ( , , T_LNUMBER ) ) { T_VARIABLE($filters) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($taxonomy) ) ; } T_IF ( T_VARIABLE($languages) = T_STRING ( , ) ) { T_VARIABLE($languages) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) + T_VARIABLE($languages) ; T_VARIABLE($filters) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($languages) ) ; } T_RETURN T_VARIABLE($filters) ; } T_FUNCTION(node_build_filter_query) ( ) { T_VARIABLE($filters) = T_STRING ( ) ; T_VARIABLE($where) = T_VARIABLE($args) = T_ARRAY ( ) ; T_VARIABLE($join) = ; T_FOREACH ( T_VARIABLE($_SESSION) [ ] T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($filter) ) { T_LIST ( T_VARIABLE($key) , T_VARIABLE($value) ) = T_VARIABLE($filter) ; T_SWITCH ( T_VARIABLE($key) ) { T_CASE : T_LIST ( T_VARIABLE($key) , T_VARIABLE($value) ) = T_STRING ( , T_VARIABLE($value) , T_LNUMBER ) ; T_VARIABLE($where) [ ] = . T_VARIABLE($key) . ; T_BREAK ; T_CASE : T_VARIABLE($table) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($index) ; T_VARIABLE($where) [ ] = T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($join) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($table) T_ENCAPSED_AND_WHITESPACE ; T_BREAK ; T_CASE : T_VARIABLE($where) [ ] = ; T_BREAK ; T_CASE : T_VARIABLE($where) [ ] = ; T_BREAK ; } T_VARIABLE($args) [ ] = T_VARIABLE($value) ; } T_VARIABLE($where) = T_STRING ( T_VARIABLE($where) ) ? . T_STRING ( , T_VARIABLE($where) ) : ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($where) , T_DOUBLE_ARROW T_VARIABLE($join) , T_DOUBLE_ARROW T_VARIABLE($args) ) ; } T_FUNCTION(node_filter_form) ( ) { T_VARIABLE($session) = & T_VARIABLE($_SESSION) [ ] ; T_VARIABLE($session) = T_STRING ( T_VARIABLE($session) ) ? T_VARIABLE($session) : T_ARRAY ( ) ; T_VARIABLE($filters) = T_STRING ( ) ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] = ; T_FOREACH ( T_VARIABLE($session) T_AS T_VARIABLE($filter) ) { T_LIST ( T_VARIABLE($type) , T_VARIABLE($value) ) = T_VARIABLE($filter) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($value) = T_STRING ( , , T_VARIABLE($value) ) ; T_VARIABLE($value) = T_VARIABLE($value) T_OBJECT_OPERATOR T_STRING ; } T_ELSE T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($value) = T_EMPTY ( T_VARIABLE($value) ) ? T_STRING ( ) : T_STRING ( , , T_VARIABLE($value) ) ; } T_ELSE { T_VARIABLE($value) = T_VARIABLE($filters) [ T_VARIABLE($type) ] [ ] [ T_VARIABLE($value) ] ; } T_IF ( T_VARIABLE($i) T_INC ) { T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($filters) [ T_VARIABLE($type) ] [ ] , T_DOUBLE_ARROW T_VARIABLE($value) ) ) ) ; } T_ELSE { T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($filters) [ T_VARIABLE($type) ] [ ] , T_DOUBLE_ARROW T_VARIABLE($value) ) ) ) ; } T_IF ( T_STRING ( T_VARIABLE($type) , T_ARRAY ( , ) ) ) { T_UNSET ( T_VARIABLE($filters) [ T_VARIABLE($type) ] ) ; } } T_FOREACH ( T_VARIABLE($filters) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($filter) ) { T_VARIABLE($names) [ T_VARIABLE($key) ] = T_VARIABLE($filter) [ ] ; T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($filter) [ ] ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($names) , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ( T_STRING ( T_VARIABLE($session) ) ? T_STRING ( ) : T_STRING ( ) ) ) ; T_IF ( T_STRING ( T_VARIABLE($session) ) ) { T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_STRING ( , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(theme_node_filter_form) ( T_VARIABLE($form) ) { T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_node_filters) ( T_VARIABLE($form) ) { T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) . ; } } T_VARIABLE($output) T_CONCAT_EQUAL . ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) ? . T_STRING ( ) . . T_STRING ( ) . : ) . ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($form) [ ] ) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(node_filter_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($filters) = T_STRING ( ) ; T_SWITCH ( T_VARIABLE($form_state) [ ] [ ] ) { T_CASE T_STRING ( ) : T_CASE T_STRING ( ) : T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($filter) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($flat_options) = T_STRING ( T_VARIABLE($filters) [ T_VARIABLE($filter) ] [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($flat_options) [ T_VARIABLE($form_state) [ ] [ T_VARIABLE($filter) ] ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_ARRAY ( T_VARIABLE($filter) , T_VARIABLE($form_state) [ ] [ T_VARIABLE($filter) ] ) ; } } T_BREAK ; T_CASE T_STRING ( ) : T_STRING ( T_VARIABLE($_SESSION) [ ] ) ; T_BREAK ; T_CASE T_STRING ( ) : T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; T_BREAK ; } } T_FUNCTION(node_mass_update) ( T_VARIABLE($nodes) , T_VARIABLE($updates) ) { T_IF ( T_STRING ( T_VARIABLE($nodes) ) > T_LNUMBER ) { T_VARIABLE($batch) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_ARRAY ( T_VARIABLE($nodes) , T_VARIABLE($updates) ) ) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) . , ) ; T_STRING ( T_VARIABLE($batch) ) ; } T_ELSE { T_FOREACH ( T_VARIABLE($nodes) T_AS T_VARIABLE($nid) ) { T_STRING ( T_VARIABLE($nid) , T_VARIABLE($updates) ) ; } T_STRING ( T_STRING ( ) ) ; } } T_FUNCTION(_node_mass_update_helper) ( T_VARIABLE($nid) , T_VARIABLE($updates) ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($nid) , T_STRING , T_STRING ) ; T_FOREACH ( T_VARIABLE($updates) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_VARIABLE($name) = T_VARIABLE($value) ; } T_STRING ( T_VARIABLE($node) ) ; T_RETURN T_VARIABLE($node) ; } T_FUNCTION(_node_mass_update_batch_process) ( T_VARIABLE($nodes) , T_VARIABLE($updates) , & T_VARIABLE($context) ) { T_IF ( ! T_ISSET ( T_VARIABLE($context) [ ] [ ] ) ) { T_VARIABLE($context) [ ] [ ] = T_LNUMBER ; T_VARIABLE($context) [ ] [ ] = T_STRING ( T_VARIABLE($nodes) ) ; T_VARIABLE($context) [ ] [ ] = T_VARIABLE($nodes) ; } T_VARIABLE($count) = T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($context) [ ] [ ] ) ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) T_IS_SMALLER_OR_EQUAL T_VARIABLE($count) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($nid) = T_STRING ( T_VARIABLE($context) [ ] [ ] ) ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($nid) , T_VARIABLE($updates) ) ; T_VARIABLE($context) [ ] [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($context) [ ] [ ] T_INC ; } T_IF ( T_VARIABLE($context) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($context) [ ] [ ] ) { T_VARIABLE($context) [ ] = T_VARIABLE($context) [ ] [ ] / T_VARIABLE($context) [ ] [ ] ; } } T_FUNCTION(_node_mass_update_batch_finished) ( T_VARIABLE($success) , T_VARIABLE($results) , T_VARIABLE($operations) ) { T_IF ( T_VARIABLE($success) ) { T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) , ) ; T_VARIABLE($message) = T_STRING ( T_STRING ( T_VARIABLE($results) ) , , ) ; T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($results) ) ; T_STRING ( T_VARIABLE($message) ) ; } } T_FUNCTION(node_admin_content) ( T_VARIABLE($form_state) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL ) { T_RETURN T_STRING ( T_VARIABLE($form_state) , T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) ; } T_VARIABLE($form) = T_STRING ( ) ; T_VARIABLE($form) [ ] = ; T_VARIABLE($form) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(node_admin_nodes) ( ) { T_VARIABLE($filter) = T_STRING ( ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( . T_VARIABLE($filter) [ ] . . T_VARIABLE($filter) [ ] . ) , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($filter) [ ] ) ; T_VARIABLE($count) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($multilanguage) = ( T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($count) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($options) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($operation) T_DOUBLE_ARROW T_VARIABLE($array) ) { T_VARIABLE($options) [ T_VARIABLE($operation) ] = T_VARIABLE($array) [ ] ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($languages) = T_STRING ( ) ; T_VARIABLE($destination) = T_STRING ( ) ; T_VARIABLE($nodes) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($nodes) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = ; T_VARIABLE($options) = T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_ARRAY ( ) : T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($languages) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($options) ) . . T_STRING ( , T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( , T_VARIABLE($node) ) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ? T_STRING ( ) : T_STRING ( ) ) ) ; T_IF ( T_VARIABLE($multilanguage) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( ) : T_STRING ( T_VARIABLE($languages) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($form) [ ] [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING . , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($nodes) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($form) [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(node_admin_nodes_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($nodes) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($nodes) ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(node_admin_nodes_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($operations) = T_STRING ( ) ; T_VARIABLE($operation) = T_VARIABLE($operations) [ T_VARIABLE($form_state) [ ] [ ] ] ; T_VARIABLE($nodes) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_IF ( T_VARIABLE($function) = T_VARIABLE($operation) [ ] ) { T_IF ( T_ISSET ( T_VARIABLE($operation) [ ] ) ) { T_VARIABLE($args) = T_STRING ( T_ARRAY ( T_VARIABLE($nodes) ) , T_VARIABLE($operation) [ ] ) ; } T_ELSE { T_VARIABLE($args) = T_ARRAY ( T_VARIABLE($nodes) ) ; } T_STRING ( T_VARIABLE($function) , T_VARIABLE($args) ) ; T_STRING ( ) ; } T_ELSE { T_VARIABLE($form_state) [ ] = T_STRING ; } } T_FUNCTION(theme_node_admin_nodes) ( T_VARIABLE($form) ) { T_VARIABLE($has_posts) = T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($select_header) = T_VARIABLE($has_posts) ? T_STRING ( ) : ; T_VARIABLE($header) = T_ARRAY ( T_VARIABLE($select_header) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($header) [ ] = T_STRING ( ) ; } T_VARIABLE($header) [ ] = T_STRING ( ) ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] ) ; T_IF ( T_VARIABLE($has_posts) ) { T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; } T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } } T_ELSE { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_IF ( T_VARIABLE($form) [ ] [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(node_multiple_delete_confirm) ( & T_VARIABLE($form_state) , T_VARIABLE($nodes) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_FOREACH ( T_VARIABLE($nodes) T_AS T_VARIABLE($nid) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($title) = T_STRING ( T_STRING ( , T_VARIABLE($nid) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($nid) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($nid) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($title) ) . , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(node_multiple_delete_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($nid) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_STRING ( T_VARIABLE($nid) ) ; } T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; }",11,0
"T_OPEN_TAG T_FUNCTION(node_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( , T_ARRAY ( , T_LNUMBER ) ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_LNUMBER ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_RETURN T_VARIABLE($schema) ; }",3,0
"T_OPEN_TAG T_STRING ( , T_STRING ( ) - T_LNUMBER * T_LNUMBER * T_LNUMBER * T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(node_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_IF ( T_VARIABLE($path) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($path) T_IS_NOT_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($path) , ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( ) T_BOOLEAN_AND T_STRING ( ) ) { T_IF ( T_VARIABLE($path) T_IS_EQUAL ) { T_VARIABLE($message) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($message) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_STRING ( T_VARIABLE($message) , ) ; } T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_VARIABLE($node) = T_STRING ( T_VARIABLE($arg) [ T_LNUMBER ] ) ; T_VARIABLE($type) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN ( ! T_EMPTY ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ? . T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) . : ) ; } T_IF ( T_VARIABLE($arg) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($arg) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($arg) [ T_LNUMBER ] ) { T_VARIABLE($type) = T_STRING ( , T_STRING ( , , T_VARIABLE($arg) [ T_LNUMBER ] ) ) ; T_RETURN ( ! T_EMPTY ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ? . T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) . : ) ; } } T_FUNCTION(node_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(node_cron) ( ) { T_STRING ( , T_STRING ) ; } T_FUNCTION(node_title_list) ( T_VARIABLE($result) , T_VARIABLE($title) = T_STRING ) { T_VARIABLE($items) = T_ARRAY ( ) ; T_VARIABLE($num_rows) = T_STRING ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($items) [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , , ) ) : T_ARRAY ( ) ) ; T_VARIABLE($num_rows) = T_STRING ; } T_RETURN T_VARIABLE($num_rows) ? T_STRING ( , T_VARIABLE($items) , T_VARIABLE($title) ) : T_STRING ; } T_FUNCTION(theme_node_list) ( T_VARIABLE($items) , T_VARIABLE($title) = T_STRING ) { T_RETURN T_STRING ( , T_VARIABLE($items) , T_VARIABLE($title) ) ; } T_FUNCTION(node_tag_new) ( T_VARIABLE($nid) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($nid) ) ) { T_STRING ( , T_STRING ( ) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($nid) ) ; } T_ELSE { @ T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($nid) , T_STRING ( ) ) ; } } } T_FUNCTION(node_last_viewed) ( T_VARIABLE($nid) ) { T_GLOBAL T_VARIABLE($user) ; T_STATIC T_VARIABLE($history) ; T_IF ( ! T_ISSET ( T_VARIABLE($history) [ T_VARIABLE($nid) ] ) ) { T_VARIABLE($history) [ T_VARIABLE($nid) ] = T_STRING ( T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($nid) ) ) ; } T_RETURN ( T_ISSET ( T_VARIABLE($history) [ T_VARIABLE($nid) ] T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($history) [ T_VARIABLE($nid) ] T_OBJECT_OPERATOR T_STRING : T_LNUMBER ) ; } T_FUNCTION(node_mark) ( T_VARIABLE($nid) , T_VARIABLE($timestamp) ) { T_GLOBAL T_VARIABLE($user) ; T_STATIC T_VARIABLE($cache) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($cache) [ T_VARIABLE($nid) ] ) ) { T_VARIABLE($cache) [ T_VARIABLE($nid) ] = T_STRING ( T_VARIABLE($nid) ) ; } T_IF ( T_VARIABLE($cache) [ T_VARIABLE($nid) ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($timestamp) > T_STRING ) { T_RETURN T_STRING ; } T_ELSEIF ( T_VARIABLE($timestamp) > T_VARIABLE($cache) [ T_VARIABLE($nid) ] T_BOOLEAN_AND T_VARIABLE($timestamp) > T_STRING ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(node_teaser_js) ( & T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($body) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) . . T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; } T_ELSE { T_VARIABLE($body) = . T_VARIABLE($form_state) [ ] [ ] ; } T_STRING ( T_VARIABLE($form) [ ] , T_VARIABLE($body) , T_VARIABLE($form_state) ) ; T_VARIABLE($form) [ ] [ ] = T_VARIABLE($body) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(node_teaser_include_verify) ( & T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($message) = ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND ! T_VARIABLE($form_state) [ ] [ ] ) { T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] , ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($message) = T_STRING ( ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($message) = T_STRING ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($message) ) ) { T_STRING ( T_VARIABLE($message) , ) ; T_STRING ( T_VARIABLE($form) [ ] , T_LNUMBER , T_VARIABLE($form_state) ) ; T_VARIABLE($form) [ ] [ ] = T_LNUMBER ; } } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(node_teaser) ( T_VARIABLE($body) , T_VARIABLE($format) = T_STRING , T_VARIABLE($size) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($size) ) ) { T_VARIABLE($size) = T_STRING ( , T_LNUMBER ) ; } T_VARIABLE($delimiter) = T_STRING ( T_VARIABLE($body) , ) ; T_IF ( T_VARIABLE($size) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($delimiter) T_IS_IDENTICAL T_STRING ) { T_RETURN T_VARIABLE($body) ; } T_IF ( T_VARIABLE($delimiter) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($body) , T_LNUMBER , T_VARIABLE($delimiter) ) ; } T_IF ( T_ISSET ( T_VARIABLE($format) ) ) { T_VARIABLE($filters) = T_STRING ( T_VARIABLE($format) ) ; T_IF ( T_ISSET ( T_VARIABLE($filters) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($body) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_VARIABLE($body) ; } } T_IF ( T_STRING ( T_VARIABLE($body) ) T_IS_SMALLER_OR_EQUAL T_VARIABLE($size) ) { T_RETURN T_VARIABLE($body) ; } T_VARIABLE($teaser) = T_STRING ( T_VARIABLE($body) , T_VARIABLE($size) ) ; T_VARIABLE($max_rpos) = T_STRING ( T_VARIABLE($teaser) ) ; T_VARIABLE($min_rpos) = T_VARIABLE($max_rpos) ; T_VARIABLE($reversed) = T_STRING ( T_VARIABLE($teaser) ) ; T_VARIABLE($break_points) = T_ARRAY ( ) ; T_VARIABLE($break_points) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($line_breaks) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($filters) [ ] ) ) { T_VARIABLE($line_breaks) [ ] = T_LNUMBER ; } T_VARIABLE($break_points) [ ] = T_VARIABLE($line_breaks) ; T_VARIABLE($break_points) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($break_points) T_AS T_VARIABLE($points) ) { T_FOREACH ( T_VARIABLE($points) T_AS T_VARIABLE($point) T_DOUBLE_ARROW T_VARIABLE($offset) ) { T_VARIABLE($rpos) = T_STRING ( T_VARIABLE($reversed) , T_STRING ( T_VARIABLE($point) ) ) ; T_IF ( T_VARIABLE($rpos) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($min_rpos) = T_STRING ( T_VARIABLE($rpos) + T_VARIABLE($offset) , T_VARIABLE($min_rpos) ) ; } } T_IF ( T_VARIABLE($min_rpos) T_IS_NOT_IDENTICAL T_VARIABLE($max_rpos) ) { T_RETURN ( T_VARIABLE($min_rpos) T_IS_IDENTICAL T_LNUMBER ) ? T_VARIABLE($teaser) : T_STRING ( T_VARIABLE($teaser) , T_LNUMBER , T_LNUMBER - T_VARIABLE($min_rpos) ) ; } } T_RETURN T_VARIABLE($teaser) ; } T_FUNCTION(node_get_types) ( T_VARIABLE($op) = , T_VARIABLE($node) = T_STRING , T_VARIABLE($reset) = T_STRING ) { T_STATIC T_VARIABLE($_node_types) , T_VARIABLE($_node_names) ; T_IF ( T_VARIABLE($reset) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($_node_types) ) ) { T_LIST ( T_VARIABLE($_node_types) , T_VARIABLE($_node_names) ) = T_STRING ( ) ; } T_IF ( T_VARIABLE($node) ) { T_IF ( T_STRING ( T_VARIABLE($node) ) ) { T_VARIABLE($type) = T_VARIABLE($node) [ ] ; } T_ELSEIF ( T_STRING ( T_VARIABLE($node) ) ) { T_VARIABLE($type) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_ELSEIF ( T_STRING ( T_VARIABLE($node) ) ) { T_VARIABLE($type) = T_VARIABLE($node) ; } T_IF ( ! T_ISSET ( T_VARIABLE($_node_types) [ T_VARIABLE($type) ] ) ) { T_RETURN T_STRING ; } } T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_RETURN T_VARIABLE($_node_types) ; T_CASE : T_RETURN T_ISSET ( T_VARIABLE($_node_types) [ T_VARIABLE($type) ] ) ? T_VARIABLE($_node_types) [ T_VARIABLE($type) ] : T_STRING ; T_CASE : T_RETURN T_ISSET ( T_VARIABLE($_node_types) [ T_VARIABLE($type) ] T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($_node_types) [ T_VARIABLE($type) ] T_OBJECT_OPERATOR T_STRING : T_STRING ; T_CASE : T_RETURN T_VARIABLE($_node_names) ; T_CASE : T_RETURN T_ISSET ( T_VARIABLE($_node_names) [ T_VARIABLE($type) ] ) ? T_VARIABLE($_node_names) [ T_VARIABLE($type) ] : T_STRING ; } } T_FUNCTION(node_types_rebuild) ( ) { T_STRING ( ) ; T_VARIABLE($node_types) = T_STRING ( , T_STRING , T_STRING ) ; T_FOREACH ( T_VARIABLE($node_types) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_VARIABLE($info) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ; } } T_STRING ( ) ; } T_FUNCTION(node_type_save) ( T_VARIABLE($info) ) { T_VARIABLE($is_existing) = T_STRING ; T_VARIABLE($existing_type) = ! T_EMPTY ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($is_existing) = T_STRING ( T_STRING ( , T_VARIABLE($existing_type) ) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING = ; } T_IF ( ! T_ISSET ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_IF ( ! T_ISSET ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING = ; } T_IF ( T_VARIABLE($is_existing) ) { T_STRING ( , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($existing_type) ) ; T_STRING ( , , T_VARIABLE($info) ) ; T_RETURN T_STRING ; } T_ELSE { T_STRING ( , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , , T_VARIABLE($info) ) ; T_RETURN T_STRING ; } } T_FUNCTION(node_type_delete) ( T_VARIABLE($type) ) { T_VARIABLE($info) = T_STRING ( , T_VARIABLE($type) ) ; T_STRING ( , T_VARIABLE($type) ) ; T_STRING ( , , T_VARIABLE($info) ) ; } T_FUNCTION(node_type_update_nodes) ( T_VARIABLE($old_type) , T_VARIABLE($type) ) { T_STRING ( , T_VARIABLE($type) , T_VARIABLE($old_type) ) ; T_RETURN T_STRING ( ) ; } T_FUNCTION(_node_types_build) ( ) { T_VARIABLE($_node_types) = T_ARRAY ( ) ; T_VARIABLE($_node_names) = T_ARRAY ( ) ; T_VARIABLE($info_array) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($info_array) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_VARIABLE($info) [ ] = T_VARIABLE($type) ; T_VARIABLE($_node_types) [ T_VARIABLE($type) ] = T_OBJECT_CAST T_STRING ( T_VARIABLE($info) ) ; T_VARIABLE($_node_names) [ T_VARIABLE($type) ] = T_VARIABLE($info) [ ] ; } T_VARIABLE($type_result) = T_STRING ( T_STRING ( , , ) ) ; T_WHILE ( T_VARIABLE($type_object) = T_STRING ( T_VARIABLE($type_result) ) ) { T_IF ( T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($info_array) [ T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($_node_types) [ T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING ] ) T_BOOLEAN_OR T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($_node_types) [ T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($type_object) ; T_VARIABLE($_node_names) [ T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING ) { T_UNSET ( T_VARIABLE($_node_types) [ T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING ] ) ; T_UNSET ( T_VARIABLE($_node_names) [ T_VARIABLE($type_object) T_OBJECT_OPERATOR T_STRING ] ) ; } } } T_STRING ( T_VARIABLE($_node_names) ) ; T_RETURN T_ARRAY ( T_VARIABLE($_node_types) , T_VARIABLE($_node_names) ) ; } T_FUNCTION(_node_type_set_defaults) ( T_VARIABLE($info) ) { T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = T_STRING ; } T_IF ( T_VARIABLE($info) [ ] T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = T_STRING ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = T_STRING ; } T_IF ( T_VARIABLE($info) [ ] T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = T_STRING ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = T_LNUMBER ; } T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = T_STRING ; } T_VARIABLE($info) [ ] = T_VARIABLE($info) [ ] ; T_VARIABLE($info) [ ] = T_STRING ; T_RETURN T_VARIABLE($info) ; } T_FUNCTION(node_hook) ( & T_VARIABLE($node) , T_VARIABLE($hook) ) { T_VARIABLE($module) = T_STRING ( , T_VARIABLE($node) ) ; T_IF ( T_VARIABLE($module) T_IS_EQUAL ) { T_VARIABLE($module) = ; } T_RETURN T_STRING ( T_VARIABLE($module) , T_VARIABLE($hook) ) ; } T_FUNCTION(node_invoke) ( & T_VARIABLE($node) , T_VARIABLE($hook) , T_VARIABLE($a2) = T_STRING , T_VARIABLE($a3) = T_STRING , T_VARIABLE($a4) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($node) , T_VARIABLE($hook) ) ) { T_VARIABLE($module) = T_STRING ( , T_VARIABLE($node) ) ; T_IF ( T_VARIABLE($module) T_IS_EQUAL ) { T_VARIABLE($module) = ; } T_VARIABLE($function) = T_VARIABLE($module) . . T_VARIABLE($hook) ; T_RETURN ( T_VARIABLE($function) ( T_VARIABLE($node) , T_VARIABLE($a2) , T_VARIABLE($a3) , T_VARIABLE($a4) ) ) ; } } T_FUNCTION(node_invoke_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($a3) = T_STRING , T_VARIABLE($a4) = T_STRING ) { T_VARIABLE($return) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($name) ) { T_VARIABLE($function) = T_VARIABLE($name) . ; T_VARIABLE($result) = T_VARIABLE($function) ( T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($a3) , T_VARIABLE($a4) ) ; T_IF ( T_ISSET ( T_VARIABLE($result) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($return) = T_STRING ( T_VARIABLE($return) , T_VARIABLE($result) ) ; } T_ELSE T_IF ( T_ISSET ( T_VARIABLE($result) ) ) { T_VARIABLE($return) [ ] = T_VARIABLE($result) ; } } T_RETURN T_VARIABLE($return) ; } T_FUNCTION(node_load) ( T_VARIABLE($param) = T_ARRAY ( ) , T_VARIABLE($revision) = T_STRING , T_VARIABLE($reset) = T_STRING ) { T_STATIC T_VARIABLE($nodes) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($reset) ) { T_VARIABLE($nodes) = T_ARRAY ( ) ; } T_VARIABLE($cachable) = ( T_VARIABLE($revision) T_IS_EQUAL T_STRING ) ; T_VARIABLE($arguments) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($param) ) ) { T_IF ( T_VARIABLE($cachable) ) { T_IF ( T_ISSET ( T_VARIABLE($nodes) [ T_VARIABLE($param) ] ) ) { T_RETURN T_STRING ( T_VARIABLE($nodes) [ T_VARIABLE($param) ] ) ? T_STRING ( T_VARIABLE($nodes) [ T_VARIABLE($param) ] ) : T_VARIABLE($nodes) [ T_VARIABLE($param) ] ; } } T_VARIABLE($cond) = ; T_VARIABLE($arguments) [ ] = T_VARIABLE($param) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($param) ) ) { T_FOREACH ( T_VARIABLE($param) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($cond) [ ] = . T_STRING ( T_VARIABLE($key) ) . ; T_VARIABLE($arguments) [ ] = T_VARIABLE($value) ; } T_VARIABLE($cond) = T_STRING ( , T_VARIABLE($cond) ) ; } T_ELSE { T_RETURN T_STRING ; } T_VARIABLE($fields) = T_STRING ( , ) ; T_VARIABLE($fields) = T_STRING ( T_VARIABLE($fields) , T_STRING ( , ) ) ; T_VARIABLE($fields) = T_STRING ( T_VARIABLE($fields) , T_ARRAY ( , , ) ) ; T_VARIABLE($fields) = T_STRING ( T_VARIABLE($fields) , T_ARRAY ( , , ) ) ; T_VARIABLE($fields) = T_STRING ( , T_VARIABLE($fields) ) ; T_VARIABLE($fields) = T_STRING ( , , T_VARIABLE($fields) ) ; T_VARIABLE($fields) = T_STRING ( , , T_VARIABLE($fields) ) ; T_IF ( T_VARIABLE($revision) ) { T_STRING ( T_VARIABLE($arguments) , T_VARIABLE($revision) ) ; T_VARIABLE($node) = T_STRING ( T_STRING ( . T_VARIABLE($fields) . . T_VARIABLE($cond) , T_VARIABLE($arguments) ) ) ; } T_ELSE { T_VARIABLE($node) = T_STRING ( T_STRING ( . T_VARIABLE($fields) . . T_VARIABLE($cond) , T_VARIABLE($arguments) ) ) ; } T_IF ( T_VARIABLE($node) T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($extra) = T_STRING ( T_VARIABLE($node) , ) ) { T_FOREACH ( T_VARIABLE($extra) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_VARIABLE($key) = T_VARIABLE($value) ; } } T_IF ( T_VARIABLE($extra) = T_STRING ( T_VARIABLE($node) , ) ) { T_FOREACH ( T_VARIABLE($extra) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_VARIABLE($key) = T_VARIABLE($value) ; } } T_IF ( T_VARIABLE($cachable) ) { T_VARIABLE($nodes) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($node) ) ? T_STRING ( T_VARIABLE($node) ) : T_VARIABLE($node) ; } } T_RETURN T_VARIABLE($node) ; } T_FUNCTION(node_validate) ( T_VARIABLE($node) , T_VARIABLE($form) = T_ARRAY ( ) ) { T_VARIABLE($node) = T_OBJECT_CAST T_VARIABLE($node) ; T_VARIABLE($type) = T_STRING ( , T_VARIABLE($node) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) < T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) > T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_STRING ( ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ! ( T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; } } T_STRING ( T_VARIABLE($node) , , T_VARIABLE($form) ) ; T_STRING ( T_VARIABLE($node) , , T_VARIABLE($form) ) ; } T_FUNCTION(node_submit) ( T_VARIABLE($node) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($node) = T_OBJECT_CAST T_VARIABLE($node) ; T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ! T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = ; } } T_IF ( T_STRING ( ) ) { T_IF ( T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) : T_STRING ( ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_RETURN T_VARIABLE($node) ; } T_FUNCTION(node_save) ( & T_VARIABLE($node) ) { T_STRING ( T_VARIABLE($node) , ) ; T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = ; } T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = ; } T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = ; } } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_UNSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } } T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_STRING ; T_VARIABLE($update_node) = T_STRING ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , T_VARIABLE($node) ) ; T_STRING ( T_VARIABLE($node) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($op) = ; } T_ELSE { T_STRING ( , T_VARIABLE($node) , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_VARIABLE($node) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_STRING ( T_VARIABLE($node) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($update_node) = T_STRING ; } T_VARIABLE($op) = ; } T_IF ( T_VARIABLE($update_node) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( T_VARIABLE($node) , T_VARIABLE($op) ) ; T_STRING ( T_VARIABLE($node) , T_VARIABLE($op) ) ; T_STRING ( T_VARIABLE($node) ) ; T_STRING ( ) ; } T_FUNCTION(_node_save_revision) ( & T_VARIABLE($node) , T_VARIABLE($uid) , T_VARIABLE($update) = T_STRING ) { T_VARIABLE($temp_uid) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($uid) ; T_IF ( T_ISSET ( T_VARIABLE($update) ) ) { T_STRING ( , T_VARIABLE($node) , T_VARIABLE($update) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($node) ) ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($temp_uid) ; } T_FUNCTION(node_delete) ( T_VARIABLE($nid) ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($nid) ) ; T_IF ( T_STRING ( , T_VARIABLE($node) ) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($node) , ) ; T_STRING ( T_VARIABLE($node) , ) ; T_STRING ( ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , ) ; } T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } T_FUNCTION(node_view) ( T_VARIABLE($node) , T_VARIABLE($teaser) = T_STRING , T_VARIABLE($page) = T_STRING , T_VARIABLE($links) = T_STRING ) { T_VARIABLE($node) = T_OBJECT_CAST T_VARIABLE($node) ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($node) , T_VARIABLE($teaser) , T_VARIABLE($page) ) ; T_IF ( T_VARIABLE($links) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( , , T_VARIABLE($node) , T_VARIABLE($teaser) ) ; T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) ) ; } T_VARIABLE($content) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($teaser) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($content) ; T_UNSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($content) ; T_UNSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( T_VARIABLE($node) , , T_VARIABLE($teaser) , T_VARIABLE($page) ) ; T_RETURN T_STRING ( , T_VARIABLE($node) , T_VARIABLE($teaser) , T_VARIABLE($page) ) ; } T_FUNCTION(node_prepare) ( T_VARIABLE($node) , T_VARIABLE($teaser) = T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($teaser) T_IS_EQUAL T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($teaser) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; T_RETURN T_VARIABLE($node) ; } T_FUNCTION(node_build_content) ( T_VARIABLE($node) , T_VARIABLE($teaser) = T_STRING , T_VARIABLE($page) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( , , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) : ; T_IF ( T_STRING ( T_VARIABLE($node) , ) ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($node) , , T_VARIABLE($teaser) , T_VARIABLE($page) ) ; } T_ELSE { T_VARIABLE($node) = T_STRING ( T_VARIABLE($node) , T_VARIABLE($teaser) ) ; } T_STRING ( T_VARIABLE($node) , , T_VARIABLE($teaser) , T_VARIABLE($page) ) ; T_RETURN T_VARIABLE($node) ; } T_FUNCTION(node_show) ( T_VARIABLE($node) , T_VARIABLE($cid) , T_VARIABLE($message) = T_STRING ) { T_IF ( T_VARIABLE($message) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ) ; } T_VARIABLE($output) = T_STRING ( T_VARIABLE($node) , T_STRING , T_STRING ) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($node) , T_VARIABLE($cid) ) ; } T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_node_log_message) ( T_VARIABLE($log) ) { T_RETURN . T_STRING ( ) . . T_VARIABLE($log) . ; } T_FUNCTION(node_perm) ( ) { T_VARIABLE($perms) = T_ARRAY ( , , , , , ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($type) ) { T_IF ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($perms) [ ] = . T_VARIABLE($name) . ; T_VARIABLE($perms) [ ] = . T_VARIABLE($name) . ; T_VARIABLE($perms) [ ] = . T_VARIABLE($name) . ; T_VARIABLE($perms) [ ] = . T_VARIABLE($name) . ; T_VARIABLE($perms) [ ] = . T_VARIABLE($name) . ; } } T_RETURN T_VARIABLE($perms) ; } T_FUNCTION(node_search) ( T_VARIABLE($op) = , T_VARIABLE($keys) = T_STRING ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_RETURN T_STRING ( ) ; T_CASE : T_STRING ( , T_STRING ( ) ) ; T_RETURN ; T_CASE : T_VARIABLE($total) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($remaining) = T_STRING ( T_STRING ( ) ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($remaining) , T_DOUBLE_ARROW T_VARIABLE($total) ) ; T_CASE : T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( ) . ) ; T_VARIABLE($ranking) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($ranking) [ ] = T_STRING ( ) ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($ranking) [ ] = T_STRING ( ) ; } T_VARIABLE($options) = T_STRING ( T_STRING ( T_LNUMBER , T_LNUMBER ) ) ; T_FOREACH ( T_VARIABLE($ranking) T_AS T_VARIABLE($var) T_DOUBLE_ARROW T_VARIABLE($title) ) { T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($var) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($title) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($var) , T_LNUMBER ) , ) ; } T_RETURN T_VARIABLE($form) ; T_CASE : T_LIST ( T_VARIABLE($join1) , T_VARIABLE($where1) ) = T_STRING ( ) ; T_VARIABLE($arguments1) = T_ARRAY ( ) ; T_VARIABLE($conditions1) = ; T_IF ( T_VARIABLE($type) = T_STRING ( T_VARIABLE($keys) , ) ) { T_VARIABLE($types) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( , T_VARIABLE($type) ) T_AS T_VARIABLE($t) ) { T_VARIABLE($types) [ ] = ; T_VARIABLE($arguments1) [ ] = T_VARIABLE($t) ; } T_VARIABLE($conditions1) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($types) ) . ; T_VARIABLE($keys) = T_STRING ( T_VARIABLE($keys) , ) ; } T_IF ( T_VARIABLE($category) = T_STRING ( T_VARIABLE($keys) , ) ) { T_VARIABLE($categories) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( , T_VARIABLE($category) ) T_AS T_VARIABLE($c) ) { T_VARIABLE($categories) [ ] = ; T_VARIABLE($arguments1) [ ] = T_VARIABLE($c) ; } T_VARIABLE($conditions1) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($categories) ) . ; T_VARIABLE($join1) T_CONCAT_EQUAL ; T_VARIABLE($keys) = T_STRING ( T_VARIABLE($keys) , ) ; } T_VARIABLE($ranking) = T_ARRAY ( ) ; T_VARIABLE($arguments2) = T_ARRAY ( ) ; T_VARIABLE($join2) = ; T_VARIABLE($stats_join) = T_STRING ; T_VARIABLE($total) = T_LNUMBER ; T_IF ( T_VARIABLE($weight) = T_INT_CAST T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($ranking) [ ] = ; T_VARIABLE($arguments2) [ ] = T_VARIABLE($weight) ; T_VARIABLE($total) T_PLUS_EQUAL T_VARIABLE($weight) ; } T_IF ( T_VARIABLE($weight) = T_INT_CAST T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($ranking) [ ] = ; T_VARIABLE($arguments2) [ ] = T_VARIABLE($weight) ; T_VARIABLE($arguments2) [ ] = T_INT_CAST T_STRING ( , T_LNUMBER ) ; T_VARIABLE($join2) T_CONCAT_EQUAL ; T_VARIABLE($stats_join) = T_STRING ; T_VARIABLE($total) T_PLUS_EQUAL T_VARIABLE($weight) ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($weight) = T_INT_CAST T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($scale) = T_STRING ( , T_DNUMBER ) ; T_VARIABLE($ranking) [ ] = ; T_VARIABLE($arguments2) [ ] = T_VARIABLE($weight) ; T_VARIABLE($arguments2) [ ] = T_VARIABLE($scale) ; T_IF ( ! T_VARIABLE($stats_join) ) { T_VARIABLE($join2) T_CONCAT_EQUAL ; } T_VARIABLE($total) T_PLUS_EQUAL T_VARIABLE($weight) ; } T_IF ( T_STRING ( ) T_BOOLEAN_AND T_STRING ( , T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($weight) = T_INT_CAST T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($scale) = T_STRING ( , T_DNUMBER ) ; T_VARIABLE($ranking) [ ] = ; T_VARIABLE($arguments2) [ ] = T_VARIABLE($weight) ; T_VARIABLE($arguments2) [ ] = T_VARIABLE($scale) ; T_VARIABLE($join2) T_CONCAT_EQUAL ; T_VARIABLE($total) T_PLUS_EQUAL T_VARIABLE($weight) ; } T_VARIABLE($select2) = ( T_STRING ( T_VARIABLE($ranking) ) ? T_STRING ( , T_VARIABLE($ranking) ) : ) . ; T_VARIABLE($find) = T_STRING ( T_VARIABLE($keys) , , . T_VARIABLE($join1) . , T_VARIABLE($conditions1) . ( T_EMPTY ( T_VARIABLE($where1) ) ? : . T_VARIABLE($where1) ) , T_VARIABLE($arguments1) , T_VARIABLE($select2) , T_VARIABLE($join2) , T_VARIABLE($arguments2) ) ; T_VARIABLE($results) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($find) T_AS T_VARIABLE($item) ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($node) , T_STRING , T_STRING ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_STRING ( , , T_VARIABLE($node) , ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_CONCAT_EQUAL T_STRING ( , , T_VARIABLE($node) , ) ; T_VARIABLE($extra) = T_STRING ( T_VARIABLE($node) , ) ; T_VARIABLE($results) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( , T_VARIABLE($node) ) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node) , T_DOUBLE_ARROW T_VARIABLE($extra) , T_DOUBLE_ARROW T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING / T_VARIABLE($total) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($keys) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , ) ; } T_RETURN T_VARIABLE($results) ; } } T_FUNCTION(node_user) ( T_VARIABLE($op) , & T_VARIABLE($edit) , & T_VARIABLE($user) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(theme_node_search_admin) ( T_VARIABLE($form) ) { T_VARIABLE($output) = T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($row) [ ] = T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] ; T_UNSET ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(node_comment_mode) ( T_VARIABLE($nid) ) { T_STATIC T_VARIABLE($comment_mode) ; T_IF ( ! T_ISSET ( T_VARIABLE($comment_mode) [ T_VARIABLE($nid) ] ) ) { T_VARIABLE($comment_mode) [ T_VARIABLE($nid) ] = T_STRING ( T_STRING ( , T_VARIABLE($nid) ) ) ; } T_RETURN T_VARIABLE($comment_mode) [ T_VARIABLE($nid) ] ; } T_FUNCTION(node_link) ( T_VARIABLE($type) , T_VARIABLE($node) = T_STRING , T_VARIABLE($teaser) = T_STRING ) { T_VARIABLE($links) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_IF ( T_VARIABLE($teaser) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ) ; } } T_RETURN T_VARIABLE($links) ; } T_FUNCTION(_node_revision_access) ( T_VARIABLE($node) , T_VARIABLE($op) = ) { T_STATIC T_VARIABLE($access) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($access) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($node_current_revision) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($is_current_revision) = T_VARIABLE($node_current_revision) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($is_current_revision) T_BOOLEAN_AND ( T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_OR T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($op) T_IS_EQUAL ) ) { T_VARIABLE($access) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_STRING ; } T_ELSEIF ( T_STRING ( ) ) { T_VARIABLE($access) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_STRING ; } T_ELSE { T_VARIABLE($map) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($access) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_ISSET ( T_VARIABLE($map) [ T_VARIABLE($op) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($map) [ T_VARIABLE($op) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($op) , T_VARIABLE($node_current_revision) ) T_BOOLEAN_AND ( T_VARIABLE($is_current_revision) T_BOOLEAN_OR T_STRING ( T_VARIABLE($op) , T_VARIABLE($node) ) ) ; } } T_RETURN T_VARIABLE($access) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] ; } T_FUNCTION(_node_add_access) ( ) { T_VARIABLE($types) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($types) T_AS T_VARIABLE($type) ) { T_IF ( T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN T_STRING ; } } T_RETURN T_STRING ; } T_FUNCTION(node_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_FOREACH ( T_STRING ( , T_STRING , T_STRING ) T_AS T_VARIABLE($type) ) { T_VARIABLE($type_url_str) = T_STRING ( , , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($items) [ . T_VARIABLE($type_url_str) ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ . T_VARIABLE($type_url_str) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_VARIABLE($type) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ . T_VARIABLE($type_url_str) . ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ . T_VARIABLE($type_url_str) . ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_VARIABLE($type) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; } T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER , T_STRING , T_STRING ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER , ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER , ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(node_page_title) ( T_VARIABLE($node) ) { T_RETURN T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(node_init) ( ) { T_STRING ( T_STRING ( , ) . ) ; } T_FUNCTION(node_last_changed) ( T_VARIABLE($nid) ) { T_VARIABLE($node) = T_STRING ( T_STRING ( , T_VARIABLE($nid) ) ) ; T_RETURN ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_FUNCTION(node_revision_list) ( T_VARIABLE($node) ) { T_VARIABLE($revisions) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($revision) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($revisions) [ T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($revision) ; } T_RETURN T_VARIABLE($revisions) ; } T_FUNCTION(node_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ; T_RETURN T_VARIABLE($blocks) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($block) [ ] = T_STRING ( ) ; T_VARIABLE($block) [ ] = T_STRING ( , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN T_VARIABLE($block) ; } } T_FUNCTION(node_feed) ( T_VARIABLE($nids) = T_STRING , T_VARIABLE($channel) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($base_url) , T_VARIABLE($language) ; T_IF ( T_VARIABLE($nids) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($nids) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( ) , T_LNUMBER , T_STRING ( , T_LNUMBER ) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($nids) [ ] = T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ; } } T_VARIABLE($item_length) = T_STRING ( , ) ; T_VARIABLE($namespaces) = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($items) = ; T_FOREACH ( T_VARIABLE($nids) T_AS T_VARIABLE($nid) ) { T_VARIABLE($item) = T_STRING ( T_VARIABLE($nid) ) ; T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($nid) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_IF ( T_VARIABLE($item_length) T_IS_NOT_EQUAL ) { T_VARIABLE($teaser) = ( T_VARIABLE($item_length) T_IS_EQUAL ) ? T_STRING : T_STRING ; T_IF ( T_STRING ( T_VARIABLE($item) , ) ) { T_VARIABLE($item) = T_STRING ( T_VARIABLE($item) , , T_VARIABLE($teaser) , T_STRING ) ; } T_ELSE { T_VARIABLE($item) = T_STRING ( T_VARIABLE($item) , T_VARIABLE($teaser) ) ; } T_STRING ( T_VARIABLE($item) , , T_VARIABLE($teaser) , T_STRING ) ; } T_VARIABLE($extra) = T_STRING ( T_VARIABLE($item) , ) ; T_VARIABLE($extra) = T_STRING ( T_VARIABLE($extra) , T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING , , ) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($base_url) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) ) ) ) ; T_FOREACH ( T_VARIABLE($extra) T_AS T_VARIABLE($element) ) { T_IF ( T_ISSET ( T_VARIABLE($element) [ ] ) ) { T_VARIABLE($namespaces) = T_STRING ( T_VARIABLE($namespaces) , T_VARIABLE($element) [ ] ) ; } } T_SWITCH ( T_VARIABLE($item_length) ) { T_CASE : T_VARIABLE($item_text) = T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($item_text) = T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($item_text) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , . T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) ) ) . ; } T_BREAK ; T_CASE : T_VARIABLE($item_text) = ; T_BREAK ; } T_VARIABLE($items) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($item) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($item_text) , T_VARIABLE($extra) ) ; } T_VARIABLE($channel_defaults) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_VARIABLE($base_url) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($channel) = T_STRING ( T_VARIABLE($channel_defaults) , T_VARIABLE($channel) ) ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($channel) [ ] . . T_VARIABLE($base_url) . . T_STRING ( T_VARIABLE($namespaces) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($channel) [ ] , T_VARIABLE($channel) [ ] , T_VARIABLE($channel) [ ] , T_VARIABLE($items) , T_VARIABLE($channel) [ ] ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_STRING ( ) ; T_PRINT T_VARIABLE($output) ; } T_FUNCTION(node_page_default) ( ) { T_VARIABLE($result) = T_STRING ( T_STRING ( ) , T_STRING ( , T_LNUMBER ) ) ; T_VARIABLE($output) = ; T_VARIABLE($num_rows) = T_STRING ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_LNUMBER ) ; T_VARIABLE($num_rows) = T_STRING ; } T_IF ( T_VARIABLE($num_rows) ) { T_VARIABLE($feed_url) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_STRING ( T_VARIABLE($feed_url) , T_STRING ( , ) . . T_STRING ( ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_STRING ( , T_LNUMBER ) ) ; } T_ELSE { T_VARIABLE($default_message) = T_STRING ( ) ; T_VARIABLE($default_message) T_CONCAT_EQUAL ; T_VARIABLE($default_message) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($default_message) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) . ; T_VARIABLE($default_message) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) . ; T_VARIABLE($default_message) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($default_message) T_CONCAT_EQUAL ; T_VARIABLE($default_message) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) . ; T_VARIABLE($output) = . T_VARIABLE($default_message) . ; } T_STRING ( ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(node_page_view) ( T_VARIABLE($node) , T_VARIABLE($cid) = T_STRING ) { T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_RETURN T_STRING ( T_VARIABLE($node) , T_VARIABLE($cid) ) ; } T_FUNCTION(node_update_index) ( ) { T_VARIABLE($limit) = T_INT_CAST T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_DNUMBER / T_STRING ( T_LNUMBER , T_STRING ( T_STRING ( ) ) ) ) ; T_STRING ( , T_DNUMBER / T_STRING ( T_LNUMBER , T_STRING ( T_STRING ( ) ) ) ) ; T_VARIABLE($result) = T_STRING ( , T_LNUMBER , T_VARIABLE($limit) ) ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($node) ) ; } } T_FUNCTION(_node_index_node) ( T_VARIABLE($node) ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($node) , T_STRING , T_STRING ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($text) = . T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($extra) = T_STRING ( T_VARIABLE($node) , ) ; T_FOREACH ( T_VARIABLE($extra) T_AS T_VARIABLE($t) ) { T_VARIABLE($text) T_CONCAT_EQUAL T_VARIABLE($t) ; } T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($text) ) ; } T_FUNCTION(node_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_VARIABLE($form_id) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($form) [ ] [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_VARIABLE($taxonomy) = T_STRING ( , , T_LNUMBER ) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($taxonomy) , T_DOUBLE_ARROW T_STRING , ) ; } T_VARIABLE($types) = T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($types) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] = ; } } T_FUNCTION(node_search_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($keys) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($form_state) [ ] [ ] = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($keys) = T_STRING ( T_VARIABLE($keys) , , T_STRING ( , T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } } T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($keys) = T_STRING ( T_VARIABLE($keys) , , T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) ; } T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_NOT_EQUAL ) { T_IF ( T_STRING ( , . T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($matches) ) ) { T_VARIABLE($keys) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($matches) [ T_LNUMBER ] ) ; } } T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_NOT_EQUAL ) { T_IF ( T_STRING ( , . T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($matches) ) ) { T_VARIABLE($keys) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($matches) [ T_LNUMBER ] ) ; } } T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($keys) T_CONCAT_EQUAL . T_STRING ( , , T_VARIABLE($form_state) [ ] [ ] ) . ; } T_IF ( ! T_EMPTY ( T_VARIABLE($keys) ) ) { T_STRING ( T_VARIABLE($form) [ ] [ ] [ ] , T_STRING ( T_VARIABLE($keys) ) , T_VARIABLE($form_state) ) ; } } T_FUNCTION(node_access) ( T_VARIABLE($op) , T_VARIABLE($node) , T_VARIABLE($account) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( ! T_VARIABLE($node) ) { T_RETURN T_STRING ; } T_IF ( T_VARIABLE($op) T_IS_NOT_EQUAL ) { T_VARIABLE($node) = T_OBJECT_CAST T_VARIABLE($node) ; } T_IF ( T_EMPTY ( T_VARIABLE($account) ) ) { T_VARIABLE($account) = T_VARIABLE($user) ; } T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN T_STRING ; } T_IF ( T_STRING ( , T_VARIABLE($account) ) ) { T_RETURN T_STRING ; } T_IF ( ! T_STRING ( , T_VARIABLE($account) ) ) { T_RETURN T_STRING ; } T_VARIABLE($module) = T_STRING ( , T_VARIABLE($node) ) ; T_IF ( T_VARIABLE($module) T_IS_EQUAL ) { T_VARIABLE($module) = ; } T_VARIABLE($access) = T_STRING ( T_VARIABLE($module) , , T_VARIABLE($op) , T_VARIABLE($node) , T_VARIABLE($account) ) ; T_IF ( ! T_STRING ( T_VARIABLE($access) ) ) { T_RETURN T_VARIABLE($access) ; } T_IF ( T_VARIABLE($op) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($grants) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($op) , T_VARIABLE($account) ) T_AS T_VARIABLE($realm) T_DOUBLE_ARROW T_VARIABLE($gids) ) { T_FOREACH ( T_VARIABLE($gids) T_AS T_VARIABLE($gid) ) { T_VARIABLE($grants) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($gid) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($realm) T_ENCAPSED_AND_WHITESPACE ; } } T_VARIABLE($grants_sql) = ; T_IF ( T_STRING ( T_VARIABLE($grants) ) ) { T_VARIABLE($grants_sql) = . T_STRING ( , T_VARIABLE($grants) ) . ; } T_VARIABLE($sql) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($grants_sql) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($op) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN ( T_STRING ( T_VARIABLE($result) ) ) ; } T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(_node_access_join_sql) ( T_VARIABLE($node_alias) = , T_VARIABLE($node_access_alias) = ) { T_IF ( T_STRING ( ) ) { T_RETURN ; } T_RETURN . T_VARIABLE($node_access_alias) . . T_VARIABLE($node_access_alias) . . T_VARIABLE($node_alias) . ; } T_FUNCTION(_node_access_where_sql) ( T_VARIABLE($op) = , T_VARIABLE($node_access_alias) = , T_VARIABLE($account) = T_STRING ) { T_IF ( T_STRING ( ) ) { T_RETURN ; } T_VARIABLE($grants) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($op) , T_VARIABLE($account) ) T_AS T_VARIABLE($realm) T_DOUBLE_ARROW T_VARIABLE($gids) ) { T_FOREACH ( T_VARIABLE($gids) T_AS T_VARIABLE($gid) ) { T_VARIABLE($grants) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node_access_alias) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($gid) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node_access_alias) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($realm) T_ENCAPSED_AND_WHITESPACE ; } } T_VARIABLE($grants_sql) = ; T_IF ( T_STRING ( T_VARIABLE($grants) ) ) { T_VARIABLE($grants_sql) = . T_STRING ( , T_VARIABLE($grants) ) . ; } T_VARIABLE($sql) = T_VARIABLE($node_access_alias) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($op) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($grants_sql) ; T_RETURN T_VARIABLE($sql) ; } T_FUNCTION(node_access_grants) ( T_VARIABLE($op) , T_VARIABLE($account) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($account) ) ) { T_VARIABLE($account) = T_VARIABLE($GLOBALS) [ ] ; } T_RETURN T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) ) , T_STRING ( , T_VARIABLE($account) , T_VARIABLE($op) ) ) ; } T_FUNCTION(node_access_view_all_nodes) ( ) { T_STATIC T_VARIABLE($access) ; T_IF ( ! T_ISSET ( T_VARIABLE($access) ) ) { T_VARIABLE($grants) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($realm) T_DOUBLE_ARROW T_VARIABLE($gids) ) { T_FOREACH ( T_VARIABLE($gids) T_AS T_VARIABLE($gid) ) { T_VARIABLE($grants) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($gid) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($realm) T_ENCAPSED_AND_WHITESPACE ; } } T_VARIABLE($grants_sql) = ; T_IF ( T_STRING ( T_VARIABLE($grants) ) ) { T_VARIABLE($grants_sql) = . T_STRING ( , T_VARIABLE($grants) ) . ; } T_VARIABLE($sql) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($grants_sql) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($access) = T_STRING ( T_VARIABLE($result) ) ; } T_RETURN T_VARIABLE($access) ; } T_FUNCTION(node_db_rewrite_sql) ( T_VARIABLE($query) , T_VARIABLE($primary_table) , T_VARIABLE($primary_field) ) { T_IF ( T_VARIABLE($primary_field) T_IS_EQUAL T_BOOLEAN_AND ! T_STRING ( ) ) { T_VARIABLE($return) [ ] = T_STRING ( T_VARIABLE($primary_table) ) ; T_VARIABLE($return) [ ] = T_STRING ( ) ; T_VARIABLE($return) [ ] = T_LNUMBER ; T_RETURN T_VARIABLE($return) ; } } T_FUNCTION(node_access_acquire_grants) ( T_VARIABLE($node) ) { T_VARIABLE($grants) = T_STRING ( , T_VARIABLE($node) ) ; T_IF ( T_EMPTY ( T_VARIABLE($grants) ) ) { T_VARIABLE($grants) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; } T_ELSE { T_VARIABLE($grant_by_priority) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($grants) T_AS T_VARIABLE($g) ) { T_VARIABLE($grant_by_priority) [ T_STRING ( T_VARIABLE($g) [ ] ) ] [ ] = T_VARIABLE($g) ; } T_STRING ( T_VARIABLE($grant_by_priority) ) ; T_VARIABLE($grants) = T_STRING ( T_VARIABLE($grant_by_priority) ) ; } T_STRING ( T_VARIABLE($node) , T_VARIABLE($grants) ) ; } T_FUNCTION(node_access_write_grants) ( T_VARIABLE($node) , T_VARIABLE($grants) , T_VARIABLE($realm) = T_STRING , T_VARIABLE($delete) = T_STRING ) { T_IF ( T_VARIABLE($delete) ) { T_VARIABLE($query) = ; T_IF ( T_VARIABLE($realm) ) { T_VARIABLE($query) T_CONCAT_EQUAL ; } T_STRING ( T_VARIABLE($query) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($realm) ) ; } T_IF ( T_STRING ( T_STRING ( ) ) ) { T_FOREACH ( T_VARIABLE($grants) T_AS T_VARIABLE($grant) ) { T_IF ( T_VARIABLE($realm) T_BOOLEAN_AND T_VARIABLE($realm) T_IS_NOT_EQUAL T_VARIABLE($grant) [ ] ) { T_CONTINUE ; } T_IF ( T_VARIABLE($grant) [ ] T_BOOLEAN_OR T_VARIABLE($grant) [ ] T_BOOLEAN_OR T_VARIABLE($grant) [ ] ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($grant) [ ] , T_VARIABLE($grant) [ ] , T_VARIABLE($grant) [ ] , T_VARIABLE($grant) [ ] , T_VARIABLE($grant) [ ] ) ; } } } } T_FUNCTION(node_access_needs_rebuild) ( T_VARIABLE($rebuild) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($rebuild) ) ) { T_RETURN T_STRING ( , T_STRING ) ; } T_ELSEIF ( T_VARIABLE($rebuild) ) { T_STRING ( , T_STRING ) ; } T_ELSE { T_STRING ( ) ; } } T_FUNCTION(node_access_rebuild) ( T_VARIABLE($batch_mode) = T_STRING ) { T_STRING ( ) ; T_IF ( T_STRING ( T_STRING ( ) ) ) { T_IF ( T_VARIABLE($batch_mode) ) { T_VARIABLE($batch) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_ARRAY ( ) ) , ) , T_DOUBLE_ARROW ) ; T_STRING ( T_VARIABLE($batch) ) ; } T_ELSE { T_IF ( ! T_STRING ( ) ) { T_STRING ( T_LNUMBER ) ; } T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($loaded_node) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($loaded_node) ) ) { T_STRING ( T_VARIABLE($loaded_node) ) ; } } } } T_ELSE { T_STRING ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($batch) ) ) { T_STRING ( T_STRING ( ) ) ; T_STRING ( T_STRING ) ; T_STRING ( ) ; } } T_FUNCTION(_node_access_rebuild_batch_operation) ( & T_VARIABLE($context) ) { T_IF ( T_EMPTY ( T_VARIABLE($context) [ ] ) ) { T_VARIABLE($context) [ ] [ ] = T_LNUMBER ; T_VARIABLE($context) [ ] [ ] = T_LNUMBER ; T_VARIABLE($context) [ ] [ ] = T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($limit) = T_LNUMBER ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($context) [ ] [ ] , T_LNUMBER , T_VARIABLE($limit) ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($loaded_node) = T_STRING ( T_VARIABLE($row) [ ] , T_STRING , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($loaded_node) ) ) { T_STRING ( T_VARIABLE($loaded_node) ) ; } T_VARIABLE($context) [ ] [ ] T_INC ; T_VARIABLE($context) [ ] [ ] = T_VARIABLE($loaded_node) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($context) [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($context) [ ] [ ] ) { T_VARIABLE($context) [ ] = T_VARIABLE($context) [ ] [ ] / T_VARIABLE($context) [ ] [ ] ; } } T_FUNCTION(_node_access_rebuild_batch_finished) ( T_VARIABLE($success) , T_VARIABLE($results) , T_VARIABLE($operations) ) { T_IF ( T_VARIABLE($success) ) { T_STRING ( T_STRING ( ) ) ; T_STRING ( T_STRING ) ; } T_ELSE { T_STRING ( T_STRING ( ) , ) ; } T_STRING ( ) ; } T_FUNCTION(node_content_access) ( T_VARIABLE($op) , T_VARIABLE($node) , T_VARIABLE($account) ) { T_VARIABLE($type) = T_STRING ( T_VARIABLE($node) ) ? T_VARIABLE($node) : ( T_STRING ( T_VARIABLE($node) ) ? T_VARIABLE($node) [ ] : T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_RETURN T_STRING ( . T_VARIABLE($type) . , T_VARIABLE($account) ) ; } T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_IF ( T_STRING ( . T_VARIABLE($type) . , T_VARIABLE($account) ) T_BOOLEAN_OR ( T_STRING ( . T_VARIABLE($type) . , T_VARIABLE($account) ) T_BOOLEAN_AND ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) { T_RETURN T_STRING ; } } T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_IF ( T_STRING ( . T_VARIABLE($type) . , T_VARIABLE($account) ) T_BOOLEAN_OR ( T_STRING ( . T_VARIABLE($type) . , T_VARIABLE($account) ) T_BOOLEAN_AND ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) { T_RETURN T_STRING ; } } } T_FUNCTION(node_content_form) ( T_VARIABLE($node) , T_VARIABLE($form_state) ) { T_VARIABLE($type) = T_STRING ( , T_VARIABLE($node) ) ; T_VARIABLE($form) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW - T_LNUMBER , ) ; } T_IF ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($form) [ ] = T_STRING ( T_VARIABLE($node) , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(node_forms) ( ) { T_VARIABLE($forms) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($types) = T_STRING ( ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($types) ) T_AS T_VARIABLE($type) ) { T_VARIABLE($forms) [ T_VARIABLE($type) . ] [ ] = ; } } T_RETURN T_VARIABLE($forms) ; } T_FUNCTION(theme_node_submitted) ( T_VARIABLE($node) ) { T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , ) ) ; } T_FUNCTION(node_hook_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , ) , ) , ) ; } T_FUNCTION(node_action_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( , ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( , ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( , ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , ) , ) ; } T_FUNCTION(node_publish_action) ( & T_VARIABLE($node) , T_VARIABLE($context) = T_ARRAY ( ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_FUNCTION(node_unpublish_action) ( & T_VARIABLE($node) , T_VARIABLE($context) = T_ARRAY ( ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_FUNCTION(node_make_sticky_action) ( & T_VARIABLE($node) , T_VARIABLE($context) = T_ARRAY ( ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_FUNCTION(node_make_unsticky_action) ( & T_VARIABLE($node) , T_VARIABLE($context) = T_ARRAY ( ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_FUNCTION(node_promote_action) ( & T_VARIABLE($node) , T_VARIABLE($context) = T_ARRAY ( ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_FUNCTION(node_unpromote_action) ( & T_VARIABLE($node) , T_VARIABLE($context) = T_ARRAY ( ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_FUNCTION(node_save_action) ( T_VARIABLE($node) ) { T_STRING ( T_VARIABLE($node) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_FUNCTION(node_assign_owner_action) ( & T_VARIABLE($node) , T_VARIABLE($context) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($context) [ ] ; T_VARIABLE($owner_name) = T_STRING ( T_STRING ( , T_VARIABLE($context) [ ] ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($owner_name) ) ) ; } T_FUNCTION(node_assign_owner_action_form) ( T_VARIABLE($context) ) { T_VARIABLE($description) = T_STRING ( ) ; T_VARIABLE($count) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($owner_name) = ; T_IF ( T_ISSET ( T_VARIABLE($context) [ ] ) ) { T_VARIABLE($owner_name) = T_STRING ( T_STRING ( , T_VARIABLE($context) [ ] ) ) ; } T_IF ( T_STRING ( T_VARIABLE($count) ) < T_LNUMBER ) { T_VARIABLE($options) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($options) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($owner_name) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_VARIABLE($description) , ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($owner_name) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($description) , ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(node_assign_owner_action_validate) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_VARIABLE($count) = T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) ; T_IF ( T_STRING ( T_VARIABLE($count) ) T_IS_NOT_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(node_assign_owner_action_submit) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_VARIABLE($uid) = T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($uid) ) ; } T_FUNCTION(node_unpublish_by_keyword_action_form) ( T_VARIABLE($context) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($context) [ ] ) ? T_STRING ( T_VARIABLE($context) [ ] ) : , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(node_unpublish_by_keyword_action_submit) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) ; } T_FUNCTION(node_unpublish_by_keyword_action) ( T_VARIABLE($node) , T_VARIABLE($context) ) { T_FOREACH ( T_VARIABLE($context) [ ] T_AS T_VARIABLE($keyword) ) { T_IF ( T_STRING ( T_STRING ( T_STRING ( T_VARIABLE($node) ) ) , T_VARIABLE($keyword) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($keyword) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_BREAK ; } } }",13,1
"T_OPEN_TAG T_FUNCTION(node_page_edit) ( T_VARIABLE($node) ) { T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING . , T_VARIABLE($node) ) ; } T_FUNCTION(node_add_page) ( ) { T_VARIABLE($item) = T_STRING ( ) ; T_VARIABLE($content) = T_STRING ( T_VARIABLE($item) ) ; T_RETURN T_STRING ( , T_VARIABLE($content) ) ; } T_FUNCTION(theme_node_add_list) ( T_VARIABLE($content) ) { T_VARIABLE($output) = ; T_IF ( T_VARIABLE($content) ) { T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($content) T_AS T_VARIABLE($item) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($item) [ ] ) . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(node_add) ( T_VARIABLE($type) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($types) = T_STRING ( ) ; T_VARIABLE($type) = T_ISSET ( T_VARIABLE($type) ) ? T_STRING ( , , T_VARIABLE($type) ) : T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($types) [ T_VARIABLE($type) ] ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($type) ) ) { T_VARIABLE($node) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW ( T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : ) , T_DOUBLE_ARROW T_VARIABLE($type) , T_DOUBLE_ARROW ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($types) [ T_VARIABLE($type) ] T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($output) = T_STRING ( T_VARIABLE($type) . , T_VARIABLE($node) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(node_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] , T_VARIABLE($form) ) ; } T_FUNCTION(node_object_prepare) ( & T_VARIABLE($node) ) { T_VARIABLE($node_options) = T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( , ) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_ARRAY ( , , ) T_AS T_VARIABLE($key) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_VARIABLE($key) = T_STRING ( T_VARIABLE($key) , T_VARIABLE($node_options) ) ; } T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , , ) ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_VARIABLE($node_options) ) ; T_STRING ( T_VARIABLE($node) , ) ; T_STRING ( T_VARIABLE($node) , ) ; } T_FUNCTION(node_form) ( & T_VARIABLE($form_state) , T_VARIABLE($node) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($node) = T_VARIABLE($form_state) [ ] + T_ARRAY_CAST T_VARIABLE($node) ; } T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($form) [ ] = T_VARIABLE($form_state) [ ] ; } T_VARIABLE($node) = T_OBJECT_CAST T_VARIABLE($node) ; T_FOREACH ( T_ARRAY ( , , ) T_AS T_VARIABLE($key) ) { T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_VARIABLE($key) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_VARIABLE($key) = T_STRING ; } } T_IF ( ! T_ISSET ( T_VARIABLE($form_state) [ ] ) ) { T_STRING ( T_VARIABLE($node) ) ; } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; } T_VARIABLE($form) [ ] = ; T_FOREACH ( T_ARRAY ( , , , , , ) T_AS T_VARIABLE($key) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_VARIABLE($key) ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_VARIABLE($key) : T_STRING , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_STRING , ) ; T_IF ( T_VARIABLE($extra) = T_STRING ( T_VARIABLE($node) , , T_VARIABLE($form_state) ) ) { T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) , T_VARIABLE($extra) ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($form) [ ] [ ] ) ) { T_VARIABLE($form) [ ] [ ] = - T_LNUMBER ; } T_VARIABLE($form) [ ] = T_VARIABLE($node) ; T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_STRING ( ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ! T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_STRING ( ) ) ) ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , , ) ) ) , ) ; T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($form) [ ] [ ] [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , ) ; T_FOREACH ( T_ARRAY ( , ) T_AS T_VARIABLE($key) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_VARIABLE($key) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($node) ) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] = T_ARRAY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING . , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(node_body_field) ( & T_VARIABLE($node) , T_VARIABLE($label) , T_VARIABLE($word_count) ) { T_VARIABLE($include) = ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) ) ; T_VARIABLE($form) [ ] = ; T_VARIABLE($form) [ ] = ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($include) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($label) ) , T_DOUBLE_ARROW T_VARIABLE($include) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ( T_VARIABLE($word_count) > T_LNUMBER ) , ) ; T_VARIABLE($form) [ ] = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(node_form_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($destination) = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($destination) = T_STRING ( ) ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_VARIABLE($node) = T_VARIABLE($form) [ ] ; T_VARIABLE($form_state) [ ] = T_ARRAY ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING . , T_VARIABLE($destination) ) ; } T_FUNCTION(node_form_build_preview) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($form_state) [ ] = T_STRING ( T_VARIABLE($node) ) ; } T_FUNCTION(theme_node_form) ( T_VARIABLE($form) ) { T_VARIABLE($output) = ; T_VARIABLE($admin) = ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($admin) T_CONCAT_EQUAL ; T_VARIABLE($admin) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($admin) T_CONCAT_EQUAL ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($admin) T_CONCAT_EQUAL ; T_VARIABLE($admin) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($admin) T_CONCAT_EQUAL ; } T_VARIABLE($buttons) = T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($admin) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($admin) ; T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($buttons) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(node_preview) ( T_VARIABLE($node) ) { T_IF ( T_STRING ( , T_VARIABLE($node) ) T_BOOLEAN_OR T_STRING ( , T_VARIABLE($node) ) ) { T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($user) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } } T_ELSE T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($user) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? : T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_LNUMBER , T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_IF ( ! T_STRING ( ) ) { T_VARIABLE($cloned_node) = T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($cloned_node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($cloned_node) ) ; } T_STRING ( T_STRING ( ) ) ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(theme_node_preview) ( T_VARIABLE($node) ) { T_VARIABLE($output) = ; T_VARIABLE($preview_trimmed_version) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($teaser) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($body) = T_STRING ( T_STRING ( , , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_IF ( T_VARIABLE($teaser) T_IS_NOT_EQUAL T_VARIABLE($body) T_BOOLEAN_OR ( T_VARIABLE($body) T_BOOLEAN_AND T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , ) T_IS_IDENTICAL T_LNUMBER ) ) { T_VARIABLE($preview_trimmed_version) = T_STRING ; } } T_IF ( T_VARIABLE($preview_trimmed_version) ) { T_STRING ( T_STRING ( ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($node) ) , T_LNUMBER , T_STRING , T_LNUMBER ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($node) , T_LNUMBER , T_STRING , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($node) , T_LNUMBER , T_STRING , T_LNUMBER ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(node_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($insert) = T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($node_link) = T_STRING ( T_STRING ( ) , . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($watchdog_args) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($t_args) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($insert) ) { T_STRING ( , , T_VARIABLE($watchdog_args) , T_STRING , T_VARIABLE($node_link) ) ; T_STRING ( T_STRING ( , T_VARIABLE($t_args) ) ) ; } T_ELSE { T_STRING ( , , T_VARIABLE($watchdog_args) , T_STRING , T_VARIABLE($node_link) ) ; T_STRING ( T_STRING ( , T_VARIABLE($t_args) ) ) ; } T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_UNSET ( T_VARIABLE($form_state) [ ] ) ; T_VARIABLE($form_state) [ ] = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($form_state) [ ] = . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_STRING ( T_STRING ( ) , ) ; } } T_FUNCTION(node_form_submit_build_node) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_UNSET ( T_VARIABLE($form_state) [ ] ) ; T_STRING ( , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($form_state) [ ] ) ; T_VARIABLE($form_state) [ ] = T_ARRAY_CAST T_VARIABLE($node) ; T_VARIABLE($form_state) [ ] = T_STRING ; T_RETURN T_VARIABLE($node) ; } T_FUNCTION(node_delete_confirm) ( & T_VARIABLE($form_state) , T_VARIABLE($node) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) , T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_VARIABLE($_GET) [ ] : . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(node_delete_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; } T_VARIABLE($form_state) [ ] = ; } T_FUNCTION(node_revision_overview) ( T_VARIABLE($node) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_VARIABLE($revisions) = T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($revert_permission) = T_STRING ; T_IF ( ( T_STRING ( ) T_BOOLEAN_OR T_STRING ( ) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($node) ) ) { T_VARIABLE($revert_permission) = T_STRING ; } T_VARIABLE($delete_permission) = T_STRING ; T_IF ( ( T_STRING ( ) T_BOOLEAN_OR T_STRING ( ) ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($node) ) ) { T_VARIABLE($delete_permission) = T_STRING ; } T_FOREACH ( T_VARIABLE($revisions) T_AS T_VARIABLE($revision) ) { T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($operations) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) { T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING , ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($revision) ) ) ) . ( ( T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) ? . T_STRING ( T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING ) . : ) , T_DOUBLE_ARROW ) ; T_VARIABLE($operations) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_STRING ( ) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ; } T_ELSE { T_VARIABLE($row) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING , ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ) , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($revision) ) ) ) . ( ( T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) ? . T_STRING ( T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING ) . : ) ; T_IF ( T_VARIABLE($revert_permission) ) { T_VARIABLE($operations) [ ] = T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ) ; } T_IF ( T_VARIABLE($delete_permission) ) { T_VARIABLE($operations) [ ] = T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE T_VARIABLE($revision) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ) ; } } T_VARIABLE($rows) [ ] = T_STRING ( T_VARIABLE($row) , T_VARIABLE($operations) ) ; } T_RETURN T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; } T_FUNCTION(node_revision_revert_confirm) ( T_VARIABLE($form_state) , T_VARIABLE($node_revision) ) { T_VARIABLE($form) [ ] = T_VARIABLE($node_revision) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) ) ) , . T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING . , , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(node_revision_revert_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($node_revision) = T_VARIABLE($form) [ ] ; T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( T_VARIABLE($node_revision) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node_revision) ) , T_DOUBLE_ARROW T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) ) ) ) ; T_VARIABLE($form_state) [ ] = . T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING . ; } T_FUNCTION(node_revision_delete_confirm) ( T_VARIABLE($form_state) , T_VARIABLE($node_revision) ) { T_VARIABLE($form) [ ] = T_VARIABLE($node_revision) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) ) ) , . T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING . , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(node_revision_delete_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($node_revision) = T_VARIABLE($form) [ ] ; T_STRING ( , T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($node_revision) , ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node_revision) ) , T_DOUBLE_ARROW T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($form_state) [ ] = . T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($node_revision) T_OBJECT_OPERATOR T_STRING ) ) > T_LNUMBER ) { T_VARIABLE($form_state) [ ] T_CONCAT_EQUAL ; } }",13,1
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($sticky) ) { T_PRINT ; } T_CLOSE_TAG T_OPEN_TAG T_IF ( ! T_VARIABLE($status) ) { T_PRINT ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($picture) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_VARIABLE($page) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($node_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($submitted) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($submitted) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($terms) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($terms) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($links) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_STRING ( , . . . . ) ; T_STRING ( , ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_FUNCTION(openid_redirect_http) ( T_VARIABLE($url) , T_VARIABLE($message) ) { T_VARIABLE($query) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($message) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($query) [ ] = T_VARIABLE($key) . . T_STRING ( T_VARIABLE($val) ) ; } T_VARIABLE($sep) = ( T_STRING ( T_VARIABLE($url) , ) T_IS_IDENTICAL T_STRING ) ? : ; T_STRING ( . T_VARIABLE($url) . T_VARIABLE($sep) . T_STRING ( , T_VARIABLE($query) ) , T_STRING , T_LNUMBER ) ; T_EXIT ; } T_FUNCTION(openid_redirect) ( T_VARIABLE($url) , T_VARIABLE($message) ) { T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($url) , T_VARIABLE($message) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_PRINT T_VARIABLE($output) ; T_EXIT ; } T_FUNCTION(openid_redirect_form) ( & T_VARIABLE($form_state) , T_VARIABLE($url) , T_VARIABLE($message) ) { T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_VARIABLE($url) ; T_VARIABLE($form) [ ] = ; T_FOREACH ( T_VARIABLE($message) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($key) , T_DOUBLE_ARROW T_VARIABLE($value) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(_openid_is_xri) ( T_VARIABLE($identifier) ) { T_VARIABLE($firstchar) = T_STRING ( T_VARIABLE($identifier) , T_LNUMBER , T_LNUMBER ) ; T_IF ( T_VARIABLE($firstchar) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($firstchar) T_IS_EQUAL ) T_RETURN T_STRING ; T_IF ( T_STRING ( T_VARIABLE($identifier) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(_openid_normalize) ( T_VARIABLE($identifier) ) { T_IF ( T_STRING ( T_VARIABLE($identifier) ) ) { T_RETURN T_STRING ( T_VARIABLE($identifier) ) ; } T_ELSE { T_RETURN T_STRING ( T_VARIABLE($identifier) ) ; } } T_FUNCTION(_openid_normalize_xri) ( T_VARIABLE($xri) ) { T_VARIABLE($normalized_xri) = T_VARIABLE($xri) ; T_IF ( T_STRING ( T_VARIABLE($xri) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($normalized_xri) = T_STRING ( T_VARIABLE($xri) , T_LNUMBER ) ; } T_RETURN T_VARIABLE($normalized_xri) ; } T_FUNCTION(_openid_normalize_url) ( T_VARIABLE($url) ) { T_VARIABLE($normalized_url) = T_VARIABLE($url) ; T_IF ( T_STRING ( T_VARIABLE($url) , ) T_IS_IDENTICAL T_STRING ) { T_VARIABLE($normalized_url) = . T_VARIABLE($url) ; } T_IF ( T_STRING ( T_VARIABLE($normalized_url) , ) < T_LNUMBER ) { T_VARIABLE($normalized_url) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($normalized_url) ; } T_FUNCTION(_openid_create_message) ( T_VARIABLE($data) ) { T_VARIABLE($serialized) = ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ( T_STRING ( T_VARIABLE($key) , ) T_IS_NOT_IDENTICAL T_STRING ) T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($key) , ) T_IS_NOT_IDENTICAL T_STRING ) T_BOOLEAN_OR ( T_STRING ( T_VARIABLE($value) , ) T_IS_NOT_IDENTICAL T_STRING ) ) { T_RETURN T_STRING ; } T_VARIABLE($serialized) T_CONCAT_EQUAL T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($value) T_ENCAPSED_AND_WHITESPACE ; } T_RETURN T_VARIABLE($serialized) ; } T_FUNCTION(_openid_encode_message) ( T_VARIABLE($message) ) { T_VARIABLE($encoded_message) = ; T_VARIABLE($items) = T_STRING ( , T_VARIABLE($message) ) ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($item) ) { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($item) , T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($parts) ) T_IS_EQUAL T_LNUMBER ) { T_IF ( T_VARIABLE($encoded_message) T_IS_NOT_EQUAL ) { T_VARIABLE($encoded_message) T_CONCAT_EQUAL ; } T_VARIABLE($encoded_message) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($parts) [ T_LNUMBER ] ) ) . . T_STRING ( T_STRING ( T_VARIABLE($parts) [ T_LNUMBER ] ) ) ; } } T_RETURN T_VARIABLE($encoded_message) ; } T_FUNCTION(_openid_parse_message) ( T_VARIABLE($message) ) { T_VARIABLE($parsed_message) = T_ARRAY ( ) ; T_VARIABLE($items) = T_STRING ( , T_VARIABLE($message) ) ; T_FOREACH ( T_VARIABLE($items) T_AS T_VARIABLE($item) ) { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($item) , T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($parts) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($parsed_message) [ T_VARIABLE($parts) [ T_LNUMBER ] ] = T_VARIABLE($parts) [ T_LNUMBER ] ; } } T_RETURN T_VARIABLE($parsed_message) ; } T_FUNCTION(_openid_nonce) ( ) { T_RETURN T_STRING ( ) . T_STRING ( T_STRING ( T_LNUMBER , T_LNUMBER ) + T_LNUMBER ) . T_STRING ( T_STRING ( T_LNUMBER , T_LNUMBER ) + T_LNUMBER ) . T_STRING ( T_STRING ( T_LNUMBER , T_LNUMBER ) + T_LNUMBER ) . T_STRING ( T_STRING ( T_LNUMBER , T_LNUMBER ) + T_LNUMBER ) ; } T_FUNCTION(_openid_link_href) ( T_VARIABLE($rel) , T_VARIABLE($html) ) { T_VARIABLE($rel) = T_STRING ( T_VARIABLE($rel) ) ; T_STRING ( . T_VARIABLE($rel) . , T_VARIABLE($html) , T_VARIABLE($matches) ) ; T_IF ( T_ISSET ( T_VARIABLE($matches) [ T_LNUMBER ] ) ) { T_STRING ( , T_VARIABLE($matches) [ T_LNUMBER ] , T_VARIABLE($href) ) ; T_RETURN T_STRING ( T_VARIABLE($href) [ T_LNUMBER ] ) ; } T_RETURN T_STRING ; } T_FUNCTION(_openid_meta_httpequiv) ( T_VARIABLE($equiv) , T_VARIABLE($html) ) { T_STRING ( . T_VARIABLE($equiv) . , T_VARIABLE($html) , T_VARIABLE($matches) ) ; T_IF ( T_ISSET ( T_VARIABLE($matches) [ T_LNUMBER ] ) ) { T_STRING ( , T_VARIABLE($matches) [ T_LNUMBER ] , T_VARIABLE($content) ) ; T_IF ( T_ISSET ( T_VARIABLE($content) [ T_LNUMBER ] ) ) { T_RETURN T_VARIABLE($content) [ T_LNUMBER ] ; } } T_RETURN T_STRING ; } T_FUNCTION(_openid_signature) ( T_VARIABLE($association) , T_VARIABLE($message_array) , T_VARIABLE($keys_to_sign) ) { T_VARIABLE($signature) = ; T_VARIABLE($sign_data) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($keys_to_sign) T_AS T_VARIABLE($key) ) { T_IF ( T_ISSET ( T_VARIABLE($message_array) [ . T_VARIABLE($key) ] ) ) { T_VARIABLE($sign_data) [ T_VARIABLE($key) ] = T_VARIABLE($message_array) [ . T_VARIABLE($key) ] ; } } T_VARIABLE($message) = T_STRING ( T_VARIABLE($sign_data) ) ; T_VARIABLE($secret) = T_STRING ( T_VARIABLE($association) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($signature) = T_STRING ( T_VARIABLE($secret) , T_VARIABLE($message) ) ; T_RETURN T_STRING ( T_VARIABLE($signature) ) ; } T_FUNCTION(_openid_hmac) ( T_VARIABLE($key) , T_VARIABLE($text) ) { T_IF ( T_STRING ( T_VARIABLE($key) ) > T_STRING ) { T_VARIABLE($key) = T_STRING ( T_VARIABLE($key) , T_STRING ) ; } T_VARIABLE($key) = T_STRING ( T_VARIABLE($key) , T_STRING , T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($ipad) = T_STRING ( T_STRING ( T_LNUMBER ) , T_STRING ) ; T_VARIABLE($opad) = T_STRING ( T_STRING ( T_LNUMBER ) , T_STRING ) ; T_VARIABLE($hash1) = T_STRING ( ( T_VARIABLE($key) ^ T_VARIABLE($ipad) ) . T_VARIABLE($text) , T_STRING ) ; T_VARIABLE($hmac) = T_STRING ( ( T_VARIABLE($key) ^ T_VARIABLE($opad) ) . T_VARIABLE($hash1) , T_STRING ) ; T_RETURN T_VARIABLE($hmac) ; } T_FUNCTION(_openid_sha1) ( T_VARIABLE($text) ) { T_VARIABLE($hex) = T_STRING ( T_VARIABLE($text) ) ; T_VARIABLE($raw) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_LNUMBER ; T_VARIABLE($i) T_PLUS_EQUAL T_LNUMBER ) { T_VARIABLE($hexcode) = T_STRING ( T_VARIABLE($hex) , T_VARIABLE($i) , T_LNUMBER ) ; T_VARIABLE($charcode) = T_INT_CAST T_STRING ( T_VARIABLE($hexcode) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($raw) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($charcode) ) ; } T_RETURN T_VARIABLE($raw) ; } T_FUNCTION(_openid_dh_base64_to_long) ( T_VARIABLE($str) ) { T_VARIABLE($b64) = T_STRING ( T_VARIABLE($str) ) ; T_RETURN T_STRING ( T_VARIABLE($b64) ) ; } T_FUNCTION(_openid_dh_long_to_base64) ( T_VARIABLE($str) ) { T_RETURN T_STRING ( T_STRING ( T_VARIABLE($str) ) ) ; } T_FUNCTION(_openid_dh_binary_to_long) ( T_VARIABLE($str) ) { T_VARIABLE($bytes) = T_STRING ( T_STRING ( , T_VARIABLE($str) ) ) ; T_VARIABLE($n) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($bytes) T_AS T_VARIABLE($byte) ) { T_VARIABLE($n) = T_STRING ( T_VARIABLE($n) , T_STRING ( T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($n) = T_STRING ( T_VARIABLE($n) , T_VARIABLE($byte) ) ; } T_RETURN T_VARIABLE($n) ; } T_FUNCTION(_openid_dh_long_to_binary) ( T_VARIABLE($long) ) { T_VARIABLE($cmp) = T_STRING ( T_VARIABLE($long) , T_LNUMBER ) ; T_IF ( T_VARIABLE($cmp) < T_LNUMBER ) { T_RETURN T_STRING ; } T_IF ( T_VARIABLE($cmp) T_IS_EQUAL T_LNUMBER ) { T_RETURN ; } T_VARIABLE($bytes) = T_ARRAY ( ) ; T_WHILE ( T_STRING ( T_VARIABLE($long) , T_LNUMBER ) > T_LNUMBER ) { T_STRING ( T_VARIABLE($bytes) , T_STRING ( T_VARIABLE($long) , T_LNUMBER ) ) ; T_VARIABLE($long) = T_STRING ( T_VARIABLE($long) , T_STRING ( T_LNUMBER , T_LNUMBER ) ) ; } T_IF ( T_VARIABLE($bytes) T_BOOLEAN_AND ( T_VARIABLE($bytes) [ T_LNUMBER ] > T_LNUMBER ) ) { T_STRING ( T_VARIABLE($bytes) , T_LNUMBER ) ; } T_VARIABLE($string) = ; T_FOREACH ( T_VARIABLE($bytes) T_AS T_VARIABLE($byte) ) { T_VARIABLE($string) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($byte) ) ; } T_RETURN T_VARIABLE($string) ; } T_FUNCTION(_openid_dh_xorsecret) ( T_VARIABLE($shared) , T_VARIABLE($secret) ) { T_VARIABLE($dh_shared_str) = T_STRING ( T_VARIABLE($shared) ) ; T_VARIABLE($sha1_dh_shared) = T_STRING ( T_VARIABLE($dh_shared_str) ) ; T_VARIABLE($xsecret) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_STRING ( T_VARIABLE($secret) ) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($xsecret) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($secret) [ T_VARIABLE($i) ] ) ^ T_STRING ( T_VARIABLE($sha1_dh_shared) [ T_VARIABLE($i) ] ) ) ; } T_RETURN T_VARIABLE($xsecret) ; } T_FUNCTION(_openid_dh_rand) ( T_VARIABLE($stop) ) { T_STATIC T_VARIABLE($duplicate_cache) = T_ARRAY ( ) ; T_VARIABLE($rbytes) = T_STRING ( T_VARIABLE($stop) ) ; T_IF ( T_STRING ( T_VARIABLE($rbytes) , T_VARIABLE($duplicate_cache) ) ) { T_LIST ( T_VARIABLE($duplicate) , T_VARIABLE($nbytes) ) = T_VARIABLE($duplicate_cache) [ T_VARIABLE($rbytes) ] ; } T_ELSE { T_IF ( T_VARIABLE($rbytes) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($nbytes) = T_STRING ( T_VARIABLE($rbytes) ) - T_LNUMBER ; } T_ELSE { T_VARIABLE($nbytes) = T_STRING ( T_VARIABLE($rbytes) ) ; } T_VARIABLE($mxrand) = T_STRING ( T_LNUMBER , T_VARIABLE($nbytes) ) ; T_VARIABLE($duplicate) = T_STRING ( T_VARIABLE($mxrand) , T_VARIABLE($stop) ) ; T_IF ( T_STRING ( T_VARIABLE($duplicate_cache) ) > T_LNUMBER ) { T_VARIABLE($duplicate_cache) = T_ARRAY ( ) ; } T_VARIABLE($duplicate_cache) [ T_VARIABLE($rbytes) ] = T_ARRAY ( T_VARIABLE($duplicate) , T_VARIABLE($nbytes) ) ; } T_DO { T_VARIABLE($bytes) = . T_STRING ( T_VARIABLE($nbytes) ) ; T_VARIABLE($n) = T_STRING ( T_VARIABLE($bytes) ) ; } T_WHILE ( T_STRING ( T_VARIABLE($n) , T_VARIABLE($duplicate) ) < T_LNUMBER ) ; T_RETURN T_STRING ( T_VARIABLE($n) , T_VARIABLE($stop) ) ; } T_FUNCTION(_openid_get_bytes) ( T_VARIABLE($num_bytes) ) { T_STATIC T_VARIABLE($f) = T_STRING ; T_VARIABLE($bytes) = ; T_IF ( ! T_ISSET ( T_VARIABLE($f) ) ) { T_VARIABLE($f) = @ T_STRING ( T_STRING , ) ; } T_IF ( ! T_VARIABLE($f) ) { T_VARIABLE($bytes) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($num_bytes) ; T_VARIABLE($i) T_PLUS_EQUAL T_LNUMBER ) { T_VARIABLE($bytes) T_CONCAT_EQUAL T_STRING ( , T_STRING ( ) ) ; } T_VARIABLE($bytes) = T_STRING ( T_VARIABLE($bytes) , T_LNUMBER , T_VARIABLE($num_bytes) ) ; } T_ELSE { T_VARIABLE($bytes) = T_STRING ( T_VARIABLE($f) , T_VARIABLE($num_bytes) ) ; } T_RETURN T_VARIABLE($bytes) ; } T_FUNCTION(_openid_response) ( T_VARIABLE($str) = T_STRING ) { T_VARIABLE($data) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($_SERVER) [ ] ) ) { T_VARIABLE($data) = T_STRING ( T_VARIABLE($_SERVER) [ ] ) ; T_IF ( T_VARIABLE($_SERVER) [ ] T_IS_EQUAL ) { T_VARIABLE($str) = T_STRING ( ) ; T_VARIABLE($post) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($str) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($post) = T_STRING ( T_VARIABLE($str) ) ; } T_VARIABLE($data) = T_STRING ( T_VARIABLE($data) , T_VARIABLE($post) ) ; } } T_RETURN T_VARIABLE($data) ; } T_FUNCTION(_openid_get_params) ( T_VARIABLE($str) ) { T_VARIABLE($chunks) = T_STRING ( , T_VARIABLE($str) ) ; T_VARIABLE($data) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($chunks) T_AS T_VARIABLE($chunk) ) { T_VARIABLE($parts) = T_STRING ( , T_VARIABLE($chunk) , T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($parts) ) T_IS_EQUAL T_LNUMBER ) { T_LIST ( T_VARIABLE($k) , T_VARIABLE($v) ) = T_VARIABLE($parts) ; T_VARIABLE($data) [ T_VARIABLE($k) ] = T_STRING ( T_VARIABLE($v) ) ; } } T_RETURN T_VARIABLE($data) ; } T_IF ( ! T_STRING ( ) ) { T_FUNCTION(bcpowmod) ( T_VARIABLE($base) , T_VARIABLE($exp) , T_VARIABLE($mod) ) { T_VARIABLE($square) = T_STRING ( T_VARIABLE($base) , T_VARIABLE($mod) ) ; T_VARIABLE($result) = T_LNUMBER ; T_WHILE ( T_STRING ( T_VARIABLE($exp) , T_LNUMBER ) > T_LNUMBER ) { T_IF ( T_STRING ( T_VARIABLE($exp) , T_LNUMBER ) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( T_VARIABLE($result) , T_VARIABLE($square) ) , T_VARIABLE($mod) ) ; } T_VARIABLE($square) = T_STRING ( T_STRING ( T_VARIABLE($square) , T_VARIABLE($square) ) , T_VARIABLE($mod) ) ; T_VARIABLE($exp) = T_STRING ( T_VARIABLE($exp) , T_LNUMBER ) ; } T_RETURN T_VARIABLE($result) ; } }",10,0
"T_OPEN_TAG T_FUNCTION(openid_install) ( ) { T_STRING ( ) ; } T_FUNCTION(openid_uninstall) ( ) { T_STRING ( ) ; } T_FUNCTION(openid_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_RETURN T_VARIABLE($schema) ; }",0,0
"T_OPEN_TAG T_FUNCTION(openid_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(openid_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(openid_user) ( T_VARIABLE($op) , & T_VARIABLE($edit) , & T_VARIABLE($account) , T_VARIABLE($category) = T_STRING ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_IF ( T_STRING ( , T_STRING ) ) { T_STRING ( T_STRING ( ) ) ; } T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } } T_FUNCTION(openid_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_VARIABLE($form_id) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($form_id) T_IS_EQUAL ) { T_STRING ( T_STRING ( , ) . , ) ; T_STRING ( T_STRING ( , ) . ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($form) [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] [ ] = T_STRING ; T_UNSET ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; } T_VARIABLE($items) = T_ARRAY ( ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($items) ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_LNUMBER ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ( T_VARIABLE($form_id) T_IS_EQUAL ) ? T_LNUMBER : T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; } T_ELSEIF ( T_VARIABLE($form_id) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($form) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ ] ; T_VARIABLE($form) [ ] [ ] = T_VARIABLE($_SESSION) [ ] [ ] [ ] ; T_IF ( ! T_STRING ( , T_STRING ) ) { T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = T_STRING ( ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($_SESSION) [ ] [ ] [ ] ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(openid_login_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($return_to) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( T_EMPTY ( T_VARIABLE($return_to) ) ) { T_VARIABLE($return_to) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; } T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($return_to) , T_VARIABLE($form_state) [ ] ) ; } T_FUNCTION(openid_begin) ( T_VARIABLE($claimed_id) , T_VARIABLE($return_to) = , T_VARIABLE($form_values) = T_ARRAY ( ) ) { T_STRING ( , ) ; T_VARIABLE($claimed_id) = T_STRING ( T_VARIABLE($claimed_id) ) ; T_VARIABLE($services) = T_STRING ( T_VARIABLE($claimed_id) ) ; T_IF ( T_STRING ( T_VARIABLE($services) ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; T_RETURN ; } T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($services) [ T_LNUMBER ] ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($claimed_id) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($form_values) ; T_VARIABLE($op_endpoint) = T_VARIABLE($services) [ T_LNUMBER ] [ ] ; T_VARIABLE($assoc_handle) = ; T_IF ( T_STRING ( ) ) { T_VARIABLE($assoc_handle) = T_STRING ( T_VARIABLE($op_endpoint) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($services) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($identity) = T_VARIABLE($services) [ T_LNUMBER ] [ ] ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($services) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($identity) = T_VARIABLE($services) [ T_LNUMBER ] [ ] ; } T_ELSE { T_VARIABLE($identity) = T_VARIABLE($claimed_id) ; } T_IF ( T_ISSET ( T_VARIABLE($services) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($services) [ T_LNUMBER ] [ ] ) T_BOOLEAN_AND T_STRING ( T_STRING . , T_VARIABLE($services) [ T_LNUMBER ] [ ] ) ) { T_VARIABLE($identity) = ; } T_VARIABLE($authn_request) = T_STRING ( T_VARIABLE($claimed_id) , T_VARIABLE($identity) , T_VARIABLE($return_to) , T_VARIABLE($assoc_handle) , T_VARIABLE($services) [ T_LNUMBER ] [ ] ) ; T_IF ( T_VARIABLE($services) [ T_LNUMBER ] [ ] T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($op_endpoint) , T_VARIABLE($authn_request) ) ; } T_ELSE { T_STRING ( T_VARIABLE($op_endpoint) , T_VARIABLE($authn_request) ) ; } } T_FUNCTION(openid_complete) ( T_VARIABLE($response) = T_ARRAY ( ) ) { T_STRING ( , ) ; T_IF ( T_STRING ( T_VARIABLE($response) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($response) = T_STRING ( ) ; } T_VARIABLE($response) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ) { T_VARIABLE($service) = T_VARIABLE($_SESSION) [ ] [ ] ; T_VARIABLE($claimed_id) = T_VARIABLE($_SESSION) [ ] [ ] ; T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($response) [ ] ) ) { T_IF ( T_VARIABLE($response) [ ] T_IS_EQUAL ) { T_VARIABLE($response) [ ] = ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($service) [ ] , T_VARIABLE($response) ) ) { T_IF ( T_VARIABLE($service) [ ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($response) [ ] T_IS_NOT_EQUAL T_VARIABLE($claimed_id) ) { T_VARIABLE($disco) = T_STRING ( T_VARIABLE($response) [ ] ) ; T_IF ( T_VARIABLE($disco) [ T_LNUMBER ] [ ] T_IS_NOT_EQUAL T_VARIABLE($service) [ ] ) { T_RETURN T_VARIABLE($response) ; } } T_ELSE { T_VARIABLE($response) [ ] = T_VARIABLE($claimed_id) ; } T_VARIABLE($response) [ ] = ; } } } } T_RETURN T_VARIABLE($response) ; } T_FUNCTION(openid_discovery) ( T_VARIABLE($claimed_id) ) { T_STRING ( , ) ; T_STRING ( , , ) ; T_VARIABLE($services) = T_ARRAY ( ) ; T_VARIABLE($xrds_url) = T_VARIABLE($claimed_id) ; T_IF ( T_STRING ( T_VARIABLE($claimed_id) ) ) { T_VARIABLE($xrds_url) = . T_VARIABLE($claimed_id) ; } T_VARIABLE($url) = @ T_STRING ( T_VARIABLE($xrds_url) ) ; T_IF ( T_VARIABLE($url) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($url) [ ] T_IS_EQUAL ) { T_VARIABLE($headers) = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($xrds_url) , T_VARIABLE($headers) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_ISSET ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($services) = T_STRING ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($xrds_url) = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($xrds_url) = T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING [ ] ; } T_ELSE { T_VARIABLE($xrds_url) = T_STRING ( , T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($xrds_url) ) ) { T_VARIABLE($headers) = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($xrds_result) = T_STRING ( T_VARIABLE($xrds_url) , T_VARIABLE($headers) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($xrds_result) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($services) = T_STRING ( T_VARIABLE($xrds_result) T_OBJECT_OPERATOR T_STRING ) ; } } } T_IF ( T_STRING ( T_VARIABLE($services) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($uri) = T_STRING ( , T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($delegate) = T_STRING ( , T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($version) = T_LNUMBER ; T_IF ( T_EMPTY ( T_VARIABLE($uri) ) ) { T_VARIABLE($uri) = T_STRING ( , T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($delegate) = T_STRING ( , T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($version) = T_LNUMBER ; } T_IF ( ! T_EMPTY ( T_VARIABLE($uri) ) ) { T_VARIABLE($services) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($uri) , T_DOUBLE_ARROW T_VARIABLE($delegate) , T_DOUBLE_ARROW T_VARIABLE($version) ) ; } } } } T_IF ( ! T_VARIABLE($services) ) { T_STRING ( , ) ; } T_RETURN T_VARIABLE($services) ; } T_FUNCTION(openid_association) ( T_VARIABLE($op_endpoint) ) { T_STRING ( , ) ; T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($assoc_handle) = T_STRING ( T_STRING ( , T_VARIABLE($op_endpoint) ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($assoc_handle) ) ) { T_VARIABLE($mod) = T_STRING ; T_VARIABLE($gen) = T_STRING ; T_VARIABLE($r) = T_STRING ( T_VARIABLE($mod) ) ; T_VARIABLE($private) = T_STRING ( T_VARIABLE($r) , T_LNUMBER ) ; T_VARIABLE($public) = T_STRING ( T_VARIABLE($gen) , T_VARIABLE($private) , T_VARIABLE($mod) ) ; T_VARIABLE($assoc_request) = T_STRING ( T_VARIABLE($public) ) ; T_VARIABLE($assoc_message) = T_STRING ( T_STRING ( T_VARIABLE($assoc_request) ) ) ; T_VARIABLE($assoc_headers) = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($assoc_result) = T_STRING ( T_VARIABLE($op_endpoint) , T_VARIABLE($assoc_headers) , , T_VARIABLE($assoc_message) ) ; T_IF ( T_ISSET ( T_VARIABLE($assoc_result) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( , ) ; T_RETURN T_STRING ; } T_VARIABLE($assoc_response) = T_STRING ( T_VARIABLE($assoc_result) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($assoc_response) [ ] ) T_BOOLEAN_AND T_VARIABLE($assoc_response) [ ] T_IS_EQUAL ) { T_STRING ( , ) ; T_RETURN T_STRING ; } T_IF ( T_VARIABLE($assoc_response) [ ] T_IS_EQUAL ) { T_VARIABLE($spub) = T_STRING ( T_VARIABLE($assoc_response) [ ] ) ; T_VARIABLE($enc_mac_key) = T_STRING ( T_VARIABLE($assoc_response) [ ] ) ; T_VARIABLE($shared) = T_STRING ( T_VARIABLE($spub) , T_VARIABLE($private) , T_VARIABLE($mod) ) ; T_VARIABLE($assoc_response) [ ] = T_STRING ( T_STRING ( T_VARIABLE($shared) , T_VARIABLE($enc_mac_key) ) ) ; } T_STRING ( , T_VARIABLE($op_endpoint) , T_VARIABLE($assoc_response) [ ] , T_VARIABLE($assoc_response) [ ] , T_VARIABLE($assoc_response) [ ] , T_VARIABLE($assoc_response) [ ] , T_VARIABLE($assoc_response) [ ] , T_STRING ( ) ) ; T_VARIABLE($assoc_handle) = T_VARIABLE($assoc_response) [ ] ; } T_RETURN T_VARIABLE($assoc_handle) ; } T_FUNCTION(openid_authentication) ( T_VARIABLE($response) ) { T_STRING ( , ) ; T_VARIABLE($identity) = T_VARIABLE($response) [ ] ; T_VARIABLE($account) = T_STRING ( T_VARIABLE($identity) ) ; T_IF ( T_ISSET ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( ! T_STRING ( , T_STRING ) T_BOOLEAN_OR T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( T_VARIABLE($account) , T_VARIABLE($_SESSION) [ ] [ ] ) ; } T_ELSE { T_STRING ( T_STRING ( ) ) ; } } T_ELSEIF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($form_state) [ ] = T_STRING ; T_VARIABLE($form_state) [ ] [ ] = ( T_EMPTY ( T_VARIABLE($response) [ ] ) ) ? T_VARIABLE($identity) : T_VARIABLE($response) [ ] ; T_VARIABLE($form_state) [ ] [ ] = ( T_EMPTY ( T_VARIABLE($response) [ ] ) ) ? : T_VARIABLE($response) [ ] ; T_VARIABLE($form_state) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($form_state) [ ] [ ] = T_STRING ( , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ; T_VARIABLE($form_state) [ ] [ ] = T_VARIABLE($response) ; T_VARIABLE($form_state) [ ] [ ] = T_VARIABLE($identity) ; T_VARIABLE($form) = T_STRING ( , T_VARIABLE($form_state) ) ; T_STRING ( , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_STRING ( , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($form_state) [ ] ; T_VARIABLE($destination) = T_STRING ( ) ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; T_STRING ( , T_VARIABLE($destination) ) ; } T_ELSE { T_UNSET ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($account) = T_STRING ( , T_VARIABLE($form_state) [ ] ) ; T_IF ( ! T_VARIABLE($account) ) { T_STRING ( T_STRING ( ) , ) ; T_STRING ( ) ; } T_STRING ( T_VARIABLE($account) ) ; } T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) [ ] ) ; } T_ELSE { T_STRING ( T_STRING ( ) , ) ; } T_STRING ( ) ; } T_FUNCTION(openid_association_request) ( T_VARIABLE($public) ) { T_STRING ( , ) ; T_VARIABLE($request) = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_IF ( T_VARIABLE($request) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($request) [ ] T_IS_EQUAL ) { T_VARIABLE($cpub) = T_STRING ( T_VARIABLE($public) ) ; T_VARIABLE($request) [ ] = T_VARIABLE($cpub) ; } T_RETURN T_VARIABLE($request) ; } T_FUNCTION(openid_authentication_request) ( T_VARIABLE($claimed_id) , T_VARIABLE($identity) , T_VARIABLE($return_to) = , T_VARIABLE($assoc_handle) = , T_VARIABLE($version) = T_LNUMBER ) { T_STRING ( , ) ; T_VARIABLE($ns) = ( T_VARIABLE($version) T_IS_EQUAL T_LNUMBER ) ? T_STRING : T_STRING ; T_VARIABLE($request) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($ns) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($identity) , T_DOUBLE_ARROW T_VARIABLE($claimed_id) , T_DOUBLE_ARROW T_VARIABLE($assoc_handle) , T_DOUBLE_ARROW T_VARIABLE($return_to) , ) ; T_IF ( T_VARIABLE($version) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($request) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; } T_ELSE { T_VARIABLE($request) [ ] = T_VARIABLE($realm) ; } T_VARIABLE($request) [ ] = ; T_VARIABLE($request) [ ] = ; T_VARIABLE($request) = T_STRING ( T_VARIABLE($request) , T_STRING ( , , T_VARIABLE($request) ) ) ; T_RETURN T_VARIABLE($request) ; } T_FUNCTION(openid_verify_assertion) ( T_VARIABLE($op_endpoint) , T_VARIABLE($response) ) { T_STRING ( , ) ; T_VARIABLE($valid) = T_STRING ; T_VARIABLE($association) = T_STRING ( T_STRING ( , T_VARIABLE($response) [ ] ) ) ; T_IF ( T_VARIABLE($association) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($association) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($keys_to_sign) = T_STRING ( , T_VARIABLE($response) [ ] ) ; T_VARIABLE($self_sig) = T_STRING ( T_VARIABLE($association) , T_VARIABLE($response) , T_VARIABLE($keys_to_sign) ) ; T_IF ( T_VARIABLE($self_sig) T_IS_EQUAL T_VARIABLE($response) [ ] ) { T_VARIABLE($valid) = T_STRING ; } T_ELSE { T_VARIABLE($valid) = T_STRING ; } } T_ELSE { T_VARIABLE($request) = T_VARIABLE($response) ; T_VARIABLE($request) [ ] = ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($request) ) ; T_VARIABLE($headers) = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($op_endpoint) , T_VARIABLE($headers) , , T_STRING ( T_VARIABLE($message) ) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($response) = T_STRING ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_STRING ( T_STRING ( T_VARIABLE($response) [ ] ) ) T_IS_EQUAL ) { T_VARIABLE($valid) = T_STRING ; } T_ELSE { T_VARIABLE($valid) = T_STRING ; } } } T_IF ( ! T_VARIABLE($valid) ) { T_STRING ( , ) ; } T_RETURN T_VARIABLE($valid) ; }",13,1
"T_OPEN_TAG T_FUNCTION(openid_authentication_page) ( ) { T_VARIABLE($result) = T_STRING ( ) ; T_SWITCH ( T_VARIABLE($result) [ ] ) { T_CASE : T_RETURN T_STRING ( T_VARIABLE($result) ) ; T_CASE : T_STRING ( T_STRING ( ) , ) ; T_BREAK ; T_CASE : T_STRING ( T_STRING ( ) ) ; T_BREAK ; } T_STRING ( ) ; } T_FUNCTION(openid_user_identities) ( T_VARIABLE($account) ) { T_STRING ( T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( T_STRING ( , ) . , ) ; T_VARIABLE($result) = T_STRING ( ) ; T_IF ( T_VARIABLE($result) [ ] T_IS_EQUAL ) { T_VARIABLE($identity) = T_VARIABLE($result) [ ] ; T_STRING ( , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($identity) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($identity) ) ) ) ; } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($identity) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($identity) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($identity) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(openid_user_add) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(openid_user_add_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($claimed_id) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($claimed_id) ) ) ) { T_STRING ( , T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($return_to) = T_STRING ( . T_STRING ( T_LNUMBER ) . , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($return_to) ) ; } } T_FUNCTION(openid_user_delete) ( T_VARIABLE($account) , T_VARIABLE($aid) = T_LNUMBER ) { T_STRING ( , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($aid) ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_STRING ( ) ) ; } T_STRING ( . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING . ) ; }",4,1
"T_OPEN_TAG T_VARIABLE($xrds_open_elements) = T_ARRAY ( ) ; T_VARIABLE($xrds_services) = T_ARRAY ( ) ; T_VARIABLE($xrds_current_service) = T_ARRAY ( ) ; T_FUNCTION(xrds_parse) ( T_VARIABLE($xml) ) { T_GLOBAL T_VARIABLE($xrds_services) ; T_VARIABLE($parser) = T_STRING ( ) ; T_STRING ( T_VARIABLE($parser) , , ) ; T_STRING ( T_VARIABLE($parser) , ) ; T_STRING ( T_VARIABLE($parser) , T_VARIABLE($xml) ) ; T_STRING ( T_VARIABLE($parser) ) ; T_RETURN T_VARIABLE($xrds_services) ; } T_FUNCTION(_xrds_element_start) ( & T_VARIABLE($parser) , T_VARIABLE($name) , T_VARIABLE($attribs) ) { T_GLOBAL T_VARIABLE($xrds_open_elements) ; T_VARIABLE($xrds_open_elements) [ ] = T_STRING ( T_VARIABLE($name) ) ; } T_FUNCTION(_xrds_element_end) ( & T_VARIABLE($parser) , T_VARIABLE($name) ) { T_GLOBAL T_VARIABLE($xrds_open_elements) , T_VARIABLE($xrds_services) , T_VARIABLE($xrds_current_service) ; T_VARIABLE($name) = T_STRING ( T_VARIABLE($name) ) ; T_IF ( T_VARIABLE($name) T_IS_EQUAL ) { T_IF ( T_STRING ( T_STRING . , T_VARIABLE($xrds_current_service) [ ] ) T_BOOLEAN_OR T_STRING ( T_STRING . , T_VARIABLE($xrds_current_service) [ ] ) ) { T_VARIABLE($xrds_current_service) [ ] = T_LNUMBER ; } T_ELSEIF ( T_STRING ( T_STRING , T_VARIABLE($xrds_current_service) [ ] ) T_BOOLEAN_OR T_STRING ( T_STRING , T_VARIABLE($xrds_current_service) [ ] ) ) { T_VARIABLE($xrds_current_service) [ ] = T_LNUMBER ; } T_IF ( ! T_EMPTY ( T_VARIABLE($xrds_current_service) [ ] ) ) { T_VARIABLE($xrds_services) [ ] = T_VARIABLE($xrds_current_service) ; } T_VARIABLE($xrds_current_service) = T_ARRAY ( ) ; } T_STRING ( T_VARIABLE($xrds_open_elements) ) ; } T_FUNCTION(_xrds_cdata) ( & T_VARIABLE($parser) , T_VARIABLE($data) ) { T_GLOBAL T_VARIABLE($xrds_open_elements) , T_VARIABLE($xrds_services) , T_VARIABLE($xrds_current_service) ; T_VARIABLE($path) = T_STRING ( T_STRING ( , T_VARIABLE($xrds_open_elements) ) ) ; T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($xrds_current_service) [ ] [ ] = T_VARIABLE($data) ; T_BREAK ; T_CASE : T_VARIABLE($xrds_current_service) [ ] = T_VARIABLE($data) ; T_BREAK ; T_CASE : T_VARIABLE($xrds_current_service) [ ] = T_VARIABLE($data) ; T_BREAK ; T_CASE : T_VARIABLE($xrds_current_service) [ ] = T_VARIABLE($data) ; T_BREAK ; } } T_FUNCTION(_xrds_strip_namespace) ( T_VARIABLE($name) ) { T_VARIABLE($pos) = T_STRING ( T_VARIABLE($name) , ) ; T_IF ( T_VARIABLE($pos) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($name) , T_VARIABLE($pos) + T_LNUMBER , T_STRING ( T_VARIABLE($name) ) ) ; } T_RETURN T_VARIABLE($name) ; }",5,0
"T_OPEN_TAG T_FUNCTION(path_admin_overview) ( T_VARIABLE($keys) = T_STRING ) { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($keys) ) ; T_VARIABLE($count) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($multilanguage) = ( T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($count) ) ; T_IF ( T_VARIABLE($keys) ) { T_VARIABLE($keys) = T_STRING ( , , T_VARIABLE($keys) ) ; T_VARIABLE($sql) = ; } T_ELSE { T_VARIABLE($sql) = ; } T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; T_IF ( T_VARIABLE($multilanguage) ) { T_VARIABLE($header) [ T_LNUMBER ] = T_VARIABLE($header) [ T_LNUMBER ] ; T_VARIABLE($header) [ T_LNUMBER ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ; } T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($header) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($keys) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($destination) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($row) = T_ARRAY ( T_STRING ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) ) ; T_IF ( T_VARIABLE($multilanguage) ) { T_VARIABLE($row) [ T_LNUMBER ] = T_VARIABLE($row) [ T_LNUMBER ] ; T_VARIABLE($row) [ T_LNUMBER ] = T_VARIABLE($row) [ T_LNUMBER ] ; T_VARIABLE($row) [ T_LNUMBER ] = T_STRING ( , , T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($empty_message) = T_VARIABLE($keys) ? T_STRING ( ) : T_STRING ( ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($empty_message) , T_DOUBLE_ARROW ( T_VARIABLE($multilanguage) ? T_LNUMBER : T_LNUMBER ) ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(path_admin_edit) ( T_VARIABLE($pid) = T_LNUMBER ) { T_IF ( T_VARIABLE($pid) ) { T_VARIABLE($alias) = T_STRING ( T_VARIABLE($pid) ) ; T_STRING ( T_STRING ( T_VARIABLE($alias) [ ] ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($alias) ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(path_admin_form) ( & T_VARIABLE($form_state) , T_VARIABLE($edit) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ) { T_VARIABLE($form) [ ] = T_VARIABLE($edit) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) . ( T_STRING ( , T_LNUMBER ) ? : ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) . ( T_STRING ( , T_LNUMBER ) ? : ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; T_IF ( T_VARIABLE($edit) [ ] ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(path_admin_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($src) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($dst) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($pid) = T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : T_LNUMBER ; T_VARIABLE($language) = T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : ; T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($pid) , T_VARIABLE($dst) , T_VARIABLE($language) ) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($dst) ) ) ) ; } T_VARIABLE($item) = T_STRING ( T_VARIABLE($src) ) ; T_IF ( ! T_VARIABLE($item) T_BOOLEAN_OR ! T_VARIABLE($item) [ ] ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($src) ) ) ) ; } } T_FUNCTION(path_admin_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : T_LNUMBER , T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(path_admin_delete_confirm) ( T_VARIABLE($form_state) , T_VARIABLE($pid) ) { T_VARIABLE($path) = T_STRING ( T_VARIABLE($pid) ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($pid) ) ; T_VARIABLE($output) = T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($path) [ ] ) ) , T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_VARIABLE($_GET) [ ] : ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(path_admin_delete_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } } T_FUNCTION(path_admin_filter_form) ( & T_VARIABLE($form_state) , T_VARIABLE($keys) = ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($keys) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_IF ( T_VARIABLE($keys) ) { T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(path_admin_filter_form_submit_filter) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_state) [ ] = . T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; } T_FUNCTION(path_admin_filter_form_submit_reset) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_state) [ ] = ; } T_FUNCTION(path_admin_filter_get_keys) ( ) { T_VARIABLE($path) = T_STRING ( , T_VARIABLE($_GET) [ ] , T_LNUMBER ) ; T_RETURN T_STRING ( T_VARIABLE($path) ) T_IS_EQUAL T_LNUMBER ? T_VARIABLE($path) [ T_LNUMBER ] : ; }",9,0
"T_OPEN_TAG T_FUNCTION(path_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; } } T_FUNCTION(path_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(path_admin_delete) ( T_VARIABLE($pid) = T_LNUMBER ) { T_STRING ( , T_VARIABLE($pid) ) ; T_STRING ( T_STRING ( ) ) ; } T_FUNCTION(path_set_alias) ( T_VARIABLE($path) = T_STRING , T_VARIABLE($alias) = T_STRING , T_VARIABLE($pid) = T_STRING , T_VARIABLE($language) = ) { T_VARIABLE($path) = T_STRING ( T_VARIABLE($path) ) ; T_VARIABLE($alias) = T_STRING ( T_VARIABLE($alias) ) ; T_IF ( T_VARIABLE($pid) ) { T_IF ( ! T_VARIABLE($path) T_BOOLEAN_OR ! T_VARIABLE($alias) ) { T_STRING ( , T_VARIABLE($pid) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($path) , T_VARIABLE($alias) , T_VARIABLE($language) , T_VARIABLE($pid) ) ; } } T_ELSE T_IF ( T_VARIABLE($path) T_BOOLEAN_AND T_VARIABLE($alias) ) { T_IF ( T_VARIABLE($alias) T_IS_EQUAL T_STRING ( T_VARIABLE($path) , T_VARIABLE($language) ) ) { T_STRING ( , T_VARIABLE($path) , T_VARIABLE($alias) , T_VARIABLE($language) , T_VARIABLE($alias) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($path) , T_VARIABLE($alias) , T_VARIABLE($language) ) ; } } T_ELSE { T_IF ( T_VARIABLE($alias) ) { T_STRING ( , T_VARIABLE($alias) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($path) ) ; } } T_STRING ( ) ; } T_FUNCTION(path_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($arg) ) { T_IF ( T_STRING ( ) T_BOOLEAN_OR T_STRING ( ) T_BOOLEAN_OR ( T_VARIABLE($op) T_IS_EQUAL ) ) { T_VARIABLE($language) = T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : ; T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($language) ) ) ) { T_STRING ( , T_STRING ( ) ) ; } T_BREAK ; T_CASE : T_VARIABLE($path) = . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($alias) = T_STRING ( T_VARIABLE($path) , T_VARIABLE($language) ) ; T_IF ( T_VARIABLE($path) T_IS_NOT_EQUAL T_VARIABLE($alias) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($alias) ; } T_BREAK ; T_CASE : T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING , T_VARIABLE($language) ) ; } T_BREAK ; T_CASE : T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_STRING , T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_STRING , T_VARIABLE($language) ) ; T_BREAK ; T_CASE : T_VARIABLE($path) = . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_STRING ( T_VARIABLE($path) ) T_IS_NOT_EQUAL T_VARIABLE($path) ) { T_STRING ( T_VARIABLE($path) ) ; } T_BREAK ; } } } T_FUNCTION(path_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] [ ] . T_IS_EQUAL T_VARIABLE($form_id) ) { T_VARIABLE($path) = T_ISSET ( T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING : T_STRING ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($path) ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($path) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_IF ( T_VARIABLE($path) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_STRING ( , T_VARIABLE($path) , T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING ) ) ) ; } } } T_FUNCTION(path_perm) ( ) { T_RETURN T_ARRAY ( , ) ; } T_FUNCTION(path_load) ( T_VARIABLE($pid) ) { T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($pid) ) ) ; }",13,1
"T_OPEN_TAG T_FUNCTION(php_install) ( ) { T_VARIABLE($format_exists) = T_STRING ( T_STRING ( ) ) ; T_IF ( ! T_VARIABLE($format_exists) ) { T_STRING ( ) ; T_VARIABLE($format) = T_STRING ( T_STRING ( ) ) ; T_STRING ( , T_VARIABLE($format) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , . T_VARIABLE($format) ) ) ) ) ; } } T_FUNCTION(php_disable) ( ) { T_STRING ( T_STRING ( ) ) ; }",2,0
"T_OPEN_TAG T_FUNCTION(php_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(php_filter_tips) ( T_VARIABLE($delta) , T_VARIABLE($format) , T_VARIABLE($long) = T_STRING ) { T_GLOBAL T_VARIABLE($base_url) ; T_IF ( T_VARIABLE($delta) T_IS_EQUAL T_LNUMBER ) { T_SWITCH ( T_VARIABLE($long) ) { T_CASE T_LNUMBER : T_RETURN T_STRING ( ) ; T_CASE T_LNUMBER : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_RETURN T_VARIABLE($output) ; } } } T_FUNCTION(php_filter) ( T_VARIABLE($op) , T_VARIABLE($delta) = T_LNUMBER , T_VARIABLE($format) = - T_LNUMBER , T_VARIABLE($text) = ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_RETURN T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) ; T_CASE : T_RETURN T_VARIABLE($delta) T_IS_EQUAL T_LNUMBER ; T_CASE : T_RETURN T_STRING ( ) ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($text) ) ; T_DEFAULT : T_RETURN T_VARIABLE($text) ; } }",1,0
"T_OPEN_TAG T_FUNCTION(ping_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(ping_cron) ( ) { T_GLOBAL T_VARIABLE($base_url) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_IF ( T_STRING ( T_STRING ( . T_STRING ( , T_STRING ( ) ) . . T_STRING ( , T_STRING ( ) ) . ) ) ) { T_STRING ( T_STRING ( , ) , T_VARIABLE($base_url) ) ; } } } T_FUNCTION(_ping_notify) ( T_VARIABLE($name) , T_VARIABLE($url) ) { T_STRING ( , T_VARIABLE($name) , T_VARIABLE($url) ) ; } T_FUNCTION(ping_ping) ( T_VARIABLE($name) = , T_VARIABLE($url) = ) { T_VARIABLE($result) = T_STRING ( , , T_VARIABLE($name) , T_VARIABLE($url) ) ; T_IF ( T_VARIABLE($result) T_IS_IDENTICAL T_STRING ) { T_STRING ( , , T_ARRAY ( ) , T_STRING ) ; } }",4,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($percentage) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($percentage) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($percentage) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($percentage) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( T_VARIABLE($votes) , , ) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($results) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($votes) ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($links) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($results) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($votes) ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($cancel_form) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($cancel_form) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($block) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($choice) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($vote) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($rest) T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_FUNCTION(poll_install) ( ) { T_STRING ( ) ; } T_FUNCTION(poll_uninstall) ( ) { T_STRING ( ) ; } T_FUNCTION(poll_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_RETURN T_VARIABLE($schema) ; }",2,0
"T_OPEN_TAG T_FUNCTION(poll_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(poll_init) ( ) { T_STRING ( T_STRING ( , ) . ) ; } T_FUNCTION(poll_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(poll_perm) ( ) { T_RETURN T_ARRAY ( , , , , , , , ) ; } T_FUNCTION(poll_access) ( T_VARIABLE($op) , T_VARIABLE($node) , T_VARIABLE($account) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_RETURN T_STRING ( , T_VARIABLE($account) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_OR ( T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_OR ( T_STRING ( , T_VARIABLE($account) ) T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_FUNCTION(poll_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER , , T_STRING ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER , , T_STRING ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(_poll_menu_access) ( T_VARIABLE($node) , T_VARIABLE($perm) , T_VARIABLE($inspect_allowvotes) ) { T_RETURN T_STRING ( T_VARIABLE($perm) ) T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_OR ! T_VARIABLE($inspect_allowvotes) ) ; } T_FUNCTION(poll_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER ) { T_IF ( T_STRING ( ) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($blocks) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($sql) = T_STRING ( ) ; T_VARIABLE($timestamp) = T_STRING ( T_STRING ( T_VARIABLE($sql) ) ) ; T_IF ( T_VARIABLE($timestamp) ) { T_VARIABLE($poll) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($timestamp) , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_IF ( T_VARIABLE($poll) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($poll) = T_STRING ( T_VARIABLE($poll) , T_STRING , T_STRING , T_STRING ) ; } } T_VARIABLE($block) [ ] = T_STRING ( ) ; T_VARIABLE($block) [ ] = T_STRING ( T_VARIABLE($poll) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_VARIABLE($block) ; } } } T_FUNCTION(poll_cron) ( ) { T_VARIABLE($result) = T_STRING ( . T_STRING ( ) . ) ; T_WHILE ( T_VARIABLE($poll) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( , T_VARIABLE($poll) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(poll_node_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ) ; } T_FUNCTION(poll_form) ( & T_VARIABLE($node) , T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($admin) = T_STRING ( ) T_BOOLEAN_OR T_STRING ( ) T_BOOLEAN_OR ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($type) = T_STRING ( , T_VARIABLE($node) ) ; T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($type) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($choice_count) = T_VARIABLE($form_state) [ ] ; } T_ELSE { T_VARIABLE($choice_count) = T_STRING ( T_LNUMBER , T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_LNUMBER : T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_FOR ( T_VARIABLE($delta) = T_LNUMBER ; T_VARIABLE($delta) < T_VARIABLE($choice_count) ; T_VARIABLE($delta) T_INC ) { T_VARIABLE($text) = T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($delta) ] [ ] ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($delta) ] [ ] : ; T_VARIABLE($votes) = T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($delta) ] [ ] ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($delta) ] [ ] : T_LNUMBER ; T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($delta) ] = T_STRING ( T_VARIABLE($delta) , T_VARIABLE($text) , T_VARIABLE($votes) ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , ) ; T_VARIABLE($_duration) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) + T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) , ) ; T_VARIABLE($_active) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_VARIABLE($admin) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($_active) , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($_duration) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(poll_more_choices_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_VARIABLE($form_state) [ ] = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) + T_LNUMBER ; } } T_FUNCTION(_poll_choice_form) ( T_VARIABLE($delta) , T_VARIABLE($value) = , T_VARIABLE($votes) = T_LNUMBER ) { T_VARIABLE($admin) = T_STRING ( ) ; T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ( T_VARIABLE($delta) + T_LNUMBER ) ) ) , T_DOUBLE_ARROW T_VARIABLE($value) , T_DOUBLE_ARROW T_ARRAY ( , T_VARIABLE($delta) , ) , ) ; T_IF ( T_VARIABLE($admin) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ( T_VARIABLE($delta) + T_LNUMBER ) ) ) , T_DOUBLE_ARROW T_VARIABLE($votes) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( , T_VARIABLE($delta) , ) , ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(poll_choice_js) ( ) { T_VARIABLE($delta) = T_STRING ( T_VARIABLE($_POST) [ ] ) ; T_VARIABLE($form_element) = T_STRING ( T_VARIABLE($delta) ) ; T_STRING ( , T_VARIABLE($form_element) , T_ARRAY ( ) , ) ; T_VARIABLE($form_state) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form_build_id) = T_VARIABLE($_POST) [ ] ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($form_build_id) , T_VARIABLE($form_state) ) ; T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($delta) ] = T_VARIABLE($form_element) ; T_STRING ( T_VARIABLE($form_build_id) , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($form) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($_POST) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) = T_STRING ( , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($choice_form) = T_VARIABLE($form) [ ] [ ] ; T_UNSET ( T_VARIABLE($choice_form) [ ] , T_VARIABLE($choice_form) [ ] ) ; T_VARIABLE($choice_form) [ T_VARIABLE($delta) ] [ ] [ ] = T_EMPTY ( T_VARIABLE($choice_form) [ T_VARIABLE($delta) ] [ ] [ ] ) ? : T_VARIABLE($choice_form) [ T_VARIABLE($delta) ] [ ] [ ] . ; T_VARIABLE($choice_form) [ T_VARIABLE($delta) ] [ ] [ ] = T_LNUMBER ; T_VARIABLE($output) = T_STRING ( ) . T_STRING ( T_VARIABLE($choice_form) ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($output) ) ) ; } T_FUNCTION(poll_node_form_submit) ( & T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_state) [ ] [ ] = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($form_state) [ ] [ ] = T_STRING ( T_OBJECT_CAST T_VARIABLE($form_state) [ ] ) ; } T_FUNCTION(poll_validate) ( T_VARIABLE($node) ) { T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($realchoices) = T_LNUMBER ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_IF ( T_VARIABLE($choice) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($realchoices) T_INC ; } T_IF ( T_ISSET ( T_VARIABLE($choice) [ ] ) T_BOOLEAN_AND T_VARIABLE($choice) [ ] < T_LNUMBER ) { T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($i) T_ENCAPSED_AND_WHITESPACE , T_STRING ( ) ) ; } } T_IF ( T_VARIABLE($realchoices) < T_LNUMBER ) { T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($realchoices) T_ENCAPSED_AND_WHITESPACE , T_STRING ( ) ) ; } } } T_FUNCTION(poll_load) ( T_VARIABLE($node) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($poll) = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($choice) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($poll) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($choice) [ ] ] = T_VARIABLE($choice) ; } T_VARIABLE($poll) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($poll) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($result) = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ( ) ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($poll) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($poll) T_OBJECT_OPERATOR T_STRING = - T_LNUMBER ; T_VARIABLE($poll) T_OBJECT_OPERATOR T_STRING = T_STRING ; } } T_RETURN T_VARIABLE($poll) ; } T_FUNCTION(poll_insert) ( T_VARIABLE($node) ) { T_IF ( ! T_STRING ( ) ) { T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($i) ] [ ] = T_LNUMBER ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; } T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($i) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($choice) ) { T_IF ( T_VARIABLE($choice) [ ] T_IS_NOT_EQUAL ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($choice) [ ] , T_VARIABLE($choice) [ ] , T_VARIABLE($i) T_INC ) ; } } } T_FUNCTION(poll_update) ( T_VARIABLE($node) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($new_chorder) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($old_chorder) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_VARIABLE($chvotes) = T_ISSET ( T_VARIABLE($choice) [ ] ) ? T_INT_CAST T_VARIABLE($choice) [ ] : T_LNUMBER ; T_VARIABLE($chtext) = T_VARIABLE($choice) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($chtext) ) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($chtext) , T_VARIABLE($chvotes) , T_VARIABLE($new_chorder) ) ; T_IF ( T_VARIABLE($new_chorder) T_IS_NOT_EQUAL T_VARIABLE($old_chorder) ) { T_STRING ( , T_VARIABLE($new_chorder) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($old_chorder) ) ; } T_VARIABLE($new_chorder) T_INC ; } T_ELSE { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($old_chorder) ) ; } } } T_FUNCTION(poll_delete) ( T_VARIABLE($node) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_FUNCTION(poll_view) ( T_VARIABLE($node) , T_VARIABLE($teaser) = T_STRING , T_VARIABLE($page) = T_STRING , T_VARIABLE($block) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($output) = ; T_IF ( T_VARIABLE($block) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_VARIABLE($links) = T_STRING ( , , T_VARIABLE($node) , T_LNUMBER ) ; T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($block) ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING . , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($links) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($block) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) , T_VARIABLE($block) ) , ) ; } T_ELSE { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) , T_VARIABLE($teaser) , T_VARIABLE($page) , T_VARIABLE($block) ) , ) ; } T_RETURN T_VARIABLE($node) ; } T_FUNCTION(poll_teaser) ( T_VARIABLE($node) ) { T_VARIABLE($teaser) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_IF ( T_VARIABLE($choice) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($teaser) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($choice) [ ] ) . ; } } } T_RETURN T_VARIABLE($teaser) ; } T_FUNCTION(poll_view_voting) ( & T_VARIABLE($form_state) , T_VARIABLE($node) , T_VARIABLE($block) ) { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($list) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_VARIABLE($list) [ T_VARIABLE($i) ] = T_STRING ( T_VARIABLE($choice) [ ] ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($list) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($form) [ ] = T_VARIABLE($node) ; T_VARIABLE($form) [ ] = T_VARIABLE($block) ; T_VARIABLE($form) [ ] = T_STRING ; T_VARIABLE($form) [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(poll_view_voting_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL - T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(poll_vote) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($node) = T_VARIABLE($form) [ ] ; T_VARIABLE($choice) = T_VARIABLE($form_state) [ ] [ ] ; T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($choice) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($choice) , T_STRING ( ) ) ; } T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($choice) ) ; T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; } T_FUNCTION(template_preprocess_poll_vote) ( & T_VARIABLE($variables) ) { T_VARIABLE($form) = T_VARIABLE($variables) [ ] ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($form) ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($form) [ ] ; T_IF ( T_VARIABLE($variables) [ ] ) { T_VARIABLE($variables) [ ] [ ] = ; } } T_FUNCTION(poll_view_results) ( & T_VARIABLE($node) , T_VARIABLE($teaser) , T_VARIABLE($page) , T_VARIABLE($block) ) { T_VARIABLE($total_votes) = T_LNUMBER ; T_VARIABLE($max_votes) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($choice) ) { T_IF ( T_ISSET ( T_VARIABLE($choice) [ ] ) ) { T_VARIABLE($total_votes) T_PLUS_EQUAL T_VARIABLE($choice) [ ] ; T_VARIABLE($max_votes) = T_STRING ( T_VARIABLE($max_votes) , T_VARIABLE($choice) [ ] ) ; } } T_VARIABLE($poll_results) = ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($i) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($choice) [ ] ) ) { T_VARIABLE($chvotes) = T_ISSET ( T_VARIABLE($choice) [ ] ) ? T_VARIABLE($choice) [ ] : T_STRING ; T_VARIABLE($poll_results) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($choice) [ ] , T_VARIABLE($chvotes) , T_VARIABLE($total_votes) , T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($i) , T_VARIABLE($block) ) ; } } T_RETURN T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($poll_results) , T_VARIABLE($total_votes) , T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_ARRAY ( ) , T_VARIABLE($block) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_STRING ) ; } T_FUNCTION(theme_poll_choices) ( T_VARIABLE($form) ) { T_STRING ( . T_STRING ( ) . , ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($headers) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_UNSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] , T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] ) ; T_VARIABLE($row) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) , T_DOUBLE_ARROW ) , ) , ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ) { T_VARIABLE($row) = T_STRING ( T_VARIABLE($row) , T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ; } T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($headers) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(template_preprocess_poll_results) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($variables) [ ] ) T_BOOLEAN_AND T_VARIABLE($variables) [ ] > - T_LNUMBER T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] ) ; } T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] ) ; T_IF ( T_VARIABLE($variables) [ ] ) { T_VARIABLE($variables) [ ] [ ] = ; } } T_FUNCTION(template_preprocess_poll_bar) ( & T_VARIABLE($variables) ) { T_IF ( T_VARIABLE($variables) [ ] ) { T_VARIABLE($variables) [ ] [ ] = ; } T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] * T_LNUMBER / T_STRING ( T_VARIABLE($variables) [ ] , T_LNUMBER ) ) ; } T_FUNCTION(poll_cancel_form) ( & T_VARIABLE($form_state) , T_VARIABLE($nid) ) { T_VARIABLE($form) [ ] = T_VARIABLE($nid) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($form) [ ] = T_STRING ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(poll_cancel) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($node) = T_STRING ( T_VARIABLE($form) [ ] ) ; T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ( ) ) ; } T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_FUNCTION(poll_user) ( T_VARIABLE($op) , & T_VARIABLE($edit) , & T_VARIABLE($user) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } }",11,0
"T_OPEN_TAG T_FUNCTION(poll_page) ( ) { T_VARIABLE($sql) = T_STRING ( ) ; T_VARIABLE($count_sql) = T_STRING ( ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_LNUMBER , T_VARIABLE($count_sql) ) ; T_VARIABLE($output) = ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , , ) . . ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ? T_STRING ( ) : T_STRING ( ) ) . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(poll_votes) ( T_VARIABLE($node) ) { T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($output) = T_STRING ( ) ; T_VARIABLE($header) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ; T_VARIABLE($header) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ; T_VARIABLE($result) = T_STRING ( . T_STRING ( T_VARIABLE($header) ) , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($vote) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($vote) T_OBJECT_OPERATOR T_STRING ? T_STRING ( , T_VARIABLE($vote) ) : T_STRING ( T_VARIABLE($vote) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($vote) T_OBJECT_OPERATOR T_STRING ] [ ] ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(poll_results) ( T_VARIABLE($node) ) { T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ; T_RETURN T_STRING ( T_VARIABLE($node) , T_LNUMBER ) ; }",3,0
"T_OPEN_TAG T_CLOSE_TAG T_OPEN_TAG T_PRINT T_VARIABLE($picture) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($profile) T_AS T_VARIABLE($field) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDFOREACH ; T_CLOSE_TAG",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($picture) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($name) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_FOREACH ( T_VARIABLE($profile) T_AS T_VARIABLE($field) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDFOREACH ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_FUNCTION(profile_admin_overview) ( ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($categories) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($field) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($categories) [ ] = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($form) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($form) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($categories) = T_STRING ( T_VARIABLE($categories) ) ; T_FOREACH ( T_VARIABLE($form) T_AS T_VARIABLE($fid) T_DOUBLE_ARROW T_VARIABLE($field) ) { T_FOREACH ( T_VARIABLE($categories) T_AS T_VARIABLE($cat) T_DOUBLE_ARROW T_VARIABLE($category) ) { T_VARIABLE($form) [ T_VARIABLE($fid) ] [ ] [ ] [ T_VARIABLE($category) ] = T_VARIABLE($category) ; } } T_IF ( T_STRING ( T_VARIABLE($form) ) > T_LNUMBER ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_ELSE { T_FOREACH ( T_VARIABLE($form) T_AS T_VARIABLE($fid) T_DOUBLE_ARROW T_VARIABLE($field) ) { T_UNSET ( T_VARIABLE($form) [ T_VARIABLE($fid) ] [ ] ) ; T_VARIABLE($form) [ T_VARIABLE($fid) ] [ ] [ ] = ; } } T_VARIABLE($form) [ ] = T_STRING ; T_VARIABLE($addnewfields) = . T_STRING ( ) . ; T_VARIABLE($addnewfields) T_CONCAT_EQUAL ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($addnewfields) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($value) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($key) ) . ; } T_VARIABLE($addnewfields) T_CONCAT_EQUAL ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($addnewfields) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(profile_admin_overview_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_FOREACH ( T_STRING ( T_VARIABLE($form_state) [ ] ) T_AS T_VARIABLE($fid) ) { T_IF ( T_STRING ( T_VARIABLE($fid) ) ) { T_VARIABLE($weight) = T_VARIABLE($form_state) [ ] [ T_VARIABLE($fid) ] [ ] ; T_VARIABLE($category) = T_VARIABLE($form_state) [ ] [ T_VARIABLE($fid) ] [ ] ; T_IF ( T_VARIABLE($weight) T_IS_NOT_EQUAL T_VARIABLE($form) [ T_VARIABLE($fid) ] [ ] [ ] T_BOOLEAN_OR T_VARIABLE($category) T_IS_NOT_EQUAL T_VARIABLE($form) [ T_VARIABLE($fid) ] [ ] [ ] ) { T_STRING ( , T_VARIABLE($weight) , T_VARIABLE($category) , T_VARIABLE($fid) ) ; } } } T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(theme_profile_admin_overview) ( T_VARIABLE($form) ) { T_STRING ( T_STRING ( , ) . ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_STRING ( T_STRING ( , ) . ) ; } T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($categories) = T_ARRAY ( ) ; T_VARIABLE($category_number) = T_LNUMBER ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_IF ( T_STRING ( , T_VARIABLE($form) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($field) = & T_VARIABLE($form) [ T_VARIABLE($key) ] ; T_VARIABLE($category) = T_VARIABLE($field) [ ] [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($categories) [ T_VARIABLE($category) ] ) ) { T_VARIABLE($categories) [ T_VARIABLE($category) ] = T_VARIABLE($category_number) ; T_VARIABLE($category_field) [ ] [ ] = . T_VARIABLE($category_number) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($category) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( ) . , T_DOUBLE_ARROW T_LNUMBER ) ) , T_DOUBLE_ARROW . T_VARIABLE($category_number) . ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_STRING ( , , , , . T_VARIABLE($category_number) ) ; T_STRING ( , , , , . T_VARIABLE($category_number) ) ; } T_VARIABLE($category_number) T_INC ; } T_VARIABLE($field) [ ] [ ] [ ] = . T_VARIABLE($categories) [ T_VARIABLE($category) ] ; T_VARIABLE($field) [ ] [ ] [ ] = . T_VARIABLE($categories) [ T_VARIABLE($category) ] ; T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($field) [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($field) [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($field) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($field) [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($field) [ ] ) ; } T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($field) [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($field) [ ] ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($row) , T_DOUBLE_ARROW ) ; } } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($header) [ ] = T_STRING ( ) ; T_VARIABLE($header) [ ] = T_STRING ( ) ; } T_VARIABLE($header) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(profile_field_form) ( & T_VARIABLE($form_state) , T_VARIABLE($arg) = T_STRING ) { T_IF ( T_STRING ( T_LNUMBER ) T_IS_EQUAL ) { T_IF ( T_STRING ( T_VARIABLE($arg) ) ) { T_VARIABLE($fid) = T_VARIABLE($arg) ; T_VARIABLE($edit) = T_STRING ( T_STRING ( , T_VARIABLE($fid) ) ) ; T_IF ( ! T_VARIABLE($edit) ) { T_STRING ( ) ; T_RETURN ; } T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($fid) , ) ; T_VARIABLE($type) = T_VARIABLE($edit) [ ] ; } T_ELSE { T_STRING ( ) ; T_RETURN ; } } T_ELSE { T_VARIABLE($types) = T_STRING ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($types) [ T_VARIABLE($arg) ] ) ) { T_STRING ( ) ; T_RETURN ; } T_VARIABLE($type) = T_VARIABLE($arg) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($types) [ T_VARIABLE($type) ] ) ) ) ; T_VARIABLE($edit) = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) ) ; } T_VARIABLE($edit) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) , ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_ELSE T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(profile_field_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_STRING ( ) ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( ! T_VARIABLE($form_state) [ ] [ ] ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) T_IS_EQUAL ) { T_STRING ( , T_STRING ( ) ) ; } T_VARIABLE($args1) = T_ARRAY ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($args2) = T_ARRAY ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($query_suffix) = ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($args1) [ ] = T_VARIABLE($args2) [ ] = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($query_suffix) = ; } T_IF ( T_STRING ( T_STRING ( . T_VARIABLE($query_suffix) , T_VARIABLE($args1) ) ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_STRING ( T_STRING ( . T_VARIABLE($query_suffix) , T_VARIABLE($args2) ) ) ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_STRING ( , T_STRING ( ) ) ; } T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_STRING ( , T_STRING ( ) ) ; } } } T_FUNCTION(profile_field_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($form_state) [ ] [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($form_state) [ ] [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , ) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( ) ) ; } T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(profile_field_delete) ( & T_VARIABLE($form_state) , T_VARIABLE($fid) ) { T_VARIABLE($field) = T_STRING ( T_STRING ( , T_VARIABLE($fid) ) ) ; T_IF ( ! T_VARIABLE($field) ) { T_STRING ( ) ; T_RETURN ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($fid) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ) , , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($fid) ) ) ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(profile_field_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(profile_admin_settings_autocomplete) ( T_VARIABLE($string) ) { T_VARIABLE($matches) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($string) , T_LNUMBER , T_LNUMBER ) ; T_WHILE ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($matches) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ; } T_PRINT T_STRING ( T_VARIABLE($matches) ) ; T_EXIT ( ) ; }",10,0
"T_OPEN_TAG T_FUNCTION(profile_install) ( ) { T_STRING ( ) ; } T_FUNCTION(profile_uninstall) ( ) { T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(profile_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_RETURN T_VARIABLE($schema) ; }",2,0
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(profile_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; } } T_FUNCTION(profile_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) ) ; } T_FUNCTION(profile_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(profile_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING | T_STRING ; T_RETURN T_VARIABLE($blocks) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($delta) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($fields) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_STRING , T_STRING ) ; T_WHILE ( T_VARIABLE($record) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($fields) [ T_VARIABLE($record) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($record) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($fields) [ ] = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($fields) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_RETURN T_VARIABLE($form) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($delta) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_VARIABLE($edit) [ ] ) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($output) = ; T_IF ( ( T_STRING ( T_LNUMBER ) T_IS_EQUAL ) T_BOOLEAN_AND T_STRING ( T_STRING ( T_LNUMBER ) ) T_BOOLEAN_AND ( T_STRING ( T_LNUMBER ) T_IS_EQUAL T_STRING ) ) { T_VARIABLE($node) = T_STRING ( T_STRING ( T_LNUMBER ) ) ; T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_IF ( T_VARIABLE($use_fields) = T_STRING ( , T_ARRAY ( ) ) ) { T_VARIABLE($fields) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_STRING , T_STRING ) ; T_WHILE ( T_VARIABLE($record) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_ISSET ( T_VARIABLE($use_fields) [ T_VARIABLE($record) T_OBJECT_OPERATOR T_STRING ] ) T_BOOLEAN_AND T_VARIABLE($use_fields) [ T_VARIABLE($record) T_OBJECT_OPERATOR T_STRING ] ) { T_VARIABLE($fields) [ ] = T_VARIABLE($record) ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($fields) ) ) { T_VARIABLE($profile) = T_STRING ( T_VARIABLE($fields) , T_VARIABLE($account) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($account) , T_VARIABLE($profile) , T_STRING ) ; } T_IF ( T_ISSET ( T_VARIABLE($use_fields) [ ] ) T_BOOLEAN_AND T_VARIABLE($use_fields) [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) . ; } } T_IF ( T_VARIABLE($output) ) { T_VARIABLE($block) [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($block) [ ] = T_VARIABLE($output) ; T_RETURN T_VARIABLE($block) ; } } } } T_FUNCTION(profile_user) ( T_VARIABLE($type) , & T_VARIABLE($edit) , & T_VARIABLE($user) , T_VARIABLE($category) = T_STRING ) { T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_RETURN T_STRING ( T_VARIABLE($user) ) ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($edit) , T_VARIABLE($user) , T_VARIABLE($category) , T_STRING ) ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($edit) , T_VARIABLE($user) , T_VARIABLE($category) ) ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($edit) , T_VARIABLE($user) , T_VARIABLE($category) , T_STRING ) ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($user) ) ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($edit) , T_VARIABLE($user) , T_VARIABLE($category) ) ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($edit) , T_VARIABLE($category) ) ; T_CASE : T_RETURN T_STRING ( ) ; T_CASE : T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(profile_load_profile) ( & T_VARIABLE($user) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($field) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_EMPTY ( T_VARIABLE($user) T_OBJECT_OPERATOR { T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING } ) ) { T_VARIABLE($user) T_OBJECT_OPERATOR { T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING } = T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) : T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; } } } T_FUNCTION(profile_save_profile) ( & T_VARIABLE($edit) , & T_VARIABLE($user) , T_VARIABLE($category) , T_VARIABLE($register) = T_STRING ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($category) , T_VARIABLE($register) ) ; T_WHILE ( T_VARIABLE($field) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ) ; } T_STRING ( , T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ) ; T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] = T_STRING ; } } T_FUNCTION(profile_view_field) ( T_VARIABLE($user) , T_VARIABLE($field) ) { T_VARIABLE($browse) = T_STRING ( ) T_BOOLEAN_AND ( T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_STRING ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR { T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING } ) T_BOOLEAN_AND T_VARIABLE($value) = T_VARIABLE($user) T_OBJECT_OPERATOR { T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING } ) { T_SWITCH ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) { T_CASE : T_RETURN T_STRING ( T_VARIABLE($value) ) ; T_CASE : T_CASE : T_RETURN T_VARIABLE($browse) ? T_STRING ( T_VARIABLE($value) , . T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($value) ) : T_STRING ( T_VARIABLE($value) ) ; T_CASE : T_RETURN T_VARIABLE($browse) ? T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) : T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ; T_CASE : T_RETURN . T_STRING ( T_VARIABLE($value) ) . . T_STRING ( T_VARIABLE($value) ) . ; T_CASE : T_VARIABLE($format) = T_STRING ( T_STRING ( , ) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($replace) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($value) [ ] ) , T_DOUBLE_ARROW T_VARIABLE($value) [ ] , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($value) [ ] ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($value) [ ] ) , T_DOUBLE_ARROW T_VARIABLE($value) [ ] , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_RETURN T_STRING ( T_VARIABLE($format) , T_VARIABLE($replace) ) ; T_CASE : T_VARIABLE($values) = T_STRING ( , T_VARIABLE($value) ) ; T_VARIABLE($fields) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($values) T_AS T_VARIABLE($value) ) { T_IF ( T_VARIABLE($value) = T_STRING ( T_VARIABLE($value) ) ) { T_VARIABLE($fields) [ ] = T_VARIABLE($browse) ? T_STRING ( T_VARIABLE($value) , . T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($value) ) : T_STRING ( T_VARIABLE($value) ) ; } } T_RETURN T_STRING ( , T_VARIABLE($fields) ) ; } } } T_FUNCTION(profile_view_profile) ( & T_VARIABLE($user) ) { T_STRING ( T_VARIABLE($user) ) ; T_IF ( T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($result) = T_STRING ( , T_STRING ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( , T_STRING , T_STRING ) ; } T_VARIABLE($fields) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($field) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($value) = T_STRING ( T_VARIABLE($user) , T_VARIABLE($field) ) ) { T_VARIABLE($title) = ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL ) ? T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) : T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , ) ; } T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($title) , T_DOUBLE_ARROW T_VARIABLE($value) , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) , ) ; } } } T_FUNCTION(_profile_form_explanation) ( T_VARIABLE($field) ) { T_VARIABLE($output) = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) ; } T_IF ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(profile_form_profile) ( T_VARIABLE($edit) , T_VARIABLE($user) , T_VARIABLE($category) , T_VARIABLE($register) = T_STRING ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($category) , T_VARIABLE($register) ) ; T_VARIABLE($weight) = T_LNUMBER ; T_VARIABLE($fields) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($field) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($category) = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($fields) [ T_VARIABLE($category) ] ) ) { T_VARIABLE($fields) [ T_VARIABLE($category) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($category) ) , T_DOUBLE_ARROW T_VARIABLE($weight) T_INC ) ; } T_SWITCH ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) { T_CASE : T_CASE : T_VARIABLE($fields) [ T_VARIABLE($category) ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ) ? T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] : , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) ) , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , ) ; T_IF ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($fields) [ T_VARIABLE($category) ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] [ ] = . T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; } T_BREAK ; T_CASE : T_VARIABLE($fields) [ T_VARIABLE($category) ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ) ? T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] : , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) ) , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , ) ; T_BREAK ; T_CASE : T_VARIABLE($fields) [ T_VARIABLE($category) ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ) ? T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] : , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) ) , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , ) ; T_BREAK ; T_CASE : T_VARIABLE($fields) [ T_VARIABLE($category) ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ) ? T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] : , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) ) , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , ) ; T_BREAK ; T_CASE : T_VARIABLE($options) = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ? T_ARRAY ( ) : T_ARRAY ( ) ; T_VARIABLE($lines) = T_STRING ( , T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_VARIABLE($lines) T_AS T_VARIABLE($line) ) { T_IF ( T_VARIABLE($line) = T_STRING ( T_VARIABLE($line) ) ) { T_VARIABLE($options) [ T_VARIABLE($line) ] = T_VARIABLE($line) ; } } T_VARIABLE($fields) [ T_VARIABLE($category) ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ) ? T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] : , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) ) , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , ) ; T_BREAK ; T_CASE : T_VARIABLE($fields) [ T_VARIABLE($category) ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ) ? T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] : , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($field) ) , T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , ) ; T_BREAK ; } } T_RETURN T_VARIABLE($fields) ; } T_FUNCTION(_profile_update_user_fields) ( T_VARIABLE($fields) , T_VARIABLE($account) ) { T_FOREACH ( T_VARIABLE($fields) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($field) ) { T_VARIABLE($fields) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($account) , T_VARIABLE($field) ) ; } T_RETURN T_VARIABLE($fields) ; } T_FUNCTION(profile_validate_profile) ( T_VARIABLE($edit) , T_VARIABLE($category) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($category) ) ; T_WHILE ( T_VARIABLE($field) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] ) { T_IF ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_IF ( ! T_STRING ( T_VARIABLE($edit) [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] , T_STRING ) ) { T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } } T_ELSE T_IF ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ! T_STRING ( ) ) { T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } T_RETURN T_VARIABLE($edit) ; } T_FUNCTION(profile_categories) ( ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($data) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($category) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($data) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($category) T_OBJECT_OPERATOR T_STRING ) ) ; } T_RETURN T_VARIABLE($data) ; } T_FUNCTION(profile_category_access) ( T_VARIABLE($category) ) { T_IF ( T_STRING ( ) ) { T_RETURN T_STRING ; } T_ELSE { T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($category) , T_STRING ) ) ; } } T_FUNCTION(template_preprocess_profile_block) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] ) ; T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($variables) [ ] T_AS T_VARIABLE($field) ) { T_IF ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($variables) [ ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) [ ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variables) [ ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; } } } T_FUNCTION(template_preprocess_profile_listing) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] ) ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($variables) [ ] ) ; T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($variables) [ ] T_AS T_VARIABLE($field) ) { T_IF ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($variables) [ ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variables) [ ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($variables) [ ] [ T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ; } } } T_FUNCTION(template_preprocess_profile_wrapper) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = ; T_IF ( T_VARIABLE($field) = T_STRING ( T_LNUMBER ) ) { T_VARIABLE($variables) [ ] = T_VARIABLE($field) ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($field) ; } } T_FUNCTION(_profile_field_types) ( T_VARIABLE($type) = T_STRING ) { T_VARIABLE($types) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_ISSET ( T_VARIABLE($type) ) ? T_VARIABLE($types) [ T_VARIABLE($type) ] : T_VARIABLE($types) ; } T_FUNCTION(_profile_field_serialize) ( T_VARIABLE($type) = T_STRING ) { T_RETURN T_VARIABLE($type) T_IS_EQUAL ; } T_FUNCTION(_profile_get_fields) ( T_VARIABLE($category) , T_VARIABLE($register) = T_STRING ) { T_VARIABLE($args) = T_ARRAY ( ) ; T_VARIABLE($sql) = ; T_VARIABLE($filters) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($register) ) { T_VARIABLE($filters) [ ] = ; } T_ELSE { T_VARIABLE($filters) [ ] = ; T_VARIABLE($args) [ ] = T_VARIABLE($category) ; } T_IF ( ! T_STRING ( ) ) { T_VARIABLE($filters) [ ] = ; T_VARIABLE($args) [ ] = T_STRING ; } T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($filters) ) ; T_VARIABLE($sql) T_CONCAT_EQUAL ; T_RETURN T_STRING ( T_VARIABLE($sql) , T_VARIABLE($args) ) ; }",13,1
"T_OPEN_TAG T_FUNCTION(profile_browse) ( ) { T_LIST ( , T_VARIABLE($name) , T_VARIABLE($value) ) = T_STRING ( T_STRING ( , T_VARIABLE($_GET) [ ] , T_LNUMBER ) , T_LNUMBER , ) ; T_VARIABLE($field) = T_STRING ( T_STRING ( , T_VARIABLE($name) ) ) ; T_IF ( T_VARIABLE($name) T_BOOLEAN_AND T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_EMPTY ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( ) ; T_RETURN ; } T_IF ( ! T_STRING ( ) T_BOOLEAN_AND ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) ) { T_STRING ( ) ; T_RETURN ; } T_VARIABLE($fields) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING , T_STRING ) ; T_WHILE ( T_VARIABLE($record) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($fields) [ ] = T_VARIABLE($record) ; } T_VARIABLE($arguments) = T_ARRAY ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ; T_SWITCH ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) { T_CASE : T_VARIABLE($query) = ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($query) = ; T_VARIABLE($arguments) [ ] = T_VARIABLE($value) ; T_BREAK ; T_CASE : T_VARIABLE($query) = ; T_VARIABLE($arguments) [ ] = T_VARIABLE($value) ; T_BREAK ; T_DEFAULT : T_STRING ( ) ; T_RETURN ; } T_VARIABLE($result) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($query) T_ENCAPSED_AND_WHITESPACE , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($arguments) ) ; T_VARIABLE($content) = ; T_WHILE ( T_VARIABLE($account) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($profile) = T_STRING ( T_VARIABLE($fields) , T_VARIABLE($account) ) ; T_VARIABLE($content) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($account) , T_VARIABLE($profile) ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($content) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER ) ; T_IF ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_VARIABLE($title) = T_STRING ( T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($value) ) ) ) ; } T_ELSE { T_VARIABLE($title) = T_STRING ( T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( T_VARIABLE($title) ) ; T_RETURN T_VARIABLE($output) ; } T_ELSE T_IF ( T_VARIABLE($name) T_BOOLEAN_AND ! T_VARIABLE($field) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( ) ; } T_ELSE { T_VARIABLE($fields) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_STRING ) ; T_WHILE ( T_VARIABLE($record) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($fields) [ ] = T_VARIABLE($record) ; } T_VARIABLE($result) = T_STRING ( , T_LNUMBER , T_LNUMBER , T_STRING ) ; T_VARIABLE($content) = ; T_WHILE ( T_VARIABLE($account) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($profile) = T_STRING ( T_VARIABLE($fields) , T_VARIABLE($account) ) ; T_VARIABLE($content) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($account) , T_VARIABLE($profile) ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($content) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER ) ; T_STRING ( T_STRING ( ) ) ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(profile_autocomplete) ( T_VARIABLE($field) , T_VARIABLE($string) ) { T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($field) ) ) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($field) , T_VARIABLE($string) , T_LNUMBER , T_LNUMBER ) ; T_WHILE ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($matches) [ T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ; } } T_STRING ( T_VARIABLE($matches) ) ; }",7,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($search_form) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($url) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($snippet) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($snippet) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($info) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($info) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($type) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($search_results) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($pager) ; T_CLOSE_TAG",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($search_form) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_FUNCTION(search_wipe_confirm) ( ) { T_RETURN T_STRING ( T_ARRAY ( ) , T_STRING ( ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(search_wipe_confirm_submit) ( & T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form) [ ] ) { T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } } T_FUNCTION(search_admin_settings) ( ) { T_VARIABLE($remaining) = T_LNUMBER ; T_VARIABLE($total) = T_LNUMBER ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_IF ( T_STRING ( T_VARIABLE($module) , ) ) { T_VARIABLE($status) = T_STRING ( T_VARIABLE($module) , , ) ; T_VARIABLE($remaining) T_PLUS_EQUAL T_VARIABLE($status) [ ] ; T_VARIABLE($total) T_PLUS_EQUAL T_VARIABLE($status) [ ] ; } } T_VARIABLE($count) = T_STRING ( T_VARIABLE($remaining) , , ) ; T_VARIABLE($percentage) = ( T_INT_CAST T_STRING ( T_LNUMBER , T_LNUMBER * ( T_VARIABLE($total) - T_VARIABLE($remaining) ) / T_STRING ( T_LNUMBER , T_VARIABLE($total) ) ) ) . ; T_VARIABLE($status) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($percentage) ) ) . . T_VARIABLE($count) . ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($status) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($items) = T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($items) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) , T_STRING ( , ) ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(search_admin_settings_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_STRING ( ) ; } T_IF ( ( T_STRING ( , T_LNUMBER ) T_IS_NOT_EQUAL T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_OR ( T_STRING ( , T_STRING ) T_IS_NOT_EQUAL T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } }",4,0
"T_OPEN_TAG T_FUNCTION(search_install) ( ) { T_STRING ( ) ; } T_FUNCTION(search_uninstall) ( ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(search_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_RETURN T_VARIABLE($schema) ; }",3,0
"T_OPEN_TAG T_STRING ( , . . . . . . . . . . . . . . . . . . . . . . . . . . ) ; T_STRING ( , . . . . . . . . ) ; T_STRING ( , . . . . . . . . . . . . . . ) ; T_STRING ( , . ) ; T_FUNCTION(search_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_CASE : T_RETURN T_STRING ( ) ; } } T_FUNCTION(search_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , ) ; } T_FUNCTION(search_perm) ( ) { T_RETURN T_ARRAY ( , , ) ; } T_FUNCTION(search_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ; T_RETURN T_VARIABLE($blocks) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($block) [ ] = T_STRING ( ) ; T_VARIABLE($block) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($block) ; } } T_FUNCTION(search_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , ) , ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($name) ) { T_VARIABLE($items) [ . T_VARIABLE($name) . ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($name) , , , T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($name) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($name) ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; } T_RETURN T_VARIABLE($items) ; } T_FUNCTION(_search_menu) ( T_VARIABLE($name) ) { T_RETURN T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($name) , , ) ; } T_FUNCTION(search_wipe) ( T_VARIABLE($sid) = T_STRING , T_VARIABLE($type) = T_STRING , T_VARIABLE($reindex) = T_STRING ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($sid) T_IS_EQUAL T_STRING ) { T_STRING ( , ) ; } T_ELSE { T_STRING ( , T_VARIABLE($sid) , T_VARIABLE($type) ) ; T_STRING ( , T_VARIABLE($sid) , T_VARIABLE($type) ) ; T_IF ( ! T_VARIABLE($reindex) ) { T_STRING ( , T_VARIABLE($sid) , T_VARIABLE($type) ) ; } } } T_FUNCTION(search_dirty) ( T_VARIABLE($word) = T_STRING ) { T_STATIC T_VARIABLE($dirty) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($word) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($dirty) [ T_VARIABLE($word) ] = T_STRING ; } T_ELSE { T_RETURN T_VARIABLE($dirty) ; } } T_FUNCTION(search_cron) ( ) { T_STRING ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_STRING ( T_VARIABLE($module) , ) ; } } T_FUNCTION(search_update_totals) ( ) { T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($word) T_DOUBLE_ARROW T_VARIABLE($dummy) ) { T_VARIABLE($total) = T_STRING ( T_STRING ( , T_VARIABLE($word) ) ) ; T_VARIABLE($total) = T_STRING ( T_LNUMBER + T_LNUMBER / ( T_STRING ( T_LNUMBER , T_VARIABLE($total) ) ) ) ; T_STRING ( , T_VARIABLE($total) , T_VARIABLE($word) ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_VARIABLE($word) , T_VARIABLE($total) ) ; } } T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($word) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( , T_VARIABLE($word) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(search_simplify) ( T_VARIABLE($text) ) { T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) ) ; T_STRING ( T_VARIABLE($text) ) ; T_IF ( T_STRING ( , T_STRING ) ) { T_VARIABLE($text) = T_STRING ( . T_STRING . , , T_VARIABLE($text) ) ; } T_VARIABLE($text) = T_STRING ( . T_STRING . . T_STRING . . T_STRING . , , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( , , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( . T_STRING . , , T_VARIABLE($text) ) ; T_RETURN T_VARIABLE($text) ; } T_FUNCTION(search_expand_cjk) ( T_VARIABLE($matches) ) { T_VARIABLE($min) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($str) = T_VARIABLE($matches) [ T_LNUMBER ] ; T_VARIABLE($l) = T_STRING ( T_VARIABLE($str) ) ; T_IF ( T_VARIABLE($l) T_IS_SMALLER_OR_EQUAL T_VARIABLE($min) ) { T_RETURN . T_VARIABLE($str) . ; } T_VARIABLE($tokens) = ; T_VARIABLE($chars) = T_ARRAY ( ) ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($l) ; T_INC T_VARIABLE($i) ) { T_VARIABLE($current) = T_STRING ( T_VARIABLE($str) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($str) = T_STRING ( T_VARIABLE($str) , T_STRING ( T_VARIABLE($current) ) ) ; T_VARIABLE($chars) [ ] = T_VARIABLE($current) ; T_IF ( T_VARIABLE($i) T_IS_GREATER_OR_EQUAL T_VARIABLE($min) - T_LNUMBER ) { T_VARIABLE($tokens) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($chars) ) . ; T_STRING ( T_VARIABLE($chars) ) ; } } T_RETURN T_VARIABLE($tokens) ; } T_FUNCTION(search_index_split) ( T_VARIABLE($text) ) { T_STATIC T_VARIABLE($last) = T_STRING ; T_STATIC T_VARIABLE($lastsplit) = T_STRING ; T_IF ( T_VARIABLE($last) T_IS_EQUAL T_VARIABLE($text) ) { T_RETURN T_VARIABLE($lastsplit) ; } T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) ) ; T_VARIABLE($words) = T_STRING ( , T_VARIABLE($text) ) ; T_STRING ( T_VARIABLE($words) , ) ; T_VARIABLE($last) = T_VARIABLE($text) ; T_VARIABLE($lastsplit) = T_VARIABLE($words) ; T_RETURN T_VARIABLE($words) ; } T_FUNCTION(_search_index_truncate) ( & T_VARIABLE($text) ) { T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) , T_LNUMBER ) ; } T_FUNCTION(search_invoke_preprocess) ( & T_VARIABLE($text) ) { T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_VARIABLE($text) = T_STRING ( T_VARIABLE($module) , , T_VARIABLE($text) ) ; } } T_FUNCTION(search_index) ( T_VARIABLE($sid) , T_VARIABLE($type) , T_VARIABLE($text) ) { T_VARIABLE($minimum_word_size) = T_STRING ( , T_LNUMBER ) ; T_GLOBAL T_VARIABLE($base_url) ; T_VARIABLE($node_regexp) = . T_STRING ( T_VARIABLE($base_url) , ) . . T_STRING ( T_STRING ( ) , ) . ; T_VARIABLE($tags) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($text) = T_STRING ( T_ARRAY ( , ) , T_ARRAY ( , ) , T_VARIABLE($text) ) ; T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) , . T_STRING ( , T_STRING ( T_VARIABLE($tags) ) ) . ) ; T_VARIABLE($split) = T_STRING ( , T_VARIABLE($text) , - T_LNUMBER , T_STRING ) ; T_VARIABLE($tag) = T_STRING ; T_VARIABLE($link) = T_STRING ; T_VARIABLE($score) = T_LNUMBER ; T_VARIABLE($accum) = ; T_VARIABLE($tagstack) = T_ARRAY ( ) ; T_VARIABLE($tagwords) = T_LNUMBER ; T_VARIABLE($focus) = T_LNUMBER ; T_VARIABLE($results) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_FOREACH ( T_VARIABLE($split) T_AS T_VARIABLE($value) ) { T_IF ( T_VARIABLE($tag) ) { T_LIST ( T_VARIABLE($tagname) ) = T_STRING ( , T_VARIABLE($value) , T_LNUMBER ) ; T_VARIABLE($tagname) = T_STRING ( T_VARIABLE($tagname) ) ; T_IF ( T_VARIABLE($tagname) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($tagname) = T_STRING ( T_VARIABLE($tagname) , T_LNUMBER ) ; T_IF ( ! T_STRING ( T_VARIABLE($tagstack) ) T_BOOLEAN_OR T_VARIABLE($tagstack) [ T_LNUMBER ] T_IS_NOT_EQUAL T_VARIABLE($tagname) ) { T_VARIABLE($tagstack) = T_ARRAY ( ) ; T_VARIABLE($score) = T_LNUMBER ; } T_ELSE { T_VARIABLE($score) = T_STRING ( T_LNUMBER , T_VARIABLE($score) - T_VARIABLE($tags) [ T_STRING ( T_VARIABLE($tagstack) ) ] ) ; } T_IF ( T_VARIABLE($tagname) T_IS_EQUAL ) { T_VARIABLE($link) = T_STRING ; } } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($tagstack) [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($tagstack) [ T_LNUMBER ] T_IS_EQUAL T_VARIABLE($tagname) ) { T_VARIABLE($tagstack) = T_ARRAY ( ) ; T_VARIABLE($score) = T_LNUMBER ; } T_ELSE { T_STRING ( T_VARIABLE($tagstack) , T_VARIABLE($tagname) ) ; T_VARIABLE($score) T_PLUS_EQUAL T_VARIABLE($tags) [ T_VARIABLE($tagname) ] ; } T_IF ( T_VARIABLE($tagname) T_IS_EQUAL ) { T_IF ( T_STRING ( T_VARIABLE($node_regexp) , T_VARIABLE($value) , T_VARIABLE($match) ) ) { T_VARIABLE($path) = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_IF ( T_STRING ( , T_VARIABLE($path) , T_VARIABLE($match) ) ) { T_VARIABLE($linknid) = T_VARIABLE($match) [ T_LNUMBER ] ; T_IF ( T_VARIABLE($linknid) > T_LNUMBER ) { T_VARIABLE($node) = T_STRING ( T_STRING ( , T_VARIABLE($linknid) ) ) ; T_IF ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($link) = T_STRING ; T_VARIABLE($linktitle) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } } } } } } T_VARIABLE($tagwords) = T_LNUMBER ; } T_ELSE { T_IF ( T_VARIABLE($value) T_IS_NOT_EQUAL ) { T_IF ( T_VARIABLE($link) ) { T_IF ( T_STRING ( , T_VARIABLE($value) ) ) { T_VARIABLE($value) = T_VARIABLE($linktitle) ; } } T_VARIABLE($words) = T_STRING ( T_VARIABLE($value) ) ; T_FOREACH ( T_VARIABLE($words) T_AS T_VARIABLE($word) ) { T_VARIABLE($accum) T_CONCAT_EQUAL T_VARIABLE($word) . ; T_VARIABLE($num) = T_STRING ( T_VARIABLE($word) ) ; T_IF ( T_VARIABLE($num) T_BOOLEAN_OR T_STRING ( T_VARIABLE($word) ) T_IS_GREATER_OR_EQUAL T_VARIABLE($minimum_word_size) ) { T_IF ( T_VARIABLE($num) ) { T_VARIABLE($word) = T_INT_CAST T_STRING ( T_VARIABLE($word) , ) ; } T_IF ( T_VARIABLE($link) ) { T_IF ( ! T_ISSET ( T_VARIABLE($results) [ T_VARIABLE($linknid) ] ) ) { T_VARIABLE($results) [ T_VARIABLE($linknid) ] = T_ARRAY ( ) ; } T_VARIABLE($results) [ T_VARIABLE($linknid) ] [ ] = T_VARIABLE($word) ; T_VARIABLE($focus) T_MUL_EQUAL T_DNUMBER ; } T_IF ( ! T_ISSET ( T_VARIABLE($results) [ T_LNUMBER ] [ T_VARIABLE($word) ] ) ) { T_VARIABLE($results) [ T_LNUMBER ] [ T_VARIABLE($word) ] = T_LNUMBER ; } T_VARIABLE($results) [ T_LNUMBER ] [ T_VARIABLE($word) ] T_PLUS_EQUAL T_VARIABLE($score) * T_VARIABLE($focus) ; T_VARIABLE($focus) = T_STRING ( T_LNUMBER , T_DNUMBER + T_DNUMBER / ( T_LNUMBER + T_STRING ( T_VARIABLE($results) [ T_LNUMBER ] ) * T_DNUMBER ) ) ; } T_VARIABLE($tagwords) T_INC ; T_IF ( T_STRING ( T_VARIABLE($tagstack) ) T_BOOLEAN_AND T_VARIABLE($tagwords) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($tagstack) = T_ARRAY ( ) ; T_VARIABLE($score) = T_LNUMBER ; } } } } T_VARIABLE($tag) = ! T_VARIABLE($tag) ; } T_STRING ( T_VARIABLE($sid) , T_VARIABLE($type) , T_STRING ) ; T_STRING ( , T_VARIABLE($sid) , T_VARIABLE($type) , T_VARIABLE($accum) , T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($results) [ T_LNUMBER ] T_AS T_VARIABLE($word) T_DOUBLE_ARROW T_VARIABLE($score) ) { T_STRING ( , T_VARIABLE($score) , T_VARIABLE($word) , T_VARIABLE($sid) , T_VARIABLE($type) ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_VARIABLE($word) , T_VARIABLE($sid) , T_VARIABLE($type) , T_VARIABLE($score) ) ; } T_STRING ( T_VARIABLE($word) ) ; } T_UNSET ( T_VARIABLE($results) [ T_LNUMBER ] ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($sid) , T_VARIABLE($type) ) ; T_VARIABLE($links) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($link) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($links) [ T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ; } T_FOREACH ( T_VARIABLE($results) T_AS T_VARIABLE($nid) T_DOUBLE_ARROW T_VARIABLE($words) ) { T_VARIABLE($caption) = T_STRING ( , T_VARIABLE($words) ) ; T_IF ( T_ISSET ( T_VARIABLE($links) [ T_VARIABLE($nid) ] ) ) { T_IF ( T_VARIABLE($links) [ T_VARIABLE($nid) ] T_IS_NOT_EQUAL T_VARIABLE($caption) ) { T_STRING ( , T_VARIABLE($caption) , T_VARIABLE($sid) , T_VARIABLE($type) , T_VARIABLE($nid) ) ; T_STRING ( T_VARIABLE($nid) ) ; } T_UNSET ( T_VARIABLE($links) [ T_VARIABLE($nid) ] ) ; } T_ELSE { T_STRING ( , T_VARIABLE($caption) , T_VARIABLE($sid) , T_VARIABLE($type) , T_VARIABLE($nid) ) ; T_STRING ( T_VARIABLE($nid) ) ; } } T_FOREACH ( T_VARIABLE($links) T_AS T_VARIABLE($nid) T_DOUBLE_ARROW T_VARIABLE($caption) ) { T_STRING ( , T_VARIABLE($sid) , T_VARIABLE($type) , T_VARIABLE($nid) ) ; T_STRING ( T_VARIABLE($nid) ) ; } } T_FUNCTION(search_touch_node) ( T_VARIABLE($nid) ) { T_STRING ( , T_STRING ( ) , T_VARIABLE($nid) ) ; } T_FUNCTION(search_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($teaser) = T_STRING , T_VARIABLE($page) = T_STRING ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($result) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($output) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($link) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($output) [ ] = T_VARIABLE($link) T_OBJECT_OPERATOR T_STRING ; } T_RETURN . T_STRING ( , T_VARIABLE($output) ) . ; T_CASE : T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; } } T_FUNCTION(search_comment) ( T_VARIABLE($a1) , T_VARIABLE($op) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_STRING ( T_STRING ( T_VARIABLE($a1) ) ? T_VARIABLE($a1) [ ] : T_VARIABLE($a1) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; } } T_FUNCTION(search_query_extract) ( T_VARIABLE($keys) , T_VARIABLE($option) ) { T_IF ( T_STRING ( . T_VARIABLE($option) . , T_VARIABLE($keys) , T_VARIABLE($matches) ) ) { T_RETURN T_VARIABLE($matches) [ T_LNUMBER ] ; } } T_FUNCTION(search_query_insert) ( T_VARIABLE($keys) , T_VARIABLE($option) , T_VARIABLE($value) = ) { T_IF ( T_STRING ( T_VARIABLE($keys) , T_VARIABLE($option) ) ) { T_VARIABLE($keys) = T_STRING ( T_STRING ( . T_VARIABLE($option) . , , T_VARIABLE($keys) ) ) ; } T_IF ( T_VARIABLE($value) T_IS_NOT_EQUAL ) { T_VARIABLE($keys) T_CONCAT_EQUAL . T_VARIABLE($option) . . T_VARIABLE($value) ; } T_RETURN T_VARIABLE($keys) ; } T_FUNCTION(search_parse_query) ( T_VARIABLE($text) ) { T_VARIABLE($keys) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_STRING ( , . T_VARIABLE($text) , T_VARIABLE($matches) , T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($matches) ) < T_LNUMBER ) { T_RETURN T_STRING ; } T_VARIABLE($or) = T_STRING ; T_VARIABLE($warning) = ; T_VARIABLE($simple) = T_STRING ; T_FOREACH ( T_VARIABLE($matches) T_AS T_VARIABLE($match) ) { T_VARIABLE($phrase) = T_STRING ; T_IF ( T_VARIABLE($match) [ T_LNUMBER ] { T_LNUMBER } T_IS_EQUAL ) { T_VARIABLE($match) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] , T_LNUMBER , - T_LNUMBER ) ; T_VARIABLE($phrase) = T_STRING ; T_VARIABLE($simple) = T_STRING ; } T_VARIABLE($words) = T_STRING ( T_VARIABLE($match) [ T_LNUMBER ] ) ; T_VARIABLE($words) = T_VARIABLE($phrase) ? T_ARRAY ( T_VARIABLE($words) ) : T_STRING ( , T_VARIABLE($words) , - T_LNUMBER , T_STRING ) ; T_IF ( T_VARIABLE($match) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($keys) [ ] = T_STRING ( T_VARIABLE($keys) [ ] , T_VARIABLE($words) ) ; } T_ELSEIF ( T_VARIABLE($match) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($keys) [ ] ) ) { T_VARIABLE($last) = T_STRING ( T_VARIABLE($keys) [ ] ) ; T_IF ( ! T_STRING ( T_VARIABLE($last) ) ) { T_VARIABLE($last) = T_ARRAY ( T_VARIABLE($last) ) ; } T_VARIABLE($keys) [ ] [ ] = T_VARIABLE($last) ; T_VARIABLE($or) = T_STRING ; T_CONTINUE ; } T_ELSEIF ( T_VARIABLE($match) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($match) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($warning) = T_VARIABLE($match) [ T_LNUMBER ] ; T_CONTINUE ; } T_ELSE { T_IF ( T_VARIABLE($match) [ T_LNUMBER ] T_IS_EQUAL ) { T_VARIABLE($warning) = T_VARIABLE($match) [ T_LNUMBER ] ; } T_IF ( T_VARIABLE($or) ) { T_VARIABLE($keys) [ ] [ T_STRING ( T_VARIABLE($keys) [ ] ) - T_LNUMBER ] = T_STRING ( T_VARIABLE($keys) [ ] [ T_STRING ( T_VARIABLE($keys) [ ] ) - T_LNUMBER ] , T_VARIABLE($words) ) ; } T_ELSE { T_VARIABLE($keys) [ ] = T_STRING ( T_VARIABLE($keys) [ ] , T_VARIABLE($words) ) ; } } T_VARIABLE($or) = T_STRING ; } T_VARIABLE($query) = T_ARRAY ( ) ; T_VARIABLE($query2) = T_ARRAY ( ) ; T_VARIABLE($arguments) = T_ARRAY ( ) ; T_VARIABLE($arguments2) = T_ARRAY ( ) ; T_VARIABLE($matches) = T_LNUMBER ; T_VARIABLE($simple_and) = T_STRING ; T_VARIABLE($simple_or) = T_STRING ; T_FOREACH ( T_VARIABLE($keys) [ ] T_AS T_VARIABLE($key) ) { T_IF ( T_STRING ( T_VARIABLE($key) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($key) ) ) { T_VARIABLE($simple_or) = T_STRING ; T_VARIABLE($queryor) = T_ARRAY ( ) ; T_VARIABLE($any) = T_STRING ; T_FOREACH ( T_VARIABLE($key) T_AS T_VARIABLE($or) ) { T_LIST ( T_VARIABLE($q) , T_VARIABLE($num_new_scores) ) = T_STRING ( T_VARIABLE($or) , T_VARIABLE($arguments2) ) ; T_VARIABLE($any) T_OR_EQUAL T_VARIABLE($num_new_scores) ; T_IF ( T_VARIABLE($q) ) { T_VARIABLE($queryor) [ ] = T_VARIABLE($q) ; T_VARIABLE($arguments) [ ] = T_VARIABLE($or) ; } } T_IF ( T_STRING ( T_VARIABLE($queryor) ) ) { T_VARIABLE($query) [ ] = . T_STRING ( , T_VARIABLE($queryor) ) . ; T_VARIABLE($matches) T_PLUS_EQUAL ( T_VARIABLE($any) > T_LNUMBER ) ; } } T_ELSE { T_VARIABLE($simple_and) = T_STRING ; T_LIST ( T_VARIABLE($q) , T_VARIABLE($num_new_scores) , T_VARIABLE($num_valid_words) ) = T_STRING ( T_VARIABLE($key) , T_VARIABLE($arguments2) ) ; T_IF ( T_VARIABLE($q) ) { T_VARIABLE($query) [ ] = T_VARIABLE($q) ; T_VARIABLE($arguments) [ ] = T_VARIABLE($key) ; T_IF ( ! T_VARIABLE($num_valid_words) ) { T_VARIABLE($simple) = T_STRING ; } T_VARIABLE($matches) T_PLUS_EQUAL T_VARIABLE($num_new_scores) ; } } } T_IF ( T_VARIABLE($simple_and) T_BOOLEAN_AND T_VARIABLE($simple_or) ) { T_VARIABLE($simple) = T_STRING ; } T_FOREACH ( T_VARIABLE($keys) [ ] T_AS T_VARIABLE($key) ) { T_LIST ( T_VARIABLE($q) ) = T_STRING ( T_VARIABLE($key) , T_VARIABLE($arguments2) , T_STRING ) ; T_IF ( T_VARIABLE($q) ) { T_VARIABLE($query) [ ] = T_VARIABLE($q) ; T_VARIABLE($arguments) [ ] = T_VARIABLE($key) ; T_VARIABLE($simple) = T_STRING ; } } T_VARIABLE($query) = T_STRING ( , T_VARIABLE($query) ) ; T_VARIABLE($query2) = T_STRING ( T_STRING ( , T_STRING ( T_VARIABLE($arguments2) ) ) , T_LNUMBER , - T_LNUMBER ) ; T_RETURN T_ARRAY ( T_VARIABLE($query) , T_VARIABLE($arguments) , T_VARIABLE($query2) , T_VARIABLE($arguments2) , T_VARIABLE($matches) , T_VARIABLE($simple) , T_VARIABLE($warning) ) ; } T_FUNCTION(_search_parse_query) ( & T_VARIABLE($word) , & T_VARIABLE($scores) , T_VARIABLE($not) = T_STRING ) { T_VARIABLE($num_new_scores) = T_LNUMBER ; T_VARIABLE($num_valid_words) = T_LNUMBER ; T_IF ( ! T_VARIABLE($not) ) { T_VARIABLE($split) = T_STRING ( , T_VARIABLE($word) ) ; T_FOREACH ( T_VARIABLE($split) T_AS T_VARIABLE($s) ) { T_VARIABLE($num) = T_STRING ( T_VARIABLE($s) ) ; T_IF ( T_VARIABLE($num) T_BOOLEAN_OR T_STRING ( T_VARIABLE($s) ) T_IS_GREATER_OR_EQUAL T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($s) = T_VARIABLE($num) ? ( T_INT_CAST T_STRING ( T_VARIABLE($s) , ) ) : T_VARIABLE($s) ; T_IF ( ! T_ISSET ( T_VARIABLE($scores) [ T_VARIABLE($s) ] ) ) { T_VARIABLE($scores) [ T_VARIABLE($s) ] = T_VARIABLE($s) ; T_VARIABLE($num_new_scores) T_INC ; } T_VARIABLE($num_valid_words) T_INC ; } } } T_RETURN T_ARRAY ( . ( T_VARIABLE($not) ? : ) . , T_VARIABLE($num_new_scores) , T_VARIABLE($num_valid_words) ) ; } T_FUNCTION(do_search) ( T_VARIABLE($keywords) , T_VARIABLE($type) , T_VARIABLE($join1) = , T_VARIABLE($where1) = , T_VARIABLE($arguments1) = T_ARRAY ( ) , T_VARIABLE($columns2) = , T_VARIABLE($join2) = , T_VARIABLE($arguments2) = T_ARRAY ( ) , T_VARIABLE($sort_parameters) = ) { T_VARIABLE($query) = T_STRING ( T_VARIABLE($keywords) ) ; T_IF ( T_VARIABLE($query) [ T_LNUMBER ] T_IS_EQUAL ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) ) ) ) ; } T_IF ( T_VARIABLE($query) [ T_LNUMBER ] ) { T_IF ( T_VARIABLE($query) [ T_LNUMBER ] T_IS_EQUAL ) { T_STRING ( T_STRING ( ) ) ; } } T_IF ( T_VARIABLE($query) T_IS_IDENTICAL T_STRING T_BOOLEAN_OR T_VARIABLE($query) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($query) [ T_LNUMBER ] T_IS_EQUAL ) { T_RETURN T_ARRAY ( ) ; } T_VARIABLE($conditions) = T_VARIABLE($where1) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($query) [ T_NUM_STRING ] T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($arguments1) = T_STRING ( T_VARIABLE($arguments1) , T_VARIABLE($query) [ T_LNUMBER ] , T_ARRAY ( T_VARIABLE($type) ) ) ; T_VARIABLE($join) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($join1) ; T_IF ( ! T_VARIABLE($query) [ T_LNUMBER ] ) { T_VARIABLE($conditions) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($query) [ T_NUM_STRING ] T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($arguments1) = T_STRING ( T_VARIABLE($arguments1) , T_VARIABLE($query) [ T_LNUMBER ] ) ; T_VARIABLE($join) T_CONCAT_EQUAL ; } T_VARIABLE($select) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($join) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($conditions) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($arguments) = T_STRING ( T_VARIABLE($arguments1) , T_ARRAY ( T_VARIABLE($query) [ T_LNUMBER ] ) ) ; T_VARIABLE($normalize) = T_STRING ( T_STRING ( T_VARIABLE($select) , T_VARIABLE($arguments) , T_LNUMBER , T_LNUMBER ) ) ; T_IF ( ! T_VARIABLE($normalize) ) { T_RETURN T_ARRAY ( ) ; } T_VARIABLE($columns2) = T_STRING ( , . ( T_DNUMBER / T_VARIABLE($normalize) ) . , T_VARIABLE($columns2) ) ; T_VARIABLE($select) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($columns2) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($join) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($join2) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($conditions) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($count_select) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($select) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($arguments) = T_STRING ( T_VARIABLE($arguments2) , T_VARIABLE($arguments1) , T_ARRAY ( T_VARIABLE($query) [ T_LNUMBER ] ) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($select) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($sort_parameters) , T_LNUMBER , T_LNUMBER , T_VARIABLE($count_select) , T_VARIABLE($arguments) ) ; T_VARIABLE($results) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($results) [ ] = T_VARIABLE($item) ; } T_RETURN T_VARIABLE($results) ; } T_FUNCTION(search_get_keys) ( ) { T_STATIC T_VARIABLE($return) ; T_IF ( ! T_ISSET ( T_VARIABLE($return) ) ) { T_VARIABLE($path) = T_STRING ( , T_VARIABLE($_GET) [ ] , T_LNUMBER ) ; T_VARIABLE($keys) = T_EMPTY ( T_VARIABLE($_REQUEST) [ ] ) ? : T_VARIABLE($_REQUEST) [ ] ; T_VARIABLE($return) = T_STRING ( T_VARIABLE($path) ) T_IS_EQUAL T_LNUMBER ? T_VARIABLE($path) [ T_LNUMBER ] : T_VARIABLE($keys) ; } T_RETURN T_VARIABLE($return) ; } T_FUNCTION(search_form) ( & T_VARIABLE($form_state) , T_VARIABLE($action) = , T_VARIABLE($keys) = , T_VARIABLE($type) = T_STRING , T_VARIABLE($prompt) = T_STRING ) { T_STRING ( T_STRING ( , ) . , , , T_STRING ) ; T_IF ( ! T_VARIABLE($action) ) { T_VARIABLE($action) = T_STRING ( . T_VARIABLE($type) ) ; } T_IF ( T_STRING ( T_VARIABLE($prompt) ) ) { T_VARIABLE($prompt) = T_STRING ( ) ; } T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($action) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($type) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($prompt) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($keys) , T_DOUBLE_ARROW T_VARIABLE($prompt) ? T_LNUMBER : T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(search_box) ( & T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_VARIABLE($form) [ T_VARIABLE($form_id) ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(search_box_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_id) = T_VARIABLE($form) [ ] [ ] ; T_VARIABLE($form_state) [ ] = . T_STRING ( T_VARIABLE($form_state) [ ] [ T_VARIABLE($form_id) ] ) ; } T_FUNCTION(template_preprocess_search_theme_form) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; T_VARIABLE($hidden) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($variables) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($type) = T_VARIABLE($variables) [ ] [ T_VARIABLE($key) ] [ ] ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($hidden) [ ] = T_STRING ( T_VARIABLE($variables) [ ] [ T_VARIABLE($key) ] ) ; } T_ELSE { T_VARIABLE($variables) [ ] [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($variables) [ ] [ T_VARIABLE($key) ] ) ; } } T_VARIABLE($variables) [ ] [ ] = T_STRING ( T_VARIABLE($hidden) ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] ) ; } T_FUNCTION(template_preprocess_search_block_form) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; T_VARIABLE($hidden) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($variables) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($type) = T_VARIABLE($variables) [ ] [ T_VARIABLE($key) ] [ ] ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($hidden) [ ] = T_STRING ( T_VARIABLE($variables) [ ] [ T_VARIABLE($key) ] ) ; } T_ELSE { T_VARIABLE($variables) [ ] [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($variables) [ ] [ T_VARIABLE($key) ] ) ; } } T_VARIABLE($variables) [ ] [ ] = T_STRING ( T_VARIABLE($hidden) ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] ) ; } T_FUNCTION(search_data) ( T_VARIABLE($keys) = T_STRING , T_VARIABLE($type) = ) { T_IF ( T_ISSET ( T_VARIABLE($keys) ) ) { T_IF ( T_STRING ( T_VARIABLE($type) , ) ) { T_VARIABLE($results) = T_STRING ( T_VARIABLE($type) , , , T_VARIABLE($keys) ) ; T_IF ( T_ISSET ( T_VARIABLE($results) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($results) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($results) ) ) { T_IF ( T_STRING ( T_VARIABLE($type) , ) ) { T_RETURN T_STRING ( T_VARIABLE($type) , , T_VARIABLE($results) ) ; } T_ELSE { T_RETURN T_STRING ( , T_VARIABLE($results) , T_VARIABLE($type) ) ; } } } } } T_FUNCTION(search_excerpt) ( T_VARIABLE($keys) , T_VARIABLE($text) ) { T_VARIABLE($boundary) = . T_STRING . T_STRING . . T_STRING . T_STRING . ; T_STRING ( , . T_VARIABLE($keys) , T_VARIABLE($matches) ) ; T_VARIABLE($keys) = T_STRING ( T_VARIABLE($matches) [ T_LNUMBER ] , T_VARIABLE($matches) [ T_LNUMBER ] ) ; T_VARIABLE($text) = . T_STRING ( T_STRING ( T_ARRAY ( , ) , T_ARRAY ( , ) , T_VARIABLE($text) ) ) . ; T_STRING ( T_VARIABLE($keys) , ) ; T_VARIABLE($workkeys) = T_VARIABLE($keys) ; T_VARIABLE($ranges) = T_ARRAY ( ) ; T_VARIABLE($included) = T_ARRAY ( ) ; T_VARIABLE($length) = T_LNUMBER ; T_WHILE ( T_VARIABLE($length) < T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($workkeys) ) ) { T_FOREACH ( T_VARIABLE($workkeys) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($key) ) { T_IF ( T_STRING ( T_VARIABLE($key) ) T_IS_EQUAL T_LNUMBER ) { T_UNSET ( T_VARIABLE($workkeys) [ T_VARIABLE($k) ] ) ; T_UNSET ( T_VARIABLE($keys) [ T_VARIABLE($k) ] ) ; T_CONTINUE ; } T_IF ( T_VARIABLE($length) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_BREAK ; } T_IF ( ! T_ISSET ( T_VARIABLE($included) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($included) [ T_VARIABLE($key) ] = T_LNUMBER ; } T_IF ( T_STRING ( . T_VARIABLE($boundary) . T_VARIABLE($key) . T_VARIABLE($boundary) . , T_VARIABLE($text) , T_VARIABLE($match) , T_STRING , T_VARIABLE($included) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($p) = T_VARIABLE($match) [ T_LNUMBER ] [ T_LNUMBER ] ; T_IF ( ( T_VARIABLE($q) = T_STRING ( T_VARIABLE($text) , , T_STRING ( T_LNUMBER , T_VARIABLE($p) - T_LNUMBER ) ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($end) = T_STRING ( T_VARIABLE($text) , T_VARIABLE($p) , T_LNUMBER ) ; T_IF ( ( T_VARIABLE($s) = T_STRING ( T_VARIABLE($end) , ) ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($ranges) [ T_VARIABLE($q) ] = T_VARIABLE($p) + T_VARIABLE($s) ; T_VARIABLE($length) T_PLUS_EQUAL T_VARIABLE($p) + T_VARIABLE($s) - T_VARIABLE($q) ; T_VARIABLE($included) [ T_VARIABLE($key) ] = T_VARIABLE($p) + T_LNUMBER ; } T_ELSE { T_UNSET ( T_VARIABLE($workkeys) [ T_VARIABLE($k) ] ) ; } } T_ELSE { T_UNSET ( T_VARIABLE($workkeys) [ T_VARIABLE($k) ] ) ; } } T_ELSE { T_UNSET ( T_VARIABLE($workkeys) [ T_VARIABLE($k) ] ) ; } } } T_IF ( T_STRING ( T_VARIABLE($ranges) ) T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ( T_VARIABLE($text) , T_LNUMBER ) . ; } T_STRING ( T_VARIABLE($ranges) ) ; T_VARIABLE($newranges) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($ranges) T_AS T_VARIABLE($from2) T_DOUBLE_ARROW T_VARIABLE($to2) ) { T_IF ( ! T_ISSET ( T_VARIABLE($from1) ) ) { T_VARIABLE($from1) = T_VARIABLE($from2) ; T_VARIABLE($to1) = T_VARIABLE($to2) ; T_CONTINUE ; } T_IF ( T_VARIABLE($from2) T_IS_SMALLER_OR_EQUAL T_VARIABLE($to1) ) { T_VARIABLE($to1) = T_STRING ( T_VARIABLE($to1) , T_VARIABLE($to2) ) ; } T_ELSE { T_VARIABLE($newranges) [ T_VARIABLE($from1) ] = T_VARIABLE($to1) ; T_VARIABLE($from1) = T_VARIABLE($from2) ; T_VARIABLE($to1) = T_VARIABLE($to2) ; } } T_VARIABLE($newranges) [ T_VARIABLE($from1) ] = T_VARIABLE($to1) ; T_VARIABLE($out) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($newranges) T_AS T_VARIABLE($from) T_DOUBLE_ARROW T_VARIABLE($to) ) { T_VARIABLE($out) [ ] = T_STRING ( T_VARIABLE($text) , T_VARIABLE($from) , T_VARIABLE($to) - T_VARIABLE($from) ) ; } T_VARIABLE($text) = ( T_ISSET ( T_VARIABLE($newranges) [ T_LNUMBER ] ) ? : ) . T_STRING ( , T_VARIABLE($out) ) . ; T_VARIABLE($text) = T_STRING ( . T_VARIABLE($boundary) . . T_STRING ( , T_VARIABLE($keys) ) . . T_VARIABLE($boundary) . , , T_VARIABLE($text) ) ; T_RETURN T_VARIABLE($text) ; } T_FUNCTION(_search_excerpt_replace) ( & T_VARIABLE($text) ) { T_VARIABLE($text) = T_STRING ( T_VARIABLE($text) , ) ; } T_FUNCTION(search_forms) ( ) { T_VARIABLE($forms) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($forms) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_RETURN T_VARIABLE($forms) ; }",13,1
"T_OPEN_TAG T_FUNCTION(search_view) ( T_VARIABLE($type) = ) { T_IF ( ! T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_STRING ( ) ; } T_VARIABLE($keys) = T_STRING ( ) ; T_VARIABLE($results) = ; T_IF ( T_STRING ( T_VARIABLE($keys) ) ) { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($keys) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($type) , , ) ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($type) . . T_VARIABLE($keys) ) ) ; T_VARIABLE($results) = T_STRING ( T_VARIABLE($keys) , T_VARIABLE($type) ) ; T_IF ( T_VARIABLE($results) ) { T_VARIABLE($results) = T_STRING ( , T_STRING ( ) , T_VARIABLE($results) ) ; } T_ELSE { T_VARIABLE($results) = T_STRING ( , T_STRING ( ) , T_STRING ( , T_STRING ( ) ) ) ; } } T_VARIABLE($output) = T_STRING ( , T_STRING , T_VARIABLE($keys) , T_VARIABLE($type) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($results) ; T_RETURN T_VARIABLE($output) ; } T_RETURN T_STRING ( , T_STRING , T_EMPTY ( T_VARIABLE($keys) ) ? : T_VARIABLE($keys) , T_VARIABLE($type) ) ; } T_FUNCTION(template_preprocess_search_results) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = ; T_FOREACH ( T_VARIABLE($variables) [ ] T_AS T_VARIABLE($result) ) { T_VARIABLE($variables) [ ] T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($result) , T_VARIABLE($variables) [ ] ) ; } T_VARIABLE($variables) [ ] = T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] ; } T_FUNCTION(template_preprocess_search_result) ( & T_VARIABLE($variables) ) { T_VARIABLE($result) = T_VARIABLE($variables) [ ] ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($result) [ ] ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($result) [ ] ) ; T_VARIABLE($info) = T_ARRAY ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($info) [ ] = T_STRING ( T_VARIABLE($result) [ ] ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($info) [ ] = T_VARIABLE($result) [ ] ; } T_IF ( ! T_EMPTY ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($info) [ ] = T_STRING ( T_VARIABLE($result) [ ] , ) ; } T_IF ( T_ISSET ( T_VARIABLE($result) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($result) [ ] ) ) { T_VARIABLE($info) = T_STRING ( T_VARIABLE($info) , T_VARIABLE($result) [ ] ) ; } T_VARIABLE($variables) [ ] = T_ISSET ( T_VARIABLE($result) [ ] ) ? T_VARIABLE($result) [ ] : ; T_VARIABLE($variables) [ ] = T_VARIABLE($info) ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($info) ) ; T_VARIABLE($variables) [ ] [ ] = . T_VARIABLE($variables) [ ] ; } T_FUNCTION(search_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form) [ ] [ ] [ ] , T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) , T_VARIABLE($form_state) ) ; } T_FUNCTION(search_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($keys) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( T_VARIABLE($keys) T_IS_EQUAL ) { T_STRING ( , T_STRING ( ) ) ; } T_VARIABLE($type) = T_VARIABLE($form_state) [ ] [ ] ? T_VARIABLE($form_state) [ ] [ ] : ; T_VARIABLE($form_state) [ ] = . T_VARIABLE($type) . . T_VARIABLE($keys) ; T_RETURN ; }",8,0
"T_OPEN_TAG T_FUNCTION(statistics_recent_hits) ( ) { T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($sql) = . T_STRING ( T_VARIABLE($header) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($log) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING , ) , T_DOUBLE_ARROW ) , T_STRING ( T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( , T_VARIABLE($log) ) , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING ) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(statistics_top_pages) ( ) { T_VARIABLE($sql) = ; T_VARIABLE($sql_cnt) = ; T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($header) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_LNUMBER , T_VARIABLE($sql_cnt) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($page) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($page) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($page) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($page) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($page) T_OBJECT_OPERATOR T_STRING ) ) ) , T_STRING ( T_STRING ( T_VARIABLE($page) T_OBJECT_OPERATOR T_STRING / T_LNUMBER ) ) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( , T_LNUMBER ) ) ) ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(statistics_top_visitors) ( ) { T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($sql) = . T_STRING ( T_VARIABLE($header) ) ; T_VARIABLE($sql_cnt) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_LNUMBER , T_VARIABLE($sql_cnt) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($account) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($qs) = T_STRING ( ) ; T_VARIABLE($ban_link) = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ? T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($qs) ) ) : T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($qs) ) ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ? T_STRING ( , T_VARIABLE($account) ) : T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING / T_LNUMBER ) ) , T_VARIABLE($ban_link) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( , T_LNUMBER ) ) ) ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(statistics_top_referrers) ( ) { T_VARIABLE($query) = ; T_VARIABLE($query_cnt) = ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( , T_LNUMBER ) ) ) ) ) ; T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , ) ; T_VARIABLE($query) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($header) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) , T_LNUMBER , T_LNUMBER , T_VARIABLE($query_cnt) , T_VARIABLE($_SERVER) [ ] ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($referrer) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($referrer) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($referrer) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($referrer) T_OBJECT_OPERATOR T_STRING ) ) ) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(statistics_access_log) ( T_VARIABLE($aid) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($aid) ) ; T_IF ( T_VARIABLE($access) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( T_STRING ( T_VARIABLE($access) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_VARIABLE($access) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_VARIABLE($access) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , ( T_VARIABLE($access) T_OBJECT_OPERATOR T_STRING ? T_STRING ( T_VARIABLE($access) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($access) T_OBJECT_OPERATOR T_STRING ) : ) ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( T_VARIABLE($access) T_OBJECT_OPERATOR T_STRING , ) ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( , T_VARIABLE($access) ) ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) , T_STRING ( T_VARIABLE($access) T_OBJECT_OPERATOR T_STRING ) ) ; T_RETURN T_STRING ( , T_ARRAY ( ) , T_VARIABLE($rows) ) ; } T_ELSE { T_STRING ( ) ; } } T_FUNCTION(statistics_access_logging_settings) ( ) { T_VARIABLE($options) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($period) = T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($period) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; }",7,0
"T_OPEN_TAG T_FUNCTION(statistics_install) ( ) { T_STRING ( ) ; } T_FUNCTION(statistics_update_1000) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE : T_CASE : T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($ret) , , , , , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; T_BREAK ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(statistics_uninstall) ( ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(statistics_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_RETURN T_VARIABLE($schema) ; }",3,0
"T_OPEN_TAG T_FUNCTION(statistics_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; } } T_FUNCTION(statistics_exit) ( ) { T_GLOBAL T_VARIABLE($user) , T_VARIABLE($recent_activity) ; T_STRING ( T_STRING ) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_IF ( ( T_STRING ( T_LNUMBER ) T_IS_EQUAL ) T_BOOLEAN_AND T_STRING ( T_STRING ( T_LNUMBER ) ) T_BOOLEAN_AND T_STRING ( T_LNUMBER ) T_IS_EQUAL ) { T_STRING ( , T_STRING ( ) , T_STRING ( T_LNUMBER ) ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_STRING ( T_LNUMBER ) , T_STRING ( ) ) ; } } } T_IF ( ( T_STRING ( , T_LNUMBER ) ) T_BOOLEAN_AND ( T_STRING ( , ) T_IS_EQUAL T_LNUMBER ) ) { T_STRING ( , T_STRING ( T_STRING ( ) ) , T_VARIABLE($_GET) [ ] , T_STRING ( ) , T_STRING ( ) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } } T_FUNCTION(statistics_perm) ( ) { T_RETURN T_ARRAY ( , ) ; } T_FUNCTION(statistics_link) ( T_VARIABLE($type) , T_VARIABLE($node) = T_STRING , T_VARIABLE($teaser) = T_STRING ) { T_GLOBAL T_VARIABLE($id) ; T_VARIABLE($links) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($type) T_IS_NOT_EQUAL T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($statistics) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($statistics) ) { T_VARIABLE($links) [ ] [ ] = T_STRING ( T_VARIABLE($statistics) [ ] , , ) ; } } T_RETURN T_VARIABLE($links) ; } T_FUNCTION(statistics_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(statistics_user) ( T_VARIABLE($op) , & T_VARIABLE($edit) , & T_VARIABLE($user) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(statistics_cron) ( ) { T_VARIABLE($statistics_timestamp) = T_STRING ( , ) ; T_IF ( ( T_STRING ( ) - T_VARIABLE($statistics_timestamp) ) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_STRING ( ) ; T_STRING ( , T_STRING ( ) ) ; } T_STRING ( , T_STRING ( ) - T_STRING ( , T_LNUMBER ) ) ; } T_FUNCTION(statistics_title_list) ( T_VARIABLE($dbfield) , T_VARIABLE($dbrows) ) { T_IF ( T_STRING ( T_VARIABLE($dbfield) , T_ARRAY ( , , ) ) ) { T_RETURN T_STRING ( T_STRING ( . T_VARIABLE($dbfield) . . T_VARIABLE($dbfield) . ) , T_LNUMBER , T_VARIABLE($dbrows) ) ; } T_RETURN T_STRING ; } T_FUNCTION(statistics_get) ( T_VARIABLE($nid) ) { T_IF ( T_VARIABLE($nid) > T_LNUMBER ) { T_VARIABLE($statistics) = T_STRING ( T_STRING ( , T_VARIABLE($nid) ) ) ; } T_RETURN T_VARIABLE($statistics) ; } T_FUNCTION(statistics_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ; T_RETURN T_VARIABLE($blocks) ; } T_BREAK ; T_CASE : T_VARIABLE($numbers) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) + T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($numbers) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($numbers) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($numbers) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; T_CASE : T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_BREAK ; T_CASE : T_IF ( T_STRING ( ) ) { T_VARIABLE($content) = T_ARRAY ( ) ; T_VARIABLE($daytop) = T_STRING ( , T_LNUMBER ) ; T_IF ( T_VARIABLE($daytop) T_BOOLEAN_AND ( T_VARIABLE($result) = T_STRING ( , T_VARIABLE($daytop) ) ) T_BOOLEAN_AND ( T_VARIABLE($node_title_list) = T_STRING ( T_VARIABLE($result) , T_STRING ( ) ) ) ) { T_VARIABLE($content) [ ] = T_VARIABLE($node_title_list) ; } T_VARIABLE($alltimetop) = T_STRING ( , T_LNUMBER ) ; T_IF ( T_VARIABLE($alltimetop) T_BOOLEAN_AND ( T_VARIABLE($result) = T_STRING ( , T_VARIABLE($alltimetop) ) ) T_BOOLEAN_AND ( T_VARIABLE($node_title_list) = T_STRING ( T_VARIABLE($result) , T_STRING ( ) ) ) ) { T_VARIABLE($content) [ ] = T_VARIABLE($node_title_list) ; } T_VARIABLE($lasttop) = T_STRING ( , T_LNUMBER ) ; T_IF ( T_VARIABLE($lasttop) T_BOOLEAN_AND ( T_VARIABLE($result) = T_STRING ( , T_VARIABLE($lasttop) ) ) T_BOOLEAN_AND ( T_VARIABLE($node_title_list) = T_STRING ( T_VARIABLE($result) , T_STRING ( ) ) ) ) { T_VARIABLE($content) [ ] = T_VARIABLE($node_title_list) ; } T_IF ( T_STRING ( T_VARIABLE($content) ) ) { T_VARIABLE($block) [ ] = T_STRING ( , T_VARIABLE($content) ) ; T_VARIABLE($block) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($block) ; } } } } T_FUNCTION(_statistics_link) ( T_VARIABLE($path) , T_VARIABLE($width) = T_LNUMBER ) { T_VARIABLE($title) = T_STRING ( T_VARIABLE($path) ) ; T_VARIABLE($title) = T_STRING ( T_VARIABLE($title) , T_VARIABLE($width) , T_STRING , T_STRING ) ; T_RETURN T_STRING ( T_VARIABLE($title) , T_VARIABLE($path) ) ; } T_FUNCTION(_statistics_format_item) ( T_VARIABLE($title) , T_VARIABLE($path) ) { T_VARIABLE($path) = ( T_VARIABLE($path) ? T_VARIABLE($path) : ) ; T_VARIABLE($output) = ( T_VARIABLE($title) ? T_VARIABLE($title) T_ENCAPSED_AND_WHITESPACE : ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($path) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(statistics_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($arg) = T_LNUMBER ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } }",13,0
"T_OPEN_TAG T_FUNCTION(statistics_node_tracker) ( ) { T_IF ( T_VARIABLE($node) = T_STRING ( T_STRING ( T_LNUMBER ) ) ) { T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING ( T_VARIABLE($header) ) , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($log) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING , ) , T_DOUBLE_ARROW ) , T_STRING ( T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( , T_VARIABLE($log) ) , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING ) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_ELSE { T_STRING ( ) ; } } T_FUNCTION(statistics_user_tracker) ( ) { T_IF ( T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_LNUMBER ) ) ) ) { T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING ( T_VARIABLE($header) ) , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($log) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING , ) , T_DOUBLE_ARROW ) , T_STRING ( T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($log) T_OBJECT_OPERATOR T_STRING ) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_STRING ( T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_RETURN T_VARIABLE($output) ; } T_ELSE { T_STRING ( ) ; } }",3,0
"T_OPEN_TAG T_IF ( T_STRING ( ) ) { T_STRING ( , T_STRING ) ; } T_ELSE { T_STRING ( , T_STRING ) ; } T_FUNCTION(syslog_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(syslog_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(syslog_admin_settings) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ) ) , ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(syslog_facility_list) ( ) { T_VARIABLE($facility_list) = T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($facility_list) T_PLUS_EQUAL T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_RETURN T_VARIABLE($facility_list) ; } T_FUNCTION(syslog_watchdog) ( T_VARIABLE($entry) ) { T_STATIC T_VARIABLE($log_init) = T_STRING ; T_IF ( ! T_VARIABLE($log_init) ) { T_VARIABLE($log_init) = T_STRING ; T_STRING ( , T_STRING , T_STRING ( , T_STRING ) ) ; } T_STRING ( T_VARIABLE($entry) [ ] , T_STRING ( , T_VARIABLE($entry) ) ) ; } T_FUNCTION(syslog_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(theme_syslog_format) ( T_VARIABLE($entry) ) { T_GLOBAL T_VARIABLE($base_url) ; T_VARIABLE($message) = T_VARIABLE($base_url) ; T_VARIABLE($message) T_CONCAT_EQUAL . T_VARIABLE($entry) [ ] ; T_VARIABLE($message) T_CONCAT_EQUAL . T_VARIABLE($entry) [ ] ; T_VARIABLE($message) T_CONCAT_EQUAL . T_VARIABLE($entry) [ ] ; T_VARIABLE($message) T_CONCAT_EQUAL . T_VARIABLE($entry) [ ] ; T_VARIABLE($message) T_CONCAT_EQUAL . T_VARIABLE($entry) [ ] ; T_VARIABLE($message) T_CONCAT_EQUAL . T_VARIABLE($entry) [ ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($entry) [ ] ) ; T_VARIABLE($message) T_CONCAT_EQUAL . T_STRING ( T_STRING ( T_VARIABLE($entry) [ ] ) ? T_VARIABLE($entry) [ ] : T_STRING ( T_VARIABLE($entry) [ ] , T_VARIABLE($entry) [ ] ) ) ; T_RETURN T_VARIABLE($message) ; }",5,1
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($title) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head_title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($styles) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($scripts) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($body_classes) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($logo) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($base_path) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($logo) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($site_name) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($base_path) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($site_name) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($site_slogan) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($site_slogan) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($header) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($header) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($left) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($title) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($messages) ) ) : T_PRINT T_VARIABLE($messages) ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($right) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($footer_message) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($footer) ) ) : T_PRINT T_VARIABLE($footer) ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML",0,1
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head_title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($styles) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($scripts) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($body_classes) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($logo) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($front_page) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($logo) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($site_name) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($front_page) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($site_name) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($site_slogan) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($site_slogan) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($search_box) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($search_box) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($header) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($header) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($primary_links) ) ) { T_PRINT ; } T_IF ( ! T_EMPTY ( T_VARIABLE($secondary_links) ) ) { T_PRINT ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($primary_links) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($primary_links) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($secondary_links) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($secondary_links) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($left) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($left) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($breadcrumb) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($breadcrumb) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($mission) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($mission) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($title) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($tabs) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($tabs) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($messages) ) ) : T_PRINT T_VARIABLE($messages) ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($help) ) ) : T_PRINT T_VARIABLE($help) ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($feed_icons) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($right) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($right) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($footer_message) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($footer) ) ) : T_PRINT T_VARIABLE($footer) ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($closure) ; T_CLOSE_TAG T_INLINE_HTML",3,1
"T_OPEN_TAG T_FUNCTION(system_main_admin_page) ( T_VARIABLE($arg) = T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($arg) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($arg) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_EQUAL ) { T_RETURN T_STRING ( ) ; } T_IF ( T_STRING ( T_STRING ) T_BOOLEAN_AND T_STRING ( ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; } T_VARIABLE($blocks) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($admin) = T_STRING ( T_STRING ( ) ) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($admin) ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($item) ) ; T_IF ( ! T_VARIABLE($item) [ ] ) { T_CONTINUE ; } T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] [ ] [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] [ ] [ ] ; } T_VARIABLE($block) = T_VARIABLE($item) ; T_VARIABLE($block) [ ] = ; T_IF ( T_VARIABLE($item) [ ] T_BOOLEAN_AND T_STRING ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($function) = T_VARIABLE($item) [ ] ; T_VARIABLE($block) [ ] T_CONCAT_EQUAL T_VARIABLE($function) ( ) ; } T_VARIABLE($block) [ ] T_CONCAT_EQUAL T_STRING ( , T_STRING ( T_VARIABLE($item) ) ) ; T_VARIABLE($blocks) [ ( T_LNUMBER + T_VARIABLE($item) [ ] ) . . T_VARIABLE($item) [ ] . . T_VARIABLE($item) [ ] ] = T_VARIABLE($block) ; } } T_IF ( T_VARIABLE($blocks) ) { T_STRING ( T_VARIABLE($blocks) ) ; T_RETURN T_STRING ( , T_VARIABLE($blocks) ) ; } T_ELSE { T_RETURN T_STRING ( ) ; } } T_FUNCTION(system_admin_menu_block_page) ( ) { T_VARIABLE($item) = T_STRING ( ) ; T_IF ( T_VARIABLE($content) = T_STRING ( T_VARIABLE($item) ) ) { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($content) ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(system_admin_compact_page) ( T_VARIABLE($mode) = ) { T_GLOBAL T_VARIABLE($user) ; T_STRING ( T_VARIABLE($user) , T_ARRAY ( T_DOUBLE_ARROW ( T_VARIABLE($mode) T_IS_EQUAL ) ) ) ; T_STRING ( ) ; } T_FUNCTION(system_admin_by_module) ( ) { T_VARIABLE($modules) = T_STRING ( ) ; T_VARIABLE($menu_items) = T_ARRAY ( ) ; T_VARIABLE($help_arg) = T_STRING ( ) ? T_STRING ( ) : T_STRING ; T_FOREACH ( T_VARIABLE($modules) T_AS T_VARIABLE($file) ) { T_VARIABLE($module) = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($module) T_IS_EQUAL ) { T_CONTINUE ; } T_VARIABLE($admin_tasks) = T_STRING ( T_VARIABLE($module) ) ; T_IF ( T_STRING ( T_VARIABLE($admin_tasks) ) ) { T_IF ( T_VARIABLE($help_arg) T_BOOLEAN_AND T_STRING ( T_VARIABLE($module) , , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($module) , T_VARIABLE($help_arg) ) ) { T_VARIABLE($admin_tasks) [ T_LNUMBER ] = T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($module) ) ; } T_STRING ( T_VARIABLE($admin_tasks) ) ; T_VARIABLE($menu_items) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ] = T_ARRAY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] , T_VARIABLE($admin_tasks) ) ; } } T_RETURN T_STRING ( , T_VARIABLE($menu_items) ) ; } T_FUNCTION(system_settings_overview) ( ) { T_IF ( T_STRING ( ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($_POST) ) ) { T_STRING ( ) ; } T_VARIABLE($item) = T_STRING ( ) ; T_VARIABLE($content) = T_STRING ( T_VARIABLE($item) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($content) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(system_admin_theme_settings) ( ) { T_VARIABLE($themes) = T_STRING ( ) ; T_STRING ( T_VARIABLE($themes) , ) ; T_VARIABLE($options) [ T_LNUMBER ] = . T_STRING ( ) . ; T_FOREACH ( T_VARIABLE($themes) T_AS T_VARIABLE($theme) ) { T_VARIABLE($options) [ T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , ) ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(system_themes_form) ( ) { T_STRING ( ) ; T_VARIABLE($themes) = T_STRING ( ) ; T_STRING ( T_VARIABLE($themes) , ) ; T_VARIABLE($status) = T_ARRAY ( ) ; T_VARIABLE($incompatible_core) = T_ARRAY ( ) ; T_VARIABLE($incompatible_php) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($themes) T_AS T_VARIABLE($theme) ) { T_VARIABLE($screenshot) = T_STRING ; T_VARIABLE($theme_key) = T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ; T_WHILE ( T_VARIABLE($theme_key) ) { T_IF ( T_STRING ( T_VARIABLE($themes) [ T_VARIABLE($theme_key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($screenshot) = T_VARIABLE($themes) [ T_VARIABLE($theme_key) ] T_OBJECT_OPERATOR T_STRING [ ] ; T_BREAK ; } T_VARIABLE($theme_key) = T_ISSET ( T_VARIABLE($themes) [ T_VARIABLE($theme_key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ? T_VARIABLE($themes) [ T_VARIABLE($theme_key) ] T_OBJECT_OPERATOR T_STRING [ ] : T_STRING ; } T_VARIABLE($screenshot) = T_VARIABLE($screenshot) ? T_STRING ( , T_VARIABLE($screenshot) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] ) ) , , T_ARRAY ( T_DOUBLE_ARROW ) , T_STRING ) : T_STRING ( ) ; T_VARIABLE($form) [ T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($screenshot) ) ; T_VARIABLE($form) [ T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($options) [ T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ] = ; T_IF ( ! T_EMPTY ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ( , ) ) { T_VARIABLE($form) [ T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , . T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) ; } T_ELSE { T_VARIABLE($form) [ T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($status) [ ] = T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_IF ( ! T_ISSET ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_OR T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($incompatible_core) [ ] = T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_STRING ( T_STRING ( ) , T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] ) < T_LNUMBER ) { T_VARIABLE($incompatible_php) [ T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] ; } } } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_VARIABLE($status) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($incompatible_core) ) , T_DOUBLE_ARROW T_VARIABLE($incompatible_php) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_STRING ( , ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_themes_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($old_theme_list) = T_VARIABLE($new_theme_list) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($theme) ) { T_IF ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($old_theme_list) [ ] = T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ; } } T_STRING ( ) ; T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_IF ( T_VARIABLE($choice) T_BOOLEAN_OR T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_VARIABLE($key) ) { T_STRING ( T_VARIABLE($key) ) ; T_VARIABLE($new_theme_list) [ ] = T_VARIABLE($key) ; T_STRING ( , T_VARIABLE($key) ) ; } } } T_IF ( ( T_VARIABLE($admin_theme) = T_STRING ( , ) ) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($admin_theme) T_IS_NOT_EQUAL T_VARIABLE($form_state) [ ] [ ] ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($admin_theme) , T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] , ) ) ) ; } T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; } T_ELSE { T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($new_theme_list) = T_ARRAY ( ) ; } T_STRING ( T_STRING ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; T_STRING ( , , T_STRING ( T_VARIABLE($new_theme_list) , T_VARIABLE($old_theme_list) ) ) ; T_RETURN ; } T_FUNCTION(system_theme_settings) ( & T_VARIABLE($form_state) , T_VARIABLE($key) = ) { T_VARIABLE($directory_path) = T_STRING ( ) ; T_STRING ( T_VARIABLE($directory_path) , T_STRING , ) ; T_IF ( T_VARIABLE($key) ) { T_VARIABLE($settings) = T_STRING ( T_VARIABLE($key) ) ; T_VARIABLE($var) = T_STRING ( , , . T_VARIABLE($key) . ) ; T_VARIABLE($themes) = T_STRING ( ) ; T_VARIABLE($features) = T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] ; } T_ELSE { T_VARIABLE($settings) = T_STRING ( ) ; T_VARIABLE($var) = ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($var) ) ; T_IF ( T_VARIABLE($file) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) ) ) { T_VARIABLE($parts) = T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($filename) = ( T_VARIABLE($key) ) ? T_STRING ( , , T_VARIABLE($key) ) . . T_VARIABLE($parts) [ ] : . T_VARIABLE($parts) [ ] ; T_IF ( T_STRING ( T_VARIABLE($file) , T_VARIABLE($filename) , T_STRING ) ) { T_VARIABLE($_POST) [ ] = T_LNUMBER ; T_VARIABLE($_POST) [ ] = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($_POST) [ ] = T_LNUMBER ; } } T_IF ( T_VARIABLE($file) = T_STRING ( ) ) { T_VARIABLE($parts) = T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($filename) = ( T_VARIABLE($key) ) ? T_STRING ( , , T_VARIABLE($key) ) . . T_VARIABLE($parts) [ ] : . T_VARIABLE($parts) [ ] ; T_IF ( T_STRING ( T_VARIABLE($file) , T_VARIABLE($filename) ) ) { T_VARIABLE($_POST) [ ] = T_LNUMBER ; T_VARIABLE($_POST) [ ] = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($_POST) [ ] = T_LNUMBER ; } } T_VARIABLE($toggles) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($disabled) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($disabled) [ ] = T_STRING ; T_VARIABLE($disabled) [ ] = T_STRING ; } T_IF ( ! T_STRING ( ) ) { T_VARIABLE($disabled) [ ] = T_STRING ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_FOREACH ( T_VARIABLE($toggles) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($title) ) { T_IF ( ( ! T_VARIABLE($key) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($name) , T_VARIABLE($features) ) ) { T_VARIABLE($form) [ ] [ . T_VARIABLE($name) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($title) , T_DOUBLE_ARROW T_VARIABLE($settings) [ . T_VARIABLE($name) ] ) ; T_IF ( T_ISSET ( T_VARIABLE($disabled) [ . T_VARIABLE($name) ] ) ) { T_VARIABLE($form) [ ] [ . T_VARIABLE($name) ] [ ] = T_STRING ; } } } T_IF ( ! T_VARIABLE($key) ) { T_VARIABLE($form) [ ] T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($node_types) = T_STRING ( ) ; T_IF ( T_VARIABLE($node_types) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_FOREACH ( T_VARIABLE($node_types) T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($form) [ ] [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($type) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($name) ) , T_DOUBLE_ARROW T_VARIABLE($settings) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($type) ] ) ; } } } T_ELSEIF ( ! T_STRING ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($form) [ ] [ ] = T_STRING ; } T_IF ( ( ! T_VARIABLE($key) ) T_BOOLEAN_OR T_STRING ( , T_VARIABLE($features) ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($settings) [ ] , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($settings) [ ] , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_IF ( ( ! T_VARIABLE($key) ) T_BOOLEAN_OR T_STRING ( , T_VARIABLE($features) ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($settings) [ ] , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($settings) [ ] , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_IF ( T_VARIABLE($key) ) { T_VARIABLE($filename) = . T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE , , T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING ) . ; T_IF ( ! T_STRING ( T_VARIABLE($filename) ) T_LOGICAL_AND ! T_EMPTY ( T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($base) = T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] ; T_VARIABLE($filename) = . T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($base) T_ENCAPSED_AND_WHITESPACE , , T_VARIABLE($themes) [ T_VARIABLE($base) ] T_OBJECT_OPERATOR T_STRING ) . ; } T_IF ( T_STRING ( T_VARIABLE($filename) ) ) { T_REQUIRE_ONCE T_VARIABLE($filename) ; } T_VARIABLE($function) = T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING . ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($group) = T_VARIABLE($function) ( T_VARIABLE($settings) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($group) ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($form) [ ] = T_STRING ( T_VARIABLE($form) [ ] , T_VARIABLE($group) ) ; } } T_VARIABLE($function) = T_VARIABLE($key) . ; T_IF ( ! T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($function) = T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING . ; } T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($group) = T_VARIABLE($function) ( T_VARIABLE($settings) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($group) ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ) ) ; T_VARIABLE($form) [ ] = T_STRING ( T_VARIABLE($form) [ ] , T_VARIABLE($group) ) ; } } } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_theme_settings_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($values) = T_VARIABLE($form_state) [ ] ; T_VARIABLE($key) = T_VARIABLE($values) [ ] ; T_IF ( T_VARIABLE($values) [ ] T_IS_EQUAL T_STRING ( ) ) { T_STRING ( T_VARIABLE($key) ) ; T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_UNSET ( T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] , T_VARIABLE($values) [ ] ) ; T_STRING ( T_VARIABLE($key) , T_VARIABLE($values) ) ; T_STRING ( T_STRING ( ) ) ; } T_STRING ( ) ; } T_FUNCTION(_system_is_incompatible) ( & T_VARIABLE($incompatible) , T_VARIABLE($files) , T_VARIABLE($file) ) { T_STATIC T_VARIABLE($seen) ; T_IF ( T_ISSET ( T_VARIABLE($seen) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] ) ) { T_RETURN T_ISSET ( T_VARIABLE($incompatible) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] ) ; } T_VARIABLE($seen) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] = T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($incompatible) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] ) ) { T_RETURN T_STRING ; } T_IF ( ! T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( ) ; T_VARIABLE($incompatible) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] = T_STRING ; T_RETURN T_STRING ; } T_FOREACH ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($dependency) ) { T_IF ( T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($dependency) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($incompatible) , T_VARIABLE($files) , T_VARIABLE($files) [ T_VARIABLE($dependency) ] ) ) { T_VARIABLE($incompatible) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] = T_STRING ; T_RETURN T_STRING ; } } } T_FUNCTION(system_modules) ( T_VARIABLE($form_state) = T_ARRAY ( ) ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( , ) ; T_VARIABLE($files) = T_STRING ( ) ; T_STRING ( T_VARIABLE($files) , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) { T_RETURN T_STRING ( T_VARIABLE($files) , T_VARIABLE($form_state) [ ] ) ; } T_VARIABLE($dependencies) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($files) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($incompatible_core) = T_ARRAY ( ) ; T_VARIABLE($incompatible_php) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($filename) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_IF ( ! T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_OR T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($incompatible_core) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_STRING ( T_STRING ( ) , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) < T_LNUMBER ) { T_VARIABLE($incompatible_php) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ; } } T_VARIABLE($disabled) = T_ARRAY ( ) ; T_VARIABLE($throttle) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($filename) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($filename) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($filename) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($filename) ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ) ; T_VARIABLE($options) [ T_VARIABLE($filename) ] = ; T_IF ( T_STRING ( T_VARIABLE($incompatible_core) , T_VARIABLE($files) , T_VARIABLE($file) ) T_BOOLEAN_OR T_STRING ( T_VARIABLE($incompatible_php) , T_VARIABLE($files) , T_VARIABLE($file) ) ) { T_VARIABLE($disabled) [ ] = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; T_CONTINUE ; } T_IF ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($status) [ ] = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($throttle) [ ] = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($dependencies) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_FOREACH ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($dependency) ) { T_IF ( ! T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($dependency) ] ) T_BOOLEAN_OR ! T_VARIABLE($files) [ T_VARIABLE($dependency) ] T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($dependency) ] ) ) { T_VARIABLE($dependencies) [ ] = T_VARIABLE($files) [ T_VARIABLE($dependency) ] T_OBJECT_OPERATOR T_STRING [ ] . T_STRING ( ) ; } T_ELSE { T_VARIABLE($dependencies) [ ] = T_STRING ( T_VARIABLE($dependency) ) . T_STRING ( ) ; T_VARIABLE($disabled) [ ] = T_VARIABLE($filename) ; T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($filename) ] = T_STRING ; } } T_ELSE { T_VARIABLE($dependencies) [ ] = T_VARIABLE($files) [ T_VARIABLE($dependency) ] T_OBJECT_OPERATOR T_STRING [ ] . T_STRING ( ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($dependencies) ) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($filename) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($dependencies) ) ) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; } } T_VARIABLE($dependents) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($dependent) ) { T_IF ( T_VARIABLE($files) [ T_VARIABLE($dependent) ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($dependents) [ ] = T_VARIABLE($files) [ T_VARIABLE($dependent) ] T_OBJECT_OPERATOR T_STRING [ ] . T_STRING ( ) ; T_VARIABLE($disabled) [ ] = T_VARIABLE($filename) ; T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($filename) ] = T_STRING ; } T_ELSE { T_VARIABLE($dependents) [ ] = T_VARIABLE($files) [ T_VARIABLE($dependent) ] T_OBJECT_OPERATOR T_STRING [ ] . T_STRING ( ) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($dependents) ) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($filename) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($dependents) ) ) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; } } T_VARIABLE($modules_required) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($modules_required) T_AS T_VARIABLE($required) ) { T_VARIABLE($disabled) [ ] = T_VARIABLE($required) ; T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($required) ] = T_STRING ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($status) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_VARIABLE($disabled) , T_DOUBLE_ARROW T_VARIABLE($incompatible_core) , T_DOUBLE_ARROW T_VARIABLE($incompatible_php) , ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($throttle) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($modules_required) , T_ARRAY ( ) ) , ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_sort_modules_by_info_name) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_RETURN T_STRING ( T_VARIABLE($a) T_OBJECT_OPERATOR T_STRING [ ] , T_VARIABLE($b) T_OBJECT_OPERATOR T_STRING [ ] ) ; } T_FUNCTION(system_modules_disable) ( T_VARIABLE($form) , T_VARIABLE($edit) ) { T_FOREACH ( T_VARIABLE($form) [ ] T_AS T_VARIABLE($key) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] = ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_modules_confirm_form) ( T_VARIABLE($modules) , T_VARIABLE($storage) ) { T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($items) = T_ARRAY ( ) ; T_LIST ( T_VARIABLE($dependencies) , T_VARIABLE($status) ) = T_VARIABLE($storage) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($modules) ) ; T_VARIABLE($form) [ ] [ ] = T_STRING ; T_FOREACH ( T_VARIABLE($status) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($choice) ) ; } T_FOREACH ( T_VARIABLE($dependencies) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($missing_dependencies) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($name) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ; T_FOREACH ( T_VARIABLE($missing_dependencies) T_AS T_VARIABLE($k) T_DOUBLE_ARROW T_VARIABLE($dependency) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($dependency) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($info) = T_VARIABLE($modules) [ T_VARIABLE($dependency) ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($missing_dependencies) [ T_VARIABLE($k) ] = T_VARIABLE($info) [ ] ? T_VARIABLE($info) [ ] : T_STRING ( T_VARIABLE($dependency) ) ; } T_VARIABLE($t_argument) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($modules) [ T_VARIABLE($name) ] T_OBJECT_OPERATOR T_STRING [ ] , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($missing_dependencies) ) , ) ; T_VARIABLE($items) [ ] = T_STRING ( T_STRING ( T_VARIABLE($missing_dependencies) ) , , , T_VARIABLE($t_argument) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($items) ) ) ; T_IF ( T_VARIABLE($form) ) { T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) , T_STRING ( ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } } T_FUNCTION(system_modules_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_INCLUDE_ONCE ; T_VARIABLE($new_modules) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($form_state) [ ] [ ] = T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_IF ( T_VARIABLE($dependencies) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($dependencies) ) T_AS T_VARIABLE($name) ) { T_VARIABLE($form_state) [ ] [ ] [ T_VARIABLE($name) ] = T_LNUMBER ; } } } T_ELSE { T_VARIABLE($dependencies) = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_STRING ( , T_VARIABLE($choice) ? T_LNUMBER : T_LNUMBER , T_VARIABLE($key) ) ; } } T_IF ( T_VARIABLE($dependencies) ) { T_IF ( ! T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($form_state) [ ] = T_ARRAY ( T_VARIABLE($dependencies) , T_VARIABLE($form_state) [ ] [ ] ) ; T_RETURN ; } T_ELSE { T_VARIABLE($form_state) [ ] [ ] = T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_storage) [ T_LNUMBER ] ) ; } } T_UNSET ( T_VARIABLE($form_state) [ ] ) ; T_VARIABLE($enable_modules) = T_ARRAY ( ) ; T_VARIABLE($disable_modules) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($choice) ) { T_IF ( T_VARIABLE($choice) ) { T_IF ( T_STRING ( T_VARIABLE($key) ) T_IS_EQUAL T_STRING ) { T_VARIABLE($new_modules) [ ] = T_VARIABLE($key) ; } T_ELSE { T_VARIABLE($enable_modules) [ ] = T_VARIABLE($key) ; } } T_ELSE { T_VARIABLE($disable_modules) [ ] = T_VARIABLE($key) ; } } T_VARIABLE($old_module_list) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($enable_modules) ) ) { T_STRING ( T_VARIABLE($enable_modules) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($disable_modules) ) ) { T_STRING ( T_VARIABLE($disable_modules) ) ; } T_FOREACH ( T_VARIABLE($new_modules) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($module) ) { T_IF ( ! T_STRING ( T_VARIABLE($module) ) ) { T_UNSET ( T_VARIABLE($new_modules) [ T_VARIABLE($key) ] ) ; } } T_STRING ( T_VARIABLE($new_modules) ) ; T_VARIABLE($current_module_list) = T_STRING ( T_STRING , T_STRING ) ; T_IF ( T_VARIABLE($old_module_list) T_IS_NOT_EQUAL T_VARIABLE($current_module_list) ) { T_STRING ( T_STRING ( ) ) ; } T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($form_state) [ ] = ; T_STRING ( , , T_VARIABLE($new_modules) ) ; T_STRING ( ) ; T_RETURN ; } T_FUNCTION(system_module_build_dependencies) ( T_VARIABLE($modules) , T_VARIABLE($form_values) ) { T_STATIC T_VARIABLE($dependencies) ; T_IF ( ! T_ISSET ( T_VARIABLE($dependencies) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form_values) ) ) { T_VARIABLE($dependencies) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($modules) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($module) ) { T_IF ( ! T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($form_values) [ ] [ T_VARIABLE($name) ] T_BOOLEAN_AND T_ISSET ( T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_FOREACH ( T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($dependency) ) { T_IF ( ! T_VARIABLE($form_values) [ ] [ T_VARIABLE($dependency) ] T_BOOLEAN_AND T_ISSET ( T_VARIABLE($modules) [ T_VARIABLE($dependency) ] ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($dependencies) [ T_VARIABLE($name) ] ) ) { T_VARIABLE($dependencies) [ T_VARIABLE($name) ] = T_ARRAY ( ) ; } T_VARIABLE($dependencies) [ T_VARIABLE($name) ] [ ] = T_VARIABLE($dependency) ; } } } } } T_RETURN T_VARIABLE($dependencies) ; } T_FUNCTION(system_modules_uninstall) ( T_VARIABLE($form_state) = T_STRING ) { T_INCLUDE_ONCE ; T_IF ( T_ISSET ( T_VARIABLE($form_state) ) T_BOOLEAN_AND T_VARIABLE($confirm_form) = T_STRING ( T_VARIABLE($form_state) [ ] ) ) { T_RETURN T_VARIABLE($confirm_form) ; } T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($disabled_modules) = T_STRING ( , T_STRING ) ; T_WHILE ( T_VARIABLE($module) = T_STRING ( T_VARIABLE($disabled_modules) ) ) { T_VARIABLE($info) = T_STRING ( T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING , ) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($info) [ ] ? T_VARIABLE($info) [ ] : T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($info) [ ] ) ) ; T_VARIABLE($options) [ T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ] = ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($options) ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_STRING ( ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_modules_uninstall_confirm_form) ( T_VARIABLE($storage) ) { T_IF ( ! T_ISSET ( T_VARIABLE($storage) ) ) { T_RETURN ; } T_FOREACH ( T_STRING ( T_VARIABLE($storage) [ ] ) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($info) = T_STRING ( T_STRING ( T_STRING ( , T_VARIABLE($module) ) ) . . T_VARIABLE($module) . ) ; T_VARIABLE($uninstall) [ ] = T_VARIABLE($info) [ ] ; T_VARIABLE($form) [ ] [ T_VARIABLE($module) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , ) ; } T_IF ( T_ISSET ( T_VARIABLE($uninstall) ) ) { T_VARIABLE($form) [ ] = T_STRING ; T_VARIABLE($form) [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( ) . . T_STRING ( , T_VARIABLE($uninstall) ) ) ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) , T_STRING ( ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } } T_FUNCTION(system_modules_uninstall_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_STRING ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) ) { T_STRING ( T_STRING ( ) , ) ; T_STRING ( ) ; } } T_FUNCTION(system_modules_uninstall_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_INCLUDE_ONCE ; T_IF ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_STRING ( T_VARIABLE($module) ) ; } T_STRING ( T_STRING ( ) ) ; T_UNSET ( T_VARIABLE($form_state) [ ] ) ; T_VARIABLE($form_state) [ ] = ; } T_ELSE { T_VARIABLE($form_state) [ ] = T_VARIABLE($form_state) [ ] ; } } T_FUNCTION(system_site_information_settings) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) . ( T_STRING ( , T_LNUMBER ) ? : ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(system_site_information_settings_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_VARIABLE($error) ) ; } T_VARIABLE($item) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($normal_path) = T_STRING ( T_VARIABLE($item) [ ] ) ; T_IF ( T_VARIABLE($item) [ ] T_IS_NOT_EQUAL T_VARIABLE($normal_path) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_VARIABLE($normal_path) ) ) ) ; T_VARIABLE($item) [ ] = T_VARIABLE($normal_path) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($item) ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($item) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($item) [ ] ) ) ) ; } } T_FUNCTION(system_error_reporting_settings) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) . ( T_STRING ( , T_LNUMBER ) ? : ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) . ( T_STRING ( , T_LNUMBER ) ? : ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(system_logging_overview) ( ) { T_VARIABLE($item) = T_STRING ( ) ; T_VARIABLE($content) = T_STRING ( T_VARIABLE($item) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($content) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(system_performance_settings) ( ) { T_VARIABLE($description) = . T_STRING ( ) . ; T_VARIABLE($problem_modules) = T_STRING ( T_STRING ( T_STRING ( ) , T_STRING ( ) ) ) ; T_STRING ( T_VARIABLE($problem_modules) ) ; T_IF ( T_STRING ( T_VARIABLE($problem_modules) ) > T_LNUMBER ) { T_VARIABLE($description) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($problem_modules) ) ) ) . ; } T_ELSE { T_VARIABLE($description) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_VARIABLE($description) ) ; T_VARIABLE($period) = T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) , ) ; T_VARIABLE($period) [ T_LNUMBER ] = . T_STRING ( ) . ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($period) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($directory) = T_STRING ( ) ; T_VARIABLE($is_writable) = T_STRING ( T_VARIABLE($directory) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($directory) ) T_BOOLEAN_AND ( T_STRING ( , T_STRING ) T_IS_EQUAL T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( , T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($is_writable) ) , T_DOUBLE_ARROW ! T_VARIABLE($is_writable) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( , T_LNUMBER ) T_BOOLEAN_AND T_VARIABLE($is_writable) ) , T_DOUBLE_ARROW ! T_VARIABLE($is_writable) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(system_clear_cache_submit) ( & T_VARIABLE($form_state) , T_VARIABLE($form) ) { T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(system_file_system_settings) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING ( ) , T_STRING T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(system_image_toolkit_settings) ( ) { T_VARIABLE($toolkits_available) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($toolkits_available) ) > T_LNUMBER ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ( ) ) , T_DOUBLE_ARROW T_VARIABLE($toolkits_available) ) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($toolkits_available) ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( T_VARIABLE($toolkits_available) ) ) ; } T_VARIABLE($form) [ ] = T_STRING ( ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(system_rss_feeds_settings) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(system_date_time_settings) ( ) { T_STRING ( T_STRING ( , ) . , ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_VARIABLE($zones) = T_STRING ( ) ; T_VARIABLE($date_short) = T_ARRAY ( , , , , , , , , , , , , , ) ; T_VARIABLE($date_medium) = T_ARRAY ( , , , , , , , , , , , , , ) ; T_VARIABLE($date_long) = T_ARRAY ( , , , , , , ) ; T_FOREACH ( T_VARIABLE($date_short) T_AS T_VARIABLE($f) ) { T_VARIABLE($date_short_choices) [ T_VARIABLE($f) ] = T_STRING ( T_STRING ( ) , , T_VARIABLE($f) ) ; } T_FOREACH ( T_VARIABLE($date_medium) T_AS T_VARIABLE($f) ) { T_VARIABLE($date_medium_choices) [ T_VARIABLE($f) ] = T_STRING ( T_STRING ( ) , , T_VARIABLE($f) ) ; } T_FOREACH ( T_VARIABLE($date_long) T_AS T_VARIABLE($f) ) { T_VARIABLE($date_long_choices) [ T_VARIABLE($f) ] = T_STRING ( T_STRING ( ) , , T_VARIABLE($f) ) ; } T_VARIABLE($date_long_choices) [ ] = T_VARIABLE($date_medium_choices) [ ] = T_VARIABLE($date_short_choices) [ ] = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($zones) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($date_format_short) = T_STRING ( , T_VARIABLE($date_short) [ T_LNUMBER ] ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , T_DOUBLE_ARROW ( T_ISSET ( T_VARIABLE($date_short_choices) [ T_VARIABLE($date_format_short) ] ) ? T_VARIABLE($date_format_short) : ) , T_DOUBLE_ARROW T_VARIABLE($date_short_choices) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($default_short_custom) = T_STRING ( , ( T_ISSET ( T_VARIABLE($date_short_choices) [ T_VARIABLE($date_format_short) ] ) ? T_VARIABLE($date_format_short) : ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_VARIABLE($default_short_custom) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , , T_VARIABLE($default_short_custom) ) ) ) , ) ; T_VARIABLE($date_format_medium) = T_STRING ( , T_VARIABLE($date_medium) [ T_LNUMBER ] ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , T_DOUBLE_ARROW ( T_ISSET ( T_VARIABLE($date_medium_choices) [ T_VARIABLE($date_format_medium) ] ) ? T_VARIABLE($date_format_medium) : ) , T_DOUBLE_ARROW T_VARIABLE($date_medium_choices) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($default_medium_custom) = T_STRING ( , ( T_ISSET ( T_VARIABLE($date_medium_choices) [ T_VARIABLE($date_format_medium) ] ) ? T_VARIABLE($date_format_medium) : ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_VARIABLE($default_medium_custom) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , , T_VARIABLE($default_medium_custom) ) ) ) , ) ; T_VARIABLE($date_format_long) = T_STRING ( , T_VARIABLE($date_long) [ T_LNUMBER ] ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , T_DOUBLE_ARROW ( T_ISSET ( T_VARIABLE($date_long_choices) [ T_VARIABLE($date_format_long) ] ) ? T_VARIABLE($date_format_long) : ) , T_DOUBLE_ARROW T_VARIABLE($date_long_choices) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($default_long_custom) = T_STRING ( , ( T_ISSET ( T_VARIABLE($date_long_choices) [ T_VARIABLE($date_format_long) ] ) ? T_VARIABLE($date_format_long) : ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_VARIABLE($default_long_custom) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , , T_VARIABLE($default_long_custom) ) ) ) , ) ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) ) ; T_UNSET ( T_VARIABLE($form) [ ] ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_date_time_settings_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($form_state) [ ] [ ] = T_VARIABLE($form_state) [ ] [ ] ; } T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($form_state) [ ] [ ] = T_VARIABLE($form_state) [ ] [ ] ; } T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL ) { T_VARIABLE($form_state) [ ] [ ] = T_VARIABLE($form_state) [ ] [ ] ; } T_RETURN T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; } T_FUNCTION(system_date_time_lookup) ( ) { T_VARIABLE($result) = T_STRING ( T_STRING ( ) , , T_VARIABLE($_GET) [ ] ) ; T_ECHO T_STRING ( T_VARIABLE($result) ) ; T_EXIT ; } T_FUNCTION(system_site_maintenance_settings) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , ) ) ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(system_clean_url_settings) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_IF ( ! T_STRING ( , T_LNUMBER ) ) { T_IF ( T_STRING ( T_STRING ( ) , ) T_IS_NOT_IDENTICAL T_STRING ) { T_STRING ( T_STRING ( , ) . , ) ; T_VARIABLE($form) [ ] [ ] T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_VARIABLE($form) [ ] [ ] = T_STRING ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) . ) ) . ; } T_ELSE { T_VARIABLE($form) [ ] [ ] T_CONCAT_EQUAL . T_STRING ( ) . ; } } T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(system_status) ( T_VARIABLE($check) = T_STRING ) { T_INCLUDE_ONCE ; T_STRING ( ) ; T_VARIABLE($requirements) = T_STRING ( , ) ; T_STRING ( T_VARIABLE($requirements) , ) ; T_IF ( T_VARIABLE($check) ) { T_RETURN T_STRING ( T_VARIABLE($requirements) ) T_IS_EQUAL T_STRING ; } T_STRING ( ) ; T_RETURN T_STRING ( , T_VARIABLE($requirements) ) ; } T_FUNCTION(system_run_cron) ( ) { T_IF ( T_STRING ( ) ) { T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) , ) ; } T_STRING ( ) ; } T_FUNCTION(system_php) ( ) { T_STRING ( T_STRING | T_STRING ) ; T_EXIT ( ) ; } T_FUNCTION(_system_sql) ( T_VARIABLE($data) , T_VARIABLE($keys) ) { T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($keys) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($explanation) ) { T_IF ( T_ISSET ( T_VARIABLE($data) [ T_VARIABLE($key) ] ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING ( T_VARIABLE($key) ) , T_STRING ( T_VARIABLE($data) [ T_VARIABLE($key) ] ) , T_VARIABLE($explanation) ) ; } } T_RETURN T_STRING ( , T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) , T_VARIABLE($rows) ) ; } T_FUNCTION(system_sql) ( ) { T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($entry) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($data) [ T_VARIABLE($entry) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($entry) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($data) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($data) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($data) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(system_batch_page) ( ) { T_REQUIRE_ONCE ; T_VARIABLE($output) = T_STRING ( ) ; T_IF ( T_VARIABLE($output) T_IS_IDENTICAL T_STRING ) { T_STRING ( ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($output) ) ) { T_PRINT T_STRING ( , T_VARIABLE($output) , T_STRING , T_STRING ) ; } } T_FUNCTION(theme_admin_block) ( T_VARIABLE($block) ) { T_IF ( T_EMPTY ( T_VARIABLE($block) [ ] ) ) { T_RETURN ; } T_VARIABLE($output) = T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_VARIABLE($block) [ T_STRING ] T_ENCAPSED_AND_WHITESPACE T_VARIABLE($block) [ T_STRING ] T_ENCAPSED_AND_WHITESPACE T_VARIABLE($block) [ T_STRING ] T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_admin_block_content) ( T_VARIABLE($content) ) { T_IF ( ! T_VARIABLE($content) ) { T_RETURN ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($content) T_AS T_VARIABLE($item) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_ELSE { T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($content) T_AS T_VARIABLE($item) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($item) [ ] . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_admin_page) ( T_VARIABLE($blocks) ) { T_VARIABLE($stripe) = T_LNUMBER ; T_VARIABLE($container) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($blocks) T_AS T_VARIABLE($block) ) { T_IF ( T_VARIABLE($block_output) = T_STRING ( , T_VARIABLE($block) ) ) { T_IF ( T_EMPTY ( T_VARIABLE($block) [ ] ) ) { T_VARIABLE($block) [ ] = T_INC T_VARIABLE($stripe) \% T_LNUMBER ? : ; } T_IF ( ! T_ISSET ( T_VARIABLE($container) [ T_VARIABLE($block) [ ] ] ) ) { T_VARIABLE($container) [ T_VARIABLE($block) [ ] ] = ; } T_VARIABLE($container) [ T_VARIABLE($block) [ ] ] T_CONCAT_EQUAL T_VARIABLE($block_output) ; } } T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( ) , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($container) T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($data) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($id) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($data) ; T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_system_admin_by_module) ( T_VARIABLE($menu_items) ) { T_VARIABLE($stripe) = T_LNUMBER ; T_VARIABLE($output) = ; T_VARIABLE($container) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($flip) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($position) = ; T_FOREACH ( T_VARIABLE($menu_items) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($block) ) { T_LIST ( T_VARIABLE($description) , T_VARIABLE($items) ) = T_VARIABLE($block) ; T_IF ( T_STRING ( T_VARIABLE($items) ) ) { T_VARIABLE($block) = T_ARRAY ( ) ; T_VARIABLE($block) [ ] = T_VARIABLE($module) ; T_VARIABLE($block) [ ] = T_STRING ( , T_VARIABLE($items) ) ; T_VARIABLE($block) [ ] = T_STRING ( T_VARIABLE($description) ) ; T_IF ( T_VARIABLE($block_output) = T_STRING ( , T_VARIABLE($block) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($block) [ ] ) ) { T_VARIABLE($block) [ ] = T_VARIABLE($position) ; T_VARIABLE($position) = T_VARIABLE($flip) [ T_VARIABLE($position) ] ; } T_VARIABLE($container) [ T_VARIABLE($block) [ ] ] T_CONCAT_EQUAL T_VARIABLE($block_output) ; } } } T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($container) T_AS T_VARIABLE($id) T_DOUBLE_ARROW T_VARIABLE($data) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($id) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($data) ; T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_status_report) ( & T_VARIABLE($requirements) ) { T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($requirements) T_AS T_VARIABLE($requirement) ) { T_IF ( T_EMPTY ( T_VARIABLE($requirement) [ ] ) ) { T_VARIABLE($class) = T_INC T_VARIABLE($i) \% T_LNUMBER T_IS_EQUAL T_LNUMBER ? : ; T_VARIABLE($classes) = T_ARRAY ( T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , T_STRING T_DOUBLE_ARROW , ) ; T_VARIABLE($class) = T_VARIABLE($classes) [ T_ISSET ( T_VARIABLE($requirement) [ ] ) ? T_INT_CAST T_VARIABLE($requirement) [ ] : T_LNUMBER ] . . T_VARIABLE($class) ; T_IF ( ! T_EMPTY ( T_VARIABLE($requirement) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($class) . . T_VARIABLE($requirement) [ ] . . T_VARIABLE($requirement) [ ] . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($class) . . T_VARIABLE($requirement) [ ] . ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($class) . . T_VARIABLE($requirement) [ ] . . T_VARIABLE($requirement) [ ] . ; } } } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_system_modules) ( T_VARIABLE($form) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_VARIABLE($header) = T_ARRAY ( ) ; T_VARIABLE($header) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($header) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ; } T_VARIABLE($header) [ ] = T_STRING ( ) ; T_VARIABLE($header) [ ] = T_STRING ( ) ; T_VARIABLE($header) [ ] = T_STRING ( ) ; T_VARIABLE($modules) = T_VARIABLE($form) [ ] [ ] ; T_FOREACH ( T_VARIABLE($modules) T_AS T_VARIABLE($module) ) { T_IF ( ! T_ISSET ( T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_OR ! T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING [ ] ) { T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( ) ; } T_VARIABLE($packages) [ T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING [ ] ] [ T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($module) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($packages) ) ; T_VARIABLE($output) = ; T_FOREACH ( T_VARIABLE($packages) T_AS T_VARIABLE($package) T_DOUBLE_ARROW T_VARIABLE($modules) ) { T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($modules) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($module) ) { T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($description) = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($status) = T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($description) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) . ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($status) = T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($php_required) = T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($key) ] ; T_IF ( T_STRING ( T_VARIABLE($php_required) , ) < T_LNUMBER ) { T_VARIABLE($php_required) T_CONCAT_EQUAL ; } T_VARIABLE($description) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($php_required) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; } T_ELSE { T_VARIABLE($status) = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; } T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($status) , T_DOUBLE_ARROW ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_DOUBLE_ARROW ) ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ) { T_VARIABLE($row) [ ] = . T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] . . T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) . ; } T_ELSE { T_VARIABLE($row) [ ] = . T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) . ; } T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($description) , T_DOUBLE_ARROW ) ; T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } T_VARIABLE($fieldset) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($package) ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ( T_VARIABLE($package) T_IS_EQUAL ) , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) , ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($fieldset) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_system_modules_uninstall) ( T_VARIABLE($form) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($module) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($module) ] ) , T_DOUBLE_ARROW ) , . T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($module) ] [ ] ) . , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($module) ] [ ] ) , T_DOUBLE_ARROW ) , ) ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_system_theme_select_form) ( T_VARIABLE($form) ) { T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_VARIABLE($row) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ) { T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; } T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_system_themes_form) ( T_VARIABLE($form) ) { T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_IF ( ! T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ) { T_CONTINUE ; } T_VARIABLE($info) = T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] ; T_VARIABLE($description) = T_STRING ( T_VARIABLE($info) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($status) = T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($description) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) . ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($key) ] ) ) { T_UNSET ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; T_VARIABLE($status) = T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($php_required) = T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($key) ] ; T_IF ( T_STRING ( T_VARIABLE($php_required) , ) < T_LNUMBER ) { T_VARIABLE($php_required) T_CONCAT_EQUAL ; } T_VARIABLE($description) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($php_required) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; } T_ELSE { T_VARIABLE($status) = T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; } T_VARIABLE($theme) = . T_VARIABLE($info) [ ] . . T_VARIABLE($description) . ; T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ; T_VARIABLE($row) [ ] = T_VARIABLE($theme) ; T_VARIABLE($row) [ ] = T_ISSET ( T_VARIABLE($info) [ ] ) ? T_VARIABLE($info) [ ] : ; T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($status) , T_DOUBLE_ARROW ) ; T_IF ( T_VARIABLE($form) [ ] ) { T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_DOUBLE_ARROW ) ; T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) , T_DOUBLE_ARROW ) ; } T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; }",11,0
"T_OPEN_TAG T_FUNCTION(system_requirements) ( T_VARIABLE($phase) ) { T_VARIABLE($requirements) = T_ARRAY ( ) ; T_VARIABLE($t) = T_STRING ( ) ; T_IF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; } T_VARIABLE($software) = T_VARIABLE($_SERVER) [ ] ; T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($software) , ) ; T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW ( T_VARIABLE($phase) T_IS_EQUAL ) ? T_STRING ( T_STRING ( ) , ) : T_STRING ( ) , ) ; T_IF ( T_STRING ( T_STRING ( ) , T_STRING ) < T_LNUMBER ) { T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_VARIABLE($requirements) [ ] [ ] = T_STRING ; } T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , ) ; T_VARIABLE($register_globals) = T_STRING ( T_STRING ( ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($register_globals) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($register_globals) ) T_IS_NOT_EQUAL ) { T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( ) ; T_VARIABLE($requirements) [ ] [ ] = T_STRING ; T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($register_globals) ) ) ; } T_ELSE { T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( ) ; } T_VARIABLE($memory_limit) = T_STRING ( ) ; T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($memory_limit) , ) ; T_IF ( T_VARIABLE($memory_limit) T_BOOLEAN_AND T_STRING ( T_VARIABLE($memory_limit) ) < T_STRING ( T_STRING ) ) { T_VARIABLE($description) = ; T_IF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_VARIABLE($description) = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; } T_ELSEIF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_VARIABLE($description) = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; } T_ELSEIF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_VARIABLE($description) = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($memory_limit) , T_DOUBLE_ARROW T_STRING ) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($description) ) ) { T_IF ( T_VARIABLE($php_ini_path) = T_STRING ( ) ) { T_VARIABLE($description) T_CONCAT_EQUAL . T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($php_ini_path) ) ) ; } T_ELSE { T_VARIABLE($description) T_CONCAT_EQUAL . T_VARIABLE($t) ( ) ; } T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($description) . . T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($requirements) [ ] [ ] = T_STRING ; } } T_GLOBAL T_VARIABLE($db_type) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($requirements) T_PLUS_EQUAL T_STRING ( T_VARIABLE($phase) ) ; } T_IF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_VARIABLE($conf_dir) = T_STRING ( T_STRING ( ) , T_STRING , ) ; T_VARIABLE($conf_file) = T_STRING ( T_STRING ( ) . , T_STRING | T_STRING | T_STRING ) ; T_IF ( ! T_VARIABLE($conf_dir) T_BOOLEAN_OR ! T_VARIABLE($conf_file) ) { T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_IF ( ! T_VARIABLE($conf_dir) ) { T_VARIABLE($requirements) [ ] [ ] T_CONCAT_EQUAL T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_IF ( ! T_VARIABLE($conf_file) ) { T_VARIABLE($requirements) [ ] [ ] T_CONCAT_EQUAL T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) . ) ) ; } } T_ELSE { T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , ) ; } T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( ) ; } T_IF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_VARIABLE($threshold_warning) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($threshold_error) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($help) = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($cron_last) = T_STRING ( , T_STRING ) ; T_VARIABLE($never_run) = T_STRING ; T_IF ( ! T_STRING ( T_VARIABLE($cron_last) ) ) { T_VARIABLE($never_run) = T_STRING ; T_VARIABLE($cron_last) = T_STRING ( , T_LNUMBER ) ; } T_VARIABLE($severity) = T_STRING ; T_IF ( T_STRING ( ) - T_VARIABLE($cron_last) > T_VARIABLE($threshold_error) ) { T_VARIABLE($severity) = T_STRING ; } T_ELSE T_IF ( T_VARIABLE($never_run) T_BOOLEAN_OR ( T_STRING ( ) - T_VARIABLE($cron_last) > T_VARIABLE($threshold_warning) ) ) { T_VARIABLE($severity) = T_STRING ; } T_IF ( T_VARIABLE($never_run) T_BOOLEAN_AND T_VARIABLE($severity) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($_GET) [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( ) ) { T_STRING ( T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; } T_IF ( T_VARIABLE($never_run) ) { T_VARIABLE($summary) = T_VARIABLE($t) ( ) ; T_VARIABLE($description) = T_VARIABLE($t) ( ) . . T_VARIABLE($help) ; } T_ELSE { T_VARIABLE($summary) = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($cron_last) ) ) ) ; T_VARIABLE($description) = ; T_IF ( T_VARIABLE($severity) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($description) = T_VARIABLE($t) ( ) . . T_VARIABLE($help) ; } } T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($severity) , T_DOUBLE_ARROW T_VARIABLE($summary) , T_DOUBLE_ARROW T_VARIABLE($description) . . T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; } T_VARIABLE($directory) = T_STRING ( ) ; T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , ) ; T_IF ( T_VARIABLE($phase) T_IS_EQUAL T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($directory) ) T_BOOLEAN_AND @ T_STRING ( T_VARIABLE($directory) ) ) { @ T_STRING ( T_VARIABLE($directory) , T_LNUMBER ) ; } T_VARIABLE($is_writable) = T_STRING ( T_VARIABLE($directory) ) ; T_VARIABLE($is_directory) = T_STRING ( T_VARIABLE($directory) ) ; T_IF ( ! T_VARIABLE($is_writable) T_BOOLEAN_OR ! T_VARIABLE($is_directory) ) { T_VARIABLE($description) = ; T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( ) ; T_IF ( ! T_VARIABLE($is_directory) ) { T_VARIABLE($error) = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($directory) ) ) ; } T_ELSE { T_VARIABLE($error) = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($directory) ) ) ; } T_IF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_VARIABLE($description) = T_VARIABLE($error) . . T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_ELSEIF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_VARIABLE($description) = T_VARIABLE($error) . . T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($requirements) [ ] [ ] = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($description) ) ) { T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($description) ; T_VARIABLE($requirements) [ ] [ ] = T_STRING ; } } T_ELSE { T_IF ( T_STRING ( , T_STRING ) T_IS_EQUAL T_STRING ) { T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( ) ; } T_ELSE { T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( ) ; } } T_IF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($t) ( ) , ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_VARIABLE($updates) = T_STRING ( T_VARIABLE($module) ) ; T_IF ( T_VARIABLE($updates) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($default) = T_STRING ( T_VARIABLE($module) ) ; T_IF ( T_STRING ( T_VARIABLE($updates) ) > T_VARIABLE($default) ) { T_VARIABLE($requirements) [ ] [ ] = T_STRING ; T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( ) ; T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) . ) ) ; T_BREAK ; } } } } T_IF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($t) ( ) , ) ; } T_ELSE { T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , ) ; } T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( ) ; } T_INCLUDE_ONCE ; T_VARIABLE($requirements) = T_STRING ( T_VARIABLE($requirements) , T_STRING ( ) ) ; T_IF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_IF ( ! T_STRING ( ) ) { T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($t) ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ) , ) ; } T_ELSE { T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , ) ; T_IF ( T_STRING ( , T_STRING ) ) { T_VARIABLE($requirements) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_VARIABLE($t) ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($t) ( ) , ) ; } } T_VARIABLE($requirements) [ ] [ ] = T_VARIABLE($t) ( ) ; } T_RETURN T_VARIABLE($requirements) ; } T_FUNCTION(system_install) ( ) { T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_IF ( ! T_STRING ( T_STRING ( ) ) ) { T_STRING ( ) ; } T_IF ( ! T_STRING ( T_STRING ( ) ) ) { T_STRING ( ) ; } T_STRING ( ) ; T_STRING ( ) ; } T_VARIABLE($modules) = T_ARRAY ( , , , , , , ) ; T_FOREACH ( T_VARIABLE($modules) T_AS T_VARIABLE($module) ) { T_STRING ( T_VARIABLE($module) ) ; } T_STRING ( ) ; T_STRING ( , , ) ; T_STRING ( , , , T_STRING ( ) , T_STRING ( T_ARRAY ( ) ) ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , T_LNUMBER , , T_LNUMBER ) ; T_STRING ( , T_LNUMBER , , T_LNUMBER ) ; T_STRING ( , , ) ; T_STRING ( , T_LNUMBER , , ) ; T_STRING ( , , , , T_LNUMBER , T_LNUMBER , , , - T_LNUMBER ) ; T_STRING ( , , , , T_LNUMBER , T_LNUMBER , , , - T_LNUMBER ) ; T_STRING ( , , , , T_LNUMBER , T_LNUMBER , , , - T_LNUMBER ) ; T_STRING ( , T_LNUMBER , T_LNUMBER , , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; T_STRING ( , , , T_LNUMBER ) ; T_STRING ( , , , T_LNUMBER ) ; T_STRING ( , T_LNUMBER , , T_LNUMBER , T_LNUMBER ) ; T_STRING ( , T_LNUMBER , , T_LNUMBER , T_LNUMBER ) ; T_STRING ( , T_LNUMBER , , T_LNUMBER , T_LNUMBER ) ; T_STRING ( , T_LNUMBER , , T_LNUMBER , T_LNUMBER ) ; T_STRING ( , T_LNUMBER , , T_LNUMBER , T_LNUMBER ) ; T_STRING ( , T_LNUMBER , , T_LNUMBER , T_LNUMBER ) ; T_STRING ( , T_LNUMBER , , T_LNUMBER , T_LNUMBER ) ; T_STRING ( , , ) ; T_STRING ( , , ) ; } T_FUNCTION(system_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_VARIABLE($schema) [ ] ; T_VARIABLE($schema) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($schema) [ ] = T_VARIABLE($schema) [ ] ; T_VARIABLE($schema) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($schema) [ ] = T_VARIABLE($schema) [ ] ; T_VARIABLE($schema) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( , , , , , , , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_LNUMBER ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_LNUMBER ) , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_LNUMBER ) , , , , ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_RETURN T_VARIABLE($schema) ; } T_FUNCTION(system_update_last_removed) ( ) { T_RETURN T_LNUMBER ; } T_FUNCTION(system_update_1022) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( , T_STRING ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6000) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE : T_CASE : T_VARIABLE($max) = T_INT_CAST T_STRING ( T_STRING ( ) ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($max) T_ENCAPSED_AND_WHITESPACE ) ; T_BREAK ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6001) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( , , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6002) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( ) ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6003) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6004) ( ) { T_RETURN T_ARRAY ( ) ; } T_FUNCTION(system_update_6005) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE : T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ) ; T_VARIABLE($err) = T_STRING ( T_LNUMBER ) ; T_VARIABLE($ret1) = T_STRING ( ) ; T_IF ( T_VARIABLE($ret1) [ ] ) { T_VARIABLE($ret) [ ] = T_VARIABLE($ret1) ; } T_VARIABLE($ret1) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_FOREACH ( T_VARIABLE($ret1) T_AS T_VARIABLE($r) ) { T_IF ( T_VARIABLE($r) [ ] ) { T_VARIABLE($ret) [ ] = T_VARIABLE($r) ; } } T_STRING ( T_VARIABLE($err) ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_BREAK ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6006) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE : T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_BREAK ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6007) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_STRING . ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_STRING . ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_STRING . ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6008) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( ) ; T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6009) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_STRING ( ) ) ) { T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; } T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6010) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6011) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE : T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_BREAK ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6012) ( ) { T_RETURN T_ARRAY ( ) ; } T_FUNCTION(system_update_6013) ( ) { T_STRING ( ) ; T_STRING ( ) ; T_RETURN T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; } T_FUNCTION(system_update_6014) ( ) { T_STRING ( , ) ; T_RETURN T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; } T_FUNCTION(system_update_6015) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE : T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_BREAK ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6016) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE : T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($ret) , , , ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($ret) , , , ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($ret) , , , ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($ret) , , , ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($ret) , , , ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_STRING ( T_VARIABLE($ret) , , , ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_BREAK ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6017) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($var_names) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_FOREACH ( T_VARIABLE($var_names) T_AS T_VARIABLE($old) T_DOUBLE_ARROW T_VARIABLE($new) ) { T_FOREACH ( T_ARRAY ( , ) T_AS T_VARIABLE($suffix) ) { T_VARIABLE($old_name) = . T_VARIABLE($old) . T_VARIABLE($suffix) ; T_VARIABLE($new_name) = . T_VARIABLE($new) . T_VARIABLE($suffix) ; T_IF ( T_VARIABLE($old_val) = T_STRING ( T_VARIABLE($old_name) , T_STRING ) ) { T_STRING ( T_VARIABLE($new_name) , T_VARIABLE($old_val) ) ; T_STRING ( T_VARIABLE($old_name) ) ; T_VARIABLE($ret) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($new_name) T_ENCAPSED_AND_WHITESPACE ) ; T_VARIABLE($ret) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($old_name) T_ENCAPSED_AND_WHITESPACE ) ; T_IF ( T_VARIABLE($old_name) T_IS_EQUAL ) { T_STRING ( . T_STRING ( ) . ) ; } } } } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6018) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_ARRAY ( ) ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ; T_RETURN T_VARIABLE($ret) ; } T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($format) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($weight) = T_STRING ( T_STRING ( , T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( , T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING , , T_LNUMBER , T_STRING ( T_LNUMBER , T_VARIABLE($weight) + T_LNUMBER ) ) ; T_VARIABLE($ret) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW . T_VARIABLE($format) T_OBJECT_OPERATOR T_STRING . ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6019) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($GLOBALS) [ ] ) { T_CASE : T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; } T_STRING ( T_VARIABLE($ret) , , ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; } T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( , , ) ) ; } T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) ) ; T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( ) ) ; T_BREAK ; T_CASE : T_CASE : T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; } T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_VARIABLE($new_uid) = T_LNUMBER + T_STRING ( T_STRING ( ) ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($new_uid) . ) ; T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($new_uid) ) ; T_VARIABLE($map) = T_ARRAY ( T_DOUBLE_ARROW ) ; T_FOREACH ( T_ARRAY ( , , , ) T_AS T_VARIABLE($table) ) { T_VARIABLE($field) = T_ISSET ( T_VARIABLE($map) [ T_VARIABLE($table) ] ) ? T_VARIABLE($map) [ T_VARIABLE($table) ] : T_VARIABLE($table) [ T_LNUMBER ] . ; T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) ) ; T_STRING ( T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($field) , T_VARIABLE($field) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($field) ) ) ) ; } T_BREAK ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6020) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_LNUMBER ) , ) , T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( , , , , , , , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( , T_LNUMBER ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_FOREACH ( T_VARIABLE($schema) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($table) ) { T_STRING ( T_VARIABLE($ret) , T_VARIABLE($name) , T_VARIABLE($table) ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6021) ( ) { T_VARIABLE($ret) = T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($menus) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] ) ) { T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ) ; T_VARIABLE($_SESSION) [ ] = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($_SESSION) [ ] = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW ) ; T_VARIABLE($_SESSION) [ ] = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING , T_LNUMBER T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($table) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_STRING ( T_VARIABLE($ret) , , T_VARIABLE($table) ) ; T_STRING ( , T_VARIABLE($menus) [ ] ) ; T_VARIABLE($_SESSION) [ ] = T_LNUMBER ; } T_VARIABLE($limit) = T_LNUMBER ; T_WHILE ( T_VARIABLE($limit) T_DEC T_BOOLEAN_AND ( T_VARIABLE($item) = T_STRING ( T_STRING ( , T_LNUMBER , T_LNUMBER ) ) ) ) { T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($item_original) = T_VARIABLE($item) ; T_WHILE ( T_VARIABLE($item) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($item) [ ] ] ) ) { T_VARIABLE($item) = T_STRING ( T_STRING ( , T_VARIABLE($item) [ ] ) ) ; } T_IF ( ! T_VARIABLE($item) ) { T_STRING ( , T_LNUMBER , T_VARIABLE($item_original) [ ] ) ; T_VARIABLE($_SESSION) [ ] T_INC ; T_CONTINUE ; } } T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($item) [ ] ) ; T_IF ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($item) [ ] ] ) { T_VARIABLE($item) [ ] = T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($item) [ ] ] [ ] ; T_VARIABLE($item) [ ] = T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($item) [ ] ] [ ] ; } T_ELSE { T_VARIABLE($item) [ ] = T_LNUMBER ; T_VARIABLE($item) [ ] = T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($item) [ ] ] ; } T_VARIABLE($item) [ ] = ! ( T_VARIABLE($item) [ ] & T_STRING ) ; T_IF ( T_VARIABLE($item) [ ] & ( T_STRING | T_STRING ) ) { T_VARIABLE($item) [ ] = T_STRING ; } T_IF ( T_VARIABLE($item) [ ] & T_STRING ) { T_VARIABLE($item) [ ] = ; T_VARIABLE($item) [ ] = ; T_VARIABLE($item) [ ] = T_STRING ; } T_ELSE { T_VARIABLE($item) [ ] = ; T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] ; T_VARIABLE($item) [ ] = T_STRING ; } T_STRING ( T_VARIABLE($item) ) ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($item) [ ] ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($item) [ ] , T_DOUBLE_ARROW T_VARIABLE($item) [ ] ) ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($item) [ ] ] ) ) { T_VARIABLE($item) [ ] = . T_STRING ( , , T_STRING ( T_VARIABLE($item) [ ] ) ) ; T_VARIABLE($item) [ ] = T_STRING ( T_VARIABLE($item) [ ] , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($original_menu_name) = T_VARIABLE($item) [ ] ; T_VARIABLE($i) = T_LNUMBER ; T_WHILE ( T_STRING ( T_STRING ( , T_VARIABLE($item) [ ] ) ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($original_menu_name) . ( T_VARIABLE($i) T_INC ) ; } T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($_SESSION) [ ] [ ] = T_VARIABLE($item) [ ] ; } T_ELSE { T_STRING ( , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) ; } T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($item) [ ] ] = T_VARIABLE($item) [ ] ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($item) [ ] ] = T_STRING ; } T_STRING ( , T_LNUMBER , T_VARIABLE($item) [ ] ) ; T_VARIABLE($_SESSION) [ ] T_INC ; } T_IF ( T_VARIABLE($_SESSION) [ ] T_IS_GREATER_OR_EQUAL T_VARIABLE($_SESSION) [ ] ) { T_IF ( ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_STRING ( , T_VARIABLE($_SESSION) [ ] ) . ) ; } T_VARIABLE($menu_primary_menu) = T_STRING ( , T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_LNUMBER ] ) ) { T_VARIABLE($updated_primary_links_menu) = T_LNUMBER ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($menu_primary_menu) ] ) T_BOOLEAN_AND T_VARIABLE($menu_primary_menu) > T_LNUMBER ) { T_VARIABLE($updated_primary_links_menu) = T_VARIABLE($menu_primary_menu) ; } T_ELSE { T_VARIABLE($updated_primary_links_menu) = T_LNUMBER ; T_STRING ( , T_VARIABLE($menus) [ ] ) ; } T_IF ( T_VARIABLE($updated_primary_links_menu) ) { T_VARIABLE($replace) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($menus) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($updated_primary_links_menu) ] ) ; T_VARIABLE($ret) [ ] = T_STRING ( T_STRING ( , T_VARIABLE($replace) ) ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($updated_primary_links_menu) ] . ) ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($updated_primary_links_menu) ] = ; } T_VARIABLE($menu_secondary_menu) = T_STRING ( , T_LNUMBER ) ; T_IF ( T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($menu_secondary_menu) ] ) T_BOOLEAN_AND T_VARIABLE($menu_secondary_menu) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($menu_secondary_menu) T_IS_NOT_EQUAL T_VARIABLE($updated_primary_links_menu) ) { T_VARIABLE($updated_secondary_links_menu) = T_VARIABLE($menu_secondary_menu) ; } T_ELSE { T_VARIABLE($updated_secondary_links_menu) = T_LNUMBER ; T_STRING ( , T_VARIABLE($menus) [ ] ) ; } T_IF ( T_VARIABLE($updated_secondary_links_menu) ) { T_VARIABLE($replace) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($menus) [ ] [ ] , T_DOUBLE_ARROW T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($updated_secondary_links_menu) ] ) ; T_VARIABLE($ret) [ ] = T_STRING ( T_STRING ( , T_VARIABLE($replace) ) ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($updated_secondary_links_menu) ] . ) ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($updated_secondary_links_menu) ] = ; } T_VARIABLE($mid) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($menu_name) = ( T_VARIABLE($mid) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($mid) ] ) ) ? T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($mid) ] : ; T_STRING ( , T_VARIABLE($menu_name) ) ; T_STRING ( ) ; T_VARIABLE($menu_name) = ( T_VARIABLE($menu_primary_menu) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($menu_primary_menu) ] ) ) ? T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($menu_primary_menu) ] : ; T_STRING ( , T_VARIABLE($menu_name) ) ; T_STRING ( ) ; T_VARIABLE($menu_name) = ( T_VARIABLE($menu_secondary_menu) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($menu_secondary_menu) ] ) ) ? T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($menu_secondary_menu) ] : ; T_STRING ( , T_VARIABLE($menu_name) ) ; T_STRING ( ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] [ T_LNUMBER ] ) ; T_FOREACH ( T_VARIABLE($_SESSION) [ ] T_AS T_VARIABLE($mid) T_DOUBLE_ARROW T_VARIABLE($menu_name) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($menu_name) . . T_VARIABLE($mid) . ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($menu_name) . . T_VARIABLE($mid) . ) ; } T_VARIABLE($ret) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW . T_VARIABLE($_SESSION) [ ] . ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] , T_VARIABLE($_SESSION) [ ] , T_VARIABLE($_SESSION) [ ] , T_VARIABLE($_SESSION) [ ] , T_VARIABLE($_SESSION) [ ] ) ; T_IF ( T_STRING ( ) ) { T_STRING ( ) ; } T_ELSE { T_STRING ( ) ; } T_VARIABLE($ret) [ ] = T_LNUMBER ; } T_ELSE { T_VARIABLE($ret) [ ] = T_VARIABLE($_SESSION) [ ] / T_VARIABLE($_SESSION) [ ] ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6022) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6023) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6024) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6025) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , T_ARRAY ( , T_LNUMBER ) ) ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6026) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( . T_STRING ( ) . ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6027) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_IF ( T_VARIABLE($module_blocks) = T_STRING ( T_VARIABLE($module) , , ) ) { T_FOREACH ( T_VARIABLE($module_blocks) T_AS T_VARIABLE($delta) T_DOUBLE_ARROW T_VARIABLE($block) ) { T_IF ( T_ISSET ( T_VARIABLE($block) [ ] ) ) { T_STRING ( , T_VARIABLE($block) [ ] , T_VARIABLE($module) , T_VARIABLE($delta) ) ; } } } } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6028) ( ) { T_RETURN T_ARRAY ( ) ; } T_FUNCTION(system_update_6029) ( ) { T_STRING ( , T_LNUMBER ) ; T_STRING ( T_ARRAY ( ) ) ; T_STRING ( ) ; T_RETURN T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; } T_FUNCTION(system_update_6030) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; } T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_STRING ( T_VARIABLE($ret) , , T_VARIABLE($schema) [ ] ) ; T_STRING ( T_VARIABLE($ret) , , T_VARIABLE($schema) [ ] ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6031) ( ) { T_RETURN T_ARRAY ( ) ; } T_FUNCTION(system_update_6032) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6033) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( ) ) ; } } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6034) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($renamed_permission) = T_STRING ( , , T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($renamed_permission) T_IS_NOT_EQUAL T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($ret) [ ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($renamed_permission) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) ; } } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6035) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_ARRAY ( , T_LNUMBER ) , , , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_ARRAY ( , T_LNUMBER ) , , , , ) ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6036) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_VARIABLE($search_node_links_schema) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_STRING ( T_VARIABLE($ret) , , T_VARIABLE($search_node_links_schema) ) ; T_STRING ( ) ; T_IF ( T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($GLOBALS) [ ] T_IS_EQUAL ) { T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; } T_ELSE { T_IF ( T_STRING ( T_STRING ( ) ) T_BOOLEAN_OR T_STRING ( T_STRING ( ) ) ) { T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; } T_ELSE { T_VARIABLE($ret) [ ] = T_STRING ( ) ; } T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , ) ) ; } } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6037) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6038) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_IF ( T_VARIABLE($affectedrows) = T_STRING ( ) ) { T_STRING ( . T_VARIABLE($affectedrows) . ) ; } } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6039) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($renamed_permission) = T_STRING ( , , T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($renamed_permission) = T_STRING ( , , T_VARIABLE($renamed_permission) ) ; T_IF ( T_VARIABLE($renamed_permission) T_IS_NOT_EQUAL T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($ret) [ ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($renamed_permission) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) ; } } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6040) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6041) ( ) { T_VARIABLE($weight) = T_STRING ( ( T_STRING ( T_STRING ( ) ) ) + T_LNUMBER ) ; T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($vid) = T_STRING ( T_STRING ( , ) ) ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($vid) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($vid) ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($weight) . ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6042) ( ) { T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($theme) ) { T_VARIABLE($stylesheet) = T_STRING ( . T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING . , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($stylesheet) ) ) { T_STRING ( . T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING . , T_ARRAY ( T_VARIABLE($stylesheet) ) ) ; T_STRING ( . T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING . ) ; } } T_RETURN T_ARRAY ( ) ; } T_FUNCTION(system_update_6043) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , , , ) , ) , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , , , ) ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( , , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( , , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) ) ) ; T_STRING ( T_VARIABLE($ret) , , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , ) ; T_STRING ( T_VARIABLE($ret) , , T_ARRAY ( , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; } T_STRING ( , T_STRING ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6044) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_IF ( T_STRING ( , T_STRING ) ) { T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; } T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( ) ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( , ) ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6045) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($renamed_permission) = T_STRING ( , , T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($renamed_permission) = T_STRING ( , , T_VARIABLE($renamed_permission) ) ; T_VARIABLE($renamed_permission) = T_STRING ( , , T_VARIABLE($renamed_permission) ) ; T_IF ( T_VARIABLE($renamed_permission) T_IS_NOT_EQUAL T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($ret) [ ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($renamed_permission) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) ; } } T_STRING ( . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6046) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( , T_STRING ) ) { T_STRING ( , ) ; T_VARIABLE($ret) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(system_update_6047) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_VARIABLE($ret) [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($ret) ; }",10,1
"T_OPEN_TAG T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(system_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_GLOBAL T_VARIABLE($base_url) ; T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE . T_VARIABLE($arg) [ T_LNUMBER ] : T_VARIABLE($reference) = T_STRING ( , T_VARIABLE($arg) [ T_LNUMBER ] , T_LNUMBER ) ; T_VARIABLE($theme) = T_STRING ( T_VARIABLE($reference) ) ; T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($theme) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($base_url) . ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_IF ( T_VARIABLE($arg) [ T_LNUMBER ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($arg) [ T_LNUMBER ] T_IS_EQUAL T_LNUMBER ) { T_RETURN . T_STRING ( ) . ; } T_BREAK ; T_CASE : T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_IF ( T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; } T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN T_STRING ( ) ; T_CASE : T_RETURN . T_STRING ( ) . ; } } T_FUNCTION(system_theme) ( ) { T_RETURN T_STRING ( T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ) ; } T_FUNCTION(system_perm) ( ) { T_RETURN T_ARRAY ( , , , , , ) ; } T_FUNCTION(system_elements) ( ) { T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( , ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_VARIABLE($type) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_RETURN T_VARIABLE($type) ; } T_FUNCTION(system_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($theme) ) { T_VARIABLE($items) [ . T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING [ ] , T_DOUBLE_ARROW T_ARRAY ( , T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($theme) ) , ) ; } T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(_system_themes_access) ( T_VARIABLE($theme) ) { T_RETURN T_STRING ( ) T_BOOLEAN_AND ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_OR T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ( , ) ) ; } T_FUNCTION(system_init) ( ) { T_IF ( T_STRING ( T_LNUMBER ) T_IS_EQUAL T_BOOLEAN_OR ( T_STRING ( , ) T_BOOLEAN_AND T_STRING ( T_LNUMBER ) T_IS_EQUAL T_BOOLEAN_AND ( T_STRING ( T_LNUMBER ) T_IS_EQUAL T_BOOLEAN_OR T_STRING ( T_LNUMBER ) T_IS_EQUAL ) ) ) { T_GLOBAL T_VARIABLE($custom_theme) ; T_VARIABLE($custom_theme) = T_STRING ( , ) ; T_STRING ( T_STRING ( , ) . , ) ; } T_STRING ( T_STRING ( , ) . , ) ; T_STRING ( T_STRING ( , ) . , ) ; T_STRING ( T_STRING ( , ) . , ) ; } T_FUNCTION(system_user) ( T_VARIABLE($type) , T_VARIABLE($edit) , & T_VARIABLE($user) , T_VARIABLE($category) = T_STRING ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($category) T_IS_EQUAL ) { T_VARIABLE($form) [ ] = T_STRING ( T_STRING ( ) , T_ISSET ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_STRING , T_LNUMBER ) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($zones) = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($zones) , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_RETURN T_VARIABLE($form) ; } } T_FUNCTION(system_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER , T_VARIABLE($edit) = T_STRING ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($blocks) [ T_LNUMBER ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_RETURN T_VARIABLE($blocks) ; T_CASE : T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) , ) ; T_RETURN T_VARIABLE($form) ; T_CASE : T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_BREAK ; T_CASE : T_VARIABLE($image_path) = . T_STRING ( , ) . . T_STRING ( , ) . ; T_VARIABLE($block) [ ] = T_STRING ; T_VARIABLE($block) [ ] = T_STRING ( , T_VARIABLE($image_path) ) ; T_RETURN T_VARIABLE($block) ; } } T_FUNCTION(system_admin_menu_block) ( T_VARIABLE($item) ) { T_VARIABLE($content) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($item) [ ] ) ) { T_VARIABLE($item) T_PLUS_EQUAL T_STRING ( T_STRING ( , T_VARIABLE($item) [ ] ) ) ; } T_VARIABLE($result) = T_STRING ( , T_VARIABLE($item) [ ] , T_VARIABLE($item) [ ] ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($item) ) ; T_IF ( ! T_VARIABLE($item) [ ] ) { T_CONTINUE ; } T_IF ( ! T_EMPTY ( T_VARIABLE($item) [ ] [ ] [ ] ) ) { T_VARIABLE($item) [ ] = T_VARIABLE($item) [ ] [ ] [ ] ; } T_VARIABLE($content) [ ( T_LNUMBER + T_VARIABLE($item) [ ] ) . . T_VARIABLE($item) [ ] . . T_VARIABLE($item) [ ] ] = T_VARIABLE($item) ; } T_STRING ( T_VARIABLE($content) ) ; T_RETURN T_VARIABLE($content) ; } T_FUNCTION(system_admin_theme_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_BOOLEAN_AND T_VARIABLE($form_state) [ ] [ ] T_IS_NOT_EQUAL T_STRING ( , ) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) ; T_IF ( ! T_VARIABLE($result) ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; } } } T_FUNCTION(system_theme_select_form) ( T_VARIABLE($description) = , T_VARIABLE($default_value) = , T_VARIABLE($weight) = T_LNUMBER ) { T_IF ( T_STRING ( ) ) { T_VARIABLE($enabled) = T_ARRAY ( ) ; T_VARIABLE($themes) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($themes) T_AS T_VARIABLE($theme) ) { T_IF ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($enabled) [ ] = T_VARIABLE($theme) ; } } T_IF ( T_STRING ( T_VARIABLE($enabled) ) > T_LNUMBER ) { T_STRING ( T_VARIABLE($enabled) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($description) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ; T_FOREACH ( T_VARIABLE($enabled) T_AS T_VARIABLE($info) ) { T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ( , ) ? : T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($screenshot) = T_STRING ; T_VARIABLE($theme_key) = T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ; T_WHILE ( T_VARIABLE($theme_key) ) { T_IF ( T_STRING ( T_VARIABLE($themes) [ T_VARIABLE($theme_key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($screenshot) = T_VARIABLE($themes) [ T_VARIABLE($theme_key) ] T_OBJECT_OPERATOR T_STRING [ ] ; T_BREAK ; } T_VARIABLE($theme_key) = T_ISSET ( T_VARIABLE($themes) [ T_VARIABLE($theme_key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ? T_VARIABLE($themes) [ T_VARIABLE($theme_key) ] T_OBJECT_OPERATOR T_STRING [ ] : T_STRING ; } T_VARIABLE($screenshot) = T_VARIABLE($screenshot) ? T_STRING ( , T_VARIABLE($screenshot) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ) , , T_ARRAY ( T_DOUBLE_ARROW ) , T_STRING ) : T_STRING ( ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($screenshot) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) . ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ( , ) ? . T_STRING ( ) . : ) ) ; T_VARIABLE($options) [ T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ] = ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_VARIABLE($default_value) ? T_VARIABLE($default_value) : ) ; T_VARIABLE($form) [ ] = T_VARIABLE($weight) ; T_RETURN T_VARIABLE($form) ; } } } T_FUNCTION(system_check_directory) ( T_VARIABLE($form_element) ) { T_STRING ( T_VARIABLE($form_element) [ ] , T_STRING , T_VARIABLE($form_element) [ ] [ T_LNUMBER ] ) ; T_RETURN T_VARIABLE($form_element) ; } T_FUNCTION(system_get_files_database) ( & T_VARIABLE($files) , T_VARIABLE($type) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($type) ) ; T_WHILE ( T_VARIABLE($file) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($files) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; T_FOREACH ( T_VARIABLE($file) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ! T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($files) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_VARIABLE($key) ) ) { T_VARIABLE($files) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_VARIABLE($key) = T_VARIABLE($value) ; } } } } } T_FUNCTION(system_theme_default) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , , , , , , , , , , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; } T_FUNCTION(system_theme_data) ( ) { T_VARIABLE($themes) = T_STRING ( ) ; T_STRING ( T_VARIABLE($themes) , ) ; T_STRING ( ) ; T_FOREACH ( T_VARIABLE($themes) T_AS T_VARIABLE($theme) ) { T_IF ( ! T_ISSET ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING = ; } T_STRING ( , T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) , , T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING , T_ISSET ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING : T_LNUMBER , T_LNUMBER , T_LNUMBER ) ; } T_RETURN T_VARIABLE($themes) ; } T_FUNCTION(_system_theme_data) ( ) { T_STATIC T_VARIABLE($themes_info) = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($theme_info) ) ) { T_VARIABLE($themes) = T_STRING ( , ) ; T_VARIABLE($engines) = T_STRING ( , ) ; T_VARIABLE($defaults) = T_STRING ( ) ; T_VARIABLE($sub_themes) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($themes) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($theme) ) { T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($theme) T_OBJECT_OPERATOR T_STRING ) + T_VARIABLE($defaults) ; T_STRING ( , T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING , T_VARIABLE($themes) [ T_VARIABLE($key) ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($sub_themes) [ ] = T_VARIABLE($key) ; } T_IF ( T_EMPTY ( T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($filename) = T_STRING ( T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING . ; T_IF ( T_STRING ( T_VARIABLE($filename) ) ) { T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($filename) ; T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($key) ; } } T_ELSE { T_VARIABLE($engine) = T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] ; T_IF ( T_ISSET ( T_VARIABLE($engines) [ T_VARIABLE($engine) ] ) ) { T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($engines) [ T_VARIABLE($engine) ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($engines) [ T_VARIABLE($engine) ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_STRING ; } } T_VARIABLE($pathed_stylesheets) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($media) T_DOUBLE_ARROW T_VARIABLE($stylesheets) ) { T_FOREACH ( T_VARIABLE($stylesheets) T_AS T_VARIABLE($stylesheet) ) { T_VARIABLE($pathed_stylesheets) [ T_VARIABLE($media) ] [ T_VARIABLE($stylesheet) ] = T_STRING ( T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($stylesheet) ; } } T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($pathed_stylesheets) ; T_VARIABLE($scripts) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] T_AS T_VARIABLE($script) ) { T_VARIABLE($scripts) [ T_VARIABLE($script) ] = T_STRING ( T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($script) ; } T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($scripts) ; T_IF ( ! T_EMPTY ( T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] ; } } T_FOREACH ( T_VARIABLE($sub_themes) T_AS T_VARIABLE($key) ) { T_VARIABLE($base_key) = T_STRING ( T_VARIABLE($themes) , T_VARIABLE($key) ) ; T_IF ( ! T_VARIABLE($base_key) ) { T_CONTINUE ; } T_IF ( T_ISSET ( T_VARIABLE($themes) [ T_VARIABLE($base_key) ] T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_ISSET ( T_VARIABLE($themes) [ T_VARIABLE($base_key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] = T_VARIABLE($themes) [ T_VARIABLE($base_key) ] T_OBJECT_OPERATOR T_STRING [ ] ; T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($themes) [ T_VARIABLE($base_key) ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($themes) [ T_VARIABLE($base_key) ] T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($key) ; } } } T_VARIABLE($themes_info) = T_VARIABLE($themes) ; } T_RETURN T_VARIABLE($themes_info) ; } T_FUNCTION(system_find_base_theme) ( T_VARIABLE($themes) , T_VARIABLE($key) , T_VARIABLE($used_keys) = T_ARRAY ( ) ) { T_VARIABLE($base_key) = T_VARIABLE($themes) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($themes) [ T_VARIABLE($base_key) ] ) ) { T_RETURN T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($themes) [ T_VARIABLE($base_key) ] T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($used_keys) [ T_VARIABLE($base_key) ] ) ) { T_RETURN T_STRING ; } T_VARIABLE($used_keys) [ T_VARIABLE($base_key) ] = T_STRING ; T_RETURN T_STRING ( T_VARIABLE($themes) , T_VARIABLE($base_key) , T_VARIABLE($used_keys) ) ; } T_RETURN T_VARIABLE($base_key) ; } T_FUNCTION(system_region_list) ( T_VARIABLE($theme_key) ) { T_STATIC T_VARIABLE($list) = T_ARRAY ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($theme_key) , T_VARIABLE($list) ) ) { T_VARIABLE($info) = T_STRING ( T_STRING ( T_STRING ( , T_VARIABLE($theme_key) ) ) ) ; T_VARIABLE($list) [ T_VARIABLE($theme_key) ] = T_STRING ( , T_VARIABLE($info) [ ] ) ; } T_RETURN T_VARIABLE($list) [ T_VARIABLE($theme_key) ] ; } T_FUNCTION(system_default_region) ( T_VARIABLE($theme) ) { T_VARIABLE($regions) = T_STRING ( T_STRING ( T_VARIABLE($theme) ) ) ; T_RETURN T_ISSET ( T_VARIABLE($regions) [ T_LNUMBER ] ) ? T_VARIABLE($regions) [ T_LNUMBER ] : ; } T_FUNCTION(system_initialize_theme_blocks) ( T_VARIABLE($theme) ) { T_IF ( ! ( T_STRING ( T_STRING ( , T_VARIABLE($theme) ) ) ) ) { T_VARIABLE($default_theme) = T_STRING ( , ) ; T_VARIABLE($regions) = T_STRING ( T_VARIABLE($theme) ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($default_theme) ) ; T_WHILE ( T_VARIABLE($block) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( ! T_STRING ( T_VARIABLE($block) [ ] , T_VARIABLE($regions) ) ) { T_VARIABLE($block) [ ] = T_STRING ( T_VARIABLE($theme) ) ; } T_STRING ( , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] , T_VARIABLE($theme) , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] , T_VARIABLE($block) [ ] ) ; } } } T_FUNCTION(system_settings_form) ( T_VARIABLE($form) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_POST) ) T_BOOLEAN_AND T_STRING ( ) ) { T_STRING ( T_STRING ( ) , ) ; } T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_settings_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($op) = T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : ; T_UNSET ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_FOREACH ( T_VARIABLE($form_state) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) { T_STRING ( T_VARIABLE($key) ) ; } T_ELSE { T_IF ( T_STRING ( T_VARIABLE($value) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($value) = T_STRING ( T_STRING ( T_VARIABLE($value) ) ) ; } T_STRING ( T_VARIABLE($key) , T_VARIABLE($value) ) ; } } T_IF ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) { T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) ) ; } T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(_system_sort_requirements) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_IF ( ! T_ISSET ( T_VARIABLE($a) [ ] ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($b) [ ] ) ) { T_RETURN T_STRING ( T_VARIABLE($a) [ ] , T_VARIABLE($b) [ ] ) ; } T_RETURN - T_VARIABLE($b) [ ] ; } T_RETURN T_ISSET ( T_VARIABLE($b) [ ] ) ? T_VARIABLE($a) [ ] - T_VARIABLE($b) [ ] : T_VARIABLE($a) [ ] ; } T_FUNCTION(system_node_type) ( T_VARIABLE($op) , T_VARIABLE($info) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($old) = . T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($new) = . T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($theme_settings) = T_STRING ( , T_ARRAY ( ) ) ; T_IF ( T_ISSET ( T_VARIABLE($theme_settings) [ T_VARIABLE($old) ] ) ) { T_VARIABLE($theme_settings) [ T_VARIABLE($new) ] = T_VARIABLE($theme_settings) [ T_VARIABLE($old) ] ; T_UNSET ( T_VARIABLE($theme_settings) [ T_VARIABLE($old) ] ) ; T_STRING ( , T_VARIABLE($theme_settings) ) ; } } } T_FUNCTION(confirm_form) ( T_VARIABLE($form) , T_VARIABLE($question) , T_VARIABLE($path) , T_VARIABLE($description) = T_STRING , T_VARIABLE($yes) = T_STRING , T_VARIABLE($no) = T_STRING , T_VARIABLE($name) = ) { T_VARIABLE($description) = T_ISSET ( T_VARIABLE($description) ) ? T_VARIABLE($description) : T_STRING ( ) ; T_VARIABLE($query) = T_VARIABLE($fragment) = T_STRING ; T_IF ( T_STRING ( T_VARIABLE($path) ) ) { T_VARIABLE($query) = T_ISSET ( T_VARIABLE($path) [ ] ) ? T_VARIABLE($path) [ ] : T_STRING ; T_VARIABLE($fragment) = T_ISSET ( T_VARIABLE($path) [ ] ) ? T_VARIABLE($path) [ ] : T_STRING ; T_VARIABLE($path) = T_ISSET ( T_VARIABLE($path) [ ] ) ? T_VARIABLE($path) [ ] : T_STRING ; } T_VARIABLE($cancel) = T_STRING ( T_VARIABLE($no) ? T_VARIABLE($no) : T_STRING ( ) , T_VARIABLE($path) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($query) , T_DOUBLE_ARROW T_VARIABLE($fragment) ) ) ; T_STRING ( T_VARIABLE($question) ) ; T_VARIABLE($form) [ ] = T_STRING ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($description) ) ; T_VARIABLE($form) [ T_VARIABLE($name) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($yes) ? T_VARIABLE($yes) : T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($cancel) ) ; T_VARIABLE($form) [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_admin_compact_mode) ( ) { T_GLOBAL T_VARIABLE($user) ; T_RETURN ( T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : T_STRING ( , T_STRING ) ; } T_FUNCTION(system_get_module_admin_tasks) ( T_VARIABLE($module) ) { T_STATIC T_VARIABLE($items) ; T_VARIABLE($admin_access) = T_STRING ( ) ; T_VARIABLE($admin_tasks) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($items) ) ) { T_VARIABLE($result) = T_STRING ( ) ; T_VARIABLE($items) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($item) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($item) ) ; T_IF ( T_VARIABLE($item) [ ] ) { T_VARIABLE($items) [ T_VARIABLE($item) [ ] ] = T_VARIABLE($item) ; } } } T_VARIABLE($admin_tasks) = T_ARRAY ( ) ; T_VARIABLE($admin_task_count) = T_LNUMBER ; T_IF ( T_STRING ( T_VARIABLE($module) , ) T_BOOLEAN_AND T_VARIABLE($admin_access) ) { T_VARIABLE($admin_tasks) [ - T_LNUMBER ] = T_STRING ( T_STRING ( ) , , T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($module) ) ) ; } T_IF ( T_VARIABLE($menu) = T_STRING ( T_VARIABLE($module) , ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($menu) ) T_AS T_VARIABLE($path) ) { T_IF ( T_ISSET ( T_VARIABLE($items) [ T_VARIABLE($path) ] ) ) { T_VARIABLE($admin_tasks) [ T_VARIABLE($items) [ T_VARIABLE($path) ] [ ] . T_VARIABLE($admin_task_count) T_INC ] = T_STRING ( T_VARIABLE($items) [ T_VARIABLE($path) ] [ ] , T_VARIABLE($path) ) ; } } } T_RETURN T_VARIABLE($admin_tasks) ; } T_FUNCTION(system_cron) ( ) { T_STRING ( , T_STRING ( ) - T_LNUMBER ) ; T_STRING ( , T_STRING ( ) - T_LNUMBER ) ; T_VARIABLE($result) = T_STRING ( , T_STRING , T_STRING ( ) - T_STRING ) ; T_WHILE ( T_VARIABLE($file) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( ! T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) , ) ; T_CONTINUE ; } } T_STRING ( , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(system_hook_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , ) , ) , ) ; } T_FUNCTION(system_action_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( , , , , ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( , , , , ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( , , , ) , T_DOUBLE_ARROW T_ARRAY ( , , , , ) , ) ) ) ; } T_FUNCTION(system_actions_manage) ( ) { T_VARIABLE($output) = ; T_VARIABLE($actions) = T_STRING ( ) ; T_STRING ( T_VARIABLE($actions) ) ; T_VARIABLE($actions_map) = T_STRING ( T_VARIABLE($actions) ) ; T_VARIABLE($options) = T_ARRAY ( T_STRING ( ) ) ; T_VARIABLE($unconfigurable) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($actions_map) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($array) ) { T_IF ( T_VARIABLE($array) [ ] ) { T_VARIABLE($options) [ T_VARIABLE($key) ] = T_VARIABLE($array) [ ] . ; } T_ELSE { T_VARIABLE($unconfigurable) [ ] = T_VARIABLE($array) ; } } T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($instances_present) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($instances_present) ? T_STRING ( ) : , T_DOUBLE_ARROW ) ) ; T_VARIABLE($sql) = ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) . T_STRING ( T_VARIABLE($header) ) , T_LNUMBER ) ; T_WHILE ( T_VARIABLE($action) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($row) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ? T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) : ) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ? T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) : ) ) ; } T_IF ( T_VARIABLE($row) ) { T_VARIABLE($pager) = T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($pager) ) ) { T_VARIABLE($row) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($pager) , T_DOUBLE_ARROW ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($row) ) ; } T_IF ( T_VARIABLE($actions_map) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($options) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(system_actions_manage_form) ( T_VARIABLE($form_state) , T_VARIABLE($options) = T_ARRAY ( ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_actions_manage_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_VARIABLE($form_state) [ ] = . T_VARIABLE($form_state) [ ] [ ] ; } } T_FUNCTION(system_actions_configure) ( T_VARIABLE($form_state) , T_VARIABLE($action) = T_STRING ) { T_IF ( T_VARIABLE($action) T_IS_IDENTICAL T_STRING ) { T_STRING ( ) ; } T_VARIABLE($actions_map) = T_STRING ( T_STRING ( ) ) ; T_VARIABLE($edit) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($action) ) ) { T_VARIABLE($aid) = T_VARIABLE($action) ; T_VARIABLE($data) = T_STRING ( T_STRING ( , T_STRING ( T_VARIABLE($aid) ) ) ) ; T_VARIABLE($edit) [ ] = T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($edit) [ ] = T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($function) = T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($action) = T_STRING ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($params) = T_STRING ( T_VARIABLE($data) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($params) ) { T_FOREACH ( T_VARIABLE($params) T_AS T_VARIABLE($name) T_DOUBLE_ARROW T_VARIABLE($val) ) { T_VARIABLE($edit) [ T_VARIABLE($name) ] = T_VARIABLE($val) ; } } } T_ELSE { T_VARIABLE($function) = T_VARIABLE($actions_map) [ T_VARIABLE($action) ] [ ] ; T_VARIABLE($edit) [ ] = T_VARIABLE($actions_map) [ T_VARIABLE($action) ] [ ] ; T_VARIABLE($edit) [ ] = T_VARIABLE($actions_map) [ T_VARIABLE($action) ] [ ] ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW - T_LNUMBER ) ; T_VARIABLE($action_form) = T_VARIABLE($function) . ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) , T_VARIABLE($action_form) ( T_VARIABLE($edit) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($action) , ) ; T_IF ( T_ISSET ( T_VARIABLE($aid) ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($aid) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_actions_configure_validate) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_VARIABLE($function) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) . ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($function) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; } } T_FUNCTION(system_actions_configure_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($function) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($submit_function) = T_VARIABLE($function) . ; T_VARIABLE($params) = T_VARIABLE($submit_function) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($aid) = T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : T_STRING ; T_STRING ( T_VARIABLE($function) , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($params) , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($aid) ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; } T_FUNCTION(system_actions_delete_form) ( T_VARIABLE($form_state) , T_VARIABLE($action) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING , ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(system_actions_delete_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($aid) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($action) = T_STRING ( T_VARIABLE($aid) ) ; T_STRING ( T_VARIABLE($aid) ) ; T_VARIABLE($description) = T_STRING ( T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($aid) , T_DOUBLE_ARROW T_VARIABLE($description) ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($description) ) ) ) ; T_VARIABLE($form_state) [ ] = ; } T_FUNCTION(system_action_delete_orphans_post) ( T_VARIABLE($orphaned) ) { T_FOREACH ( T_VARIABLE($orphaned) T_AS T_VARIABLE($callback) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($callback) ) ) ) ; } } T_FUNCTION(system_actions_remove_orphans) ( ) { T_STRING ( T_STRING ( ) , T_STRING ) ; T_STRING ( ) ; } T_FUNCTION(system_send_email_action_form) ( T_VARIABLE($context) ) { T_IF ( ! T_ISSET ( T_VARIABLE($context) [ ] ) ) { T_VARIABLE($context) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($context) [ ] ) ) { T_VARIABLE($context) [ ] = ; } T_IF ( ! T_ISSET ( T_VARIABLE($context) [ ] ) ) { T_VARIABLE($context) [ ] = ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($context) [ ] , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($context) [ ] , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($context) [ ] , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_send_email_action_validate) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_VARIABLE($form_values) = T_VARIABLE($form_state) [ ] ; T_IF ( ! T_STRING ( T_VARIABLE($form_values) [ ] ) T_BOOLEAN_AND T_VARIABLE($form_values) [ ] T_IS_NOT_EQUAL ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) ) ; } } T_FUNCTION(system_send_email_action_submit) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_VARIABLE($form_values) = T_VARIABLE($form_state) [ ] ; T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_values) [ ] , T_DOUBLE_ARROW T_VARIABLE($form_values) [ ] , T_DOUBLE_ARROW T_VARIABLE($form_values) [ ] , ) ; T_RETURN T_VARIABLE($params) ; } T_FUNCTION(system_send_email_action) ( T_VARIABLE($object) , T_VARIABLE($context) ) { T_GLOBAL T_VARIABLE($user) ; T_SWITCH ( T_VARIABLE($context) [ ] ) { T_CASE : T_VARIABLE($node) = T_VARIABLE($context) [ ] ; T_BREAK ; T_CASE : T_VARIABLE($comment) = T_VARIABLE($context) [ ] ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($account) = T_VARIABLE($context) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($context) [ ] ) ) { T_VARIABLE($node) = T_VARIABLE($context) [ ] ; } T_ELSEIF ( T_VARIABLE($context) [ ] T_IS_EQUAL ) { T_STRING ( , ) ; T_RETURN ; } T_BREAK ; T_DEFAULT : T_VARIABLE($node) = T_VARIABLE($object) ; } T_VARIABLE($recipient) = T_VARIABLE($context) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($node) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($account) ) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } T_IF ( T_VARIABLE($recipient) T_IS_EQUAL ) { T_VARIABLE($recipient) = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; } } T_IF ( ! T_ISSET ( T_VARIABLE($account) ) ) { T_VARIABLE($account) = T_VARIABLE($user) ; } T_VARIABLE($language) = T_STRING ( T_VARIABLE($account) ) ; T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) , T_DOUBLE_ARROW T_VARIABLE($object) , T_DOUBLE_ARROW T_VARIABLE($context) ) ; T_IF ( T_ISSET ( T_VARIABLE($node) ) ) { T_VARIABLE($params) [ ] = T_VARIABLE($node) ; } T_IF ( T_STRING ( , , T_VARIABLE($recipient) , T_VARIABLE($language) , T_VARIABLE($params) ) ) { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($recipient) ) ) ; } T_ELSE { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($recipient) ) ) ; } } T_FUNCTION(system_mail) ( T_VARIABLE($key) , & T_VARIABLE($message) , T_VARIABLE($params) ) { T_VARIABLE($account) = T_VARIABLE($params) [ ] ; T_VARIABLE($context) = T_VARIABLE($params) [ ] ; T_VARIABLE($variables) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , ) ; T_IF ( T_VARIABLE($context) [ ] T_IS_EQUAL ) { T_VARIABLE($object) = T_VARIABLE($params) [ ] ; T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , ) ; } T_IF ( T_ISSET ( T_VARIABLE($params) [ ] ) ) { T_VARIABLE($node) = T_VARIABLE($params) [ ] ; T_VARIABLE($variables) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , ) ; } T_VARIABLE($subject) = T_STRING ( T_VARIABLE($context) [ ] , T_VARIABLE($variables) ) ; T_VARIABLE($body) = T_STRING ( T_VARIABLE($context) [ ] , T_VARIABLE($variables) ) ; T_VARIABLE($message) [ ] T_CONCAT_EQUAL T_STRING ( T_ARRAY ( , ) , , T_VARIABLE($subject) ) ; T_VARIABLE($message) [ ] [ ] = T_STRING ( T_VARIABLE($body) ) ; } T_FUNCTION(system_message_action_form) ( T_VARIABLE($context) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($context) [ ] ) ? T_VARIABLE($context) [ ] : , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_message_action_submit) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ; } T_FUNCTION(system_message_action) ( & T_VARIABLE($object) , T_VARIABLE($context) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($variables) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : T_STRING ( , T_STRING ( ) ) , ) ; T_SWITCH ( T_VARIABLE($context) [ ] ) { T_CASE : T_VARIABLE($node) = T_VARIABLE($context) [ ] ; T_BREAK ; T_CASE : T_VARIABLE($comment) = T_VARIABLE($context) [ ] ; T_VARIABLE($node) = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; T_CASE : T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($variables) = T_STRING ( T_VARIABLE($variables) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , ) ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($node) = T_VARIABLE($object) ; } T_IF ( T_ISSET ( T_VARIABLE($node) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($node) ) ) { T_VARIABLE($variables) = T_STRING ( T_VARIABLE($variables) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( , T_VARIABLE($node) ) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , ) ) ; } T_VARIABLE($context) [ ] = T_STRING ( T_VARIABLE($context) [ ] , T_VARIABLE($variables) ) ; T_STRING ( T_VARIABLE($context) [ ] ) ; } T_FUNCTION(system_goto_action_form) ( T_VARIABLE($context) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($context) [ ] ) ? T_VARIABLE($context) [ ] : , T_DOUBLE_ARROW T_STRING , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(system_goto_action_submit) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ; } T_FUNCTION(system_goto_action) ( T_VARIABLE($object) , T_VARIABLE($context) ) { T_STRING ( T_VARIABLE($context) [ ] ) ; } T_FUNCTION(_system_zonelist) ( ) { T_VARIABLE($timestamp) = T_STRING ( ) ; T_VARIABLE($zonelist) = T_ARRAY ( - T_LNUMBER , - T_LNUMBER , - T_DNUMBER , - T_LNUMBER , - T_LNUMBER , - T_LNUMBER , - T_LNUMBER , - T_LNUMBER , - T_LNUMBER , - T_DNUMBER , - T_LNUMBER , - T_LNUMBER , - T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_DNUMBER , T_LNUMBER , T_LNUMBER , T_DNUMBER , T_DNUMBER , T_LNUMBER , T_DNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_DNUMBER , T_LNUMBER , T_DNUMBER , T_LNUMBER , T_DNUMBER , T_LNUMBER , T_DNUMBER , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($zones) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($zonelist) T_AS T_VARIABLE($offset) ) { T_VARIABLE($zone) = T_VARIABLE($offset) * T_LNUMBER ; T_VARIABLE($zones) [ T_VARIABLE($zone) ] = T_STRING ( T_VARIABLE($timestamp) , , T_STRING ( , ) . , T_VARIABLE($zone) ) ; } T_RETURN T_VARIABLE($zones) ; } T_FUNCTION(system_check_http_request) ( ) { T_STRING ( ) ; T_VARIABLE($path) = ; T_STRING ( T_VARIABLE($path) ) ; T_VARIABLE($nothing) = T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( T_VARIABLE($path) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ) ; T_VARIABLE($works) = T_ISSET ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($nothing) ; T_STRING ( , ! T_VARIABLE($works) ) ; T_RETURN T_VARIABLE($works) ; } T_FUNCTION(theme_system_powered_by) ( T_VARIABLE($image_path) ) { T_VARIABLE($image) = T_STRING ( , T_VARIABLE($image_path) , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN T_STRING ( T_VARIABLE($image) , , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) ) ; }",13,1
"T_OPEN_TAG T_FUNCTION(taxonomy_overview_vocabularies) ( ) { T_VARIABLE($vocabularies) = T_STRING ( ) ; T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_FOREACH ( T_VARIABLE($vocabularies) T_AS T_VARIABLE($vocabulary) ) { T_VARIABLE($types) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($type) ) { T_VARIABLE($node_type) = T_STRING ( , T_VARIABLE($type) ) ; T_VARIABLE($types) [ ] = T_VARIABLE($node_type) ? T_STRING ( T_VARIABLE($node_type) ) : T_STRING ( T_VARIABLE($type) ) ; } T_VARIABLE($form) [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY_CAST T_VARIABLE($vocabulary) ; T_VARIABLE($form) [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($types) ) ) ; T_VARIABLE($form) [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ) ) ; } T_IF ( T_STRING ( T_VARIABLE($vocabularies) ) > T_LNUMBER ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($vocabulary) ) ) { T_UNSET ( T_VARIABLE($form) [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ ] ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(taxonomy_overview_vocabularies_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_FOREACH ( T_VARIABLE($form_state) [ ] T_AS T_VARIABLE($vid) T_DOUBLE_ARROW T_VARIABLE($vocabulary) ) { T_IF ( T_STRING ( T_VARIABLE($vid) ) T_BOOLEAN_AND T_VARIABLE($form) [ T_VARIABLE($vid) ] [ ] [ ] T_IS_NOT_EQUAL T_VARIABLE($form_state) [ ] [ T_VARIABLE($vid) ] [ ] ) { T_VARIABLE($form) [ T_VARIABLE($vid) ] [ ] [ ] = T_VARIABLE($form_state) [ ] [ T_VARIABLE($vid) ] [ ] ; T_STRING ( T_VARIABLE($form) [ T_VARIABLE($vid) ] [ ] ) ; } } } T_FUNCTION(theme_taxonomy_overview_vocabularies) ( T_VARIABLE($form) ) { T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ) { T_VARIABLE($vocabulary) = & T_VARIABLE($form) [ T_VARIABLE($key) ] ; T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($vocabulary) [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($vocabulary) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($vocabulary) [ ] ) ) { T_VARIABLE($vocabulary) [ ] [ ] [ ] = ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($vocabulary) [ ] ) ; } T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($vocabulary) [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($vocabulary) [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($vocabulary) [ ] ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($row) , T_DOUBLE_ARROW ) ; } } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($header) [ ] = T_STRING ( ) ; T_STRING ( , , , ) ; } T_VARIABLE($header) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ; T_RETURN T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) . T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(taxonomy_form_vocabulary) ( & T_VARIABLE($form_state) , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_VARIABLE($edit) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( , T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_ISSET ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(taxonomy_form_vocabulary_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_state) [ ] [ ] = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_SWITCH ( T_STRING ( T_VARIABLE($form_state) [ ] ) ) { T_CASE T_STRING : T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($form_state) [ ] [ ] ) ) ; T_BREAK ; T_CASE T_STRING : T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($form_state) [ ] [ ] ) ) ; T_BREAK ; } T_VARIABLE($form_state) [ ] = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(taxonomy_admin_vocabulary_edit) ( T_VARIABLE($vocabulary) ) { T_IF ( ( T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_VARIABLE($_POST) [ ] T_IS_EQUAL T_STRING ( ) ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_POST) [ ] ) ) { T_RETURN T_STRING ( , T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; } T_RETURN T_STRING ( , T_ARRAY_CAST T_VARIABLE($vocabulary) ) ; } T_FUNCTION(taxonomy_admin_term_edit) ( T_VARIABLE($tid) ) { T_IF ( T_VARIABLE($term) = T_ARRAY_CAST T_STRING ( T_VARIABLE($tid) ) ) { T_RETURN T_STRING ( , T_STRING ( T_VARIABLE($term) [ ] ) , T_VARIABLE($term) ) ; } T_RETURN T_STRING ( ) ; } T_FUNCTION(taxonomy_overview_terms) ( & T_VARIABLE($form_state) , T_VARIABLE($vocabulary) ) { T_GLOBAL T_VARIABLE($pager_page_array) , T_VARIABLE($pager_total) , T_VARIABLE($pager_total_items) ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] ) ) { T_RETURN T_STRING ( T_VARIABLE($form_state) , T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY_CAST T_VARIABLE($vocabulary) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($page) = T_ISSET ( T_VARIABLE($_GET) [ ] ) ? T_VARIABLE($_GET) [ ] : T_LNUMBER ; T_VARIABLE($page_increment) = T_LNUMBER ; T_VARIABLE($page_entries) = T_LNUMBER ; T_VARIABLE($before_entries) = T_LNUMBER ; T_VARIABLE($after_entries) = T_LNUMBER ; T_VARIABLE($root_entries) = T_LNUMBER ; T_VARIABLE($back_peddle) = T_STRING ; T_VARIABLE($forward_peddle) = T_LNUMBER ; T_VARIABLE($current_page) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($results) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($page_increment) , T_LNUMBER , T_STRING , T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($total_entries) = T_STRING ( T_STRING ( ) , T_VARIABLE($page_increment) , T_LNUMBER , T_STRING , T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($results) ) ) { T_VARIABLE($key) = . T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING . ; T_VARIABLE($current_page) [ T_VARIABLE($key) ] = T_VARIABLE($term) ; T_VARIABLE($page_entries) T_INC ; } } T_ELSE { T_VARIABLE($term_deltas) = T_ARRAY ( ) ; T_VARIABLE($tree) = T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($term) = T_STRING ( T_VARIABLE($tree) ) ; T_DO { T_IF ( T_EMPTY ( T_VARIABLE($term) ) ) { T_BREAK ; } T_IF ( T_VARIABLE($page) T_BOOLEAN_AND ( T_VARIABLE($page) * T_VARIABLE($page_increment) ) > T_VARIABLE($before_entries) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($back_peddle) ) ) { T_VARIABLE($before_entries) T_INC ; T_CONTINUE ; } T_ELSEIF ( T_VARIABLE($page_entries) > T_VARIABLE($page_increment) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($complete_tree) ) ) { T_VARIABLE($after_entries) T_INC ; T_CONTINUE ; } T_IF ( T_ISSET ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ) T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($back_peddle) ) ) { T_VARIABLE($back_peddle) = T_LNUMBER ; T_WHILE ( T_VARIABLE($pterm) = T_STRING ( T_VARIABLE($tree) ) ) { T_VARIABLE($before_entries) T_DEC ; T_VARIABLE($back_peddle) T_INC ; T_IF ( T_VARIABLE($pterm) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($tree) ) ; T_CONTINUE T_LNUMBER ; } } } T_VARIABLE($back_peddle) = T_ISSET ( T_VARIABLE($back_peddle) ) ? T_VARIABLE($back_peddle) : T_LNUMBER ; T_IF ( T_VARIABLE($page_entries) T_IS_GREATER_OR_EQUAL T_VARIABLE($page_increment) + T_VARIABLE($back_peddle) + T_LNUMBER T_BOOLEAN_AND T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($root_entries) > T_LNUMBER ) { T_VARIABLE($complete_tree) = T_STRING ; T_VARIABLE($after_entries) T_INC ; T_CONTINUE ; } T_IF ( T_VARIABLE($page_entries) T_IS_GREATER_OR_EQUAL T_VARIABLE($page_increment) + T_VARIABLE($back_peddle) ) { T_VARIABLE($forward_peddle) T_INC ; } T_VARIABLE($page_entries) T_INC ; T_VARIABLE($term_deltas) [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] = T_ISSET ( T_VARIABLE($term_deltas) [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] ) ? T_VARIABLE($term_deltas) [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] + T_LNUMBER : T_LNUMBER ; T_VARIABLE($key) = . T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($term_deltas) [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] ; T_IF ( T_VARIABLE($page_entries) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($form) [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($root_entries) T_INC ; } T_VARIABLE($current_page) [ T_VARIABLE($key) ] = T_VARIABLE($term) ; } T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($tree) ) ) ; T_VARIABLE($total_entries) = T_VARIABLE($before_entries) + T_VARIABLE($page_entries) + T_VARIABLE($after_entries) ; T_VARIABLE($pager_total_items) [ T_LNUMBER ] = T_VARIABLE($total_entries) ; T_VARIABLE($pager_page_array) [ T_LNUMBER ] = T_VARIABLE($page) ; T_VARIABLE($pager_total) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($total_entries) / T_VARIABLE($page_increment) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($order) = T_STRING ( T_STRING ( T_VARIABLE($form_state) [ ] ) ) ; T_VARIABLE($current_page) = T_STRING ( T_VARIABLE($order) , T_VARIABLE($current_page) ) ; T_FOREACH ( T_VARIABLE($current_page) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($term) ) { T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ T_VARIABLE($key) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($form_state) [ ] [ T_VARIABLE($key) ] [ ] ) ) { T_VARIABLE($current_page) [ T_VARIABLE($key) ] T_OBJECT_OPERATOR T_STRING = T_VARIABLE($form_state) [ ] [ T_VARIABLE($key) ] [ ] ; } T_ELSE { T_UNSET ( T_VARIABLE($current_page) [ T_VARIABLE($key) ] ) ; } } } T_FOREACH ( T_VARIABLE($current_page) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($term) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY_CAST T_VARIABLE($term) ; T_IF ( T_ISSET ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING [ T_LNUMBER ] ; T_UNSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] , T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ) ; T_IF ( ! T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING < T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($tree) ) > T_LNUMBER ) { T_VARIABLE($form) [ ] = T_STRING ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , ) ; T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , ) ; } T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; } T_VARIABLE($form) [ ] = T_VARIABLE($total_entries) ; T_VARIABLE($form) [ ] = T_VARIABLE($page_increment) ; T_VARIABLE($form) [ ] = T_VARIABLE($page_entries) ; T_VARIABLE($form) [ ] = T_VARIABLE($back_peddle) ; T_VARIABLE($form) [ ] = T_VARIABLE($forward_peddle) ; T_VARIABLE($form) [ ] = T_STRING ( ) ; T_IF ( ! T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING < T_LNUMBER T_BOOLEAN_AND T_STRING ( T_VARIABLE($tree) ) > T_LNUMBER ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($_GET) [ ] . ( T_ISSET ( T_VARIABLE($_GET) [ ] ) ? . T_VARIABLE($_GET) [ ] : ) ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(taxonomy_overview_terms_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; } T_VARIABLE($form_state) [ ] = T_STRING ; T_VARIABLE($form_state) [ ] = T_STRING ; T_RETURN ; } T_VARIABLE($order) = T_STRING ( T_STRING ( T_VARIABLE($form) [ ] ) ) ; T_VARIABLE($form_state) [ ] = T_STRING ( T_VARIABLE($order) , T_VARIABLE($form_state) [ ] ) ; T_VARIABLE($vocabulary) = T_VARIABLE($form) [ ] ; T_VARIABLE($hierarchy) = T_LNUMBER ; T_VARIABLE($changed_terms) = T_ARRAY ( ) ; T_VARIABLE($tree) = T_STRING ( T_VARIABLE($vocabulary) [ ] ) ; T_IF ( T_EMPTY ( T_VARIABLE($tree) ) ) { T_RETURN ; } T_VARIABLE($weight) = T_LNUMBER ; T_VARIABLE($term) = T_ARRAY_CAST T_VARIABLE($tree) [ T_LNUMBER ] ; T_WHILE ( T_VARIABLE($term) [ ] T_IS_NOT_EQUAL T_VARIABLE($form) [ ] ) { T_IF ( T_VARIABLE($term) [ ] [ T_LNUMBER ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($term) [ ] T_IS_NOT_EQUAL T_VARIABLE($weight) ) { T_VARIABLE($term) [ ] = T_VARIABLE($term) [ ] [ T_LNUMBER ] ; T_VARIABLE($term) [ ] = T_VARIABLE($weight) ; T_VARIABLE($changed_terms) [ T_VARIABLE($term) [ ] ] = T_VARIABLE($term) ; } T_VARIABLE($weight) T_INC ; T_VARIABLE($hierarchy) = T_VARIABLE($term) [ ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_LNUMBER ? T_LNUMBER : T_VARIABLE($hierarchy) ; T_VARIABLE($term) = T_ARRAY_CAST T_VARIABLE($tree) [ T_VARIABLE($weight) ] ; } T_VARIABLE($level_weights) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($form_state) [ ] T_AS T_VARIABLE($tid) T_DOUBLE_ARROW T_VARIABLE($values) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($tid) ] [ ] ) ) { T_VARIABLE($term) = T_VARIABLE($form) [ T_VARIABLE($tid) ] [ ] ; T_IF ( T_VARIABLE($values) [ ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($term) [ ] T_IS_NOT_EQUAL T_VARIABLE($weight) ) { T_VARIABLE($term) [ ] = T_VARIABLE($weight) ; T_VARIABLE($changed_terms) [ T_VARIABLE($term) [ ] ] = T_VARIABLE($term) ; } T_ELSEIF ( T_VARIABLE($values) [ ] > T_LNUMBER ) { T_VARIABLE($level_weights) [ T_VARIABLE($values) [ ] ] = T_ISSET ( T_VARIABLE($level_weights) [ T_VARIABLE($values) [ ] ] ) ? T_VARIABLE($level_weights) [ T_VARIABLE($values) [ ] ] + T_LNUMBER : T_LNUMBER ; T_IF ( T_VARIABLE($level_weights) [ T_VARIABLE($values) [ ] ] T_IS_NOT_EQUAL T_VARIABLE($term) [ ] ) { T_VARIABLE($term) [ ] = T_VARIABLE($level_weights) [ T_VARIABLE($values) [ ] ] ; T_VARIABLE($changed_terms) [ T_VARIABLE($term) [ ] ] = T_VARIABLE($term) ; } } T_IF ( T_VARIABLE($values) [ ] T_IS_NOT_EQUAL T_VARIABLE($term) [ ] ) { T_VARIABLE($term) [ ] = T_VARIABLE($values) [ ] ; T_VARIABLE($changed_terms) [ T_VARIABLE($term) [ ] ] = T_VARIABLE($term) ; } T_VARIABLE($hierarchy) = T_VARIABLE($term) [ ] T_IS_NOT_EQUAL T_LNUMBER ? T_LNUMBER : T_VARIABLE($hierarchy) ; T_VARIABLE($weight) T_INC ; } } T_FOR ( T_VARIABLE($weight) ; T_VARIABLE($weight) < T_STRING ( T_VARIABLE($tree) ) ; T_VARIABLE($weight) T_INC ) { T_VARIABLE($term) = T_ARRAY_CAST T_VARIABLE($tree) [ T_VARIABLE($weight) ] ; T_IF ( T_VARIABLE($term) [ ] [ T_LNUMBER ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($term) [ ] T_IS_NOT_EQUAL T_VARIABLE($weight) ) { T_VARIABLE($term) [ ] = T_VARIABLE($term) [ ] [ T_LNUMBER ] ; T_VARIABLE($term) [ ] = T_VARIABLE($weight) ; T_VARIABLE($changed_terms) [ T_VARIABLE($term) [ ] ] = T_VARIABLE($term) ; } T_VARIABLE($hierarchy) = T_VARIABLE($term) [ ] [ T_LNUMBER ] T_IS_NOT_EQUAL T_LNUMBER ? T_LNUMBER : T_VARIABLE($hierarchy) ; } T_FOREACH ( T_VARIABLE($changed_terms) T_AS T_VARIABLE($term) ) { T_STRING ( T_VARIABLE($term) ) ; } T_IF ( T_VARIABLE($vocabulary) [ ] T_IS_NOT_EQUAL T_VARIABLE($hierarchy) ) { T_VARIABLE($vocabulary) [ ] = T_VARIABLE($hierarchy) ; T_STRING ( T_VARIABLE($vocabulary) ) ; } } T_FUNCTION(theme_taxonomy_overview_terms) ( T_VARIABLE($form) ) { T_VARIABLE($page_increment) = T_VARIABLE($form) [ ] ; T_VARIABLE($page_entries) = T_VARIABLE($form) [ ] ; T_VARIABLE($back_peddle) = T_VARIABLE($form) [ ] ; T_VARIABLE($forward_peddle) = T_VARIABLE($form) [ ] ; T_IF ( T_VARIABLE($form) [ ] ) { T_STRING ( , , , , , , T_STRING ) ; T_STRING ( , , , , T_STRING , T_STRING , T_STRING ) ; T_STRING ( T_STRING ( , ) . ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($back_peddle) , T_DOUBLE_ARROW T_VARIABLE($forward_peddle) ) ) , ) ; T_STRING ( T_STRING ( , ) . ) ; } T_VARIABLE($errors) = T_STRING ( ) T_IS_NOT_EQUAL T_STRING ? T_STRING ( ) : T_ARRAY ( ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ) { T_VARIABLE($term) = & T_VARIABLE($form) [ T_VARIABLE($key) ] ; T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($row) [ ] = ( T_ISSET ( T_VARIABLE($term) [ ] [ ] ) T_BOOLEAN_AND T_VARIABLE($term) [ ] [ ] > T_LNUMBER ? T_STRING ( , T_VARIABLE($term) [ ] [ ] ) : ) . T_STRING ( T_VARIABLE($term) [ ] ) ; T_IF ( T_VARIABLE($form) [ ] ) { T_VARIABLE($term) [ ] [ ] [ ] = ; T_VARIABLE($term) [ ] [ ] [ ] = ; T_VARIABLE($term) [ ] [ ] [ ] = ; T_VARIABLE($row) [ T_LNUMBER ] T_CONCAT_EQUAL T_STRING ( T_VARIABLE($term) [ ] ) . T_STRING ( T_VARIABLE($term) [ ] ) . T_STRING ( T_VARIABLE($term) [ ] ) ; } T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($term) [ ] ) ; T_VARIABLE($row) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($row) ) ; T_VARIABLE($rows) [ T_VARIABLE($key) ] = T_VARIABLE($row) ; } } T_VARIABLE($row_position) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($rows) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($row) ) { T_VARIABLE($classes) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($classes) [ ] = ; } T_IF ( T_VARIABLE($row_position) < T_VARIABLE($back_peddle) T_BOOLEAN_OR T_VARIABLE($row_position) T_IS_GREATER_OR_EQUAL T_VARIABLE($page_entries) - T_VARIABLE($forward_peddle) ) { T_VARIABLE($classes) [ ] = ; } T_IF ( T_VARIABLE($row_position) T_IS_NOT_IDENTICAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($row_position) T_IS_NOT_IDENTICAL T_STRING ( T_VARIABLE($rows) ) - T_LNUMBER ) { T_IF ( T_VARIABLE($row_position) T_IS_EQUAL T_VARIABLE($back_peddle) - T_LNUMBER T_BOOLEAN_OR T_VARIABLE($row_position) T_IS_EQUAL T_VARIABLE($page_entries) - T_VARIABLE($forward_peddle) - T_LNUMBER ) { T_VARIABLE($classes) [ ] = ; } T_ELSEIF ( T_VARIABLE($row_position) T_IS_EQUAL T_VARIABLE($back_peddle) T_BOOLEAN_OR T_VARIABLE($row_position) T_IS_EQUAL T_VARIABLE($page_entries) - T_VARIABLE($forward_peddle) ) { T_VARIABLE($classes) [ ] = ; } } T_FOREACH ( T_VARIABLE($errors) T_AS T_VARIABLE($error_key) T_DOUBLE_ARROW T_VARIABLE($error) ) { T_IF ( T_STRING ( T_VARIABLE($error_key) , T_VARIABLE($key) ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($classes) [ ] = ; } } T_VARIABLE($rows) [ T_VARIABLE($key) ] [ ] = T_STRING ( , T_VARIABLE($classes) ) ; T_VARIABLE($row_position) T_INC ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form) [ ] , T_DOUBLE_ARROW ) ) ; } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_VARIABLE($page_increment) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(taxonomy_add_term_page) ( T_VARIABLE($vocabulary) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_RETURN T_STRING ( , T_VARIABLE($vocabulary) ) ; } T_FUNCTION(taxonomy_form_term) ( & T_VARIABLE($form_state) , T_VARIABLE($vocabulary) , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_VARIABLE($edit) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($parent) = T_STRING ( T_STRING ( T_VARIABLE($edit) [ ] ) ) ; T_VARIABLE($form) [ ] = T_VARIABLE($edit) ; T_VARIABLE($form) [ ] [ ] = T_VARIABLE($parent) ; T_VARIABLE($form) [ ] = T_ARRAY_CAST T_VARIABLE($vocabulary) ; T_VARIABLE($form) [ ] [ ] = T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] ) ) { T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( T_VARIABLE($form_state) , T_VARIABLE($edit) [ ] ) ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($form_state) [ ] ) ) { T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( T_VARIABLE($form_state) , T_VARIABLE($vocabulary) ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ? T_STRING : T_STRING , ) ; T_IF ( ! T_STRING ( , T_STRING ) ) { T_VARIABLE($parent) = T_STRING ( T_STRING ( T_VARIABLE($edit) [ ] ) ) ; T_VARIABLE($children) = T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($edit) [ ] ) ; T_FOREACH ( T_VARIABLE($children) T_AS T_VARIABLE($child) ) { T_VARIABLE($exclude) [ ] = T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($exclude) [ ] = T_VARIABLE($edit) [ ] ; T_VARIABLE($form) [ ] [ ] = T_STRING ( T_STRING ( ) , , T_VARIABLE($parent) , T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_STRING ( ) . , T_LNUMBER , . T_STRING ( ) . , T_VARIABLE($exclude) ) ; T_VARIABLE($form) [ ] [ ] = T_STRING ( T_STRING ( ) , , T_STRING ( T_STRING ( T_VARIABLE($edit) [ ] ) ) , T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_STRING , T_LNUMBER , . T_STRING ( ) . , T_ARRAY ( T_VARIABLE($edit) [ ] ) ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ( T_VARIABLE($edit) [ ] ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_IF ( T_VARIABLE($edit) [ ] ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($_GET) [ ] ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(taxonomy_form_term_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(taxonomy_form_term_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_IDENTICAL T_STRING ) { T_RETURN T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; } T_VARIABLE($form_state) [ ] = T_STRING ; T_VARIABLE($form_state) [ ] = T_STRING ; T_RETURN ; } T_ELSEIF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) T_BOOLEAN_AND ! T_VARIABLE($form) [ ] [ ] T_BOOLEAN_AND T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) > T_LNUMBER T_BOOLEAN_AND T_VARIABLE($form) [ ] [ ] < T_LNUMBER ) { T_VARIABLE($form_state) [ ] = T_STRING ; T_VARIABLE($form_state) [ ] = T_STRING ; T_RETURN ; } T_SWITCH ( T_STRING ( T_VARIABLE($form_state) [ ] ) ) { T_CASE T_STRING : T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($form_state) [ ] [ ] ) ) ; T_BREAK ; T_CASE T_STRING : T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($form_state) [ ] [ ] ) ) ; T_BREAK ; } T_IF ( ! T_VARIABLE($form) [ ] [ ] ) { T_VARIABLE($current_parent_count) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($previous_parent_count) = T_STRING ( T_VARIABLE($form) [ ] [ ] ) ; T_IF ( T_VARIABLE($current_parent_count) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form_state) [ ] [ ] [ ] ) ) { T_VARIABLE($current_parent_count) = T_LNUMBER ; T_VARIABLE($form_state) [ ] [ ] = T_ARRAY ( ) ; } T_IF ( T_VARIABLE($current_parent_count) < T_VARIABLE($previous_parent_count) T_BOOLEAN_AND T_VARIABLE($current_parent_count) < T_LNUMBER ) { T_STRING ( T_VARIABLE($form) [ ] , T_VARIABLE($form_state) [ ] ) ; } T_ELSEIF ( T_VARIABLE($current_parent_count) > T_VARIABLE($previous_parent_count) T_BOOLEAN_AND T_VARIABLE($form) [ ] [ ] < T_LNUMBER ) { T_VARIABLE($form) [ ] [ ] = T_VARIABLE($current_parent_count) T_IS_EQUAL T_LNUMBER ? T_LNUMBER : T_LNUMBER ; T_STRING ( T_VARIABLE($form) [ ] ) ; } } T_VARIABLE($form_state) [ ] = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(taxonomy_term_confirm_parents) ( & T_VARIABLE($form_state) , T_VARIABLE($vocabulary) ) { T_VARIABLE($form) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form_state) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ T_VARIABLE($key) ] , ) ; } T_VARIABLE($question) = T_STRING ( ) ; T_VARIABLE($description) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) . ; T_VARIABLE($description) T_CONCAT_EQUAL . T_STRING ( ) . ; T_RETURN T_STRING ( T_VARIABLE($form) , T_VARIABLE($question) , T_STRING ( ) , T_VARIABLE($description) , T_STRING ( ) ) ; } T_FUNCTION(taxonomy_term_confirm_delete) ( & T_VARIABLE($form_state) , T_VARIABLE($tid) ) { T_VARIABLE($term) = T_STRING ( T_VARIABLE($tid) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($tid) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(taxonomy_term_confirm_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_VARIABLE($form) [ ] , T_VARIABLE($form_state) [ ] ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(taxonomy_vocabulary_confirm_delete) ( & T_VARIABLE($form_state) , T_VARIABLE($vid) ) { T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($vid) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($vid) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(taxonomy_vocabulary_confirm_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($status) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(taxonomy_vocabulary_confirm_reset_alphabetical) ( & T_VARIABLE($form_state) , T_VARIABLE($vid) ) { T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($vid) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($vid) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) , . T_VARIABLE($vid) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(taxonomy_vocabulary_confirm_reset_alphabetical_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) , T_STRING ) ; T_VARIABLE($form_state) [ ] = . T_VARIABLE($form_state) [ ] [ ] ; }",13,0
"T_OPEN_TAG T_FUNCTION(taxonomy_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , , ) , T_DOUBLE_ARROW T_ARRAY ( , ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( , ) , ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_RETURN T_VARIABLE($schema) ; }",3,0
"T_OPEN_TAG T_FUNCTION(taxonomy_perm) ( ) { T_RETURN T_ARRAY ( ) ; } T_FUNCTION(taxonomy_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) , ) ; } T_FUNCTION(taxonomy_link) ( T_VARIABLE($type) , T_VARIABLE($node) = T_STRING ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($node) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($links) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($term) ) { T_IF ( T_STRING ( T_VARIABLE($term) ) ) { T_VARIABLE($links) [ . T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($term) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_ELSE { T_FOREACH ( T_VARIABLE($term) T_AS T_VARIABLE($free_typed) ) { T_VARIABLE($typed_terms) = T_STRING ( T_VARIABLE($free_typed) ) ; T_FOREACH ( T_VARIABLE($typed_terms) T_AS T_VARIABLE($typed_term) ) { T_VARIABLE($links) [ . T_VARIABLE($typed_term) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($typed_term) , ) ; } } } } } T_STRING ( , T_VARIABLE($links) , T_VARIABLE($node) ) ; T_RETURN T_VARIABLE($links) ; } } T_FUNCTION(taxonomy_term_path) ( T_VARIABLE($term) ) { T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($path) = T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($term) ) ) { T_RETURN T_VARIABLE($path) ; } T_RETURN . T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(taxonomy_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(taxonomy_save_vocabulary) ( & T_VARIABLE($edit) ) { T_VARIABLE($edit) [ ] = T_EMPTY ( T_VARIABLE($edit) [ ] ) ? T_ARRAY ( ) : T_VARIABLE($edit) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($edit) [ ] = ; } T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_VARIABLE($edit) , ) ; T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_FOREACH ( T_VARIABLE($edit) [ ] T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($selected) ) { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($type) ) ; } T_STRING ( , , , T_VARIABLE($edit) ) ; T_VARIABLE($status) = T_STRING ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($status) = T_STRING ( T_VARIABLE($edit) [ ] ) ; } T_ELSE { T_STRING ( , T_VARIABLE($edit) ) ; T_FOREACH ( T_VARIABLE($edit) [ ] T_AS T_VARIABLE($type) T_DOUBLE_ARROW T_VARIABLE($selected) ) { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($type) ) ; } T_STRING ( , , , T_VARIABLE($edit) ) ; T_VARIABLE($status) = T_STRING ; } T_STRING ( ) ; T_RETURN T_VARIABLE($status) ; } T_FUNCTION(taxonomy_del_vocabulary) ( T_VARIABLE($vid) ) { T_VARIABLE($vocabulary) = T_ARRAY_CAST T_STRING ( T_VARIABLE($vid) ) ; T_STRING ( , T_VARIABLE($vid) ) ; T_STRING ( , T_VARIABLE($vid) ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($vid) ) ; T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($result) ) ) { T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( , , , T_VARIABLE($vocabulary) ) ; T_STRING ( ) ; T_RETURN T_STRING ; } T_FUNCTION(taxonomy_check_vocabulary_hierarchy) ( T_VARIABLE($vocabulary) , T_VARIABLE($changed_term) ) { T_VARIABLE($tree) = T_STRING ( T_VARIABLE($vocabulary) [ ] ) ; T_VARIABLE($hierarchy) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($term) ) { T_IF ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($changed_term) [ ] ) { T_VARIABLE($term) = T_OBJECT_CAST T_VARIABLE($changed_term) ; T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) > T_LNUMBER ) { T_VARIABLE($hierarchy) = T_LNUMBER ; T_BREAK ; } T_ELSEIF ( T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_LNUMBER T_IS_NOT_IDENTICAL T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($hierarchy) = T_LNUMBER ; } } T_IF ( T_VARIABLE($hierarchy) T_IS_NOT_EQUAL T_VARIABLE($vocabulary) [ ] ) { T_VARIABLE($vocabulary) [ ] = T_VARIABLE($hierarchy) ; T_STRING ( T_VARIABLE($vocabulary) ) ; } T_RETURN T_VARIABLE($hierarchy) ; } T_FUNCTION(taxonomy_save_term) ( & T_VARIABLE($form_values) ) { T_VARIABLE($form_values) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_values) [ ] ) T_BOOLEAN_AND T_VARIABLE($form_values) [ ] ) { T_STRING ( , T_VARIABLE($form_values) , ) ; T_VARIABLE($hook) = ; T_VARIABLE($status) = T_STRING ; } T_ELSE T_IF ( ! T_EMPTY ( T_VARIABLE($form_values) [ ] ) ) { T_RETURN T_STRING ( T_VARIABLE($form_values) [ ] ) ; } T_ELSE { T_STRING ( , T_VARIABLE($form_values) ) ; T_VARIABLE($hook) = ; T_VARIABLE($status) = T_STRING ; } T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($form_values) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_values) [ ] ) ) { T_FOREACH ( T_VARIABLE($form_values) [ ] T_AS T_VARIABLE($related_id) ) { T_IF ( T_VARIABLE($related_id) T_IS_NOT_EQUAL T_LNUMBER ) { T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($related_id) ) ; } } } T_STRING ( , T_VARIABLE($form_values) [ ] ) ; T_IF ( ! T_ISSET ( T_VARIABLE($form_values) [ ] ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($form_values) [ ] ) ) { T_VARIABLE($form_values) [ ] = T_ARRAY ( T_LNUMBER ) ; } T_IF ( T_STRING ( T_VARIABLE($form_values) [ ] ) ) { T_FOREACH ( T_VARIABLE($form_values) [ ] T_AS T_VARIABLE($parent) ) { T_IF ( T_STRING ( T_VARIABLE($parent) ) ) { T_FOREACH ( T_VARIABLE($parent) T_AS T_VARIABLE($tid) ) { T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($tid) ) ; } } T_ELSE { T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($parent) ) ; } } } T_ELSE { T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($form_values) [ ] ) ; } T_STRING ( , T_VARIABLE($form_values) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_values) [ ] ) ) { T_FOREACH ( T_STRING ( , T_STRING ( , , T_VARIABLE($form_values) [ ] ) ) T_AS T_VARIABLE($synonym) ) { T_IF ( T_VARIABLE($synonym) ) { T_STRING ( , T_VARIABLE($form_values) [ ] , T_STRING ( T_VARIABLE($synonym) ) ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($hook) ) ) { T_STRING ( , T_VARIABLE($hook) , , T_VARIABLE($form_values) ) ; } T_STRING ( ) ; T_RETURN T_VARIABLE($status) ; } T_FUNCTION(taxonomy_del_term) ( T_VARIABLE($tid) ) { T_VARIABLE($tids) = T_ARRAY ( T_VARIABLE($tid) ) ; T_WHILE ( T_VARIABLE($tids) ) { T_VARIABLE($children_tids) = T_VARIABLE($orphans) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tids) T_AS T_VARIABLE($tid) ) { T_IF ( T_VARIABLE($children) = T_STRING ( T_VARIABLE($tid) ) ) { T_FOREACH ( T_VARIABLE($children) T_AS T_VARIABLE($child) ) { T_VARIABLE($parents) = T_STRING ( T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_STRING ( T_VARIABLE($parents) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($orphans) [ ] = T_VARIABLE($child) T_OBJECT_OPERATOR T_STRING ; } } } T_VARIABLE($term) = T_ARRAY_CAST T_STRING ( T_VARIABLE($tid) ) ; T_STRING ( , T_VARIABLE($tid) ) ; T_STRING ( , T_VARIABLE($tid) ) ; T_STRING ( , T_VARIABLE($tid) , T_VARIABLE($tid) ) ; T_STRING ( , T_VARIABLE($tid) ) ; T_STRING ( , T_VARIABLE($tid) ) ; T_STRING ( , , , T_VARIABLE($term) ) ; } T_VARIABLE($tids) = T_VARIABLE($orphans) ; } T_STRING ( ) ; T_RETURN T_STRING ; } T_FUNCTION(taxonomy_form) ( T_VARIABLE($vid) , T_VARIABLE($value) = T_LNUMBER , T_VARIABLE($help) = T_STRING , T_VARIABLE($name) = ) { T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($vid) ) ; T_VARIABLE($help) = ( T_VARIABLE($help) ) ? T_VARIABLE($help) : T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($blank) = ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( ) : T_STRING ( ) ; } T_ELSE { T_VARIABLE($blank) = ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ? T_LNUMBER : T_STRING ( ) ; } T_RETURN T_STRING ( T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) , T_VARIABLE($name) , T_VARIABLE($value) , T_VARIABLE($vid) , T_VARIABLE($help) , T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) , T_VARIABLE($blank) ) ; } T_FUNCTION(taxonomy_form_all) ( T_VARIABLE($free_tags) = T_LNUMBER ) { T_VARIABLE($vocabularies) = T_STRING ( ) ; T_VARIABLE($options) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($vocabularies) T_AS T_VARIABLE($vid) T_DOUBLE_ARROW T_VARIABLE($vocabulary) ) { T_IF ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ! T_VARIABLE($free_tags) ) { T_CONTINUE ; } T_VARIABLE($tree) = T_STRING ( T_VARIABLE($vid) ) ; T_IF ( T_VARIABLE($tree) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($tree) ) > T_LNUMBER ) ) { T_VARIABLE($options) [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($term) ) { T_VARIABLE($options) [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( , T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) . T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } } } T_RETURN T_VARIABLE($options) ; } T_FUNCTION(taxonomy_get_vocabularies) ( T_VARIABLE($type) = T_STRING ) { T_IF ( T_VARIABLE($type) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($type) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_STRING ( , , ) ) ; } T_VARIABLE($vocabularies) = T_ARRAY ( ) ; T_VARIABLE($node_types) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($voc) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_ISSET ( T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node_types) [ T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ; T_UNSET ( T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node_types) [ T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ] ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; } T_VARIABLE($vocabularies) [ T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($voc) ; } T_RETURN T_VARIABLE($vocabularies) ; } T_FUNCTION(taxonomy_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND ( ! T_STRING ( , T_STRING ) ) T_BOOLEAN_AND T_VARIABLE($form) [ ] [ ] . T_IS_EQUAL T_VARIABLE($form_id) ) { T_VARIABLE($node) = T_VARIABLE($form) [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($terms) = T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_ARRAY ( ) : T_STRING ( T_VARIABLE($node) ) ; } T_ELSE { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($node) ) ; } T_VARIABLE($terms) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($c) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($c) ) ) { T_IF ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($typed_string) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] ; } T_ELSE { T_VARIABLE($typed_string) = T_STRING ( T_VARIABLE($terms) , T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) . ( T_STRING ( , T_VARIABLE($terms) ) ? T_VARIABLE($terms) [ ] [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] : T_STRING ) ; } T_IF ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($help) = T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($help) = T_STRING ( ) ; } T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($help) , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($typed_string) , T_DOUBLE_ARROW . T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; } T_ELSE { T_VARIABLE($default_terms) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($terms) T_AS T_VARIABLE($term) ) { T_IF ( T_ISSET ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($default_terms) [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($term) ; } } T_VARIABLE($form) [ ] [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_VARIABLE($default_terms) ) , T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($form) [ ] [ T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($form) [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($form) [ ] ) > T_LNUMBER ) { T_VARIABLE($form) [ ] T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; } T_VARIABLE($form) [ ] [ ] = - T_LNUMBER ; T_VARIABLE($form) [ ] [ ] = T_STRING ; } } } T_FUNCTION(taxonomy_preview_terms) ( T_VARIABLE($node) ) { T_VARIABLE($taxonomy) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($term) ) { T_UNSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] ) ; T_IF ( T_STRING ( T_VARIABLE($term) ) ) { T_FOREACH ( T_VARIABLE($term) T_AS T_VARIABLE($tid) ) { T_IF ( T_VARIABLE($key) T_IS_EQUAL ) { T_VARIABLE($taxonomy) [ ] = T_VARIABLE($term) ; } T_ELSE { T_VARIABLE($taxonomy) [ T_VARIABLE($tid) ] = T_STRING ( T_VARIABLE($tid) ) ; } } } T_ELSEIF ( T_VARIABLE($term) ) { T_VARIABLE($taxonomy) [ T_VARIABLE($term) ] = T_STRING ( T_VARIABLE($term) ) ; } } } T_RETURN T_VARIABLE($taxonomy) ; } T_FUNCTION(taxonomy_node_get_terms_by_vocabulary) ( T_VARIABLE($node) , T_VARIABLE($vid) , T_VARIABLE($key) = ) { T_VARIABLE($result) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($vid) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($terms) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($terms) [ T_VARIABLE($term) T_OBJECT_OPERATOR T_VARIABLE($key) ] = T_VARIABLE($term) ; } T_RETURN T_VARIABLE($terms) ; } T_FUNCTION(taxonomy_node_get_terms) ( T_VARIABLE($node) , T_VARIABLE($key) = ) { T_STATIC T_VARIABLE($terms) ; T_IF ( ! T_ISSET ( T_VARIABLE($terms) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($key) ] ) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($terms) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($key) ] = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($terms) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($key) ] [ T_VARIABLE($term) T_OBJECT_OPERATOR T_VARIABLE($key) ] = T_VARIABLE($term) ; } } T_RETURN T_VARIABLE($terms) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($key) ] ; } T_FUNCTION(taxonomy_node_validate) ( & T_VARIABLE($node) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($terms) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($terms) [ ] ) ) { T_FOREACH ( T_VARIABLE($terms) [ ] T_AS T_VARIABLE($vid) T_DOUBLE_ARROW T_VARIABLE($vid_value) ) { T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($vid) ) ; T_IF ( T_EMPTY ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($vid) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } } } } T_FUNCTION(taxonomy_node_save) ( T_VARIABLE($node) , T_VARIABLE($terms) ) { T_STRING ( T_VARIABLE($node) ) ; T_IF ( T_ISSET ( T_VARIABLE($terms) [ ] ) ) { T_VARIABLE($typed_input) = T_VARIABLE($terms) [ ] ; T_UNSET ( T_VARIABLE($terms) [ ] ) ; T_FOREACH ( T_VARIABLE($typed_input) T_AS T_VARIABLE($vid) T_DOUBLE_ARROW T_VARIABLE($vid_value) ) { T_VARIABLE($typed_terms) = T_STRING ( T_VARIABLE($vid_value) ) ; T_VARIABLE($inserted) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($typed_terms) T_AS T_VARIABLE($typed_term) ) { T_VARIABLE($possibilities) = T_STRING ( T_VARIABLE($typed_term) ) ; T_VARIABLE($typed_term_tid) = T_STRING ; T_FOREACH ( T_VARIABLE($possibilities) T_AS T_VARIABLE($possibility) ) { T_IF ( T_VARIABLE($possibility) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($vid) ) { T_VARIABLE($typed_term_tid) = T_VARIABLE($possibility) T_OBJECT_OPERATOR T_STRING ; } } T_IF ( ! T_VARIABLE($typed_term_tid) ) { T_VARIABLE($edit) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($vid) , T_DOUBLE_ARROW T_VARIABLE($typed_term) ) ; T_VARIABLE($status) = T_STRING ( T_VARIABLE($edit) ) ; T_VARIABLE($typed_term_tid) = T_VARIABLE($edit) [ ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($inserted) [ T_VARIABLE($typed_term_tid) ] ) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($typed_term_tid) ) ; T_VARIABLE($inserted) [ T_VARIABLE($typed_term_tid) ] = T_STRING ; } } } } T_IF ( T_STRING ( T_VARIABLE($terms) ) ) { T_FOREACH ( T_VARIABLE($terms) T_AS T_VARIABLE($term) ) { T_IF ( T_STRING ( T_VARIABLE($term) ) ) { T_FOREACH ( T_VARIABLE($term) T_AS T_VARIABLE($tid) ) { T_IF ( T_VARIABLE($tid) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($tid) ) ; } } } T_ELSE T_IF ( T_STRING ( T_VARIABLE($term) ) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE T_IF ( T_VARIABLE($term) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($term) ) ; } } } } T_FUNCTION(taxonomy_node_delete) ( T_VARIABLE($node) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_FUNCTION(taxonomy_node_delete_revision) ( T_VARIABLE($node) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_FUNCTION(taxonomy_node_type) ( T_VARIABLE($op) , T_VARIABLE($info) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSEIF ( T_VARIABLE($op) T_IS_EQUAL ) { T_STRING ( , T_VARIABLE($info) T_OBJECT_OPERATOR T_STRING ) ; } } T_FUNCTION(taxonomy_get_related) ( T_VARIABLE($tid) , T_VARIABLE($key) = ) { T_IF ( T_VARIABLE($tid) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($tid) , T_VARIABLE($tid) , T_VARIABLE($tid) ) ; T_VARIABLE($related) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($related) [ T_VARIABLE($term) T_OBJECT_OPERATOR T_VARIABLE($key) ] = T_VARIABLE($term) ; } T_RETURN T_VARIABLE($related) ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } T_FUNCTION(taxonomy_get_parents) ( T_VARIABLE($tid) , T_VARIABLE($key) = ) { T_IF ( T_VARIABLE($tid) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($tid) ) ; T_VARIABLE($parents) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($parent) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($parents) [ T_VARIABLE($parent) T_OBJECT_OPERATOR T_VARIABLE($key) ] = T_VARIABLE($parent) ; } T_RETURN T_VARIABLE($parents) ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } T_FUNCTION(taxonomy_get_parents_all) ( T_VARIABLE($tid) ) { T_VARIABLE($parents) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($tid) ) { T_VARIABLE($parents) [ ] = T_STRING ( T_VARIABLE($tid) ) ; T_VARIABLE($n) = T_LNUMBER ; T_WHILE ( T_VARIABLE($parent) = T_STRING ( T_VARIABLE($parents) [ T_VARIABLE($n) ] T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($parents) = T_STRING ( T_VARIABLE($parents) , T_VARIABLE($parent) ) ; T_VARIABLE($n) T_INC ; } } T_RETURN T_VARIABLE($parents) ; } T_FUNCTION(taxonomy_get_children) ( T_VARIABLE($tid) , T_VARIABLE($vid) = T_LNUMBER , T_VARIABLE($key) = ) { T_IF ( T_VARIABLE($vid) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($vid) , T_VARIABLE($tid) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($tid) ) ; } T_VARIABLE($children) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($children) [ T_VARIABLE($term) T_OBJECT_OPERATOR T_VARIABLE($key) ] = T_VARIABLE($term) ; } T_RETURN T_VARIABLE($children) ; } T_FUNCTION(taxonomy_get_tree) ( T_VARIABLE($vid) , T_VARIABLE($parent) = T_LNUMBER , T_VARIABLE($depth) = - T_LNUMBER , T_VARIABLE($max_depth) = T_STRING ) { T_STATIC T_VARIABLE($children) , T_VARIABLE($parents) , T_VARIABLE($terms) ; T_VARIABLE($depth) T_INC ; T_IF ( ! T_ISSET ( T_VARIABLE($children) [ T_VARIABLE($vid) ] ) ) { T_VARIABLE($children) [ T_VARIABLE($vid) ] = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($vid) ) ; T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($children) [ T_VARIABLE($vid) ] [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($parents) [ T_VARIABLE($vid) ] [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($terms) [ T_VARIABLE($vid) ] [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($term) ; } } T_VARIABLE($max_depth) = ( T_STRING ( T_VARIABLE($max_depth) ) ) ? T_STRING ( T_VARIABLE($children) [ T_VARIABLE($vid) ] ) : T_VARIABLE($max_depth) ; T_VARIABLE($tree) = T_ARRAY ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($children) [ T_VARIABLE($vid) ] [ T_VARIABLE($parent) ] ) ) { T_FOREACH ( T_VARIABLE($children) [ T_VARIABLE($vid) ] [ T_VARIABLE($parent) ] T_AS T_VARIABLE($child) ) { T_IF ( T_VARIABLE($max_depth) > T_VARIABLE($depth) ) { T_VARIABLE($term) = T_STRING ( T_VARIABLE($terms) [ T_VARIABLE($vid) ] [ T_VARIABLE($child) ] ) ; T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($depth) ; T_UNSET ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($parents) [ T_VARIABLE($vid) ] [ T_VARIABLE($child) ] ; T_VARIABLE($tree) [ ] = T_VARIABLE($term) ; T_IF ( ! T_EMPTY ( T_VARIABLE($children) [ T_VARIABLE($vid) ] [ T_VARIABLE($child) ] ) ) { T_VARIABLE($tree) = T_STRING ( T_VARIABLE($tree) , T_STRING ( T_VARIABLE($vid) , T_VARIABLE($child) , T_VARIABLE($depth) , T_VARIABLE($max_depth) ) ) ; } } } } T_RETURN T_VARIABLE($tree) ; } T_FUNCTION(taxonomy_get_synonyms) ( T_VARIABLE($tid) ) { T_IF ( T_VARIABLE($tid) ) { T_VARIABLE($synonyms) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($tid) ) ; T_WHILE ( T_VARIABLE($synonym) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($synonyms) [ ] = T_VARIABLE($synonym) [ ] ; } T_RETURN T_VARIABLE($synonyms) ; } T_ELSE { T_RETURN T_ARRAY ( ) ; } } T_FUNCTION(taxonomy_get_synonym_root) ( T_VARIABLE($synonym) ) { T_RETURN T_STRING ( T_STRING ( , T_VARIABLE($synonym) ) ) ; } T_FUNCTION(taxonomy_term_count_nodes) ( T_VARIABLE($tid) , T_VARIABLE($type) = T_LNUMBER ) { T_STATIC T_VARIABLE($count) ; T_IF ( ! T_ISSET ( T_VARIABLE($count) [ T_VARIABLE($type) ] ) ) { T_IF ( T_STRING ( T_VARIABLE($type) ) ) { T_VARIABLE($result) = T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_STRING ( ) , T_VARIABLE($type) ) ; } T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($count) [ T_VARIABLE($type) ] [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } } T_VARIABLE($children_count) = T_LNUMBER ; T_FOREACH ( T_STRING ( T_VARIABLE($tid) ) T_AS T_VARIABLE($c) ) { T_VARIABLE($children_count) T_PLUS_EQUAL T_STRING ( T_VARIABLE($c) , T_VARIABLE($type) ) ; } T_RETURN T_VARIABLE($children_count) + ( T_ISSET ( T_VARIABLE($count) [ T_VARIABLE($type) ] [ T_VARIABLE($tid) ] ) ? T_VARIABLE($count) [ T_VARIABLE($type) ] [ T_VARIABLE($tid) ] : T_LNUMBER ) ; } T_FUNCTION(_taxonomy_term_children) ( T_VARIABLE($tid) ) { T_STATIC T_VARIABLE($children) ; T_IF ( ! T_ISSET ( T_VARIABLE($children) ) ) { T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($children) [ T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } } T_RETURN T_ISSET ( T_VARIABLE($children) [ T_VARIABLE($tid) ] ) ? T_VARIABLE($children) [ T_VARIABLE($tid) ] : T_ARRAY ( ) ; } T_FUNCTION(taxonomy_get_term_by_name) ( T_VARIABLE($name) ) { T_VARIABLE($db_result) = T_STRING ( T_STRING ( , , ) , T_STRING ( T_VARIABLE($name) ) ) ; T_VARIABLE($result) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($db_result) ) ) { T_VARIABLE($result) [ ] = T_VARIABLE($term) ; } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(taxonomy_vocabulary_load) ( T_VARIABLE($vid) ) { T_STATIC T_VARIABLE($vocabularies) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($vocabularies) [ T_VARIABLE($vid) ] ) ) { T_VARIABLE($vocabularies) [ T_VARIABLE($vid) ] = T_STRING ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($vid) ) ; T_VARIABLE($node_types) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($voc) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node_types) [ T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ; } T_UNSET ( T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($voc) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node_types) ; T_VARIABLE($vocabularies) [ T_VARIABLE($vid) ] = T_VARIABLE($voc) ; } } T_RETURN ! T_EMPTY ( T_VARIABLE($vocabularies) [ T_VARIABLE($vid) ] ) ? T_VARIABLE($vocabularies) [ T_VARIABLE($vid) ] : T_STRING ; } T_FUNCTION(taxonomy_get_term) ( T_VARIABLE($tid) ) { T_STATIC T_VARIABLE($terms) = T_ARRAY ( ) ; T_IF ( ! T_ISSET ( T_VARIABLE($terms) [ T_VARIABLE($tid) ] ) ) { T_VARIABLE($terms) [ T_VARIABLE($tid) ] = T_STRING ( T_STRING ( , T_VARIABLE($tid) ) ) ; } T_RETURN T_VARIABLE($terms) [ T_VARIABLE($tid) ] ; } T_FUNCTION(_taxonomy_term_select) ( T_VARIABLE($title) , T_VARIABLE($name) , T_VARIABLE($value) , T_VARIABLE($vocabulary_id) , T_VARIABLE($description) , T_VARIABLE($multiple) , T_VARIABLE($blank) , T_VARIABLE($exclude) = T_ARRAY ( ) ) { T_VARIABLE($tree) = T_STRING ( T_VARIABLE($vocabulary_id) ) ; T_VARIABLE($options) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($blank) ) { T_VARIABLE($options) [ ] = T_VARIABLE($blank) ; } T_IF ( T_VARIABLE($tree) ) { T_FOREACH ( T_VARIABLE($tree) T_AS T_VARIABLE($term) ) { T_IF ( ! T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($exclude) ) ) { T_VARIABLE($choice) = T_NEW T_STRING ( ) ; T_VARIABLE($choice) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) . T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($options) [ ] = T_VARIABLE($choice) ; } } } T_RETURN T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($title) , T_DOUBLE_ARROW T_VARIABLE($value) , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_VARIABLE($description) , T_DOUBLE_ARROW T_VARIABLE($multiple) , T_DOUBLE_ARROW T_VARIABLE($multiple) ? T_STRING ( T_LNUMBER , T_STRING ( T_VARIABLE($options) ) ) : T_LNUMBER , T_DOUBLE_ARROW - T_LNUMBER , T_DOUBLE_ARROW , ) ; } T_FUNCTION(theme_taxonomy_term_select) ( T_VARIABLE($element) ) { T_RETURN T_STRING ( , T_VARIABLE($element) ) ; } T_FUNCTION(taxonomy_select_nodes) ( T_VARIABLE($tids) = T_ARRAY ( ) , T_VARIABLE($operator) = , T_VARIABLE($depth) = T_LNUMBER , T_VARIABLE($pager) = T_STRING , T_VARIABLE($order) = ) { T_IF ( T_STRING ( T_VARIABLE($tids) ) > T_LNUMBER ) { T_VARIABLE($descendant_tids) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($depth) T_IS_IDENTICAL ) { T_VARIABLE($depth) = T_STRING ; } T_FOREACH ( T_VARIABLE($tids) T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($tid) ) { T_VARIABLE($term) = T_STRING ( T_VARIABLE($tid) ) ; T_VARIABLE($tree) = T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($tid) , - T_LNUMBER , T_VARIABLE($depth) ) ; T_VARIABLE($descendant_tids) [ ] = T_STRING ( T_ARRAY ( T_VARIABLE($tid) ) , T_STRING ( , T_VARIABLE($tree) ) ) ; } T_IF ( T_VARIABLE($operator) T_IS_EQUAL ) { T_VARIABLE($args) = T_STRING ( , T_VARIABLE($descendant_tids) ) ; T_VARIABLE($placeholders) = T_STRING ( T_VARIABLE($args) , ) ; T_VARIABLE($sql) = . T_VARIABLE($placeholders) . . T_VARIABLE($order) ; T_VARIABLE($sql_count) = . T_VARIABLE($placeholders) . ; } T_ELSE { T_VARIABLE($joins) = ; T_VARIABLE($wheres) = ; T_VARIABLE($args) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($descendant_tids) T_AS T_VARIABLE($index) T_DOUBLE_ARROW T_VARIABLE($tids) ) { T_VARIABLE($joins) T_CONCAT_EQUAL . T_VARIABLE($index) . . T_VARIABLE($index) . ; T_VARIABLE($wheres) T_CONCAT_EQUAL . T_VARIABLE($index) . . T_STRING ( T_VARIABLE($tids) , ) . ; T_VARIABLE($args) = T_STRING ( T_VARIABLE($args) , T_VARIABLE($tids) ) ; } T_VARIABLE($sql) = . T_VARIABLE($joins) . . T_VARIABLE($wheres) . . T_VARIABLE($order) ; T_VARIABLE($sql_count) = . T_VARIABLE($joins) . . T_VARIABLE($wheres) ; } T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($sql_count) = T_STRING ( T_VARIABLE($sql_count) ) ; T_IF ( T_VARIABLE($pager) ) { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_STRING ( , T_LNUMBER ) , T_LNUMBER , T_VARIABLE($sql_count) , T_VARIABLE($args) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_VARIABLE($args) , T_LNUMBER , T_STRING ( , T_LNUMBER ) ) ; } } T_RETURN T_VARIABLE($result) ; } T_FUNCTION(taxonomy_render_nodes) ( T_VARIABLE($result) ) { T_VARIABLE($output) = ; T_VARIABLE($has_rows) = T_STRING ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_LNUMBER ) ; T_VARIABLE($has_rows) = T_STRING ; } T_IF ( T_VARIABLE($has_rows) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_STRING ( , T_LNUMBER ) , T_LNUMBER ) ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(taxonomy_nodeapi) ( T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($arg) = T_LNUMBER ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($output) [ ] = T_STRING ( T_VARIABLE($node) ) ; T_RETURN T_VARIABLE($output) ; T_CASE : T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_VARIABLE($node) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_BREAK ; T_CASE : T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_VARIABLE($node) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($node) ) ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($node) ) ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($node) ) ; T_BREAK ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($node) ) ; T_CASE : T_RETURN T_STRING ( T_VARIABLE($node) ) ; } } T_FUNCTION(taxonomy_node_update_index) ( & T_VARIABLE($node) ) { T_VARIABLE($output) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($term) ) { T_VARIABLE($output) [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_STRING ( T_VARIABLE($output) ) ) { T_RETURN . T_STRING ( , T_VARIABLE($output) ) . ; } } T_FUNCTION(taxonomy_terms_parse_string) ( T_VARIABLE($str_tids) ) { T_VARIABLE($terms) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) ) ; T_IF ( T_STRING ( , T_VARIABLE($str_tids) ) ) { T_VARIABLE($terms) [ ] = ; T_VARIABLE($terms) [ ] = T_STRING ( , T_VARIABLE($str_tids) ) ; } T_ELSE T_IF ( T_STRING ( , T_VARIABLE($str_tids) ) ) { T_VARIABLE($terms) [ ] = ; T_VARIABLE($terms) [ ] = T_STRING ( , T_VARIABLE($str_tids) ) ; } T_RETURN T_VARIABLE($terms) ; } T_FUNCTION(taxonomy_rss_item) ( T_VARIABLE($node) ) { T_VARIABLE($output) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($term) ) { T_VARIABLE($output) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(taxonomy_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($vocabulary) = T_STRING ( T_VARIABLE($arg) [ T_LNUMBER ] ) ; T_IF ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) { T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) ) . ; } T_SWITCH ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) { T_CASE T_LNUMBER : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) . ; T_CASE T_LNUMBER : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) . ; T_CASE T_LNUMBER : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($vocabulary) T_OBJECT_OPERATOR T_STRING ) ) ) . ; } T_CASE : T_RETURN . T_STRING ( ) . ; } } T_FUNCTION(_taxonomy_get_tid_from_term) ( T_VARIABLE($term) ) { T_RETURN T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(taxonomy_implode_tags) ( T_VARIABLE($tags) , T_VARIABLE($vid) = T_STRING ) { T_VARIABLE($typed_tags) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($tags) T_AS T_VARIABLE($tag) ) { T_IF ( T_STRING ( T_VARIABLE($vid) ) T_BOOLEAN_OR T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($vid) ) { T_IF ( T_STRING ( T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_OR T_STRING ( T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING = . T_STRING ( , , T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING ) . ; } T_VARIABLE($typed_tags) [ ] = T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING ; } } T_RETURN T_STRING ( , T_VARIABLE($typed_tags) ) ; } T_FUNCTION(taxonomy_hook_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , ) , ) , ) ; }",13,1
"T_OPEN_TAG T_FUNCTION(taxonomy_term_page) ( T_VARIABLE($str_tids) = , T_VARIABLE($depth) = T_LNUMBER , T_VARIABLE($op) = ) { T_VARIABLE($terms) = T_STRING ( T_VARIABLE($str_tids) ) ; T_IF ( T_VARIABLE($terms) [ ] T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($terms) [ ] T_IS_NOT_EQUAL ) { T_STRING ( ) ; } T_IF ( T_VARIABLE($terms) [ ] ) { T_VARIABLE($result) = T_STRING ( T_STRING ( . T_STRING ( T_VARIABLE($terms) [ ] ) . , , ) , T_VARIABLE($terms) [ ] ) ; T_VARIABLE($tids) = T_ARRAY ( ) ; T_VARIABLE($names) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($term) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($tids) [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($names) [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } T_IF ( T_VARIABLE($names) ) { T_VARIABLE($title) = T_STRING ( T_STRING ( , T_VARIABLE($names) ) ) ; T_STRING ( T_VARIABLE($title) ) ; T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($current) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($tids) [ T_LNUMBER ] ; T_VARIABLE($breadcrumb) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($parents) = T_STRING ( T_VARIABLE($current) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($current) = T_STRING ( T_VARIABLE($parents) ) ; T_VARIABLE($breadcrumb) [ ] = T_STRING ( T_VARIABLE($current) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($current) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($breadcrumb) [ ] = T_STRING ( T_STRING ( ) , T_STRING ) ; T_VARIABLE($breadcrumb) = T_STRING ( T_VARIABLE($breadcrumb) ) ; T_STRING ( T_VARIABLE($breadcrumb) ) ; T_VARIABLE($output) = T_STRING ( , T_VARIABLE($tids) , T_STRING ( T_VARIABLE($tids) , T_VARIABLE($terms) [ ] , T_VARIABLE($depth) , T_STRING ) ) ; T_STRING ( T_STRING ( . T_VARIABLE($str_tids) . . T_VARIABLE($depth) . ) , . T_VARIABLE($title) ) ; T_RETURN T_VARIABLE($output) ; T_BREAK ; T_CASE : T_VARIABLE($channel) [ ] = T_STRING ( . T_VARIABLE($str_tids) . . T_VARIABLE($depth) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; T_VARIABLE($channel) [ ] = T_STRING ( , ) . . T_VARIABLE($title) ; T_IF ( T_STRING ( T_VARIABLE($tids) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($term) = T_STRING ( T_VARIABLE($tids) [ T_LNUMBER ] ) ; T_VARIABLE($channel) [ ] = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($result) = T_STRING ( T_VARIABLE($tids) , T_VARIABLE($terms) [ ] , T_VARIABLE($depth) , T_STRING ) ; T_VARIABLE($items) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($items) [ ] = T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($items) , T_VARIABLE($channel) ) ; T_BREAK ; T_DEFAULT : T_STRING ( ) ; } } T_ELSE { T_STRING ( ) ; } } } T_FUNCTION(theme_taxonomy_term_page) ( T_VARIABLE($tids) , T_VARIABLE($result) ) { T_STRING ( T_STRING ( , ) . ) ; T_VARIABLE($output) = ; T_IF ( T_STRING ( T_VARIABLE($tids) ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($term) = T_STRING ( T_VARIABLE($tids) [ T_LNUMBER ] ) ; T_VARIABLE($description) = T_VARIABLE($term) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($description) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($description) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; } } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($result) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(taxonomy_autocomplete) ( T_VARIABLE($vid) , T_VARIABLE($string) = ) { T_VARIABLE($array) = T_STRING ( T_VARIABLE($string) ) ; T_VARIABLE($last_string) = T_STRING ( T_STRING ( T_VARIABLE($array) ) ) ; T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($last_string) T_IS_NOT_EQUAL ) { T_VARIABLE($result) = T_STRING ( T_STRING ( , , ) , T_VARIABLE($vid) , T_VARIABLE($last_string) , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($prefix) = T_STRING ( T_VARIABLE($array) ) ? T_STRING ( , T_VARIABLE($array) ) . : ; T_WHILE ( T_VARIABLE($tag) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($n) = T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_STRING ( T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_OR T_STRING ( T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING , ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($n) = . T_STRING ( , , T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING ) . ; } T_VARIABLE($matches) [ T_VARIABLE($prefix) . T_VARIABLE($n) ] = T_STRING ( T_VARIABLE($tag) T_OBJECT_OPERATOR T_STRING ) ; } } T_STRING ( T_VARIABLE($matches) ) ; }",7,0
"T_OPEN_TAG T_FUNCTION(throttle_admin_settings) ( ) { T_VARIABLE($probabilities) = T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW , T_LNUMBER T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($probabilities) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(throttle_admin_settings_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_OR T_VARIABLE($form_state) [ ] [ ] < T_LNUMBER ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_IF ( ! T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) T_BOOLEAN_OR T_VARIABLE($form_state) [ ] [ ] < T_LNUMBER ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } }",0,0
"T_OPEN_TAG T_FUNCTION(throttle_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(throttle_status) ( ) { T_RETURN T_STRING ( , T_LNUMBER ) ; } T_FUNCTION(throttle_exit) ( ) { T_IF ( ! T_STRING ( T_LNUMBER , T_STRING ( , T_LNUMBER ) ) ) { T_VARIABLE($time_period) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($throttle) = T_STRING ( ) ; T_IF ( T_VARIABLE($max_guests) = T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($guests) = T_STRING ( T_STRING ( ) - T_VARIABLE($time_period) , T_STRING ) ; } T_ELSE { T_VARIABLE($guests) = T_LNUMBER ; } T_IF ( T_VARIABLE($max_users) = T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($users) = T_STRING ( T_STRING ( ) - T_VARIABLE($time_period) , T_STRING ) ; } T_ELSE { T_VARIABLE($users) = T_LNUMBER ; } T_VARIABLE($message) = ; T_IF ( T_VARIABLE($max_users) T_BOOLEAN_AND T_VARIABLE($users) > T_VARIABLE($max_users) ) { T_IF ( ! T_VARIABLE($throttle) ) { T_STRING ( , T_LNUMBER ) ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($users) , , ) ; } } T_ELSEIF ( T_VARIABLE($max_guests) T_BOOLEAN_AND T_VARIABLE($guests) > T_VARIABLE($max_guests) ) { T_IF ( ! T_VARIABLE($throttle) ) { T_STRING ( , T_LNUMBER ) ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($guests) , , ) ; } } T_ELSE { T_IF ( T_VARIABLE($throttle) ) { T_STRING ( , T_LNUMBER ) ; T_VARIABLE($message) = T_STRING ( T_VARIABLE($users) , , ) . ; T_VARIABLE($message) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($guests) , , ) ; } } T_IF ( T_VARIABLE($message) ) { T_STRING ( ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($message) ) ) ; } } } T_FUNCTION(throttle_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; } }",7,0
"T_OPEN_TAG T_FUNCTION(tracker_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(tracker_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER , T_STRING ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_RETURN T_VARIABLE($items) ; }",0,1
"T_OPEN_TAG T_FUNCTION(tracker_page) ( T_VARIABLE($account) = T_STRING , T_VARIABLE($set_title) = T_STRING ) { T_STRING ( T_STRING ( , ) . , , , T_STRING ) ; T_IF ( T_VARIABLE($account) ) { T_IF ( T_VARIABLE($set_title) ) { T_STRING ( T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($sql) = ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($sql_count) = ; T_VARIABLE($sql_count) = T_STRING ( T_VARIABLE($sql_count) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_LNUMBER , T_VARIABLE($sql_count) , T_STRING , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($sql) = ; T_VARIABLE($sql) = T_STRING ( T_VARIABLE($sql) ) ; T_VARIABLE($sql_count) = ; T_VARIABLE($sql_count) = T_STRING ( T_VARIABLE($sql_count) ) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_LNUMBER , T_VARIABLE($sql_count) ) ; } T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($comments) = T_LNUMBER ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($comments) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_VARIABLE($new) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($comments) T_CONCAT_EQUAL ; T_VARIABLE($comments) T_CONCAT_EQUAL T_STRING ( T_STRING ( T_VARIABLE($new) , , ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($new) , T_VARIABLE($node) ) , T_DOUBLE_ARROW ) ) ; } } T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) , T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) . . T_STRING ( , T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) , T_STRING ( , T_VARIABLE($node) ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($comments) ) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ) ; } T_IF ( ! T_VARIABLE($rows) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; }",5,0
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_FUNCTION(translation_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(translation_menu) ( ) { T_VARIABLE($items) = T_ARRAY ( ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(_translation_tab_access) ( T_VARIABLE($node) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN T_STRING ( ) ; } T_RETURN T_STRING ; } T_FUNCTION(translation_perm) ( ) { T_RETURN T_ARRAY ( ) ; } T_FUNCTION(translation_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_VARIABLE($form_id) T_IS_EQUAL ) { T_VARIABLE($form) [ ] [ ] [ ] [ T_STRING ] = T_STRING ( ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_VARIABLE($form) [ ] T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($node) = T_VARIABLE($form) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_STRING ; } T_ELSEIF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_UNSET ( T_VARIABLE($form) [ ] [ ] [ ] ) ; T_FOREACH ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_AS T_VARIABLE($translation) ) { T_IF ( T_VARIABLE($translation) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_UNSET ( T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($translation) T_OBJECT_OPERATOR T_STRING ] ) ; } } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ! T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER ) ; } T_ELSE { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) ; } } } } T_FUNCTION(translation_link) ( T_VARIABLE($type) , T_VARIABLE($node) = T_STRING , T_VARIABLE($teaser) = T_STRING ) { T_VARIABLE($links) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($translations) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_UNSET ( T_VARIABLE($translations) [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] ) ; T_VARIABLE($languages) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($translations) T_AS T_VARIABLE($language) T_DOUBLE_ARROW T_VARIABLE($translation) ) { T_VARIABLE($links) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($language) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($languages) [ T_VARIABLE($language) ] T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($translation) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($languages) [ T_VARIABLE($language) ] , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($translation) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW ) ) ; } } T_RETURN T_VARIABLE($links) ; } T_FUNCTION(translation_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($teaser) , T_VARIABLE($page) ) { T_IF ( ! T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN ; } T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($source_nid) = T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($language) = T_VARIABLE($_GET) [ ] ) T_BOOLEAN_AND ( T_STRING ( ) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($language) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($source_nid) ) ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ; T_STRING ( T_VARIABLE($node) , ) ; } T_BREAK ; T_CASE : T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($tnid) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_VARIABLE($tnid) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ; T_STRING ( , T_VARIABLE($tnid) , T_LNUMBER , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( , T_VARIABLE($tnid) , T_LNUMBER , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_BREAK ; T_CASE : T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } } T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($node) ) ; T_BREAK ; } } T_FUNCTION(translation_remove_from_set) ( T_VARIABLE($node) ) { T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($new_tnid) = T_STRING ( T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( , T_VARIABLE($new_tnid) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } } } } T_FUNCTION(translation_node_get_translations) ( T_VARIABLE($tnid) ) { T_STATIC T_VARIABLE($translations) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($tnid) ) T_BOOLEAN_AND T_VARIABLE($tnid) ) { T_IF ( ! T_ISSET ( T_VARIABLE($translations) [ T_VARIABLE($tnid) ] ) ) { T_VARIABLE($translations) [ T_VARIABLE($tnid) ] = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( T_STRING ( ) , T_VARIABLE($tnid) ) ; T_WHILE ( T_VARIABLE($node) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($translations) [ T_VARIABLE($tnid) ] [ T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($node) ; } } T_RETURN T_VARIABLE($translations) [ T_VARIABLE($tnid) ] ; } } T_FUNCTION(translation_supported_type) ( T_VARIABLE($type) ) { T_RETURN T_STRING ( . T_VARIABLE($type) , T_LNUMBER ) T_IS_EQUAL T_STRING ; } T_FUNCTION(translation_path_get_translations) ( T_VARIABLE($path) ) { T_VARIABLE($paths) = T_ARRAY ( ) ; T_IF ( ( T_STRING ( , T_VARIABLE($path) , T_VARIABLE($matches) ) ) T_BOOLEAN_AND ( T_VARIABLE($node) = T_STRING ( T_INT_CAST T_VARIABLE($matches) [ T_LNUMBER ] ) ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_AS T_VARIABLE($language) T_DOUBLE_ARROW T_VARIABLE($translation_node) ) { T_VARIABLE($paths) [ T_VARIABLE($language) ] = . T_VARIABLE($translation_node) T_OBJECT_OPERATOR T_STRING . T_VARIABLE($matches) [ T_LNUMBER ] ; } } T_RETURN T_VARIABLE($paths) ; } T_FUNCTION(translation_translation_link_alter) ( & T_VARIABLE($links) , T_VARIABLE($path) ) { T_IF ( T_VARIABLE($paths) = T_STRING ( T_VARIABLE($path) ) ) { T_FOREACH ( T_VARIABLE($links) T_AS T_VARIABLE($langcode) T_DOUBLE_ARROW T_VARIABLE($link) ) { T_IF ( T_ISSET ( T_VARIABLE($paths) [ T_VARIABLE($langcode) ] ) ) { T_VARIABLE($links) [ T_VARIABLE($langcode) ] [ ] = T_VARIABLE($paths) [ T_VARIABLE($langcode) ] ; } T_ELSE { T_UNSET ( T_VARIABLE($links) [ T_VARIABLE($langcode) ] ) ; } } } }",13,1
"T_OPEN_TAG T_FUNCTION(translation_node_overview) ( T_VARIABLE($node) ) { T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($tnid) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($translations) = T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($tnid) = T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($translations) = T_ARRAY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_DOUBLE_ARROW T_VARIABLE($node) ) ; } T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($language) ) { T_VARIABLE($options) = T_ARRAY ( ) ; T_VARIABLE($language_name) = T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; T_IF ( T_ISSET ( T_VARIABLE($translations) [ T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($translation_node) = T_STRING ( T_VARIABLE($translations) [ T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ] T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($title) = T_STRING ( T_VARIABLE($translation_node) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($translation_node) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_STRING ( , T_VARIABLE($translation_node) ) ) { T_VARIABLE($options) [ ] = T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($translation_node) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE ) ; } T_VARIABLE($status) = T_VARIABLE($translation_node) T_OBJECT_OPERATOR T_STRING ? T_STRING ( ) : T_STRING ( ) ; T_VARIABLE($status) T_CONCAT_EQUAL T_VARIABLE($translation_node) T_OBJECT_OPERATOR T_STRING ? . T_STRING ( ) . : ; T_IF ( T_VARIABLE($translation_node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($tnid) ) { T_VARIABLE($language_name) = . T_VARIABLE($language_name) . ; } } T_ELSE { T_VARIABLE($title) = T_STRING ( ) ; T_IF ( T_STRING ( , T_VARIABLE($node) ) ) { T_VARIABLE($options) [ ] = T_STRING ( T_STRING ( ) , . T_STRING ( , , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($status) = T_STRING ( ) ; } T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($language_name) , T_VARIABLE($title) , T_VARIABLE($status) , T_STRING ( , T_VARIABLE($options) ) ) ; } T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_RETURN T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; }",4,0
"T_OPEN_TAG T_FUNCTION(trigger_assign) ( T_VARIABLE($type) = T_STRING ) { T_IF ( ! T_ISSET ( T_VARIABLE($type) ) ) { T_STRING ( ) ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($type) = ; } T_VARIABLE($output) = ; T_VARIABLE($hooks) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($hooks) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($hook) ) { T_IF ( T_ISSET ( T_VARIABLE($hook) [ T_VARIABLE($type) ] ) ) { T_FOREACH ( T_VARIABLE($hook) [ T_VARIABLE($type) ] T_AS T_VARIABLE($op) T_DOUBLE_ARROW T_VARIABLE($description) ) { T_VARIABLE($form_id) = . T_VARIABLE($type) . . T_VARIABLE($op) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form_id) , T_VARIABLE($type) , T_VARIABLE($op) , T_VARIABLE($description) [ ] ) ; } } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(trigger_unassign) ( T_VARIABLE($form_state) , T_VARIABLE($hook) = T_STRING , T_VARIABLE($op) = T_STRING , T_VARIABLE($aid) = T_STRING ) { T_IF ( ! ( T_VARIABLE($hook) T_BOOLEAN_AND T_VARIABLE($op) T_BOOLEAN_AND T_VARIABLE($aid) ) ) { T_STRING ( ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($hook) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($op) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($aid) , ) ; T_VARIABLE($action) = T_STRING ( T_VARIABLE($aid) ) ; T_VARIABLE($actions) = T_STRING ( ) ; T_VARIABLE($destination) = . ( T_VARIABLE($hook) T_IS_EQUAL ? : T_VARIABLE($hook) ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($actions) [ T_VARIABLE($action) ] [ ] ) ) , T_VARIABLE($destination) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(trigger_unassign_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_values) = T_VARIABLE($form_state) [ ] ; T_IF ( T_VARIABLE($form_values) [ ] T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($aid) = T_STRING ( T_VARIABLE($form_values) [ ] ) ; T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($form_values) [ ] , T_VARIABLE($aid) ) ; T_VARIABLE($actions) = T_STRING ( ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($actions) [ T_VARIABLE($aid) ] [ ] ) ) ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($actions) [ T_VARIABLE($aid) ] [ ] ) ) ) ; T_VARIABLE($hook) = T_VARIABLE($form_values) [ ] T_IS_EQUAL ? : T_VARIABLE($form_values) [ ] ; T_VARIABLE($form_state) [ ] = . T_VARIABLE($hook) ; } T_ELSE { T_STRING ( ) ; } } T_FUNCTION(trigger_assign_form) ( T_VARIABLE($form_state) , T_VARIABLE($hook) , T_VARIABLE($op) , T_VARIABLE($description) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($hook) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($op) , ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($options) = T_ARRAY ( ) ; T_VARIABLE($functions) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($func) T_DOUBLE_ARROW T_VARIABLE($metadata) ) { T_IF ( T_ISSET ( T_VARIABLE($metadata) [ ] [ ] ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($metadata) [ ] [ T_VARIABLE($hook) ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($metadata) [ ] [ T_VARIABLE($hook) ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($op) , T_VARIABLE($metadata) [ ] [ T_VARIABLE($hook) ] ) ) ) ) { T_VARIABLE($functions) [ ] = T_VARIABLE($func) ; } } T_FOREACH ( T_STRING ( T_STRING ( ) ) T_AS T_VARIABLE($aid) T_DOUBLE_ARROW T_VARIABLE($action) ) { T_IF ( T_STRING ( T_VARIABLE($action) [ ] , T_VARIABLE($functions) ) ) { T_VARIABLE($options) [ T_VARIABLE($action) [ ] ] [ T_VARIABLE($aid) ] = T_VARIABLE($action) [ ] ; } } T_VARIABLE($form) [ T_VARIABLE($op) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) . T_VARIABLE($description) , T_DOUBLE_ARROW ) ; T_VARIABLE($actions) = T_STRING ( T_VARIABLE($hook) , T_VARIABLE($op) ) ; T_VARIABLE($form) [ T_VARIABLE($op) ] [ ] [ ] = ; T_VARIABLE($form) [ T_VARIABLE($op) ] [ ] [ ] = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($actions) T_AS T_VARIABLE($aid) T_DOUBLE_ARROW T_VARIABLE($description) ) { T_VARIABLE($form) [ T_VARIABLE($op) ] [ ] [ ] [ T_VARIABLE($aid) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($description) , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($hook) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($op) T_ENCAPSED_AND_WHITESPACE . T_STRING ( T_VARIABLE($aid) ) ) ) ; } T_VARIABLE($form) [ T_VARIABLE($op) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_IF ( T_STRING ( T_VARIABLE($options) ) T_IS_NOT_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($options) , T_STRING ( ) ) ; T_VARIABLE($form) [ T_VARIABLE($op) ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , ) ; T_VARIABLE($form) [ T_VARIABLE($op) ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($form) [ T_VARIABLE($op) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(trigger_assign_form_validate) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_VARIABLE($form_values) = T_VARIABLE($form_state) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_values) [ ] ) ) { T_VARIABLE($aid) = T_STRING ( T_VARIABLE($form_values) [ ] ) ; T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($form_values) [ ] , T_VARIABLE($aid) ) ) ) { T_STRING ( T_VARIABLE($form_values) [ ] , T_STRING ( ) ) ; } } } T_FUNCTION(trigger_assign_form_submit) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_VARIABLE($form_values) = T_VARIABLE($form_state) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_values) [ ] ) ) { T_VARIABLE($aid) = T_STRING ( T_VARIABLE($form_values) [ ] ) ; T_VARIABLE($weight) = T_STRING ( T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($form_values) [ ] ) ) ; T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($form_values) [ ] , T_VARIABLE($aid) , T_VARIABLE($weight) + T_LNUMBER ) ; T_VARIABLE($actions) = T_STRING ( ) ; T_IF ( T_ISSET ( T_VARIABLE($actions) [ T_VARIABLE($aid) ] [ ] ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($actions) [ T_VARIABLE($aid) ] [ ] ) T_BOOLEAN_AND ( T_VARIABLE($form_values) [ ] T_IS_NOT_EQUAL ) ) { T_VARIABLE($save_post_action_assigned) = T_STRING ( T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($form_values) [ ] ) ) ; T_IF ( T_VARIABLE($save_post_action_assigned) ) { T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($form_values) [ ] ) ; } T_STRING ( , T_VARIABLE($form_values) [ ] , T_VARIABLE($form_values) [ ] , , T_VARIABLE($weight) + T_LNUMBER ) ; T_IF ( ! T_VARIABLE($save_post_action_assigned) ) { T_STRING ( T_STRING ( ) ) ; } } } } T_FUNCTION(theme_trigger_display) ( T_VARIABLE($element) ) { T_VARIABLE($header) = T_ARRAY ( ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($element) [ ] [ ] ) ) { T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($element) [ ] [ ] T_AS T_VARIABLE($aid) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($info) [ ] , T_VARIABLE($info) [ ] ) ; } } T_IF ( T_STRING ( T_VARIABLE($rows) ) ) { T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) . T_STRING ( T_VARIABLE($element) ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( T_VARIABLE($element) ) ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(_trigger_get_hook_actions) ( T_VARIABLE($hook) , T_VARIABLE($op) , T_VARIABLE($type) = T_STRING ) { T_VARIABLE($actions) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($type) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($type) , T_VARIABLE($hook) , T_VARIABLE($op) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($hook) , T_VARIABLE($op) ) ; } T_WHILE ( T_VARIABLE($action) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($actions) [ T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ; } T_RETURN T_VARIABLE($actions) ; }",11,1
"T_OPEN_TAG T_FUNCTION(trigger_install) ( ) { T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; } T_FUNCTION(trigger_uninstall) ( ) { T_STRING ( ) ; } T_FUNCTION(trigger_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( , , ) , ) ; T_RETURN T_VARIABLE($schema) ; }",0,0
"T_OPEN_TAG T_FUNCTION(trigger_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_VARIABLE($explanation) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_RETURN T_VARIABLE($explanation) . . T_STRING ( ) . ; T_CASE : T_RETURN T_VARIABLE($explanation) . . T_STRING ( ) . ; T_CASE : T_RETURN T_VARIABLE($explanation) . . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_CASE : T_RETURN T_VARIABLE($explanation) . . T_STRING ( ) . ; T_CASE : T_RETURN T_VARIABLE($explanation) . . T_STRING ( ) . ; T_CASE : T_VARIABLE($output) = . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; } } T_FUNCTION(trigger_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($hooks) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($hooks) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($hook) ) { T_IF ( T_STRING ( T_VARIABLE($module) , T_ARRAY ( , , , , ) ) ) { T_CONTINUE ; } T_VARIABLE($info) = T_STRING ( T_STRING ( , T_VARIABLE($module) ) ) ; T_VARIABLE($info) = T_STRING ( T_VARIABLE($info) ) ; T_VARIABLE($nice_name) = T_VARIABLE($info) [ ] ; T_VARIABLE($items) [ T_ENCAPSED_AND_WHITESPACE T_VARIABLE($module) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($nice_name) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($module) ) , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($module) ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; } T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(trigger_access_check) ( T_VARIABLE($module) ) { T_RETURN ( T_STRING ( T_VARIABLE($module) ) T_BOOLEAN_AND T_STRING ( ) ) ; } T_FUNCTION(_trigger_get_hook_aids) ( T_VARIABLE($hook) , T_VARIABLE($op) = ) { T_VARIABLE($aids) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($hook) , T_VARIABLE($op) ) ; T_WHILE ( T_VARIABLE($action) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($aids) [ T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ] [ ] = T_VARIABLE($action) T_OBJECT_OPERATOR T_STRING ; } T_RETURN T_VARIABLE($aids) ; } T_FUNCTION(trigger_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) , ) ; } T_FUNCTION(trigger_forms) ( ) { T_VARIABLE($hooks) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($hooks) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($info) ) { T_FOREACH ( T_VARIABLE($hooks) [ T_VARIABLE($module) ] T_AS T_VARIABLE($hook) T_DOUBLE_ARROW T_VARIABLE($ops) ) { T_FOREACH ( T_VARIABLE($ops) T_AS T_VARIABLE($op) T_DOUBLE_ARROW T_VARIABLE($description) ) { T_VARIABLE($forms) [ . T_VARIABLE($hook) . . T_VARIABLE($op) . ] = T_ARRAY ( T_DOUBLE_ARROW ) ; } } } T_RETURN T_VARIABLE($forms) ; } T_FUNCTION(_trigger_normalize_node_context) ( T_VARIABLE($type) , T_VARIABLE($node) ) { T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_RETURN T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_FUNCTION(trigger_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($a3) , T_VARIABLE($a4) ) { T_STATIC T_VARIABLE($objects) ; T_STATIC T_VARIABLE($recursion) ; T_IF ( ! T_STRING ( T_VARIABLE($op) , T_ARRAY ( , , , , ) ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($recursion) [ T_VARIABLE($op) ] ) ) { T_RETURN ; } T_VARIABLE($recursion) [ T_VARIABLE($op) ] = T_STRING ; T_VARIABLE($aids) = T_STRING ( , T_VARIABLE($op) ) ; T_IF ( ! T_VARIABLE($aids) ) { T_RETURN ; } T_VARIABLE($context) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($op) , ) ; T_FOREACH ( T_VARIABLE($aids) T_AS T_VARIABLE($aid) T_DOUBLE_ARROW T_VARIABLE($action_info) ) { T_IF ( T_VARIABLE($action_info) [ ] T_IS_NOT_EQUAL ) { T_IF ( ! T_ISSET ( T_VARIABLE($objects) [ T_VARIABLE($action_info) [ ] ] ) ) { T_VARIABLE($objects) [ T_VARIABLE($action_info) [ ] ] = T_STRING ( T_VARIABLE($action_info) [ ] , T_VARIABLE($node) ) ; } T_VARIABLE($context) [ ] = T_VARIABLE($node) ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($aid) , T_VARIABLE($objects) [ T_VARIABLE($action_info) [ ] ] , T_VARIABLE($context) , T_VARIABLE($a4) , T_VARIABLE($a4) ) ; } T_ELSE { T_STRING ( T_VARIABLE($aid) , T_VARIABLE($node) , T_VARIABLE($context) , T_VARIABLE($a3) , T_VARIABLE($a4) ) ; } } } T_FUNCTION(_trigger_normalize_comment_context) ( T_VARIABLE($type) , T_VARIABLE($comment) ) { T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_RETURN T_STRING ( T_STRING ( T_VARIABLE($comment) ) ? T_VARIABLE($comment) [ ] : T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; T_CASE : T_RETURN T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($comment) ) ? T_VARIABLE($comment) [ ] : T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_FUNCTION(trigger_comment) ( T_VARIABLE($a1) , T_VARIABLE($op) ) { T_STATIC T_VARIABLE($objects) ; T_IF ( ! T_STRING ( T_VARIABLE($op) , T_ARRAY ( , , , ) ) ) { T_RETURN ; } T_VARIABLE($aids) = T_STRING ( , T_VARIABLE($op) ) ; T_VARIABLE($context) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($op) , ) ; T_FOREACH ( T_VARIABLE($aids) T_AS T_VARIABLE($aid) T_DOUBLE_ARROW T_VARIABLE($action_info) ) { T_IF ( T_VARIABLE($action_info) [ ] T_IS_NOT_EQUAL ) { T_IF ( ! T_ISSET ( T_VARIABLE($objects) [ T_VARIABLE($action_info) [ ] ] ) ) { T_VARIABLE($objects) [ T_VARIABLE($action_info) [ ] ] = T_STRING ( T_VARIABLE($action_info) [ ] , T_VARIABLE($a1) ) ; } T_VARIABLE($context) [ ] = T_OBJECT_CAST T_VARIABLE($a1) ; T_STRING ( T_VARIABLE($aid) , T_VARIABLE($objects) [ T_VARIABLE($action_info) [ ] ] , T_VARIABLE($context) ) ; } T_ELSE { T_VARIABLE($comment) = T_OBJECT_CAST T_VARIABLE($a1) ; T_STRING ( T_VARIABLE($aid) , T_VARIABLE($comment) , T_VARIABLE($context) ) ; } } } T_FUNCTION(trigger_cron) ( ) { T_VARIABLE($aids) = T_STRING ( ) ; T_VARIABLE($context) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($object) = T_STRING ; T_STRING ( T_STRING ( T_VARIABLE($aids) ) , T_VARIABLE($object) , T_VARIABLE($context) ) ; } T_FUNCTION(_trigger_normalize_user_context) ( T_VARIABLE($type) , T_VARIABLE($account) ) { T_SWITCH ( T_VARIABLE($type) ) { T_CASE : T_IF ( ( T_STRING ( T_LNUMBER ) T_IS_EQUAL ) T_BOOLEAN_AND T_STRING ( T_STRING ( T_LNUMBER ) ) T_BOOLEAN_AND ( T_STRING ( T_LNUMBER ) T_IS_EQUAL T_STRING ) ) { T_RETURN T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_LNUMBER ) ) ) ; } } } T_FUNCTION(trigger_user) ( T_VARIABLE($op) , & T_VARIABLE($edit) , & T_VARIABLE($account) , T_VARIABLE($category) = T_STRING ) { T_STATIC T_VARIABLE($objects) ; T_IF ( ! T_STRING ( T_VARIABLE($op) , T_ARRAY ( , , , , , ) ) ) { T_RETURN ; } T_VARIABLE($aids) = T_STRING ( , T_VARIABLE($op) ) ; T_VARIABLE($context) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($op) , T_DOUBLE_ARROW & T_VARIABLE($edit) , ) ; T_FOREACH ( T_VARIABLE($aids) T_AS T_VARIABLE($aid) T_DOUBLE_ARROW T_VARIABLE($action_info) ) { T_IF ( T_VARIABLE($action_info) [ ] T_IS_NOT_EQUAL ) { T_IF ( ! T_ISSET ( T_VARIABLE($objects) [ T_VARIABLE($action_info) [ ] ] ) ) { T_VARIABLE($objects) [ T_VARIABLE($action_info) [ ] ] = T_STRING ( T_VARIABLE($action_info) [ ] , T_VARIABLE($account) ) ; } T_VARIABLE($context) [ ] = T_VARIABLE($account) ; T_STRING ( T_VARIABLE($aid) , T_VARIABLE($objects) [ T_VARIABLE($action_info) [ ] ] , T_VARIABLE($context) ) ; } T_ELSE { T_STRING ( T_VARIABLE($aid) , T_VARIABLE($account) , T_VARIABLE($context) , T_VARIABLE($category) ) ; } } } T_FUNCTION(trigger_taxonomy) ( T_VARIABLE($op) , T_VARIABLE($type) , T_VARIABLE($array) ) { T_IF ( T_VARIABLE($type) T_IS_NOT_EQUAL ) { T_RETURN ; } T_VARIABLE($aids) = T_STRING ( , T_VARIABLE($op) ) ; T_VARIABLE($context) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($op) ) ; T_FOREACH ( T_VARIABLE($aids) T_AS T_VARIABLE($aid) T_DOUBLE_ARROW T_VARIABLE($action_info) ) { T_VARIABLE($taxonomy_object) = T_OBJECT_CAST T_VARIABLE($array) ; T_STRING ( T_VARIABLE($aid) , T_VARIABLE($taxonomy_object) , T_VARIABLE($context) ) ; } } T_FUNCTION(trigger_options) ( T_VARIABLE($type) = ) { T_VARIABLE($options) = T_ARRAY ( T_STRING ( ) ) ; T_FOREACH ( T_STRING ( T_STRING ( ) ) T_AS T_VARIABLE($aid) T_DOUBLE_ARROW T_VARIABLE($action) ) { T_VARIABLE($options) [ T_VARIABLE($action) [ ] ] [ T_VARIABLE($aid) ] = T_VARIABLE($action) [ ] ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_RETURN T_VARIABLE($options) ; } T_ELSE { T_RETURN T_VARIABLE($options) [ T_VARIABLE($type) ] ; } } T_FUNCTION(trigger_actions_delete) ( T_VARIABLE($aid) ) { T_STRING ( , T_VARIABLE($aid) ) ; }",11,1
"T_OPEN_TAG T_FUNCTION(update_get_projects) ( ) { T_STATIC T_VARIABLE($projects) = T_ARRAY ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($projects) ) ) { T_VARIABLE($projects) = T_STRING ( ) ; T_IF ( T_EMPTY ( T_VARIABLE($projects) ) ) { T_STRING ( T_VARIABLE($projects) , T_STRING ( ) , ) ; T_STRING ( T_VARIABLE($projects) , T_STRING ( ) , ) ; T_STRING ( , T_VARIABLE($projects) , , T_STRING ( ) + T_LNUMBER ) ; } } T_RETURN T_VARIABLE($projects) ; } T_FUNCTION(_update_process_info_list) ( & T_VARIABLE($projects) , T_VARIABLE($list) , T_VARIABLE($project_type) ) { T_FOREACH ( T_VARIABLE($list) T_AS T_VARIABLE($file) ) { T_IF ( T_EMPTY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_CONTINUE ; } T_IF ( T_EMPTY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_CONTINUE ; } T_IF ( ! T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_VARIABLE($file) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_CONTINUE ; } T_IF ( ! T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($info_filename) = T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) . . T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING . ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] = T_STRING ( T_VARIABLE($info_filename) ) ; } T_VARIABLE($project_name) = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($projects) [ T_VARIABLE($project_name) ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project_name) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($project_name) , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ? T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] : T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) , T_DOUBLE_ARROW T_VARIABLE($project_name) T_IS_EQUAL ? : T_VARIABLE($project_type) , ) ; } T_ELSE { T_VARIABLE($projects) [ T_VARIABLE($project_name) ] [ ] [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ; T_VARIABLE($projects) [ T_VARIABLE($project_name) ] [ ] [ ] = T_STRING ( T_VARIABLE($projects) [ T_VARIABLE($project_name) ] [ ] [ ] , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ; } } } T_FUNCTION(update_get_project_name) ( T_VARIABLE($file) ) { T_VARIABLE($project_name) = ; T_IF ( T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($project_name) = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] , ) T_IS_NOT_IDENTICAL T_STRING ) ) { T_VARIABLE($project_name) = ; } T_ELSEIF ( T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( , , , , , ) ) ) { T_VARIABLE($project_name) = ; } T_RETURN T_VARIABLE($project_name) ; } T_FUNCTION(update_process_project_info) ( & T_VARIABLE($projects) ) { T_FOREACH ( T_VARIABLE($projects) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($project) ) { T_VARIABLE($install_type) = ; T_VARIABLE($info) = T_VARIABLE($project) [ ] ; T_IF ( T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_IF ( T_STRING ( , T_VARIABLE($info) [ ] ) ) { T_VARIABLE($install_type) = ; } T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( T_STRING ( , T_VARIABLE($info) [ ] , T_VARIABLE($matches) ) ) { T_VARIABLE($info) [ ] = T_VARIABLE($matches) [ T_LNUMBER ] ; } T_ELSEIF ( ! T_ISSET ( T_VARIABLE($info) [ ] ) ) { T_VARIABLE($info) [ ] = - T_LNUMBER ; } } T_ELSE { T_VARIABLE($install_type) = ; T_VARIABLE($info) [ ] = T_STRING ( ) ; T_VARIABLE($info) [ ] = - T_LNUMBER ; } T_VARIABLE($projects) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($info) [ ] ; T_VARIABLE($projects) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($info) [ ] ; T_VARIABLE($projects) [ T_VARIABLE($key) ] [ ] = T_VARIABLE($install_type) ; T_UNSET ( T_VARIABLE($projects) [ T_VARIABLE($key) ] [ ] ) ; } } T_FUNCTION(update_calculate_project_data) ( T_VARIABLE($available) ) { T_VARIABLE($projects) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($projects) ) ) { T_RETURN T_VARIABLE($projects) ; } T_VARIABLE($projects) = T_STRING ( ) ; T_STRING ( T_VARIABLE($projects) ) ; T_FOREACH ( T_VARIABLE($projects) T_AS T_VARIABLE($project) T_DOUBLE_ARROW T_VARIABLE($project_info) ) { T_IF ( T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) ) { T_SWITCH ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) { T_CASE : T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; T_IF ( T_EMPTY ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_ARRAY ( ) ; } T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_BREAK ; T_CASE : T_CASE : T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; T_IF ( T_EMPTY ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_ARRAY ( ) ; } T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_BREAK ; T_CASE : T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; T_IF ( T_EMPTY ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_ARRAY ( ) ; } T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_BREAK ; T_DEFAULT : T_BREAK ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] T_PLUS_EQUAL T_VARIABLE($available) [ T_VARIABLE($project) ] ; T_CONTINUE ; } T_VARIABLE($existing_major) = T_VARIABLE($project_info) [ ] ; T_VARIABLE($supported_majors) = T_ARRAY ( ) ; T_IF ( T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($supported_majors) = T_STRING ( , T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($supported_majors) [ ] = T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ; } T_IF ( T_STRING ( T_VARIABLE($existing_major) , T_VARIABLE($supported_majors) ) ) { T_VARIABLE($target_major) = T_VARIABLE($existing_major) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($target_major) = T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ; T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($target_major) = T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ; } T_ELSE { T_VARIABLE($target_major) = T_VARIABLE($existing_major) ; } T_VARIABLE($target_major) = T_STRING ( T_VARIABLE($existing_major) , T_VARIABLE($target_major) ) ; T_VARIABLE($version_patch_changed) = ; T_VARIABLE($patch) = ; T_IF ( T_EMPTY ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ( ) ; T_CONTINUE ; } T_FOREACH ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] T_AS T_VARIABLE($version) T_DOUBLE_ARROW T_VARIABLE($release) ) { T_IF ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] T_IS_EQUAL T_VARIABLE($version) ) { T_IF ( T_ISSET ( T_VARIABLE($release) [ ] [ ] ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($release) [ ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; } T_ELSEIF ( T_VARIABLE($release) [ ] T_IS_EQUAL ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; T_IF ( T_EMPTY ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_ARRAY ( ) ; } T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($release) [ ] [ ] ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($release) [ ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; T_IF ( T_EMPTY ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_ARRAY ( ) ; } T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; } } T_IF ( T_VARIABLE($release) [ ] T_IS_EQUAL T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($release) [ ] [ ] ) T_BOOLEAN_AND ( T_STRING ( , T_VARIABLE($release) [ ] [ ] ) T_BOOLEAN_OR T_STRING ( , T_VARIABLE($release) [ ] [ ] ) ) ) ) { T_CONTINUE ; } T_IF ( T_VARIABLE($release) [ ] > T_VARIABLE($target_major) ) { T_IF ( T_STRING ( T_VARIABLE($release) [ ] , T_VARIABLE($supported_majors) ) ) { T_IF ( ! T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] = T_ARRAY ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] [ T_VARIABLE($release) [ ] ] ) ) { T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] [ T_VARIABLE($release) [ ] ] = T_VARIABLE($version) ; } } T_CONTINUE ; } T_IF ( ! T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) T_BOOLEAN_AND T_VARIABLE($release) [ ] T_IS_EQUAL T_VARIABLE($target_major) ) { T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] = T_VARIABLE($version) ; } T_IF ( ! T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) T_BOOLEAN_AND T_VARIABLE($release) [ ] T_IS_EQUAL T_VARIABLE($target_major) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($release) [ ] ) T_BOOLEAN_AND T_VARIABLE($release) [ ] T_IS_EQUAL ) { T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] = T_VARIABLE($version) ; } T_IF ( ! T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) T_BOOLEAN_AND T_VARIABLE($release) [ ] T_IS_EQUAL T_VARIABLE($target_major) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($release) [ ] ) ) { T_IF ( T_VARIABLE($patch) T_IS_NOT_EQUAL T_VARIABLE($release) [ ] ) { T_VARIABLE($patch) = T_VARIABLE($release) [ ] ; T_VARIABLE($version_patch_changed) = T_VARIABLE($release) [ ] ; } T_IF ( T_EMPTY ( T_VARIABLE($release) [ ] ) T_BOOLEAN_AND T_VARIABLE($patch) T_IS_EQUAL T_VARIABLE($release) [ ] ) { T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] = T_VARIABLE($version_patch_changed) ; } } T_IF ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] T_IS_EQUAL T_VARIABLE($version) ) { T_BREAK ; } T_IF ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] T_IS_EQUAL ) { T_IF ( T_EMPTY ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_CONTINUE ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($release) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] + T_LNUMBER > T_VARIABLE($release) [ ] ) ) { T_CONTINUE ; } } T_IF ( T_ISSET ( T_VARIABLE($release) [ ] [ ] ) T_BOOLEAN_AND T_STRING ( , T_VARIABLE($release) [ ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] [ ] = T_VARIABLE($release) ; } } T_IF ( ! T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] = T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ; } T_VARIABLE($projects) [ T_VARIABLE($project) ] T_PLUS_EQUAL T_VARIABLE($available) [ T_VARIABLE($project) ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_CONTINUE ; } T_IF ( ! T_ISSET ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ( ) ; T_CONTINUE ; } T_IF ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] T_IS_EQUAL ) { T_IF ( T_ISSET ( T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ) T_BOOLEAN_AND T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] [ T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ] [ ] > T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] [ T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ] [ ] ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ; } T_ELSE { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] ; } } T_SWITCH ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) { T_CASE : T_IF ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] T_IS_EQUAL T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] T_BOOLEAN_OR T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] T_IS_EQUAL T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; } T_ELSE { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; } T_BREAK ; T_CASE : T_VARIABLE($latest) = T_VARIABLE($available) [ T_VARIABLE($project) ] [ ] [ T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ] ; T_IF ( T_EMPTY ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ( ) ; } T_ELSEIF ( ( T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] + T_LNUMBER > T_VARIABLE($latest) [ ] ) ) { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; } T_ELSE { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; } T_BREAK ; T_DEFAULT : T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ( ) ; } } T_ELSE { T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ; T_VARIABLE($projects) [ T_VARIABLE($project) ] [ ] = T_STRING ( ) ; } } T_STRING ( , T_VARIABLE($projects) ) ; T_STRING ( , T_VARIABLE($projects) , , T_STRING ( ) + T_LNUMBER ) ; T_RETURN T_VARIABLE($projects) ; } T_FUNCTION(update_project_cache) ( T_VARIABLE($cid) ) { T_VARIABLE($projects) = T_ARRAY ( ) ; T_VARIABLE($q) = T_VARIABLE($_GET) [ ] ; T_VARIABLE($paths) = T_ARRAY ( , , , , , ) ; T_IF ( T_STRING ( T_VARIABLE($q) , T_VARIABLE($paths) ) ) { T_STRING ( T_VARIABLE($cid) , ) ; } T_ELSE { T_VARIABLE($cache) = T_STRING ( T_VARIABLE($cid) , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING > T_STRING ( ) ) { T_VARIABLE($projects) = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; } } T_RETURN T_VARIABLE($projects) ; }",13,0
"T_OPEN_TAG T_FUNCTION(update_manual_status) ( ) { T_IF ( T_STRING ( ) ) { T_STRING ( T_STRING ( ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) , ) ; } T_STRING ( ) ; } T_FUNCTION(_update_refresh) ( ) { T_GLOBAL T_VARIABLE($base_url) ; T_STRING ( , , ) ; T_STRING ( ) ; T_VARIABLE($available) = T_ARRAY ( ) ; T_VARIABLE($data) = T_ARRAY ( ) ; T_VARIABLE($site_key) = T_STRING ( T_VARIABLE($base_url) . T_STRING ( ) ) ; T_VARIABLE($projects) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($projects) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($project) ) { T_VARIABLE($url) = T_STRING ( T_VARIABLE($project) , T_VARIABLE($site_key) ) ; T_VARIABLE($xml) = T_STRING ( T_VARIABLE($url) ) ; T_IF ( T_ISSET ( T_VARIABLE($xml) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($data) [ ] = T_VARIABLE($xml) T_OBJECT_OPERATOR T_STRING ; } } T_IF ( T_VARIABLE($data) ) { T_VARIABLE($parser) = T_NEW T_STRING ; T_VARIABLE($available) = T_VARIABLE($parser) T_OBJECT_OPERATOR T_STRING ( T_VARIABLE($data) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($available) ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($available) ) ) { T_VARIABLE($frequency) = T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_VARIABLE($available) , , T_STRING ( ) + ( T_LNUMBER * T_LNUMBER * T_LNUMBER * T_VARIABLE($frequency) ) ) ; T_STRING ( , T_STRING ( ) ) ; T_STRING ( , , T_ARRAY ( ) , T_STRING , T_STRING ( , ) ) ; } T_ELSE { T_STRING ( , ) ; T_STRING ( , , T_ARRAY ( ) , T_STRING , T_STRING ( , ) ) ; } T_RETURN T_VARIABLE($available) ; } T_FUNCTION(_update_build_fetch_url) ( T_VARIABLE($project) , T_VARIABLE($site_key) = ) { T_VARIABLE($default_url) = T_STRING ( , T_STRING ) ; T_IF ( ! T_ISSET ( T_VARIABLE($project) [ ] [ ] ) ) { T_VARIABLE($project) [ ] [ ] = T_VARIABLE($default_url) ; } T_VARIABLE($name) = T_VARIABLE($project) [ ] ; T_VARIABLE($url) = T_VARIABLE($project) [ ] [ ] ; T_VARIABLE($url) T_CONCAT_EQUAL . T_VARIABLE($name) . . T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($site_key) ) ) { T_VARIABLE($url) T_CONCAT_EQUAL ( T_STRING ( T_VARIABLE($url) , ) T_IS_IDENTICAL T_STRING ) ? : ; T_VARIABLE($url) T_CONCAT_EQUAL ; T_VARIABLE($url) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($site_key) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($project) [ ] [ ] ) ) { T_VARIABLE($url) T_CONCAT_EQUAL ; T_VARIABLE($url) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($project) [ ] [ ] ) ; } } T_RETURN T_VARIABLE($url) ; } T_FUNCTION(_update_cron_notify) ( ) { T_INCLUDE_ONCE ; T_VARIABLE($status) = T_STRING ( ) ; T_VARIABLE($params) = T_ARRAY ( ) ; T_FOREACH ( T_ARRAY ( , ) T_AS T_VARIABLE($report_type) ) { T_VARIABLE($type) = . T_VARIABLE($report_type) ; T_IF ( T_ISSET ( T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] ) T_BOOLEAN_AND T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] T_IS_EQUAL T_STRING ) { T_VARIABLE($params) [ T_VARIABLE($report_type) ] = T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($params) ) ) { T_VARIABLE($notify_list) = T_STRING ( , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($notify_list) ) ) { T_VARIABLE($default_language) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($notify_list) T_AS T_VARIABLE($target) ) { T_IF ( T_VARIABLE($target_user) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($target) ) ) ) { T_VARIABLE($target_language) = T_STRING ( T_VARIABLE($target_user) ) ; } T_ELSE { T_VARIABLE($target_language) = T_VARIABLE($default_language) ; } T_STRING ( , , T_VARIABLE($target) , T_VARIABLE($target_language) , T_VARIABLE($params) ) ; } } } } T_STRING { T_VAR T_VARIABLE($projects) = T_ARRAY ( ) ; T_VAR T_VARIABLE($current_project) ; T_VAR T_VARIABLE($current_release) ; T_VAR T_VARIABLE($current_term) ; T_VAR T_VARIABLE($current_tag) ; T_VAR T_VARIABLE($current_object) ; T_STRING ( T_VARIABLE($data) ) { T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($datum) ) { T_VARIABLE($parser) = T_STRING ( ) ; T_STRING ( T_VARIABLE($parser) , T_VARIABLE($this) ) ; T_STRING ( T_VARIABLE($parser) , , ) ; T_STRING ( T_VARIABLE($parser) , ) ; T_STRING ( T_VARIABLE($parser) , T_VARIABLE($datum) ) ; T_STRING ( T_VARIABLE($parser) ) ; } T_RETURN T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($parser) , T_VARIABLE($name) , T_VARIABLE($attr) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($name) ; T_SWITCH ( T_VARIABLE($name) ) { T_CASE : T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = & T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_BREAK ; T_CASE : T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = & T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_BREAK ; T_CASE : T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = & T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_BREAK ; } } T_STRING ( T_VARIABLE($parser) , T_VARIABLE($name) ) { T_SWITCH ( T_VARIABLE($name) ) { T_CASE : T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_BREAK ; T_CASE : T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_BREAK ; T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = & T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_BREAK ; T_CASE : T_UNSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($term_name) = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ; T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($term_name) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($term_name) ] = T_ARRAY ( ) ; } T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] [ T_VARIABLE($term_name) ] [ ] = T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ ] ; T_BREAK ; T_CASE : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = & T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ; T_BREAK ; T_DEFAULT : T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ] = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ] ) ; T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING = ; } } T_STRING ( T_VARIABLE($parser) , T_VARIABLE($data) ) { T_IF ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ! T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( , , , , ) ) ) { T_VARIABLE($tag) = T_STRING ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($tag) ] ) ) { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($tag) ] T_CONCAT_EQUAL T_VARIABLE($data) ; } T_ELSE { T_VARIABLE($this) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($tag) ] = T_VARIABLE($data) ; } } } }",13,0
"T_OPEN_TAG T_FUNCTION(update_install) ( ) { T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(update_uninstall) ( ) { T_STRING ( ) ; T_VARIABLE($variables) = T_ARRAY ( , , , , , ) ; T_FOREACH ( T_VARIABLE($variables) T_AS T_VARIABLE($variable) ) { T_STRING ( T_VARIABLE($variable) ) ; } T_STRING ( ) ; } T_FUNCTION(update_schema) ( ) { T_VARIABLE($schema) [ ] = T_STRING ( , ) ; T_VARIABLE($schema) [ ] [ ] = T_STRING ( ) ; T_RETURN T_VARIABLE($schema) ; } T_FUNCTION(_update_remove_update_status_variables) ( ) { T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(update_update_6000) ( ) { T_STRING ( ) ; T_RETURN T_ARRAY ( ) ; }",2,0
"T_OPEN_TAG T_STRING ( , ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , - T_LNUMBER ) ; T_STRING ( , - T_LNUMBER ) ; T_FUNCTION(update_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_CASE : T_INCLUDE_ONCE ; T_VARIABLE($status) = T_STRING ( ) ; T_FOREACH ( T_ARRAY ( , ) T_AS T_VARIABLE($report_type) ) { T_VARIABLE($type) = . T_VARIABLE($report_type) ; T_IF ( T_ISSET ( T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] ) ) { T_IF ( T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] T_IS_EQUAL T_STRING ) { T_STRING ( T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] , ) ; } T_ELSEIF ( T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] T_IS_EQUAL T_STRING ) { T_STRING ( T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] , ) ; } } } T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_CASE : T_CASE : T_BREAK ; T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_DEFAULT : T_IF ( T_STRING ( T_LNUMBER ) T_IS_EQUAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($path) , ) T_IS_IDENTICAL T_STRING T_BOOLEAN_AND T_STRING ( ) ) { T_INCLUDE_ONCE ; T_VARIABLE($status) = T_STRING ( ) ; T_FOREACH ( T_ARRAY ( , ) T_AS T_VARIABLE($report_type) ) { T_VARIABLE($type) = . T_VARIABLE($report_type) ; T_IF ( T_ISSET ( T_VARIABLE($status) [ T_VARIABLE($type) ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] ) T_BOOLEAN_AND T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] T_IS_IDENTICAL T_STRING ) { T_STRING ( T_VARIABLE($status) [ T_VARIABLE($type) ] [ ] , ) ; } } } } } T_FUNCTION(update_menu) ( ) { T_VARIABLE($items) = T_ARRAY ( ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(update_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(update_requirements) ( T_VARIABLE($phase) ) { T_IF ( T_VARIABLE($phase) T_IS_EQUAL ) { T_IF ( T_VARIABLE($available) = T_STRING ( T_STRING ) ) { T_STRING ( , , ) ; T_VARIABLE($data) = T_STRING ( T_VARIABLE($available) ) ; T_VARIABLE($requirements) [ ] = T_STRING ( T_VARIABLE($data) [ ] , ) ; T_UNSET ( T_VARIABLE($data) [ ] ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($data) ) ) { T_STRING ( T_VARIABLE($data) , ) ; T_VARIABLE($first_project) = T_STRING ( T_VARIABLE($data) ) ; T_VARIABLE($requirements) [ ] = T_STRING ( T_VARIABLE($first_project) , ) ; } } T_ELSE { T_VARIABLE($requirements) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($requirements) [ ] [ ] = T_STRING ( ) ; T_VARIABLE($requirements) [ ] [ ] = T_STRING ; T_VARIABLE($requirements) [ ] [ ] = T_STRING ; T_VARIABLE($requirements) [ ] [ ] = T_STRING ( ) ; } T_RETURN T_VARIABLE($requirements) ; } } T_FUNCTION(_update_requirement_check) ( T_VARIABLE($project) , T_VARIABLE($type) ) { T_VARIABLE($requirement) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($requirement) [ ] = T_STRING ( ) ; } T_ELSE { T_VARIABLE($requirement) [ ] = T_STRING ( ) ; } T_VARIABLE($status) = T_VARIABLE($project) [ ] ; T_IF ( T_VARIABLE($status) T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($requirement) [ ] = T_VARIABLE($status) ; T_VARIABLE($requirement) [ ] = T_STRING ( T_VARIABLE($type) , T_VARIABLE($status) , T_STRING ) ; T_VARIABLE($requirement) [ ] = T_STRING ; } T_SWITCH ( T_VARIABLE($status) ) { T_CASE T_STRING : T_VARIABLE($requirement_label) = T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($requirement_label) = T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($requirement_label) = T_STRING ( ) ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($requirement_label) = T_STRING ( ) ; T_VARIABLE($requirement) [ ] = T_STRING ( , ) T_IS_EQUAL ? T_STRING : T_STRING ; T_BREAK ; T_CASE T_STRING : T_CASE T_STRING : T_VARIABLE($requirement_label) = T_ISSET ( T_VARIABLE($project) [ ] ) ? T_VARIABLE($project) [ ] : T_STRING ( ) ; T_VARIABLE($requirement) [ ] = T_STRING ; T_BREAK ; T_DEFAULT : T_VARIABLE($requirement_label) = T_STRING ( ) ; } T_IF ( T_VARIABLE($status) T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($project) [ ] ) ) { T_VARIABLE($requirement_label) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($project) [ ] ) ) ; } T_VARIABLE($requirement) [ ] = T_STRING ( T_VARIABLE($requirement_label) , ) ; T_RETURN T_VARIABLE($requirement) ; } T_FUNCTION(update_cron) ( ) { T_VARIABLE($frequency) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($interval) = T_LNUMBER * T_LNUMBER * T_LNUMBER * T_VARIABLE($frequency) ; T_IF ( T_STRING ( ) - T_STRING ( , T_LNUMBER ) > T_VARIABLE($interval) ) { T_STRING ( ) ; T_STRING ( ) ; } } T_FUNCTION(update_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_VARIABLE($form_id) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($form_id) T_IS_EQUAL ) { T_VARIABLE($form) [ ] [ ] = ; } } T_FUNCTION(_update_no_data) ( ) { T_VARIABLE($destination) = T_STRING ( ) ; T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) , ) ) ; } T_FUNCTION(update_get_available) ( T_VARIABLE($refresh) = T_STRING ) { T_STRING ( , , ) ; T_VARIABLE($available) = T_ARRAY ( ) ; T_VARIABLE($needs_refresh) = T_STRING ; T_VARIABLE($last_check) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($projects) = T_STRING ( ) ; T_FOREACH ( T_VARIABLE($projects) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($project) ) { T_IF ( T_VARIABLE($project) [ ] [ ] > T_VARIABLE($last_check) ) { T_VARIABLE($needs_refresh) = T_STRING ; T_BREAK ; } } T_IF ( ! T_VARIABLE($needs_refresh) T_BOOLEAN_AND ( T_VARIABLE($cache) = T_STRING ( , ) ) T_BOOLEAN_AND T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING > T_STRING ( ) ) { T_VARIABLE($available) = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; } T_ELSEIF ( T_VARIABLE($needs_refresh) T_BOOLEAN_OR T_VARIABLE($refresh) ) { T_VARIABLE($available) = T_STRING ( ) ; } T_RETURN T_VARIABLE($available) ; } T_FUNCTION(update_flush_caches) ( ) { T_RETURN T_ARRAY ( ) ; } T_FUNCTION(update_invalidate_cache) ( ) { T_STRING ( , , T_STRING ) ; } T_FUNCTION(update_refresh) ( ) { T_STRING ( , , ) ; T_RETURN T_STRING ( ) ; } T_FUNCTION(update_mail) ( T_VARIABLE($key) , & T_VARIABLE($message) , T_VARIABLE($params) ) { T_VARIABLE($language) = T_VARIABLE($message) [ ] ; T_VARIABLE($langcode) = T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($message) [ ] T_CONCAT_EQUAL T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , ) ) , T_VARIABLE($langcode) ) ; T_FOREACH ( T_VARIABLE($params) T_AS T_VARIABLE($msg_type) T_DOUBLE_ARROW T_VARIABLE($msg_reason) ) { T_VARIABLE($message) [ ] [ ] = T_STRING ( T_VARIABLE($msg_type) , T_VARIABLE($msg_reason) , T_STRING , T_VARIABLE($language) ) ; } T_VARIABLE($message) [ ] [ ] = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) . . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($language) ) ) ; } T_FUNCTION(_update_message_text) ( T_VARIABLE($msg_type) , T_VARIABLE($msg_reason) , T_VARIABLE($report_link) = T_STRING , T_VARIABLE($language) = T_STRING ) { T_VARIABLE($langcode) = T_ISSET ( T_VARIABLE($language) ) ? T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING : T_STRING ; T_VARIABLE($text) = ; T_SWITCH ( T_VARIABLE($msg_reason) ) { T_CASE T_STRING : T_IF ( T_VARIABLE($msg_type) T_IS_EQUAL ) { T_VARIABLE($text) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_ELSE { T_VARIABLE($text) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_BREAK ; T_CASE T_STRING : T_IF ( T_VARIABLE($msg_type) T_IS_EQUAL ) { T_VARIABLE($text) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_ELSE { T_VARIABLE($text) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_BREAK ; T_CASE T_STRING : T_IF ( T_VARIABLE($msg_type) T_IS_EQUAL ) { T_VARIABLE($text) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_ELSE { T_VARIABLE($text) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_BREAK ; T_CASE T_STRING : T_IF ( T_VARIABLE($msg_type) T_IS_EQUAL ) { T_VARIABLE($text) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_ELSE { T_VARIABLE($text) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_BREAK ; T_CASE T_STRING : T_CASE T_STRING : T_IF ( T_VARIABLE($msg_type) T_IS_EQUAL ) { T_VARIABLE($text) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_ELSE { T_VARIABLE($text) = T_STRING ( , T_ARRAY ( ) , T_VARIABLE($langcode) ) ; } T_BREAK ; } T_IF ( T_VARIABLE($report_link) ) { T_VARIABLE($text) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($language) ) ) ) , T_VARIABLE($langcode) ) ; } T_RETURN T_VARIABLE($text) ; } T_FUNCTION(_update_project_status_sort) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_VARIABLE($a_status) = T_VARIABLE($a) [ ] > T_LNUMBER ? T_VARIABLE($a) [ ] : ( - T_LNUMBER * T_VARIABLE($a) [ ] ) ; T_VARIABLE($b_status) = T_VARIABLE($b) [ ] > T_LNUMBER ? T_VARIABLE($b) [ ] : ( - T_LNUMBER * T_VARIABLE($b) [ ] ) ; T_RETURN T_VARIABLE($a_status) - T_VARIABLE($b_status) ; }",13,0
"T_OPEN_TAG T_FUNCTION(update_status) ( ) { T_IF ( T_VARIABLE($available) = T_STRING ( T_STRING ) ) { T_STRING ( , , ) ; T_VARIABLE($data) = T_STRING ( T_VARIABLE($available) ) ; T_RETURN T_STRING ( , T_VARIABLE($data) ) ; } T_ELSE { T_RETURN T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(theme_update_report) ( T_VARIABLE($data) ) { T_VARIABLE($last) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($output) = . ( T_VARIABLE($last) ? T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($last) ) ) ) : T_STRING ( ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( ) , ) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( ! T_STRING ( T_VARIABLE($data) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($data) . ; T_RETURN T_VARIABLE($output) ; } T_VARIABLE($header) = T_ARRAY ( ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_VARIABLE($notification_level) = T_STRING ( , ) ; T_FOREACH ( T_VARIABLE($data) T_AS T_VARIABLE($project) ) { T_SWITCH ( T_VARIABLE($project) [ ] ) { T_CASE T_STRING : T_VARIABLE($class) = ; T_VARIABLE($icon) = T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ; T_BREAK ; T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_CASE T_STRING : T_IF ( T_VARIABLE($notification_level) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($project) [ ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($class) = ; T_VARIABLE($icon) = T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ; T_BREAK ; } T_DEFAULT : T_VARIABLE($class) = ; T_VARIABLE($icon) = T_STRING ( , , T_STRING ( ) , T_STRING ( ) ) ; T_BREAK ; } T_VARIABLE($row) = ; T_SWITCH ( T_VARIABLE($project) [ ] ) { T_CASE T_STRING : T_VARIABLE($row) T_CONCAT_EQUAL . T_STRING ( ) . ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($row) T_CONCAT_EQUAL . T_STRING ( ) . ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($row) T_CONCAT_EQUAL . T_STRING ( ) . ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($row) T_CONCAT_EQUAL . T_STRING ( ) . ; T_BREAK ; T_CASE T_STRING : T_VARIABLE($row) T_CONCAT_EQUAL . T_STRING ( ) . ; T_BREAK ; T_DEFAULT : T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($project) [ ] ) ; T_BREAK ; } T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($icon) . ; T_VARIABLE($row) T_CONCAT_EQUAL ; T_VARIABLE($row) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($project) [ ] ) ) { T_IF ( T_ISSET ( T_VARIABLE($project) [ ] ) ) { T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($project) [ ] , T_VARIABLE($project) [ ] ) ; } T_ELSE { T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($project) [ ] ) ; } } T_ELSE { T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($project) [ ] ) ; } T_VARIABLE($row) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($project) [ ] ) ; T_IF ( T_VARIABLE($project) [ ] T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($project) [ ] ) ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($project) [ ] , , ) . ; } T_VARIABLE($row) T_CONCAT_EQUAL ; T_VARIABLE($row) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($project) [ ] ) ) { T_IF ( T_VARIABLE($project) [ ] T_IS_NOT_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($project) [ ] T_IS_NOT_EQUAL T_VARIABLE($project) [ ] ) { T_IF ( ! T_EMPTY ( T_VARIABLE($project) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($project) [ ] ) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($project) [ ] [ T_LNUMBER ] [ ] T_IS_EQUAL T_VARIABLE($project) [ ] ) { T_VARIABLE($security_class) = ; } T_ELSE { T_VARIABLE($security_class) = ; T_VARIABLE($version_class) = ; T_IF ( T_VARIABLE($project) [ ] T_IS_NOT_EQUAL T_VARIABLE($project) [ ] T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($project) [ ] ) T_BOOLEAN_OR ( T_VARIABLE($project) [ ] T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($project) [ ] ) T_BOOLEAN_AND T_VARIABLE($project) [ ] T_IS_NOT_EQUAL T_VARIABLE($project) [ ] T_BOOLEAN_AND T_VARIABLE($project) [ ] T_IS_NOT_EQUAL T_VARIABLE($project) [ ] ) T_BOOLEAN_OR ( T_ISSET ( T_VARIABLE($project) [ ] [ T_LNUMBER ] ) T_BOOLEAN_AND T_VARIABLE($project) [ ] T_IS_NOT_EQUAL T_VARIABLE($project) [ ] [ T_LNUMBER ] ) ) { T_VARIABLE($version_class) T_CONCAT_EQUAL ; } T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($project) [ ] [ T_VARIABLE($project) [ ] ] , T_STRING ( ) , T_VARIABLE($version_class) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($project) [ ] ) ) { T_FOREACH ( T_VARIABLE($project) [ ] T_AS T_VARIABLE($security_update) ) { T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($security_update) , T_STRING ( ) , . T_VARIABLE($security_class) ) ; } } } T_IF ( T_VARIABLE($project) [ ] T_IS_NOT_EQUAL T_VARIABLE($project) [ ] ) { T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($project) [ ] [ T_VARIABLE($project) [ ] ] , T_STRING ( ) , ) ; } T_IF ( T_VARIABLE($project) [ ] T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($project) [ ] T_IS_NOT_EQUAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($project) [ ] ) T_BOOLEAN_AND T_VARIABLE($project) [ ] T_IS_NOT_EQUAL T_VARIABLE($project) [ ] ) { T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($project) [ ] [ T_VARIABLE($project) [ ] ] , T_STRING ( ) , ) ; } } T_IF ( T_ISSET ( T_VARIABLE($project) [ ] ) ) { T_FOREACH ( T_VARIABLE($project) [ ] T_AS T_VARIABLE($also) ) { T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($project) [ ] [ T_VARIABLE($also) ] , T_STRING ( ) , ) ; } } T_VARIABLE($row) T_CONCAT_EQUAL ; T_VARIABLE($row) T_CONCAT_EQUAL ; T_IF ( ! T_EMPTY ( T_VARIABLE($project) [ ] ) ) { T_VARIABLE($row) T_CONCAT_EQUAL . ; T_FOREACH ( T_VARIABLE($project) [ ] T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($row) T_CONCAT_EQUAL . T_VARIABLE($value) [ ] . ; T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($value) [ ] ) . ; T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($value) [ ] ) ; T_VARIABLE($row) T_CONCAT_EQUAL ; } T_VARIABLE($row) T_CONCAT_EQUAL ; } T_VARIABLE($row) T_CONCAT_EQUAL ; T_STRING ( T_VARIABLE($project) [ ] ) ; T_VARIABLE($row) T_CONCAT_EQUAL T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($project) [ ] ) ) ) ; T_VARIABLE($row) T_CONCAT_EQUAL ; T_VARIABLE($row) T_CONCAT_EQUAL ; T_IF ( ! T_ISSET ( T_VARIABLE($rows) [ T_VARIABLE($project) [ ] ] ) ) { T_VARIABLE($rows) [ T_VARIABLE($project) [ ] ] = T_ARRAY ( ) ; } T_VARIABLE($rows) [ T_VARIABLE($project) [ ] ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($class) , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($row) ) , ) ; } T_VARIABLE($project_types) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_FOREACH ( T_VARIABLE($project_types) T_AS T_VARIABLE($type_name) T_DOUBLE_ARROW T_VARIABLE($type_label) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($rows) [ T_VARIABLE($type_name) ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($type_label) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) [ T_VARIABLE($type_name) ] , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } } T_STRING ( T_STRING ( , ) . ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_update_version) ( T_VARIABLE($version) , T_VARIABLE($tag) , T_VARIABLE($class) ) { T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($class) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($tag) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($version) [ ] , T_VARIABLE($version) [ ] ) ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($version) [ ] , , ) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($links) = T_ARRAY ( ) ; T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($version) [ ] , ) ; T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($version) [ ] , ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($links) ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; }",9,0
"T_OPEN_TAG T_FUNCTION(update_settings) ( ) { T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($notify_emails) = T_STRING ( , T_ARRAY ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($notify_emails) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) ) ; T_VARIABLE($form) [ ] [ ] = ; T_UNSET ( T_VARIABLE($form) [ ] ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(update_settings_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($valid) = T_ARRAY ( ) ; T_VARIABLE($invalid) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( , T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) T_AS T_VARIABLE($email) ) { T_VARIABLE($email) = T_STRING ( T_VARIABLE($email) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($email) ) ) { T_IF ( T_STRING ( T_VARIABLE($email) ) ) { T_VARIABLE($valid) [ ] = T_VARIABLE($email) ; } T_ELSE { T_VARIABLE($invalid) [ ] = T_VARIABLE($email) ; } } } T_IF ( T_EMPTY ( T_VARIABLE($invalid) ) ) { T_VARIABLE($form_state) [ ] = T_VARIABLE($valid) ; } T_ELSEIF ( T_STRING ( T_VARIABLE($invalid) ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($invalid) ) ) ) ) ; } T_ELSE { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($invalid) ) ) ) ) ; } } } T_FUNCTION(update_settings_submit) ( T_VARIABLE($form) , T_VARIABLE($form_state) ) { T_VARIABLE($op) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( T_VARIABLE($op) T_IS_EQUAL T_STRING ( ) ) { T_UNSET ( T_VARIABLE($form_state) [ ] ) ; } T_ELSE { T_IF ( T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) { T_STRING ( ) ; } T_ELSE { T_STRING ( , T_VARIABLE($form_state) [ ] ) ; } T_UNSET ( T_VARIABLE($form_state) [ ] ) ; T_UNSET ( T_VARIABLE($form_state) [ ] [ ] ) ; } T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; }",3,0
"T_OPEN_TAG T_FUNCTION(upload_admin_settings_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( ( T_VARIABLE($form_state) [ ] [ ] T_IS_NOT_EQUAL ) ) { T_IF ( ! T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( ) ) ; } } T_VARIABLE($default_uploadsize) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($default_usersize) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($exceed_max_msg) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) ) ) ) . ; T_VARIABLE($more_info) = T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($default_uploadsize) ) T_BOOLEAN_OR ( T_VARIABLE($default_uploadsize) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; } T_IF ( ! T_STRING ( T_VARIABLE($default_usersize) ) T_BOOLEAN_OR ( T_VARIABLE($default_usersize) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; } T_IF ( T_VARIABLE($default_uploadsize) * T_LNUMBER * T_LNUMBER > T_STRING ( ) ) { T_STRING ( , T_VARIABLE($exceed_max_msg) . T_VARIABLE($more_info) ) ; T_VARIABLE($more_info) = ; } T_IF ( T_VARIABLE($default_uploadsize) > T_VARIABLE($default_usersize) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; } T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($role) ) { T_VARIABLE($uploadsize) = T_VARIABLE($form_state) [ ] [ . T_VARIABLE($rid) ] ; T_VARIABLE($usersize) = T_VARIABLE($form_state) [ ] [ . T_VARIABLE($rid) ] ; T_IF ( ! T_STRING ( T_VARIABLE($uploadsize) ) T_BOOLEAN_OR ( T_VARIABLE($uploadsize) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) ) { T_STRING ( . T_VARIABLE($rid) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($role) ) ) ) ; } T_IF ( ! T_STRING ( T_VARIABLE($usersize) ) T_BOOLEAN_OR ( T_VARIABLE($usersize) T_IS_SMALLER_OR_EQUAL T_LNUMBER ) ) { T_STRING ( . T_VARIABLE($rid) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($role) ) ) ) ; } T_IF ( T_VARIABLE($uploadsize) * T_LNUMBER * T_LNUMBER > T_STRING ( ) ) { T_STRING ( . T_VARIABLE($rid) , T_VARIABLE($exceed_max_msg) . T_VARIABLE($more_info) ) ; T_VARIABLE($more_info) = ; } T_IF ( T_VARIABLE($uploadsize) > T_VARIABLE($usersize) ) { T_STRING ( . T_VARIABLE($rid) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($role) ) ) ) ; } } } T_FUNCTION(upload_admin_settings) ( ) { T_VARIABLE($upload_extensions_default) = T_STRING ( , ) ; T_VARIABLE($upload_uploadsize_default) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($upload_usersize_default) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , T_DOUBLE_ARROW . T_STRING ( ) . ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($upload_extensions_default) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($upload_uploadsize_default) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($upload_usersize_default) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) ) ) ) . ) ; T_VARIABLE($roles) = T_STRING ( T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($roles) ) ; T_FOREACH ( T_VARIABLE($roles) T_AS T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($role) ) { T_VARIABLE($form) [ . T_VARIABLE($rid) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($role) ) ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ . T_VARIABLE($rid) ] [ . T_VARIABLE($rid) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($rid) , T_VARIABLE($upload_extensions_default) ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ . T_VARIABLE($rid) ] [ . T_VARIABLE($rid) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($rid) , T_VARIABLE($upload_uploadsize_default) ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ . T_VARIABLE($rid) ] [ . T_VARIABLE($rid) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($rid) , T_VARIABLE($upload_usersize_default) ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; }",8,0
"T_OPEN_TAG T_FUNCTION(upload_install) ( ) { T_IF ( ! T_STRING ( ) ) { T_STRING ( ) ; } } T_FUNCTION(upload_uninstall) ( ) { T_STRING ( ) ; } T_FUNCTION(upload_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_RETURN T_VARIABLE($schema) ; }",0,0
"T_OPEN_TAG T_FUNCTION(upload_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ) . ; } } T_FUNCTION(upload_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(upload_perm) ( ) { T_RETURN T_ARRAY ( , ) ; } T_FUNCTION(upload_link) ( T_VARIABLE($type) , T_VARIABLE($node) = T_STRING , T_VARIABLE($teaser) = T_STRING ) { T_VARIABLE($links) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($teaser) T_BOOLEAN_AND T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($num_files) = T_LNUMBER ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($file) ) { T_IF ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($num_files) T_INC ; } } T_IF ( T_VARIABLE($num_files) ) { T_VARIABLE($links) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($num_files) , , ) , T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW ) ; } } T_RETURN T_VARIABLE($links) ; } T_FUNCTION(upload_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($items) ; } T_FUNCTION(upload_menu_alter) ( & T_VARIABLE($items) ) { T_VARIABLE($items) [ ] [ ] = T_ARRAY ( ) ; } T_FUNCTION(_upload_file_limits) ( T_VARIABLE($user) ) { T_VARIABLE($file_limit) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($user_limit) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($all_extensions) = T_STRING ( , T_STRING ( , ) ) ; T_FOREACH ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($extensions) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($rid) , T_STRING ( , ) ) ; T_VARIABLE($all_extensions) = T_STRING ( T_VARIABLE($all_extensions) , T_STRING ( , T_VARIABLE($extensions) ) ) ; T_VARIABLE($file_size) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($rid) , T_STRING ( , T_LNUMBER ) ) * T_LNUMBER * T_LNUMBER ; T_VARIABLE($file_limit) = ( T_VARIABLE($file_limit) T_BOOLEAN_AND T_VARIABLE($file_size) ) ? T_STRING ( T_VARIABLE($file_limit) , T_VARIABLE($file_size) ) : T_LNUMBER ; T_VARIABLE($user_size) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($rid) , T_STRING ( , T_LNUMBER ) ) * T_LNUMBER * T_LNUMBER ; T_VARIABLE($user_limit) = ( T_VARIABLE($user_limit) T_BOOLEAN_AND T_VARIABLE($user_size) ) ? T_STRING ( T_VARIABLE($user_limit) , T_VARIABLE($user_size) ) : T_LNUMBER ; } T_VARIABLE($all_extensions) = T_STRING ( , T_STRING ( T_VARIABLE($all_extensions) ) ) ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($all_extensions) , T_DOUBLE_ARROW T_VARIABLE($file_limit) , T_DOUBLE_ARROW T_VARIABLE($user_limit) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , ) ; } T_FUNCTION(upload_file_download) ( T_VARIABLE($file) ) { T_IF ( ! T_STRING ( ) ) { T_RETURN - T_LNUMBER ; } T_VARIABLE($file) = T_STRING ( T_VARIABLE($file) ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($file) ) ; T_IF ( T_VARIABLE($file) = T_STRING ( T_VARIABLE($result) ) ) { T_RETURN T_ARRAY ( . T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , . T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , ) ; } } T_FUNCTION(upload_node_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($limits) = T_STRING ( T_VARIABLE($user) ) ; T_VARIABLE($validators) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($limits) [ ] ) , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($limits) [ ] ) , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($limits) [ ] , T_VARIABLE($limits) [ ] ) , ) ; T_IF ( ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_NOT_EQUAL T_LNUMBER T_BOOLEAN_OR T_STRING ( ) ) T_BOOLEAN_AND ( T_VARIABLE($file) = T_STRING ( , T_VARIABLE($validators) , T_STRING ( ) ) ) ) { T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING = T_LNUMBER ; T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($file) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] ) ) { T_FOREACH ( T_VARIABLE($_SESSION) [ ] T_AS T_VARIABLE($fid) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_IF ( ! T_ISSET ( T_VARIABLE($form_state) [ ] [ ] [ T_VARIABLE($fid) ] [ ] ) ) { T_VARIABLE($form_state) [ ] [ ] [ T_VARIABLE($fid) ] = T_ARRAY_CAST T_VARIABLE($file) ; } } } T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($microweight) = T_DNUMBER ; T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($fid) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_IF ( T_STRING ( T_VARIABLE($fid) ) ) { T_VARIABLE($form_state) [ ] [ ] [ T_VARIABLE($fid) ] [ ] = T_VARIABLE($file) [ ] + T_VARIABLE($microweight) ; T_VARIABLE($microweight) T_PLUS_EQUAL T_DNUMBER ; } } T_STRING ( T_VARIABLE($form_state) [ ] [ ] , ) ; } } T_FUNCTION(upload_form_alter) ( & T_VARIABLE($form) , T_VARIABLE($form_state) , T_VARIABLE($form_id) ) { T_IF ( T_VARIABLE($form_id) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] [ ] ) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($form) [ ] T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , ) ; } T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form) [ ] ) ) { T_VARIABLE($node) = T_VARIABLE($form) [ ] ; T_IF ( T_VARIABLE($form) [ ] [ ] . T_IS_EQUAL T_VARIABLE($form_id) T_BOOLEAN_AND T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_STRING ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($path) = T_STRING ( ) ; T_VARIABLE($temp) = T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($path) , T_STRING ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($temp) , T_STRING ) ) { T_VARIABLE($form) [ ] [ ] = T_STRING ( ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($form) [ ] [ ] T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_ELSE { T_VARIABLE($form) [ ] [ ] T_CONCAT_EQUAL . T_STRING ( ) ; } } T_ELSE { T_VARIABLE($form) [ ] [ ] T_PLUS_EQUAL T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($form) [ ] [ ] = ; } } T_VARIABLE($form) [ ] [ ] = ; } } T_FUNCTION(upload_nodeapi) ( & T_VARIABLE($node) , T_VARIABLE($op) , T_VARIABLE($teaser) ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($output) = ; T_IF ( T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($output) [ ] = T_STRING ( T_VARIABLE($node) ) ; T_RETURN T_VARIABLE($output) ; } T_BREAK ; T_CASE : T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( ) ) { T_IF ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( ! T_VARIABLE($teaser) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_LNUMBER , ) ; } } } T_BREAK ; T_CASE : T_IF ( ! T_VARIABLE($_POST) ) { T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; } T_BREAK ; T_CASE : T_CASE : T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($node) ) ; } T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($node) ) ; T_BREAK ; T_CASE : T_STRING ( T_VARIABLE($node) ) ; T_BREAK ; T_CASE : T_RETURN T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_STRING ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , , ) : T_STRING ; T_CASE : T_IF ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($files) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($file) ) { T_IF ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($files) [ ] = T_VARIABLE($file) ; } } T_IF ( T_STRING ( T_VARIABLE($files) ) > T_LNUMBER ) { T_VARIABLE($file) = T_STRING ( T_VARIABLE($files) ) ; T_RETURN T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) ) ; } } T_RETURN T_ARRAY ( ) ; } } T_FUNCTION(theme_upload_attachments) ( T_VARIABLE($files) ) { T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($file) ) { T_VARIABLE($file) = T_OBJECT_CAST T_VARIABLE($file) ; T_IF ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($href) = T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($text) = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING ( T_VARIABLE($text) , T_VARIABLE($href) ) , T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) ; } } T_IF ( T_STRING ( T_VARIABLE($rows) ) ) { T_RETURN T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; } } T_FUNCTION(upload_space_used) ( T_VARIABLE($uid) ) { T_RETURN T_STRING ( T_VARIABLE($uid) ) ; } T_FUNCTION(upload_total_space_used) ( ) { T_RETURN T_STRING ( T_STRING ( ) ) ; } T_FUNCTION(upload_save) ( & T_VARIABLE($node) ) { T_IF ( T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR ! T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_RETURN ; } T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($fid) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_VARIABLE($file) = T_OBJECT_CAST T_VARIABLE($file) ; T_IF ( ! T_EMPTY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( , T_VARIABLE($fid) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($count) = T_STRING ( T_STRING ( , T_VARIABLE($fid) ) ) ; T_IF ( T_VARIABLE($count) < T_LNUMBER ) { T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($fid) ) ; } T_UNSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($fid) ] ) ; T_CONTINUE ; } T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($_SESSION) [ ] [ T_VARIABLE($fid) ] ) ) { T_STRING ( , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($file) , T_STRING ) ; } T_ELSE { T_STRING ( , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($file) , T_STRING ) ; } } T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; } T_FUNCTION(upload_delete) ( T_VARIABLE($node) ) { T_VARIABLE($files) = T_ARRAY ( ) ; T_VARIABLE($result) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($file) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($files) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($file) ; } T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($fid) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_STRING ( , T_VARIABLE($fid) ) ; T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; } T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_FUNCTION(upload_delete_revision) ( T_VARIABLE($node) ) { T_IF ( T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($file) ) { T_VARIABLE($count) = T_STRING ( T_STRING ( , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) ; T_IF ( T_VARIABLE($count) < T_LNUMBER ) { T_STRING ( , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; } } } T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_FUNCTION(_upload_form) ( T_VARIABLE($node) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = T_STRING ; T_FOREACH ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_VARIABLE($file) = T_OBJECT_CAST T_VARIABLE($file) ; T_VARIABLE($description) = T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($description) = . T_STRING ( T_VARIABLE($description) ) . ; T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ! T_EMPTY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING : T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($description) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ! T_EMPTY ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; } } T_IF ( T_STRING ( ) ) { T_VARIABLE($limits) = T_STRING ( T_VARIABLE($user) ) ; T_VARIABLE($form) [ ] [ ] = T_LNUMBER ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ( T_VARIABLE($limits) [ ] ? T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($limits) [ ] ) ) : ) . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($limits) [ ] , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($limits) [ ] ) ) ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING : T_LNUMBER ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(theme_upload_form_current) ( & T_VARIABLE($form) ) { T_VARIABLE($header) = T_ARRAY ( , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_STRING ( , , , ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) ) T_AS T_VARIABLE($key) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] [ ] [ ] = ; T_VARIABLE($row) = T_ARRAY ( ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ; T_VARIABLE($row) [ ] = T_STRING ( T_VARIABLE($form) [ T_VARIABLE($key) ] [ ] ) ; T_VARIABLE($rows) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($row) , T_DOUBLE_ARROW ) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_upload_form_new) ( T_VARIABLE($form) ) { T_STRING ( , , , ) ; T_VARIABLE($output) = T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(upload_load) ( T_VARIABLE($node) ) { T_VARIABLE($files) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($file) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($files) [ T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($file) ; } } T_RETURN T_VARIABLE($files) ; } T_FUNCTION(upload_js) ( ) { T_VARIABLE($cache) = T_STRING ( . T_VARIABLE($_POST) [ ] , ) ; T_VARIABLE($node) = T_OBJECT_CAST T_VARIABLE($_POST) ; T_UNSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ ] ) ; T_VARIABLE($form) = T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($form_state) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($_POST) ) ; T_STRING ( T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($node_files) = T_STRING ( T_VARIABLE($node) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($fid) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_IF ( T_STRING ( T_VARIABLE($fid) ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($fid) ] = T_VARIABLE($file) ; T_IF ( ! T_ISSET ( T_VARIABLE($file) [ ] ) ) { T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($fid) ] = T_VARIABLE($node_files) [ T_VARIABLE($fid) ] ; } } } } T_VARIABLE($form) = T_STRING ( T_VARIABLE($node) ) ; T_VARIABLE($files) = T_ISSET ( T_VARIABLE($_POST) [ ] ) ? T_VARIABLE($_POST) [ ] : T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($files) T_AS T_VARIABLE($fid) T_DOUBLE_ARROW T_VARIABLE($file) ) { T_IF ( T_STRING ( T_VARIABLE($fid) ) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($fid) ] [ ] [ ] = T_VARIABLE($file) [ ] ; T_VARIABLE($form) [ ] [ T_VARIABLE($fid) ] [ ] [ ] = T_ISSET ( T_VARIABLE($file) [ ] ) ? T_LNUMBER : T_LNUMBER ; T_VARIABLE($form) [ ] [ T_VARIABLE($fid) ] [ ] [ ] = T_ISSET ( T_VARIABLE($file) [ ] ) ? T_LNUMBER : T_LNUMBER ; T_VARIABLE($form) [ ] [ T_VARIABLE($fid) ] [ ] [ ] = T_VARIABLE($file) [ ] ; } } T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING [ ] [ ] = T_STRING ( T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING [ ] [ ] , T_VARIABLE($form) ) ; T_STRING ( . T_VARIABLE($_POST) [ ] , T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING , , T_VARIABLE($cache) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form) T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($_POST) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_STRING ( , T_VARIABLE($form) , T_ARRAY ( ) , ) ; T_VARIABLE($form_state) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) = T_STRING ( , T_VARIABLE($form) , T_VARIABLE($form_state) ) ; T_VARIABLE($output) = T_STRING ( ) . T_STRING ( T_VARIABLE($form) ) ; T_PRINT T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($output) ) ) ; T_EXIT ; }",11,1
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($picture) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_OPEN_TAG T_IF ( T_VARIABLE($title) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($attributes) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($profile_items) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($attributes) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($attributes) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($value) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($user_profile) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_FUNCTION(user_admin) ( T_VARIABLE($callback_arg) = ) { T_VARIABLE($op) = T_ISSET ( T_VARIABLE($_POST) [ ] ) ? T_VARIABLE($_POST) [ ] : T_VARIABLE($callback_arg) ; T_SWITCH ( T_VARIABLE($op) ) { T_CASE T_STRING ( ) : T_CASE : T_VARIABLE($output) = T_STRING ( ) ; T_BREAK ; T_DEFAULT : T_IF ( ! T_EMPTY ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($_POST) [ ] ) T_BOOLEAN_AND ( T_VARIABLE($_POST) [ ] T_IS_EQUAL ) ) { T_VARIABLE($output) = T_STRING ( ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; } } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(user_filter_form) ( ) { T_VARIABLE($session) = & T_VARIABLE($_SESSION) [ ] ; T_VARIABLE($session) = T_STRING ( T_VARIABLE($session) ) ? T_VARIABLE($session) : T_ARRAY ( ) ; T_VARIABLE($filters) = T_STRING ( ) ; T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , ) ; T_FOREACH ( T_VARIABLE($session) T_AS T_VARIABLE($filter) ) { T_LIST ( T_VARIABLE($type) , T_VARIABLE($value) ) = T_VARIABLE($filter) ; T_VARIABLE($options) = T_VARIABLE($type) T_IS_EQUAL ? T_STRING ( , T_VARIABLE($filters) [ T_VARIABLE($type) ] [ ] ) : T_VARIABLE($filters) [ T_VARIABLE($type) ] [ ] ; T_VARIABLE($params) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($filters) [ T_VARIABLE($type) ] [ ] , T_DOUBLE_ARROW T_VARIABLE($options) [ T_VARIABLE($value) ] ) ; T_IF ( T_VARIABLE($i) T_INC > T_LNUMBER ) { T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($params) ) ) ; } T_ELSE { T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($params) ) ) ; } } T_FOREACH ( T_VARIABLE($filters) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($filter) ) { T_VARIABLE($names) [ T_VARIABLE($key) ] = T_VARIABLE($filter) [ ] ; T_VARIABLE($form) [ ] [ ] [ T_VARIABLE($key) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($filter) [ ] , ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($names) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ( T_STRING ( T_VARIABLE($session) ) ? T_STRING ( ) : T_STRING ( ) ) , ) ; T_IF ( T_STRING ( T_VARIABLE($session) ) ) { T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_STRING ( , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_filter_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($op) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($filters) = T_STRING ( ) ; T_SWITCH ( T_VARIABLE($op) ) { T_CASE T_STRING ( ) : T_CASE T_STRING ( ) : T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($filter) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($options) = T_VARIABLE($filter) T_IS_EQUAL ? T_STRING ( , T_VARIABLE($filters) [ T_VARIABLE($filter) ] [ ] ) : T_VARIABLE($filters) [ T_VARIABLE($filter) ] [ ] ; T_IF ( T_ISSET ( T_VARIABLE($options) [ T_VARIABLE($form_state) [ ] [ T_VARIABLE($filter) ] ] ) ) { T_VARIABLE($_SESSION) [ ] [ ] = T_ARRAY ( T_VARIABLE($filter) , T_VARIABLE($form_state) [ ] [ T_VARIABLE($filter) ] ) ; } } T_BREAK ; T_CASE T_STRING ( ) : T_STRING ( T_VARIABLE($_SESSION) [ ] ) ; T_BREAK ; T_CASE T_STRING ( ) : T_VARIABLE($_SESSION) [ ] = T_ARRAY ( ) ; T_BREAK ; T_CASE T_STRING ( ) : T_RETURN ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(user_admin_account) ( ) { T_VARIABLE($filter) = T_STRING ( ) ; T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_STRING ( ) ) ; T_VARIABLE($sql) = . T_VARIABLE($filter) [ ] . . T_VARIABLE($filter) [ ] ; T_VARIABLE($sql) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($header) ) ; T_VARIABLE($query_count) = . T_VARIABLE($filter) [ ] . . T_VARIABLE($filter) [ ] ; T_VARIABLE($result) = T_STRING ( T_VARIABLE($sql) , T_LNUMBER , T_LNUMBER , T_VARIABLE($query_count) , T_VARIABLE($filter) [ ] ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($options) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($operation) T_DOUBLE_ARROW T_VARIABLE($array) ) { T_VARIABLE($options) [ T_VARIABLE($operation) ] = T_VARIABLE($array) [ ] ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($destination) = T_STRING ( ) ; T_VARIABLE($status) = T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) ; T_VARIABLE($roles) = T_STRING ( T_STRING ) ; T_VARIABLE($accounts) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($account) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($accounts) [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] = ; T_VARIABLE($form) [ ] [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($account) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($status) [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] ) ; T_VARIABLE($users_roles) = T_ARRAY ( ) ; T_VARIABLE($roles_result) = T_STRING ( , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($user_role) = T_STRING ( T_VARIABLE($roles_result) ) ) { T_VARIABLE($users_roles) [ ] = T_VARIABLE($roles) [ T_VARIABLE($user_role) T_OBJECT_OPERATOR T_STRING ] ; } T_STRING ( T_VARIABLE($users_roles) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] [ T_LNUMBER ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($users_roles) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ? T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ) : T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($destination) ) ) ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($accounts) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_STRING , T_LNUMBER , T_LNUMBER ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_admin_account_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($operations) = T_STRING ( , T_VARIABLE($form_state) ) ; T_VARIABLE($operation) = T_VARIABLE($operations) [ T_VARIABLE($form_state) [ ] [ ] ] ; T_VARIABLE($accounts) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_IF ( T_VARIABLE($function) = T_VARIABLE($operation) [ ] ) { T_IF ( T_ISSET ( T_VARIABLE($operation) [ ] ) ) { T_VARIABLE($args) = T_STRING ( T_ARRAY ( T_VARIABLE($accounts) ) , T_VARIABLE($operation) [ ] ) ; } T_ELSE { T_VARIABLE($args) = T_ARRAY ( T_VARIABLE($accounts) ) ; } T_STRING ( T_VARIABLE($function) , T_VARIABLE($args) ) ; T_STRING ( T_STRING ( ) ) ; } } T_FUNCTION(user_admin_account_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($form_state) [ ] [ ] = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(user_admin_settings) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($email_token_help) = T_STRING ( ) . ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ( T_STRING ( , T_LNUMBER ) T_IS_NOT_EQUAL T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( ) . . T_VARIABLE($email_token_help) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ( T_STRING ( , T_LNUMBER ) T_IS_NOT_EQUAL T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( ) . . T_VARIABLE($email_token_help) ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ( T_STRING ( , T_LNUMBER ) T_IS_NOT_EQUAL T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( ) . . T_VARIABLE($email_token_help) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) . . T_VARIABLE($email_token_help) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) . . T_VARIABLE($email_token_help) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) . . T_VARIABLE($email_token_help) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) . . T_VARIABLE($email_token_help) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , ) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($picture_path) = T_STRING ( T_STRING ( , ) ) ; T_STRING ( T_VARIABLE($picture_path) , T_LNUMBER , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($picture_support) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($picture_support) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_STRING ( T_STRING ( , ) . ) ; T_VARIABLE($css_class) = ; T_IF ( ! T_VARIABLE($picture_support) ) { T_VARIABLE($css_class) T_CONCAT_EQUAL ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($css_class) . , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) . ) ) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_RETURN T_STRING ( T_VARIABLE($form) ) ; } T_FUNCTION(user_admin_perm) ( T_VARIABLE($form_state) , T_VARIABLE($rid) = T_STRING ) { T_IF ( T_STRING ( T_VARIABLE($rid) ) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($rid) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( ) ; } T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($role_permissions) [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING . ; } T_VARIABLE($role_names) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($rid) ) ) { T_VARIABLE($role_names) = T_ARRAY ( T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($role_names) [ T_VARIABLE($rid) ] ) ; } T_VARIABLE($options) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( T_STRING , T_STRING , T_STRING ) T_AS T_VARIABLE($module) ) { T_IF ( T_VARIABLE($permissions) = T_STRING ( T_VARIABLE($module) , ) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($module) , ) ; T_STRING ( T_VARIABLE($permissions) ) ; T_FOREACH ( T_VARIABLE($permissions) T_AS T_VARIABLE($perm) ) { T_VARIABLE($options) [ T_VARIABLE($perm) ] = ; T_VARIABLE($form) [ ] [ T_VARIABLE($perm) ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($perm) ) ) ; T_FOREACH ( T_VARIABLE($role_names) T_AS T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_IF ( T_STRING ( T_VARIABLE($role_permissions) [ T_VARIABLE($rid) ] , T_VARIABLE($perm) . ) T_IS_NOT_IDENTICAL T_STRING ) { T_VARIABLE($status) [ T_VARIABLE($rid) ] [ ] = T_VARIABLE($perm) ; } } } } } T_FOREACH ( T_VARIABLE($role_names) T_AS T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($rid) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($status) [ T_VARIABLE($rid) ] ) ? T_VARIABLE($status) [ T_VARIABLE($rid) ] : T_ARRAY ( ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($rid) ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_STRING ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_admin_perm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($result) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($result) ) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] ) ) { T_STRING ( , T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($form_state) [ ] [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($form_state) [ ] [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] ) ; T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] ) ) { T_STRING ( , T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING , T_STRING ( , T_STRING ( T_VARIABLE($form_state) [ ] [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] ) ) ) ; } } } T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } T_FUNCTION(theme_user_admin_perm) ( T_VARIABLE($form) ) { T_VARIABLE($roles) = T_STRING ( ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_IF ( T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ) { T_VARIABLE($row) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($key) ) ) { T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW . T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] [ ] , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] ) + T_LNUMBER ) ; } T_ELSE { T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_DOUBLE_ARROW ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($rid) ) { T_IF ( T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($rid) ] ) ) { T_VARIABLE($row) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($rid) ] [ T_VARIABLE($key) ] ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($roles) [ T_VARIABLE($rid) ] . . T_STRING ( T_VARIABLE($key) ) ) ; } } } T_VARIABLE($rows) [ ] = T_VARIABLE($row) ; } } T_VARIABLE($header) [ ] = ( T_STRING ( ) ) ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($rid) ) { T_IF ( T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($rid) ] ) ) { T_VARIABLE($header) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($rid) ] ) , T_DOUBLE_ARROW ) ; } } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(user_admin_role) ( ) { T_VARIABLE($rid) = T_STRING ( T_LNUMBER ) ; T_IF ( T_VARIABLE($rid) ) { T_IF ( T_VARIABLE($rid) T_IS_EQUAL T_STRING T_BOOLEAN_OR T_VARIABLE($rid) T_IS_EQUAL T_STRING ) { T_STRING ( ) ; } T_VARIABLE($role) = T_STRING ( T_STRING ( , T_VARIABLE($rid) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($rid) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; } T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_admin_role_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } } T_ELSE T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } } } T_ELSE { T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(user_admin_role_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( ) ) ; } T_ELSE T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( ) ) ; } T_ELSE T_IF ( T_VARIABLE($form_state) [ ] [ ] T_IS_EQUAL T_STRING ( ) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(user_admin_access_check) ( ) { T_VARIABLE($output) = T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(user_admin_access_add) ( T_VARIABLE($mask) = T_STRING , T_VARIABLE($type) = T_STRING ) { T_IF ( T_VARIABLE($edit) = T_VARIABLE($_POST) ) { T_IF ( ! T_VARIABLE($edit) [ ] ) { T_STRING ( , T_STRING ( ) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] ) ; T_VARIABLE($aid) = T_STRING ( , ) ; T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } } T_ELSE { T_VARIABLE($edit) [ ] = T_VARIABLE($mask) ; T_VARIABLE($edit) [ ] = T_VARIABLE($type) ; } T_RETURN T_STRING ( , T_VARIABLE($edit) , T_STRING ( ) ) ; } T_FUNCTION(user_admin_access_edit) ( T_VARIABLE($aid) = T_LNUMBER ) { T_IF ( T_VARIABLE($edit) = T_VARIABLE($_POST) ) { T_IF ( ! T_VARIABLE($edit) [ ] ) { T_STRING ( , T_STRING ( ) ) ; } T_ELSE { T_STRING ( , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($edit) [ ] , T_VARIABLE($aid) ) ; T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } } T_ELSE { T_VARIABLE($edit) = T_STRING ( T_STRING ( , T_VARIABLE($aid) ) ) ; } T_RETURN T_STRING ( , T_VARIABLE($edit) , T_STRING ( ) ) ; } T_FUNCTION(user_admin_access_form) ( & T_VARIABLE($form_state) , T_VARIABLE($edit) , T_VARIABLE($submit) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) , ) ; T_VARIABLE($type_options) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ( T_ISSET ( T_VARIABLE($type_options) [ T_VARIABLE($edit) [ ] ] ) ? T_VARIABLE($edit) [ ] : ) , T_DOUBLE_ARROW T_VARIABLE($type_options) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW . T_STRING ( ) . . T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($submit) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_admin_access_check_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_EMPTY ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] , T_STRING ( ) ) ; } } T_FUNCTION(user_admin_check_user) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_admin_check_mail) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_admin_check_host) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] [ ] = ; T_VARIABLE($form) [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_admin_access_check_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_SWITCH ( T_VARIABLE($form_state) [ ] [ ] ) { T_CASE : T_IF ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_ELSE { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_BREAK ; T_CASE : T_IF ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_ELSE { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_BREAK ; T_CASE : T_IF ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_ELSE { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_BREAK ; T_DEFAULT : T_BREAK ; } } T_FUNCTION(user_admin_access_delete_confirm) ( T_VARIABLE($form_state) , T_VARIABLE($aid) = T_LNUMBER ) { T_VARIABLE($access_types) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($edit) = T_STRING ( T_STRING ( , T_VARIABLE($aid) ) ) ; T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($aid) ) ; T_VARIABLE($output) = T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($access_types) [ T_VARIABLE($edit) T_OBJECT_OPERATOR T_STRING ] , T_DOUBLE_ARROW T_VARIABLE($edit) T_OBJECT_OPERATOR T_STRING ) ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(user_admin_access_delete_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(user_admin_access) ( ) { T_VARIABLE($header) = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_VARIABLE($result) = T_STRING ( . T_STRING ( T_VARIABLE($header) ) ) ; T_VARIABLE($access_types) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($rows) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($rule) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($rule) T_OBJECT_OPERATOR T_STRING ? T_STRING ( ) : T_STRING ( ) , T_VARIABLE($access_types) [ T_VARIABLE($rule) T_OBJECT_OPERATOR T_STRING ] , T_VARIABLE($rule) T_OBJECT_OPERATOR T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($rule) T_OBJECT_OPERATOR T_STRING ) , T_STRING ( T_STRING ( ) , . T_VARIABLE($rule) T_OBJECT_OPERATOR T_STRING ) ) ; } T_IF ( T_EMPTY ( T_VARIABLE($rows) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( ) . , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_RETURN T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; } T_FUNCTION(theme_user_admin_account) ( T_VARIABLE($form) ) { T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) , T_STRING ( ) ) ; T_VARIABLE($output) = T_STRING ( T_VARIABLE($form) [ ] ) ; T_IF ( T_ISSET ( T_VARIABLE($form) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($form) [ ] ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) , ) ; } } T_ELSE { T_VARIABLE($rows) [ ] = T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ) ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_IF ( T_VARIABLE($form) [ ] [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_user_admin_new_role) ( T_VARIABLE($form) ) { T_VARIABLE($header) = T_ARRAY ( T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($name) ) { T_VARIABLE($edit_permissions) = T_STRING ( T_STRING ( ) , . T_VARIABLE($rid) ) ; T_IF ( ! T_STRING ( T_VARIABLE($rid) , T_ARRAY ( T_STRING , T_STRING ) ) ) { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($name) , T_STRING ( T_STRING ( ) , . T_VARIABLE($rid) ) , T_VARIABLE($edit_permissions) ) ; } T_ELSE { T_VARIABLE($rows) [ ] = T_ARRAY ( T_VARIABLE($name) , T_STRING ( ) , T_VARIABLE($edit_permissions) ) ; } } T_VARIABLE($rows) [ ] = T_ARRAY ( T_STRING ( T_VARIABLE($form) [ ] ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form) [ ] ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_VARIABLE($output) = T_STRING ( T_VARIABLE($form) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($header) , T_VARIABLE($rows) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_user_filter_form) ( T_VARIABLE($form) ) { T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(theme_user_filters) ( T_VARIABLE($form) ) { T_VARIABLE($output) = ; T_IF ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) ) { T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) . ; } } T_VARIABLE($output) T_CONCAT_EQUAL . ( ! T_EMPTY ( T_VARIABLE($form) [ ] ) ? . T_STRING ( ) . . T_STRING ( ) . : ) . ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_FOREACH ( T_STRING ( T_VARIABLE($form) [ ] ) T_AS T_VARIABLE($key) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($form) [ ] ) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; }",10,1
"T_OPEN_TAG T_FUNCTION(user_schema) ( ) { T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) , ) , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; T_RETURN T_VARIABLE($schema) ; }",3,1
"T_OPEN_TAG T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_FUNCTION(user_module_invoke) ( T_VARIABLE($type) , & T_VARIABLE($array) , & T_VARIABLE($user) , T_VARIABLE($category) = T_STRING ) { T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_VARIABLE($function) = T_VARIABLE($module) . ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($function) ( T_VARIABLE($type) , T_VARIABLE($array) , T_VARIABLE($user) , T_VARIABLE($category) ) ; } } } T_FUNCTION(user_theme) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ) , ) , ) ; } T_FUNCTION(user_external_load) ( T_VARIABLE($authname) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($authname) ) ; T_IF ( T_VARIABLE($user) = T_STRING ( T_VARIABLE($result) ) ) { T_RETURN T_STRING ( T_VARIABLE($user) ) ; } T_ELSE { T_RETURN T_LNUMBER ; } } T_FUNCTION(user_external_login) ( T_VARIABLE($account) , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_VARIABLE($form) = T_STRING ( ) ; T_VARIABLE($state) [ ] = T_VARIABLE($edit) ; T_IF ( T_EMPTY ( T_VARIABLE($state) [ ] [ ] ) ) { T_VARIABLE($state) [ ] [ ] = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( T_VARIABLE($form) , T_VARIABLE($state) , T_ARRAY_CAST T_VARIABLE($account) ) ; T_IF ( T_STRING ( ) ) { T_RETURN T_STRING ; } T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($user) = T_VARIABLE($account) ; T_STRING ( T_VARIABLE($state) [ ] ) ; T_RETURN T_STRING ; } T_FUNCTION(user_load) ( T_VARIABLE($array) = T_ARRAY ( ) ) { T_VARIABLE($query) = T_ARRAY ( ) ; T_VARIABLE($params) = T_ARRAY ( ) ; T_IF ( T_STRING ( T_VARIABLE($array) ) ) { T_VARIABLE($array) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($array) ) ; } T_ELSEIF ( ! T_STRING ( T_VARIABLE($array) ) ) { T_RETURN T_STRING ; } T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_VARIABLE($key) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($key) T_IS_EQUAL ) { T_VARIABLE($query) [ ] = T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($params) [ ] = T_VARIABLE($value) ; } T_ELSE T_IF ( T_VARIABLE($key) T_IS_EQUAL ) { T_VARIABLE($query) [ ] = ; T_VARIABLE($params) [ ] = T_STRING ( T_VARIABLE($value) ) ; } T_ELSE { T_VARIABLE($query) [ ] = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($params) [ ] = T_VARIABLE($value) ; } } T_VARIABLE($result) = T_STRING ( . T_STRING ( , T_VARIABLE($query) ) , T_VARIABLE($params) ) ; T_IF ( T_VARIABLE($user) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($user) = T_STRING ( T_VARIABLE($user) ) ; T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( ) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_STRING ] = ; } T_ELSE { T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_STRING ] = ; } T_VARIABLE($result) = T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( , T_VARIABLE($array) , T_VARIABLE($user) ) ; } T_ELSE { T_VARIABLE($user) = T_STRING ; } T_RETURN T_VARIABLE($user) ; } T_FUNCTION(user_save) ( T_VARIABLE($account) , T_VARIABLE($array) = T_ARRAY ( ) , T_VARIABLE($category) = ) { T_VARIABLE($user_fields) = T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($account) ) T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , T_VARIABLE($array) , T_VARIABLE($account) , T_VARIABLE($category) ) ; T_VARIABLE($query) = ; T_VARIABLE($data) = T_STRING ( T_STRING ( T_STRING ( , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_IF ( T_EMPTY ( T_VARIABLE($array) [ ] ) T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($array) [ ] = T_STRING ( ) ; } T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_VARIABLE($key) T_IS_EQUAL T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($value) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($v) [ ] = T_STRING ( T_VARIABLE($value) ) ; } T_ELSE T_IF ( ( T_STRING ( T_VARIABLE($key) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_IDENTICAL ) T_BOOLEAN_AND ( T_VARIABLE($key) T_IS_NOT_EQUAL ) ) { T_IF ( T_STRING ( T_VARIABLE($key) , T_VARIABLE($user_fields) ) ) { T_VARIABLE($query) T_CONCAT_EQUAL T_VARIABLE($key) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($v) [ ] = T_VARIABLE($value) ; } T_ELSE T_IF ( T_VARIABLE($key) T_IS_NOT_EQUAL ) { T_IF ( T_VARIABLE($value) T_IS_IDENTICAL T_STRING ) { T_UNSET ( T_VARIABLE($data) [ T_VARIABLE($key) ] ) ; } T_ELSE { T_VARIABLE($data) [ T_VARIABLE($key) ] = T_VARIABLE($value) ; } } } } T_VARIABLE($query) T_CONCAT_EQUAL ; T_VARIABLE($v) [ ] = T_STRING ( T_VARIABLE($data) ) ; T_VARIABLE($success) = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($query) T_ENCAPSED_AND_WHITESPACE , T_STRING ( T_VARIABLE($v) , T_ARRAY ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ) ; T_IF ( ! T_VARIABLE($success) ) { T_RETURN T_STRING ; } T_IF ( T_ISSET ( T_VARIABLE($array) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($array) [ ] ) ) { T_STRING ( , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; T_FOREACH ( T_STRING ( T_VARIABLE($array) [ ] ) T_AS T_VARIABLE($rid) ) { T_IF ( ! T_STRING ( T_VARIABLE($rid) , T_ARRAY ( T_STRING , T_STRING ) ) ) { T_STRING ( , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($rid) ) ; } } } T_IF ( T_ISSET ( T_VARIABLE($array) [ ] ) T_BOOLEAN_AND T_VARIABLE($array) [ ] T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($array) [ ] ) ) { T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( ) ; } T_VARIABLE($user) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_IF ( T_ISSET ( T_VARIABLE($array) [ ] ) T_BOOLEAN_AND T_VARIABLE($array) [ ] T_IS_NOT_EQUAL T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($op) = T_VARIABLE($array) [ ] T_IS_EQUAL T_LNUMBER ? : ; T_STRING ( T_VARIABLE($op) , T_VARIABLE($user) ) ; } T_STRING ( , T_VARIABLE($array) , T_VARIABLE($user) , T_VARIABLE($category) ) ; } T_ELSE { T_IF ( ! T_ISSET ( T_VARIABLE($array) [ ] ) ) { T_VARIABLE($array) [ ] = T_STRING ( ) ; } T_IF ( T_EMPTY ( T_VARIABLE($array) [ ] ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($array) [ ] = T_STRING ( ) ; } T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_SWITCH ( T_VARIABLE($key) ) { T_CASE : T_VARIABLE($fields) [ ] = T_VARIABLE($key) ; T_VARIABLE($values) [ ] = T_STRING ( T_VARIABLE($value) ) ; T_VARIABLE($s) [ ] = ; T_BREAK ; T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_CASE : T_VARIABLE($fields) [ ] = T_VARIABLE($key) ; T_VARIABLE($values) [ ] = T_VARIABLE($value) ; T_VARIABLE($s) [ ] = ; T_BREAK ; T_DEFAULT : T_IF ( T_STRING ( T_VARIABLE($key) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_IDENTICAL T_BOOLEAN_AND T_STRING ( T_VARIABLE($key) , T_VARIABLE($user_fields) ) ) { T_VARIABLE($fields) [ ] = T_VARIABLE($key) ; T_VARIABLE($values) [ ] = T_VARIABLE($value) ; T_VARIABLE($s) [ ] = ; } T_BREAK ; } } T_VARIABLE($success) = T_STRING ( . T_STRING ( , T_VARIABLE($fields) ) . . T_STRING ( , T_VARIABLE($s) ) . , T_VARIABLE($values) ) ; T_IF ( ! T_VARIABLE($success) ) { T_RETURN T_STRING ; } T_VARIABLE($array) [ ] = T_STRING ( , ) ; T_VARIABLE($user) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($array) [ ] ) ) ; T_STRING ( , T_VARIABLE($array) , T_VARIABLE($user) , T_VARIABLE($category) ) ; T_VARIABLE($data) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( ( T_STRING ( T_VARIABLE($key) , T_LNUMBER , T_LNUMBER ) T_IS_NOT_IDENTICAL ) T_BOOLEAN_AND ( T_VARIABLE($key) T_IS_NOT_EQUAL ) T_BOOLEAN_AND ( ! T_STRING ( T_VARIABLE($key) , T_VARIABLE($user_fields) ) ) T_BOOLEAN_AND ( T_VARIABLE($value) T_IS_NOT_IDENTICAL T_STRING ) ) { T_VARIABLE($data) [ T_VARIABLE($key) ] = T_VARIABLE($value) ; } } T_STRING ( , T_STRING ( T_VARIABLE($data) ) , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_IF ( T_ISSET ( T_VARIABLE($array) [ ] ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($array) [ ] ) ) { T_STRING ( , T_VARIABLE($array) [ ] ) ; T_FOREACH ( T_STRING ( T_VARIABLE($array) [ ] ) T_AS T_VARIABLE($rid) ) { T_IF ( ! T_STRING ( T_VARIABLE($rid) , T_ARRAY ( T_STRING , T_STRING ) ) ) { T_STRING ( , T_VARIABLE($array) [ ] , T_VARIABLE($rid) ) ; } } } T_VARIABLE($user) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($array) [ ] ) ) ; } T_VARIABLE($authmaps) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($array) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_IF ( T_STRING ( T_VARIABLE($key) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) { T_VARIABLE($authmaps) [ T_VARIABLE($key) ] = T_VARIABLE($value) ; } } T_IF ( T_STRING ( T_VARIABLE($authmaps) ) > T_LNUMBER ) { T_STRING ( T_VARIABLE($user) , T_VARIABLE($authmaps) ) ; } T_RETURN T_VARIABLE($user) ; } T_FUNCTION(user_validate_name) ( T_VARIABLE($name) ) { T_IF ( ! T_STRING ( T_VARIABLE($name) ) ) T_RETURN T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($name) , T_LNUMBER , T_LNUMBER ) T_IS_EQUAL ) T_RETURN T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($name) , - T_LNUMBER ) T_IS_EQUAL ) T_RETURN T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($name) , ) T_IS_NOT_IDENTICAL T_STRING ) T_RETURN T_STRING ( ) ; T_IF ( T_STRING ( , T_VARIABLE($name) ) ) T_RETURN T_STRING ( ) ; T_IF ( T_STRING ( . . . . . . . . , T_VARIABLE($name) ) ) { T_RETURN T_STRING ( ) ; } T_IF ( T_STRING ( T_VARIABLE($name) , ) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND ! T_STRING ( , T_VARIABLE($name) ) ) T_RETURN T_STRING ( ) ; T_IF ( T_STRING ( T_VARIABLE($name) ) > T_STRING ) T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_STRING ) ) ; } T_FUNCTION(user_validate_mail) ( T_VARIABLE($mail) ) { T_IF ( ! T_VARIABLE($mail) ) T_RETURN T_STRING ( ) ; T_IF ( ! T_STRING ( T_VARIABLE($mail) ) ) { T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($mail) ) ) ; } } T_FUNCTION(user_validate_picture) ( & T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($validators) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( , ) ) , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( , ) * T_LNUMBER ) , ) ; T_IF ( T_VARIABLE($file) = T_STRING ( , T_VARIABLE($validators) ) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($form_state) [ ] [ ] T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_VARIABLE($form_state) [ ] [ ] T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($info) = T_STRING ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ) ; T_VARIABLE($destination) = T_STRING ( , ) . . T_VARIABLE($form) [ ] . . T_VARIABLE($info) [ ] ; T_IF ( T_STRING ( T_VARIABLE($file) , T_VARIABLE($destination) , T_STRING ) ) { T_VARIABLE($form_state) [ ] [ ] = T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING ; } T_ELSE { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , ) ) ) ) ; } } } T_FUNCTION(user_password) ( T_VARIABLE($length) = T_LNUMBER ) { T_VARIABLE($allowable_characters) = ; T_VARIABLE($len) = T_STRING ( T_VARIABLE($allowable_characters) ) - T_LNUMBER ; T_VARIABLE($pass) = ; T_FOR ( T_VARIABLE($i) = T_LNUMBER ; T_VARIABLE($i) < T_VARIABLE($length) ; T_VARIABLE($i) T_INC ) { T_VARIABLE($pass) T_CONCAT_EQUAL T_VARIABLE($allowable_characters) [ T_STRING ( T_LNUMBER , T_VARIABLE($len) ) ] ; } T_RETURN T_VARIABLE($pass) ; } T_FUNCTION(user_access) ( T_VARIABLE($string) , T_VARIABLE($account) = T_STRING , T_VARIABLE($reset) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_STATIC T_VARIABLE($perm) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($reset) ) { T_UNSET ( T_VARIABLE($perm) ) ; } T_IF ( T_STRING ( T_VARIABLE($account) ) ) { T_VARIABLE($account) = T_VARIABLE($user) ; } T_IF ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_RETURN T_STRING ; } T_IF ( ! T_ISSET ( T_VARIABLE($perm) [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] ) ) { T_VARIABLE($result) = T_STRING ( . T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) . , T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($perms) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($row) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($perms) T_PLUS_EQUAL T_STRING ( T_STRING ( , T_VARIABLE($row) T_OBJECT_OPERATOR T_STRING ) ) ; } T_VARIABLE($perm) [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($perms) ; } T_RETURN T_ISSET ( T_VARIABLE($perm) [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] [ T_VARIABLE($string) ] ) ; } T_FUNCTION(user_is_blocked) ( T_VARIABLE($name) ) { T_VARIABLE($deny) = T_STRING ( T_STRING ( , T_VARIABLE($name) ) ) ; T_RETURN T_VARIABLE($deny) ; } T_FUNCTION(user_fields) ( ) { T_STATIC T_VARIABLE($fields) ; T_IF ( ! T_VARIABLE($fields) ) { T_VARIABLE($result) = T_STRING ( ) ; T_IF ( T_VARIABLE($field) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($fields) = T_STRING ( T_VARIABLE($field) ) ; } T_ELSE { T_VARIABLE($fields) = T_ARRAY ( , , , , , , , , , , , , , , , , , ) ; } } T_RETURN T_VARIABLE($fields) ; } T_FUNCTION(user_perm) ( ) { T_RETURN T_ARRAY ( , , , ) ; } T_FUNCTION(user_file_download) ( T_VARIABLE($file) ) { T_IF ( T_STRING ( T_VARIABLE($file) , T_STRING ( , ) . ) T_IS_IDENTICAL T_LNUMBER ) { T_VARIABLE($info) = T_STRING ( T_STRING ( T_VARIABLE($file) ) ) ; T_RETURN T_ARRAY ( . T_VARIABLE($info) [ ] ) ; } } T_FUNCTION(user_search) ( T_VARIABLE($op) = , T_VARIABLE($keys) = T_STRING , T_VARIABLE($skip_access_check) = T_STRING ) { T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_IF ( T_VARIABLE($skip_access_check) T_BOOLEAN_OR T_STRING ( ) ) { T_RETURN T_STRING ( ) ; } T_CASE : T_IF ( T_STRING ( ) ) { T_VARIABLE($find) = T_ARRAY ( ) ; T_VARIABLE($keys) = T_STRING ( , , T_VARIABLE($keys) ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($result) = T_STRING ( , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($keys) , T_VARIABLE($keys) ) ; T_WHILE ( T_VARIABLE($account) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($find) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING . , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ) ; } } T_ELSE { T_VARIABLE($result) = T_STRING ( , T_LNUMBER , T_LNUMBER , T_STRING , T_VARIABLE($keys) ) ; T_WHILE ( T_VARIABLE($account) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($find) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ) ; } } T_RETURN T_VARIABLE($find) ; } } } T_FUNCTION(user_elements) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } T_FUNCTION(user_user) ( T_VARIABLE($type) , & T_VARIABLE($edit) , & T_VARIABLE($account) , T_VARIABLE($category) = T_STRING ) { T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($account) ) , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_IF ( ! T_ISSET ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING [ ] ) ) { T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING [ ] = T_ARRAY ( ) ; } T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING [ ] T_PLUS_EQUAL T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) - T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) , ) ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($category) T_IS_EQUAL ) { T_VARIABLE($form_state) = T_ARRAY ( ) ; T_RETURN T_STRING ( T_VARIABLE($form_state) , T_STRING ( T_LNUMBER ) , T_VARIABLE($edit) ) ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($category) T_IS_EQUAL ) { T_RETURN T_STRING ( T_STRING ( T_LNUMBER ) , T_VARIABLE($edit) ) ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($category) T_IS_EQUAL ) { T_RETURN T_STRING ( T_STRING ( T_LNUMBER ) , T_VARIABLE($edit) ) ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL ) { T_RETURN T_ARRAY ( T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } } T_FUNCTION(user_login_block) ( ) { T_VARIABLE($form) = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($_GET) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , ) ; T_VARIABLE($items) = T_ARRAY ( ) ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($items) [ ] = T_STRING ( T_STRING ( ) , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; } T_VARIABLE($items) [ ] = T_STRING ( T_STRING ( ) , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($items) ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_block) ( T_VARIABLE($op) = , T_VARIABLE($delta) = T_LNUMBER , T_VARIABLE($edit) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ( ) ; T_VARIABLE($blocks) [ T_LNUMBER ] [ ] = T_STRING ; T_RETURN T_VARIABLE($blocks) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($delta) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) , ) ; T_RETURN T_VARIABLE($form) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($delta) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($period) = T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_VARIABLE($period) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING ( T_ARRAY ( T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER , T_LNUMBER ) ) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($delta) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_VARIABLE($edit) [ ] ) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL T_BOOLEAN_AND T_VARIABLE($delta) T_IS_EQUAL T_LNUMBER ) { T_STRING ( , T_VARIABLE($edit) [ ] ) ; T_STRING ( , T_VARIABLE($edit) [ ] ) ; } T_ELSE T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_VARIABLE($block) = T_ARRAY ( ) ; T_SWITCH ( T_VARIABLE($delta) ) { T_CASE T_LNUMBER : T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ! ( T_STRING ( T_LNUMBER ) T_IS_EQUAL T_BOOLEAN_AND ! T_STRING ( T_STRING ( T_LNUMBER ) ) ) ) { T_VARIABLE($block) [ ] = T_STRING ( ) ; T_VARIABLE($block) [ ] = T_STRING ( ) ; } T_RETURN T_VARIABLE($block) ; T_CASE T_LNUMBER : T_IF ( T_VARIABLE($menu) = T_STRING ( ) ) { T_VARIABLE($block) [ ] = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ? T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) : T_STRING ( ) ; T_VARIABLE($block) [ ] = T_VARIABLE($menu) ; } T_RETURN T_VARIABLE($block) ; T_CASE T_LNUMBER : T_IF ( T_STRING ( ) ) { T_VARIABLE($result) = T_STRING ( , T_LNUMBER , T_STRING ( , T_LNUMBER ) ) ; T_WHILE ( T_VARIABLE($account) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($items) [ ] = T_VARIABLE($account) ; } T_VARIABLE($output) = T_STRING ( , T_VARIABLE($items) ) ; T_VARIABLE($block) [ ] = T_STRING ( ) ; T_VARIABLE($block) [ ] = T_VARIABLE($output) ; } T_RETURN T_VARIABLE($block) ; T_CASE T_LNUMBER : T_IF ( T_STRING ( ) ) { T_VARIABLE($interval) = T_STRING ( ) - T_STRING ( , T_LNUMBER ) ; T_VARIABLE($anonymous_count) = T_STRING ( T_VARIABLE($interval) ) ; T_VARIABLE($authenticated_users) = T_STRING ( , T_VARIABLE($interval) ) ; T_VARIABLE($authenticated_count) = T_LNUMBER ; T_VARIABLE($max_users) = T_STRING ( , T_LNUMBER ) ; T_VARIABLE($items) = T_ARRAY ( ) ; T_WHILE ( T_VARIABLE($account) = T_STRING ( T_VARIABLE($authenticated_users) ) ) { T_IF ( T_VARIABLE($max_users) > T_LNUMBER ) { T_VARIABLE($items) [ ] = T_VARIABLE($account) ; T_VARIABLE($max_users) T_DEC ; } T_VARIABLE($authenticated_count) T_INC ; } T_IF ( T_VARIABLE($anonymous_count) T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_VARIABLE($authenticated_count) T_IS_EQUAL T_LNUMBER ) { T_VARIABLE($output) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($authenticated_count) , , ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($anonymous_count) , , ) ) ) ; } T_ELSE { T_VARIABLE($output) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($authenticated_count) , , ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($anonymous_count) , , ) ) ) ; } T_VARIABLE($max_users) = T_STRING ( , T_LNUMBER ) ; T_IF ( T_VARIABLE($authenticated_count) T_BOOLEAN_AND T_VARIABLE($max_users) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($items) , T_STRING ( ) ) ; } T_VARIABLE($block) [ ] = T_STRING ( ) ; T_VARIABLE($block) [ ] = T_VARIABLE($output) ; } T_RETURN T_VARIABLE($block) ; } } } T_FUNCTION(template_preprocess_user_picture) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = ; T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($account) = T_VARIABLE($variables) [ ] ; T_IF ( ! T_EMPTY ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($picture) = T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE T_IF ( T_STRING ( , ) ) { T_VARIABLE($picture) = T_STRING ( , ) ; } T_IF ( T_ISSET ( T_VARIABLE($picture) ) ) { T_VARIABLE($alt) = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ? T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING : T_STRING ( , T_STRING ( ) ) ) ) ; T_VARIABLE($variables) [ ] = T_STRING ( , T_VARIABLE($picture) , T_VARIABLE($alt) , T_VARIABLE($alt) , , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_AND T_STRING ( ) ) { T_VARIABLE($attributes) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($attributes) ) ; } } } } T_FUNCTION(theme_user_list) ( T_VARIABLE($users) , T_VARIABLE($title) = T_STRING ) { T_IF ( ! T_EMPTY ( T_VARIABLE($users) ) ) { T_FOREACH ( T_VARIABLE($users) T_AS T_VARIABLE($user) ) { T_VARIABLE($items) [ ] = T_STRING ( , T_VARIABLE($user) ) ; } } T_RETURN T_STRING ( , T_VARIABLE($items) , T_VARIABLE($title) ) ; } T_FUNCTION(user_is_anonymous) ( ) { T_RETURN ! T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_BOOLEAN_OR ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ; } T_FUNCTION(user_is_logged_in) ( ) { T_RETURN T_BOOL_CAST T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(user_register_access) ( ) { T_RETURN T_STRING ( ) T_BOOLEAN_AND T_STRING ( , T_LNUMBER ) ; } T_FUNCTION(user_view_access) ( T_VARIABLE($account) ) { T_RETURN T_VARIABLE($account) T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ( ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_STRING ( ) T_BOOLEAN_OR ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_STRING ( ) ) ) ; } T_FUNCTION(user_edit_access) ( T_VARIABLE($account) ) { T_RETURN ( ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) T_BOOLEAN_OR T_STRING ( ) ) T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING > T_LNUMBER ; } T_FUNCTION(user_load_self) ( T_VARIABLE($arg) ) { T_VARIABLE($arg) [ T_LNUMBER ] = T_STRING ( T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_VARIABLE($arg) ; } T_FUNCTION(user_menu) ( ) { T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER , T_LNUMBER , T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , ) , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( , T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW , ) ; T_VARIABLE($items) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( , ) , ) ; T_VARIABLE($empty_account) = T_NEW T_STRING ( ) ; T_IF ( ( T_VARIABLE($categories) = T_STRING ( T_VARIABLE($empty_account) ) ) T_BOOLEAN_AND ( T_STRING ( T_VARIABLE($categories) ) > T_LNUMBER ) ) { T_FOREACH ( T_VARIABLE($categories) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($category) ) { T_IF ( T_VARIABLE($category) [ ] T_IS_NOT_EQUAL ) { T_VARIABLE($items) [ . T_VARIABLE($category) [ ] ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($category) [ ] ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER , T_LNUMBER ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($category) [ ] ) ? T_VARIABLE($category) [ ] : T_STRING , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($category) [ ] ) ? T_VARIABLE($category) [ ] : T_ARRAY ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($category) [ ] , T_DOUBLE_ARROW T_ARRAY ( , ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; } } } T_RETURN T_VARIABLE($items) ; } T_FUNCTION(user_init) ( ) { T_STRING ( T_STRING ( , ) . , ) ; } T_FUNCTION(user_current_load) ( T_VARIABLE($arg) ) { T_RETURN T_STRING ( T_VARIABLE($arg) ? T_VARIABLE($arg) : T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) ; } T_FUNCTION(user_category_load) ( T_VARIABLE($uid) , & T_VARIABLE($map) , T_VARIABLE($index) ) { T_STATIC T_VARIABLE($user_categories) , T_VARIABLE($accounts) ; T_IF ( ! T_ISSET ( T_VARIABLE($accounts) [ T_VARIABLE($uid) ] ) ) { T_VARIABLE($accounts) [ T_VARIABLE($uid) ] = T_STRING ( T_VARIABLE($uid) ) ; } T_VARIABLE($valid) = T_STRING ; T_IF ( T_VARIABLE($account) = T_VARIABLE($accounts) [ T_VARIABLE($uid) ] ) { T_VARIABLE($category_index) = T_VARIABLE($index) + T_LNUMBER ; T_VARIABLE($category_path) = T_STRING ( , T_STRING ( T_VARIABLE($map) , T_VARIABLE($category_index) ) ) ; T_IF ( T_VARIABLE($category_path) ) { T_VARIABLE($valid) = T_STRING ; T_IF ( ! T_ISSET ( T_VARIABLE($user_categories) ) ) { T_VARIABLE($empty_account) = T_NEW T_STRING ( ) ; T_VARIABLE($user_categories) = T_STRING ( T_VARIABLE($empty_account) ) ; } T_FOREACH ( T_VARIABLE($user_categories) T_AS T_VARIABLE($category) ) { T_IF ( T_VARIABLE($category) [ ] T_IS_EQUAL T_VARIABLE($category_path) ) { T_VARIABLE($valid) = T_STRING ; T_VARIABLE($map) = T_STRING ( T_VARIABLE($map) , T_LNUMBER , T_VARIABLE($category_index) ) ; T_VARIABLE($map) [ T_VARIABLE($category_index) ] = T_VARIABLE($category_path) ; T_BREAK ; } } } } T_RETURN T_VARIABLE($valid) ? T_VARIABLE($account) : T_STRING ; } T_FUNCTION(user_current_to_arg) ( T_VARIABLE($arg) ) { T_RETURN T_EMPTY ( T_VARIABLE($arg) ) T_BOOLEAN_OR T_VARIABLE($arg) T_IS_EQUAL ? T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING : T_VARIABLE($arg) ; } T_FUNCTION(user_page_title) ( T_VARIABLE($account) ) { T_IF ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ) { T_RETURN T_STRING ( ) ; } T_RETURN T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(user_get_authmaps) ( T_VARIABLE($authname) = T_STRING ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($authname) ) ; T_VARIABLE($authmaps) = T_ARRAY ( ) ; T_VARIABLE($has_rows) = T_STRING ; T_WHILE ( T_VARIABLE($authmap) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($authmaps) [ T_VARIABLE($authmap) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($authmap) T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($has_rows) = T_STRING ; } T_RETURN T_VARIABLE($has_rows) ? T_VARIABLE($authmaps) : T_LNUMBER ; } T_FUNCTION(user_set_authmaps) ( T_VARIABLE($account) , T_VARIABLE($authmaps) ) { T_FOREACH ( T_VARIABLE($authmaps) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($module) = T_STRING ( , T_VARIABLE($key) , T_LNUMBER ) ; T_IF ( T_VARIABLE($value) ) { T_STRING ( , T_VARIABLE($value) , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($module) [ T_LNUMBER ] ) ; T_IF ( ! T_STRING ( ) ) { T_STRING ( , T_VARIABLE($value) , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($module) [ T_LNUMBER ] ) ; } } T_ELSE { T_STRING ( , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($module) [ T_LNUMBER ] ) ; } } } T_FUNCTION(user_login) ( & T_VARIABLE($form_state) , T_VARIABLE($msg) = ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_VARIABLE($msg) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( T_VARIABLE($msg) ) . ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($form) [ ] [ ] = T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($form) [ ] = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_login_default_validators) ( ) { T_RETURN T_ARRAY ( , , ) ; } T_FUNCTION(user_login_name_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_IF ( T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } T_ELSE T_IF ( T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ) ; } } } T_FUNCTION(user_login_authenticate_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] ) ; } T_FUNCTION(user_login_final_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] ) ) ; } } T_FUNCTION(user_authenticate) ( T_VARIABLE($form_values) = T_ARRAY ( ) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( ! T_EMPTY ( T_VARIABLE($form_values) [ ] ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($form_values) [ ] ) T_BOOLEAN_AND T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_values) [ ] , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($form_values) [ ] ) , T_DOUBLE_ARROW T_LNUMBER ) ) ) { T_VARIABLE($user) = T_VARIABLE($account) ; T_STRING ( T_VARIABLE($form_values) ) ; T_RETURN T_VARIABLE($user) ; } } T_FUNCTION(user_authenticate_finalize) ( & T_VARIABLE($edit) ) { T_GLOBAL T_VARIABLE($user) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) ; T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING = T_STRING ( ) ; T_STRING ( , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( , T_VARIABLE($edit) , T_VARIABLE($user) ) ; T_STRING ( ) ; } T_FUNCTION(user_login_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($form_state) [ ] = . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; T_RETURN ; } } T_FUNCTION(user_external_login_register) ( T_VARIABLE($name) , T_VARIABLE($module) ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($user) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) ) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($userinfo) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_LNUMBER , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($account) = T_STRING ( , T_VARIABLE($userinfo) ) ; T_IF ( ! T_VARIABLE($account) ) { T_STRING ( T_STRING ( ) , ) ; T_RETURN ; } T_VARIABLE($user) = T_VARIABLE($account) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_VARIABLE($module) ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING . ) ) ; } } T_FUNCTION(user_pass_reset_url) ( T_VARIABLE($account) ) { T_VARIABLE($timestamp) = T_STRING ( ) ; T_RETURN T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE T_VARIABLE($timestamp) T_ENCAPSED_AND_WHITESPACE . T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($timestamp) , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) , T_ARRAY ( T_DOUBLE_ARROW T_STRING ) ) ; } T_FUNCTION(user_pass_rehash) ( T_VARIABLE($password) , T_VARIABLE($timestamp) , T_VARIABLE($login) ) { T_RETURN T_STRING ( T_VARIABLE($timestamp) . T_VARIABLE($password) . T_VARIABLE($login) ) ; } T_FUNCTION(user_edit_form) ( & T_VARIABLE($form_state) , T_VARIABLE($uid) , T_VARIABLE($edit) , T_VARIABLE($register) = T_STRING ) { T_STRING ( ) ; T_VARIABLE($admin) = T_STRING ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW - T_LNUMBER , ) ; T_IF ( T_STRING ( ) T_BOOLEAN_OR T_VARIABLE($admin) T_BOOLEAN_OR T_VARIABLE($register) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , ) ; T_IF ( ! T_VARIABLE($register) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; } T_ELSEIF ( ! T_STRING ( , T_STRING ) T_BOOLEAN_OR T_VARIABLE($admin) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER , ) ; } T_IF ( T_VARIABLE($admin) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_ISSET ( T_VARIABLE($edit) [ ] ) ? T_VARIABLE($edit) [ ] : T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( T_STRING ( ) , T_STRING ( ) ) ) ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($roles) = T_STRING ( T_STRING ) ; T_VARIABLE($checkbox_authenticated) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($roles) [ T_STRING ] , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_UNSET ( T_VARIABLE($roles) [ T_STRING ] ) ; T_IF ( T_VARIABLE($roles) ) { T_VARIABLE($default) = T_EMPTY ( T_VARIABLE($edit) [ ] ) ? T_ARRAY ( ) : T_STRING ( T_VARIABLE($edit) [ ] ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($default) , T_DOUBLE_ARROW T_VARIABLE($roles) , T_STRING T_DOUBLE_ARROW T_VARIABLE($checkbox_authenticated) , ) ; } } T_IF ( T_STRING ( , T_LNUMBER ) T_BOOLEAN_AND T_STRING ( ) T_BOOLEAN_AND ! T_VARIABLE($register) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) , ) ; } T_IF ( T_STRING ( , T_LNUMBER ) T_BOOLEAN_AND ! T_VARIABLE($register) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($picture) = T_STRING ( , T_OBJECT_CAST T_VARIABLE($edit) ) ; T_IF ( T_VARIABLE($edit) [ ] ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($picture) ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) ) ; } T_ELSE { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW ) ; } T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( , ) ) ) . . T_STRING ( , ) ) ; T_VARIABLE($form) [ ] [ ] = ; } T_VARIABLE($form) [ ] = T_VARIABLE($uid) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(_user_edit_validate) ( T_VARIABLE($uid) , & T_VARIABLE($edit) ) { T_VARIABLE($user) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($uid) ) ) ; T_IF ( T_STRING ( ) T_BOOLEAN_OR T_STRING ( ) T_BOOLEAN_OR ! T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_VARIABLE($error) ) ; } T_ELSE T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($uid) , T_VARIABLE($edit) [ ] ) ) > T_LNUMBER ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ) ) ; } T_ELSE T_IF ( T_STRING ( , T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ) ) ; } } T_IF ( T_VARIABLE($error) = T_STRING ( T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_VARIABLE($error) ) ; } T_ELSE T_IF ( T_STRING ( T_STRING ( , T_VARIABLE($uid) , T_VARIABLE($edit) [ ] ) ) > T_LNUMBER ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] , T_DOUBLE_ARROW T_STRING ( ) ) ) ) ; } T_ELSE T_IF ( T_STRING ( , T_VARIABLE($edit) [ ] ) ) { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($edit) [ ] ) ) ) ; } } T_FUNCTION(_user_edit_submit) ( T_VARIABLE($uid) , & T_VARIABLE($edit) ) { T_VARIABLE($user) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($uid) ) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($edit) [ ] ) ) { T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($edit) [ ] = ; } T_IF ( T_ISSET ( T_VARIABLE($edit) [ ] ) ) { T_VARIABLE($edit) [ ] = T_STRING ( T_VARIABLE($edit) [ ] ) ; } } T_FUNCTION(user_delete) ( T_VARIABLE($edit) , T_VARIABLE($uid) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($uid) ) ) ; T_STRING ( T_VARIABLE($uid) ) ; T_STRING ( , T_VARIABLE($account) ) ; T_STRING ( , T_VARIABLE($uid) ) ; T_STRING ( , T_VARIABLE($uid) ) ; T_STRING ( , T_VARIABLE($uid) ) ; T_VARIABLE($variables) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING . ) ; T_STRING ( , , T_VARIABLE($variables) , T_STRING ) ; T_STRING ( , , T_VARIABLE($edit) , T_VARIABLE($account) ) ; } T_FUNCTION(user_build_content) ( & T_VARIABLE($account) ) { T_VARIABLE($edit) = T_STRING ; T_STRING ( , T_VARIABLE($edit) , T_VARIABLE($account) ) ; T_STRING ( , T_VARIABLE($account) ) ; T_RETURN T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; } T_FUNCTION(user_mail) ( T_VARIABLE($key) , & T_VARIABLE($message) , T_VARIABLE($params) ) { T_VARIABLE($language) = T_VARIABLE($message) [ ] ; T_VARIABLE($variables) = T_STRING ( T_VARIABLE($params) [ ] , T_VARIABLE($language) ) ; T_VARIABLE($message) [ ] T_CONCAT_EQUAL T_STRING ( T_VARIABLE($key) . , T_VARIABLE($language) , T_VARIABLE($variables) ) ; T_VARIABLE($message) [ ] [ ] = T_STRING ( T_VARIABLE($key) . , T_VARIABLE($language) , T_VARIABLE($variables) ) ; } T_FUNCTION(_user_mail_text) ( T_VARIABLE($key) , T_VARIABLE($language) = T_STRING , T_VARIABLE($variables) = T_ARRAY ( ) ) { T_VARIABLE($langcode) = T_ISSET ( T_VARIABLE($language) ) ? T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING : T_STRING ; T_IF ( T_VARIABLE($admin_setting) = T_STRING ( . T_VARIABLE($key) , T_STRING ) ) { T_RETURN T_STRING ( T_VARIABLE($admin_setting) , T_VARIABLE($variables) ) ; } T_ELSE { T_SWITCH ( T_VARIABLE($key) ) { T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; T_CASE : T_RETURN T_STRING ( , T_VARIABLE($variables) , T_VARIABLE($langcode) ) ; } } } T_FUNCTION(user_roles) ( T_VARIABLE($membersonly) = T_STRING , T_VARIABLE($permission) = T_STRING ) { T_VARIABLE($roles) = T_ARRAY ( T_STRING T_DOUBLE_ARROW T_STRING , T_STRING T_DOUBLE_ARROW T_STRING , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($permission) ) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($permission) ) ; } T_ELSE { T_VARIABLE($result) = T_STRING ( ) ; } T_WHILE ( T_VARIABLE($role) = T_STRING ( T_VARIABLE($result) ) ) { T_SWITCH ( T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) { T_CASE T_STRING : T_IF ( ! T_VARIABLE($membersonly) ) { T_VARIABLE($roles) [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) ; } T_BREAK ; T_CASE T_STRING : T_VARIABLE($roles) [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ) ; T_BREAK ; T_DEFAULT : T_VARIABLE($roles) [ T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ] = T_VARIABLE($role) T_OBJECT_OPERATOR T_STRING ; } } T_RETURN T_STRING ( T_VARIABLE($roles) ) ; } T_FUNCTION(user_user_operations) ( T_VARIABLE($form_state) = T_ARRAY ( ) ) { T_VARIABLE($operations) = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($roles) = T_STRING ( T_STRING ) ; T_UNSET ( T_VARIABLE($roles) [ T_STRING ] ) ; T_VARIABLE($add_roles) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($roles) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($add_roles) [ . T_VARIABLE($key) ] = T_VARIABLE($value) ; } T_VARIABLE($remove_roles) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($roles) T_AS T_VARIABLE($key) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($remove_roles) [ . T_VARIABLE($key) ] = T_VARIABLE($value) ; } T_IF ( T_STRING ( T_VARIABLE($roles) ) ) { T_VARIABLE($role_operations) = T_ARRAY ( T_STRING ( ) T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($add_roles) , ) , T_STRING ( ) T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($remove_roles) , ) , ) ; T_VARIABLE($operations) T_PLUS_EQUAL T_VARIABLE($role_operations) ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) { T_VARIABLE($operation_rid) = T_STRING ( , T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($operation) = T_VARIABLE($operation_rid) [ T_LNUMBER ] ; T_IF ( T_VARIABLE($operation) T_IS_EQUAL T_BOOLEAN_OR T_VARIABLE($operation) T_IS_EQUAL ) { T_VARIABLE($rid) = T_VARIABLE($operation_rid) [ T_LNUMBER ] ; T_IF ( T_STRING ( ) ) { T_VARIABLE($operations) [ T_VARIABLE($form_state) [ ] [ ] ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_VARIABLE($operation) , T_VARIABLE($rid) ) , ) ; } T_ELSE { T_STRING ( , , T_ARRAY ( ) , T_STRING ) ; T_RETURN ; } } } T_RETURN T_VARIABLE($operations) ; } T_FUNCTION(user_user_operations_unblock) ( T_VARIABLE($accounts) ) { T_FOREACH ( T_VARIABLE($accounts) T_AS T_VARIABLE($uid) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_INT_CAST T_VARIABLE($uid) ) ) ; T_IF ( T_VARIABLE($account) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($account) , T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ) ; } } } T_FUNCTION(user_user_operations_block) ( T_VARIABLE($accounts) ) { T_FOREACH ( T_VARIABLE($accounts) T_AS T_VARIABLE($uid) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_INT_CAST T_VARIABLE($uid) ) ) ; T_IF ( T_VARIABLE($account) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_VARIABLE($account) , T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER ) ) ; } } } T_FUNCTION(user_multiple_role_edit) ( T_VARIABLE($accounts) , T_VARIABLE($operation) , T_VARIABLE($rid) ) { T_VARIABLE($role_name) = T_STRING ( T_STRING ( , T_VARIABLE($rid) ) ) ; T_SWITCH ( T_VARIABLE($operation) ) { T_CASE : T_FOREACH ( T_VARIABLE($accounts) T_AS T_VARIABLE($uid) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_INT_CAST T_VARIABLE($uid) ) ) ; T_IF ( T_VARIABLE($account) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND ! T_ISSET ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($rid) ] ) ) { T_VARIABLE($roles) = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING + T_ARRAY ( T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($role_name) ) ; T_STRING ( T_VARIABLE($account) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($roles) ) ) ; } } T_BREAK ; T_CASE : T_FOREACH ( T_VARIABLE($accounts) T_AS T_VARIABLE($uid) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_INT_CAST T_VARIABLE($uid) ) ) ; T_IF ( T_VARIABLE($account) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($rid) ] ) ) { T_VARIABLE($roles) = T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_ARRAY ( T_VARIABLE($rid) T_DOUBLE_ARROW T_VARIABLE($role_name) ) ) ; T_STRING ( T_VARIABLE($account) , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($roles) ) ) ; } } T_BREAK ; } } T_FUNCTION(user_multiple_delete_confirm) ( & T_VARIABLE($form_state) ) { T_VARIABLE($edit) = T_VARIABLE($form_state) [ ] ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) ; T_FOREACH ( T_STRING ( T_VARIABLE($edit) [ ] ) T_AS T_VARIABLE($uid) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_VARIABLE($user) = T_STRING ( T_STRING ( , T_VARIABLE($uid) ) ) ; T_VARIABLE($form) [ ] [ T_VARIABLE($uid) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($uid) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($user) ) . ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( ) , , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(user_multiple_delete_confirm_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_IF ( T_VARIABLE($form_state) [ ] [ ] ) { T_FOREACH ( T_VARIABLE($form_state) [ ] [ ] T_AS T_VARIABLE($uid) T_DOUBLE_ARROW T_VARIABLE($value) ) { T_STRING ( T_VARIABLE($form_state) [ ] , T_VARIABLE($uid) ) ; } T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(user_help) ( T_VARIABLE($path) , T_VARIABLE($arg) ) { T_GLOBAL T_VARIABLE($user) ; T_SWITCH ( T_VARIABLE($path) ) { T_CASE : T_VARIABLE($output) = . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; T_RETURN T_VARIABLE($output) ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( ) . ; T_CASE : T_RETURN . T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) . ; T_CASE : T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) ) ; T_CASE : T_RETURN . T_STRING ( ) . ; } } T_FUNCTION(_user_categories) ( T_VARIABLE($account) ) { T_VARIABLE($categories) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_IF ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($module) , , , T_STRING , T_VARIABLE($account) , ) ) { T_VARIABLE($categories) = T_STRING ( T_VARIABLE($data) , T_VARIABLE($categories) ) ; } } T_STRING ( T_VARIABLE($categories) , ) ; T_RETURN T_VARIABLE($categories) ; } T_FUNCTION(_user_sort) ( T_VARIABLE($a) , T_VARIABLE($b) ) { T_VARIABLE($a) = T_ARRAY_CAST T_VARIABLE($a) + T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_VARIABLE($b) = T_ARRAY_CAST T_VARIABLE($b) + T_ARRAY ( T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW ) ; T_RETURN T_VARIABLE($a) [ ] < T_VARIABLE($b) [ ] ? - T_LNUMBER : ( T_VARIABLE($a) [ ] > T_VARIABLE($b) [ ] ? T_LNUMBER : ( T_VARIABLE($a) [ ] < T_VARIABLE($b) [ ] ? - T_LNUMBER : T_LNUMBER ) ) ; } T_FUNCTION(user_filters) ( ) { T_VARIABLE($filters) = T_ARRAY ( ) ; T_VARIABLE($roles) = T_STRING ( T_STRING ) ; T_UNSET ( T_VARIABLE($roles) [ T_STRING ] ) ; T_IF ( T_STRING ( T_VARIABLE($roles) ) ) { T_VARIABLE($filters) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($roles) , T_DOUBLE_ARROW , ) ; } T_VARIABLE($options) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_IF ( T_VARIABLE($permissions) = T_STRING ( T_VARIABLE($module) , ) ) { T_STRING ( T_VARIABLE($permissions) ) ; T_FOREACH ( T_VARIABLE($permissions) T_AS T_VARIABLE($permission) ) { T_VARIABLE($options) [ T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($module) ) ) ] [ T_VARIABLE($permission) ] = T_STRING ( T_VARIABLE($permission) ) ; } } } T_STRING ( T_VARIABLE($options) ) ; T_VARIABLE($filters) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($options) , ) ; T_VARIABLE($filters) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_ARRAY ( T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) , T_LNUMBER T_DOUBLE_ARROW T_STRING ( ) ) , ) ; T_RETURN T_VARIABLE($filters) ; } T_FUNCTION(user_build_filter_query) ( ) { T_VARIABLE($filters) = T_STRING ( ) ; T_VARIABLE($where) = T_VARIABLE($args) = T_VARIABLE($join) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($_SESSION) [ ] T_AS T_VARIABLE($filter) ) { T_LIST ( T_VARIABLE($key) , T_VARIABLE($value) ) = T_VARIABLE($filter) ; T_IF ( T_VARIABLE($key) T_IS_EQUAL ) { T_VARIABLE($account) = T_NEW T_STRING ( ) ; T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING = ; T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING = T_ARRAY ( T_STRING T_DOUBLE_ARROW T_LNUMBER ) ; T_IF ( T_STRING ( T_VARIABLE($value) , T_VARIABLE($account) ) ) { T_CONTINUE ; } } T_VARIABLE($where) [ ] = T_VARIABLE($filters) [ T_VARIABLE($key) ] [ ] ; T_VARIABLE($args) [ ] = T_VARIABLE($value) ; T_VARIABLE($join) [ ] = T_VARIABLE($filters) [ T_VARIABLE($key) ] [ ] ; } T_VARIABLE($where) = ! T_EMPTY ( T_VARIABLE($where) ) ? . T_STRING ( , T_VARIABLE($where) ) : ; T_VARIABLE($join) = ! T_EMPTY ( T_VARIABLE($join) ) ? . T_STRING ( , T_STRING ( T_VARIABLE($join) ) ) : ; T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($where) , T_DOUBLE_ARROW T_VARIABLE($join) , T_DOUBLE_ARROW T_VARIABLE($args) , ) ; } T_FUNCTION(user_forms) ( ) { T_VARIABLE($forms) [ ] [ ] = ; T_VARIABLE($forms) [ ] [ ] = ; T_VARIABLE($forms) [ ] [ ] = ; T_RETURN T_VARIABLE($forms) ; } T_FUNCTION(user_comment) ( & T_VARIABLE($comment) , T_VARIABLE($op) ) { T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_IF ( T_STRING ( , T_LNUMBER ) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ; } T_ELSE { T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING = ; } } } T_FUNCTION(theme_user_signature) ( T_VARIABLE($signature) ) { T_VARIABLE($output) = ; T_IF ( T_VARIABLE($signature) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($signature) ; T_VARIABLE($output) T_CONCAT_EQUAL ; } T_RETURN T_VARIABLE($output) ; } T_FUNCTION(user_mail_tokens) ( T_VARIABLE($account) , T_VARIABLE($language) ) { T_GLOBAL T_VARIABLE($base_url) ; T_VARIABLE($tokens) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( , ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($account) ) , T_DOUBLE_ARROW T_VARIABLE($base_url) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($base_url) , T_STRING ( ) ) , T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( T_STRING ( ) , , , T_STRING , T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($language) ) ) , T_DOUBLE_ARROW T_STRING ( . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING . , T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_VARIABLE($language) ) ) , ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($tokens) [ ] = T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ; } T_RETURN T_VARIABLE($tokens) ; } T_FUNCTION(user_preferred_language) ( T_VARIABLE($account) , T_VARIABLE($default) = T_STRING ) { T_VARIABLE($language_list) = T_STRING ( ) ; T_IF ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_ISSET ( T_VARIABLE($language_list) [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] ) ) { T_RETURN T_VARIABLE($language_list) [ T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ] ; } T_ELSE { T_RETURN T_VARIABLE($default) ? T_VARIABLE($default) : T_STRING ( ) ; } } T_FUNCTION(_user_mail_notify) ( T_VARIABLE($op) , T_VARIABLE($account) , T_VARIABLE($language) = T_STRING ) { T_VARIABLE($default_notify) = ( T_VARIABLE($op) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($op) T_IS_NOT_EQUAL ) ; T_VARIABLE($notify) = T_STRING ( . T_VARIABLE($op) . , T_VARIABLE($default_notify) ) ; T_IF ( T_VARIABLE($notify) ) { T_VARIABLE($params) [ ] = T_VARIABLE($account) ; T_VARIABLE($language) = T_VARIABLE($language) ? T_VARIABLE($language) : T_STRING ( T_VARIABLE($account) ) ; T_VARIABLE($mail) = T_STRING ( , T_VARIABLE($op) , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($language) , T_VARIABLE($params) ) ; T_IF ( T_VARIABLE($op) T_IS_EQUAL ) { T_STRING ( , , T_STRING ( , T_STRING ( ) ) , T_STRING ( ) , T_VARIABLE($params) ) ; } } T_RETURN T_EMPTY ( T_VARIABLE($mail) ) ? T_STRING : T_VARIABLE($mail) [ ] ; } T_FUNCTION(_user_password_dynamic_validation) ( ) { T_STATIC T_VARIABLE($complete) = T_STRING ; T_GLOBAL T_VARIABLE($user) ; T_IF ( ! T_VARIABLE($complete) ) { T_STRING ( T_STRING ( , ) . , ) ; T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW ( T_ISSET ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ? T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING : ) ) ) , ) ; T_VARIABLE($complete) = T_STRING ; } } T_FUNCTION(user_hook_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) ) , ) , ) , ) ; } T_FUNCTION(user_action_info) ( ) { T_RETURN T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( ) , ) , ) ; } T_FUNCTION(user_block_user_action) ( & T_VARIABLE($object) , T_VARIABLE($context) = T_ARRAY ( ) ) { T_IF ( T_ISSET ( T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($uid) = T_VARIABLE($object) T_OBJECT_OPERATOR T_STRING ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($context) [ ] ) ) { T_VARIABLE($uid) = T_VARIABLE($context) [ ] ; } T_ELSE { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($uid) = T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ; } T_STRING ( , T_VARIABLE($uid) ) ; T_STRING ( T_VARIABLE($uid) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_FUNCTION(user_block_ip_action) ( ) { T_VARIABLE($ip) = T_STRING ( ) ; T_STRING ( , T_VARIABLE($ip) , , T_LNUMBER ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($ip) ) ) ; } T_FUNCTION(user_register_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($base_url) ; T_VARIABLE($admin) = T_STRING ( ) ; T_VARIABLE($mail) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($name) = T_VARIABLE($form_state) [ ] [ ] ; T_IF ( ! T_STRING ( , T_STRING ) T_BOOLEAN_OR T_VARIABLE($admin) ) { T_VARIABLE($pass) = T_VARIABLE($form_state) [ ] [ ] ; } T_ELSE { T_VARIABLE($pass) = T_STRING ( ) ; } ; T_VARIABLE($notify) = T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ? T_VARIABLE($form_state) [ ] [ ] : T_STRING ; T_VARIABLE($from) = T_STRING ( , T_STRING ( ) ) ; T_IF ( T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) { T_VARIABLE($roles) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; } T_ELSE { T_VARIABLE($roles) = T_ARRAY ( ) ; } T_IF ( ! T_VARIABLE($admin) T_BOOLEAN_AND T_STRING ( T_STRING ( T_VARIABLE($form_state) [ ] ) , T_ARRAY ( , , , , ) ) ) { T_STRING ( , , T_ARRAY ( ) , T_STRING ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_UNSET ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($merge_data) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($pass) , T_DOUBLE_ARROW T_VARIABLE($mail) , T_DOUBLE_ARROW T_VARIABLE($roles) ) ; T_IF ( ! T_VARIABLE($admin) ) { T_VARIABLE($merge_data) [ ] = T_STRING ( , T_LNUMBER ) T_IS_EQUAL T_LNUMBER ; } T_VARIABLE($account) = T_STRING ( , T_STRING ( T_VARIABLE($form_state) [ ] , T_VARIABLE($merge_data) ) ) ; T_IF ( ! T_VARIABLE($account) ) { T_STRING ( T_STRING ( ) , ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_VARIABLE($form_state) [ ] = T_VARIABLE($account) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_VARIABLE($mail) ) , T_STRING , T_STRING ( T_STRING ( ) , . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING . ) ) ; T_IF ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_STRING ( T_STRING ( ) ) ; T_IF ( T_STRING ( , T_STRING ) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($pass) ) ) ) ; } T_STRING ( T_STRING ( T_VARIABLE($form_state) [ ] , T_VARIABLE($merge_data) ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_ELSE { T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING = T_VARIABLE($pass) ; T_IF ( T_VARIABLE($admin) T_BOOLEAN_AND ! T_VARIABLE($notify) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_ELSE T_IF ( ! T_STRING ( , T_STRING ) T_BOOLEAN_AND T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND ! T_VARIABLE($admin) ) { T_STRING ( , T_VARIABLE($account) ) ; T_IF ( T_STRING ( T_STRING ( T_VARIABLE($form_state) [ ] , T_VARIABLE($merge_data) ) ) ) { T_STRING ( T_STRING ( ) ) ; } T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_ELSE T_IF ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_OR T_VARIABLE($notify) ) { T_VARIABLE($op) = T_VARIABLE($notify) ? : ; T_STRING ( T_VARIABLE($op) , T_VARIABLE($account) ) ; T_IF ( T_VARIABLE($notify) ) { T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) , T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_ELSE { T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } } T_ELSE { T_STRING ( , T_VARIABLE($account) ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } } } T_FUNCTION(user_register) ( ) { T_GLOBAL T_VARIABLE($user) ; T_VARIABLE($admin) = T_STRING ( ) ; T_IF ( ! T_VARIABLE($admin) T_BOOLEAN_AND T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } T_VARIABLE($form) = T_ARRAY ( ) ; T_IF ( ! T_VARIABLE($admin) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( T_STRING ( , ) ) ) ; } T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) , T_STRING ( T_VARIABLE($form_state) , T_STRING , T_STRING , T_STRING ) ) ; T_IF ( T_VARIABLE($admin) ) { T_VARIABLE($form) [ ] [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($_GET) [ ] ) ; } T_VARIABLE($null) = T_STRING ; T_VARIABLE($extra) = T_STRING ( T_VARIABLE($null) , T_STRING , T_STRING , ) ; T_IF ( ! T_VARIABLE($extra) ) { T_FOREACH ( T_ARRAY ( , , , , , ) T_AS T_VARIABLE($key) ) { T_IF ( T_ISSET ( T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ) ) { T_VARIABLE($form) [ T_VARIABLE($key) ] = T_VARIABLE($form) [ ] [ T_VARIABLE($key) ] ; } } T_UNSET ( T_VARIABLE($form) [ ] ) ; } T_ELSE { T_VARIABLE($form) = T_STRING ( T_VARIABLE($form) , T_VARIABLE($extra) ) ; } T_IF ( T_STRING ( , T_LNUMBER ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( , T_STRING ) , T_DOUBLE_ARROW , ) ; T_STRING ( , ) ; } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_register_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] , T_VARIABLE($form_state) [ ] , ) ; } T_FUNCTION(_user_forms) ( & T_VARIABLE($edit) , T_VARIABLE($account) , T_VARIABLE($category) , T_VARIABLE($hook) = ) { T_VARIABLE($groups) = T_ARRAY ( ) ; T_FOREACH ( T_STRING ( ) T_AS T_VARIABLE($module) ) { T_IF ( T_VARIABLE($data) = T_STRING ( T_VARIABLE($module) , , T_VARIABLE($hook) , T_VARIABLE($edit) , T_VARIABLE($account) , T_VARIABLE($category) ) ) { T_VARIABLE($groups) = T_STRING ( T_VARIABLE($data) , T_VARIABLE($groups) ) ; } } T_STRING ( T_VARIABLE($groups) , ) ; T_RETURN T_EMPTY ( T_VARIABLE($groups) ) ? T_STRING : T_VARIABLE($groups) ; }",13,1
"T_OPEN_TAG T_FUNCTION(user_autocomplete) ( T_VARIABLE($string) = ) { T_VARIABLE($matches) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($string) ) { T_VARIABLE($result) = T_STRING ( , T_VARIABLE($string) , T_LNUMBER , T_LNUMBER ) ; T_WHILE ( T_VARIABLE($user) = T_STRING ( T_VARIABLE($result) ) ) { T_VARIABLE($matches) [ T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ] = T_STRING ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; } } T_STRING ( T_VARIABLE($matches) ) ; } T_FUNCTION(user_pass) ( ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ( T_STRING , T_STRING ) , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_pass_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($name) = T_STRING ( T_VARIABLE($form_state) [ ] [ ] ) ; T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_LNUMBER ) ) ; T_IF ( ! T_VARIABLE($account) ) { T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) , T_DOUBLE_ARROW T_LNUMBER ) ) ; } T_IF ( T_ISSET ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) { T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_VARIABLE($account) , T_VARIABLE($form_state) ) ; } T_ELSE { T_STRING ( , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($name) ) ) ) ; } } T_FUNCTION(user_pass_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_GLOBAL T_VARIABLE($language) ; T_VARIABLE($account) = T_VARIABLE($form_state) [ ] [ ] ; T_STRING ( , T_VARIABLE($account) , T_VARIABLE($language) ) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( T_STRING ( ) ) ; T_VARIABLE($form_state) [ ] = ; T_RETURN ; } T_FUNCTION(user_pass_reset) ( & T_VARIABLE($form_state) , T_VARIABLE($uid) , T_VARIABLE($timestamp) , T_VARIABLE($hashed_pass) , T_VARIABLE($action) = T_STRING ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } T_ELSE { T_VARIABLE($timeout) = T_LNUMBER ; T_VARIABLE($current) = T_STRING ( ) ; T_IF ( T_VARIABLE($timestamp) < T_VARIABLE($current) T_BOOLEAN_AND T_VARIABLE($account) = T_STRING ( T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($uid) , T_DOUBLE_ARROW T_LNUMBER ) ) ) { T_IF ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($current) - T_VARIABLE($timestamp) > T_VARIABLE($timeout) ) { T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } T_ELSE T_IF ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($timestamp) > T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING T_BOOLEAN_AND T_VARIABLE($timestamp) < T_VARIABLE($current) T_BOOLEAN_AND T_VARIABLE($hashed_pass) T_IS_EQUAL T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($timestamp) , T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) { T_IF ( T_VARIABLE($action) T_IS_EQUAL ) { T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_VARIABLE($timestamp) ) ) ; T_VARIABLE($user) = T_VARIABLE($account) ; T_STRING ( T_VARIABLE($form_state) [ ] ) ; T_STRING ( T_STRING ( ) ) ; T_STRING ( . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING . ) ; } T_ELSE { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($timestamp) + T_VARIABLE($timeout) ) ) ) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW . T_STRING ( ) . ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) ) ; T_VARIABLE($form) [ ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($uid) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($timestamp) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($hashed_pass) T_ENCAPSED_AND_WHITESPACE ) ; T_RETURN T_VARIABLE($form) ; } } T_ELSE { T_STRING ( T_STRING ( ) ) ; T_STRING ( ) ; } } T_ELSE { T_STRING ( ) ; } } } T_FUNCTION(user_logout) ( ) { T_GLOBAL T_VARIABLE($user) ; T_STRING ( , , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( ) ; T_STRING ( , , T_STRING , T_VARIABLE($user) ) ; T_VARIABLE($user) = T_STRING ( ) ; T_STRING ( ) ; } T_FUNCTION(user_view) ( T_VARIABLE($account) ) { T_STRING ( T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_STRING ( T_VARIABLE($account) ) ; T_RETURN T_STRING ( , T_VARIABLE($account) ) ; } T_FUNCTION(template_preprocess_user_profile) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING , ) ; T_FOREACH ( T_STRING ( T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING ) T_AS T_VARIABLE($key) ) { T_VARIABLE($variables) [ ] [ T_VARIABLE($key) ] = T_STRING ( T_VARIABLE($variables) [ ] T_OBJECT_OPERATOR T_STRING [ T_VARIABLE($key) ] ) ; } T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] ) ; } T_FUNCTION(template_preprocess_user_profile_item) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] [ ] ; T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] [ ] ; T_VARIABLE($variables) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($variables) [ ] [ ] ) ) { T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] [ ] ) ; } } T_FUNCTION(template_preprocess_user_profile_category) ( & T_VARIABLE($variables) ) { T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] [ ] ) ; T_VARIABLE($variables) [ ] = T_VARIABLE($variables) [ ] [ ] ; T_VARIABLE($variables) [ ] = ; T_IF ( T_ISSET ( T_VARIABLE($variables) [ ] [ ] ) ) { T_VARIABLE($variables) [ ] = T_STRING ( T_VARIABLE($variables) [ ] [ ] ) ; } } T_FUNCTION(user_edit) ( T_VARIABLE($account) , T_VARIABLE($category) = ) { T_STRING ( T_STRING ( T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) ; T_RETURN T_STRING ( , T_VARIABLE($account) , T_VARIABLE($category) ) ; } T_FUNCTION(user_profile_form) ( T_VARIABLE($form_state) , T_VARIABLE($account) , T_VARIABLE($category) = ) { T_VARIABLE($edit) = ( T_EMPTY ( T_VARIABLE($form_state) [ ] ) ) ? T_ARRAY_CAST T_VARIABLE($account) : T_VARIABLE($form_state) [ ] ; T_VARIABLE($form) = T_STRING ( T_VARIABLE($edit) , T_VARIABLE($account) , T_VARIABLE($category) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($category) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($account) ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ( ) , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; } T_VARIABLE($form) [ ] [ ] = ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(user_profile_form_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_IF ( ( ! T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_STRING ( T_VARIABLE($form_state) [ ] ) , T_ARRAY ( , , ) ) ) T_BOOLEAN_OR ( ! T_STRING ( ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) ) { T_STRING ( , , T_ARRAY ( ) , T_STRING ) ; T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(user_profile_form_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($account) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($category) = T_VARIABLE($form_state) [ ] [ ] ; T_UNSET ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] , T_VARIABLE($account) , T_VARIABLE($category) ) ; T_STRING ( T_VARIABLE($account) , T_VARIABLE($form_state) [ ] , T_VARIABLE($category) ) ; T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_RETURN ; } T_FUNCTION(user_edit_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($destination) = ; T_IF ( T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($destination) = T_STRING ( ) ; T_UNSET ( T_VARIABLE($_REQUEST) [ ] ) ; } T_VARIABLE($form_state) [ ] = T_ARRAY ( . T_VARIABLE($form_state) [ ] [ ] T_OBJECT_OPERATOR T_STRING . , T_VARIABLE($destination) ) ; } T_FUNCTION(user_confirm_delete) ( & T_VARIABLE($form_state) , T_VARIABLE($account) ) { T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($account) ) ; T_RETURN T_STRING ( T_VARIABLE($form) , T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING ) ) , . T_VARIABLE($account) T_OBJECT_OPERATOR T_STRING , T_STRING ( ) , T_STRING ( ) , T_STRING ( ) ) ; } T_FUNCTION(user_confirm_delete_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( T_VARIABLE($form_state) [ ] , T_VARIABLE($form_state) [ ] [ ] T_OBJECT_OPERATOR T_STRING ) ; T_STRING ( T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($form_state) [ ] [ ] T_OBJECT_OPERATOR T_STRING ) ) ) ; T_IF ( ! T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ) { T_VARIABLE($form_state) [ ] = ; } } T_FUNCTION(user_edit_validate) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_STRING ( , T_VARIABLE($form_state) [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_IF ( ( ! T_STRING ( ) T_BOOLEAN_AND T_STRING ( T_STRING ( T_VARIABLE($form_state) [ ] ) , T_ARRAY ( , , ) ) ) T_BOOLEAN_OR ( ! T_STRING ( ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($form_state) [ ] [ ] ) ) ) { T_STRING ( , , T_ARRAY ( ) , T_STRING ) ; T_STRING ( , T_STRING ( ) ) ; } } T_FUNCTION(user_edit_submit) ( T_VARIABLE($form) , & T_VARIABLE($form_state) ) { T_VARIABLE($account) = T_VARIABLE($form_state) [ ] [ ] ; T_VARIABLE($category) = T_VARIABLE($form_state) [ ] [ ] ; T_UNSET ( T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] , T_VARIABLE($form_state) [ ] [ ] ) ; T_STRING ( , T_VARIABLE($form_state) [ ] , T_VARIABLE($account) , T_VARIABLE($category) ) ; T_STRING ( T_VARIABLE($account) , T_VARIABLE($form_state) [ ] , T_VARIABLE($category) ) ; T_STRING ( ) ; T_STRING ( T_STRING ( ) ) ; T_RETURN ; } T_FUNCTION(user_page) ( ) { T_GLOBAL T_VARIABLE($user) ; T_IF ( T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) { T_STRING ( . T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING ) ; T_RETURN T_STRING ( ) ; } T_ELSE { T_RETURN T_STRING ( ) ; } }",12,1
"T_OPEN_TAG T_VARIABLE($db_url) = ; T_VARIABLE($db_prefix) = ; T_VARIABLE($update_free_access) = T_STRING ; T_STRING ( , ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , T_LNUMBER ) ; T_STRING ( , ) ;",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($title) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT . T_VARIABLE($status) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($picture) ) { T_PRINT T_VARIABLE($picture) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($new) T_IS_NOT_EQUAL ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($new) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($submitted) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($signature) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($signature) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($links) ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($sticky) ) { T_PRINT ; } T_CLOSE_TAG T_OPEN_TAG T_IF ( ! T_VARIABLE($status) ) { T_PRINT ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($picture) ) { T_PRINT T_VARIABLE($picture) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($page) T_IS_EQUAL T_LNUMBER ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($node_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($submitted) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($terms) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($links) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($links) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head_title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($styles) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($scripts) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($logo) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($front_page) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($logo) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($site_name) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($front_page) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($site_name) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($site_slogan) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($site_slogan) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($secondary_links) ) ) { T_CLOSE_TAG T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($secondary_links) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) T_CLOSE_TAG T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($primary_links) ) ) { T_CLOSE_TAG T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($primary_links) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) T_CLOSE_TAG T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($search_box) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($header) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($left) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($left) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($mission) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($mission) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($breadcrumb) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($tabs) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($show_messages) ) { T_PRINT T_VARIABLE($messages) ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($help) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($feed_icons) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($right) ) { T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($right) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($footer_message) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($footer) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($closure) T_CLOSE_TAG T_INLINE_HTML",1,1
"T_OPEN_TAG T_FUNCTION(chameleon_theme) ( T_VARIABLE($existing) , T_VARIABLE($type) , T_VARIABLE($theme) , T_VARIABLE($path) ) { T_RETURN T_STRING ( T_VARIABLE($existing) , T_ARRAY ( T_VARIABLE($theme) ) ) ; } T_FUNCTION(chameleon_page) ( T_VARIABLE($content) , T_VARIABLE($show_blocks) = T_STRING , T_VARIABLE($show_messages) = T_STRING ) { T_VARIABLE($language) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ; T_VARIABLE($direction) = T_VARIABLE($GLOBALS) [ ] T_OBJECT_OPERATOR T_STRING ? : ; T_IF ( T_STRING ( ) ) { T_STRING ( . T_STRING ( T_STRING ( ) ) . ) ; } T_VARIABLE($title) = T_STRING ( ) ; T_VARIABLE($blocks_left) = T_STRING ( ) ; T_VARIABLE($blocks_right) = T_STRING ( ) ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($language) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($language) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($direction) T_ENCAPSED_AND_WHITESPACE ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($title) ? T_STRING ( T_VARIABLE($title) ) . . T_STRING ( , ) : T_STRING ( , ) . . T_STRING ( , ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($logo) = T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . . T_STRING ( ) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($logo) T_ENCAPSED_AND_WHITESPACE . T_STRING ( ) . ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_STRING ( , ) , ) . ; } T_IF ( T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , ) . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($primary_links) = T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_VARIABLE($secondary_links) = T_STRING ( , T_STRING ( ) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) ; T_IF ( T_ISSET ( T_VARIABLE($primary_links) ) T_BOOLEAN_OR T_ISSET ( T_VARIABLE($secondary_links) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( T_ISSET ( T_VARIABLE($primary_links) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($primary_links) ; } T_IF ( T_ISSET ( T_VARIABLE($secondary_links) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($secondary_links) ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($show_blocks) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($blocks_left) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($blocks_left) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($title) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_STRING ( ) ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($title) T_ENCAPSED_AND_WHITESPACE ; } T_IF ( T_VARIABLE($tabs) = T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($tabs) ; } T_IF ( T_VARIABLE($show_messages) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($content) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($footer) = T_STRING ( , ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($footer) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($show_blocks) T_BOOLEAN_AND ! T_EMPTY ( T_VARIABLE($blocks_right) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_ENCAPSED_AND_WHITESPACE T_VARIABLE($blocks_right) T_ENCAPSED_AND_WHITESPACE ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(chameleon_node) ( T_VARIABLE($node) , T_VARIABLE($teaser) = T_LNUMBER , T_VARIABLE($page) = T_LNUMBER ) { T_VARIABLE($output) = . ( ( ! T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? : ) . ( ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? : ) . ; T_IF ( ! T_VARIABLE($page) ) { T_VARIABLE($output) T_CONCAT_EQUAL . ( T_VARIABLE($teaser) ? T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) : T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_IF ( T_VARIABLE($teaser) T_BOOLEAN_AND T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_ELSEIF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($submitted) [ ] = T_STRING ( T_ENCAPSED_AND_WHITESPACE T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ? T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING , ) ) ) , T_DOUBLE_ARROW T_STRING ) : T_ARRAY ( ) ; T_VARIABLE($terms) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($terms) = T_STRING ( , T_VARIABLE($node) ) ; } T_VARIABLE($links) = T_STRING ( T_VARIABLE($submitted) , T_VARIABLE($terms) ) ; T_IF ( T_ISSET ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($links) = T_STRING ( T_VARIABLE($links) , T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) ; } T_IF ( T_STRING ( T_VARIABLE($links) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_VARIABLE($links) , T_ARRAY ( T_DOUBLE_ARROW ) ) . ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(chameleon_comment) ( T_VARIABLE($comment) , T_VARIABLE($node) , T_VARIABLE($links) = T_ARRAY ( ) ) { T_VARIABLE($submitted) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($comment) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , ) ) ) , T_DOUBLE_ARROW T_STRING ) ; T_VARIABLE($output) = . . T_VARIABLE($status) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($_GET) [ ] , T_ARRAY ( T_DOUBLE_ARROW T_ENCAPSED_AND_WHITESPACE T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ; T_IF ( ! T_EMPTY ( T_VARIABLE($signature) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL T_VARIABLE($signature) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( , T_STRING ( T_VARIABLE($submitted) , T_VARIABLE($links) ) ) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(chameleon_help) ( ) { T_IF ( T_VARIABLE($help) = T_STRING ( ) ) { T_RETURN . T_VARIABLE($help) . ; } }",9,1
"T_OPEN_TAG T_FUNCTION(phptemplate_init) ( T_VARIABLE($template) ) { T_VARIABLE($file) = T_STRING ( T_VARIABLE($template) T_OBJECT_OPERATOR T_STRING ) . ; T_IF ( T_STRING ( T_VARIABLE($file) ) ) { T_INCLUDE_ONCE T_ENCAPSED_AND_WHITESPACE T_VARIABLE($file) ; } } T_FUNCTION(phptemplate_theme) ( T_VARIABLE($existing) , T_VARIABLE($type) , T_VARIABLE($theme) , T_VARIABLE($path) ) { T_VARIABLE($templates) = T_STRING ( T_VARIABLE($existing) , T_ARRAY ( , T_VARIABLE($theme) ) ) ; T_VARIABLE($templates) T_PLUS_EQUAL T_STRING ( T_VARIABLE($existing) , , T_VARIABLE($path) ) ; T_RETURN T_VARIABLE($templates) ; }",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING . . T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_EMPTY ( T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_VARIABLE($info
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ? : ; T_PRINT . T_VARIABLE($status) ; T_PRINT . T_VARIABLE($zebra) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($submitted) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($submitted) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( T_VARIABLE($new) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($picture) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($signature) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($signature) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($links) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($links) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head_title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($styles) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($scripts) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( T_VARIABLE($left) , T_VARIABLE($right) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($header) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($site_fields) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($site_name) ) { T_VARIABLE($site_fields) [ ] = T_STRING ( T_VARIABLE($site_name) ) ; } T_IF ( T_VARIABLE($site_slogan) ) { T_VARIABLE($site_fields) [ ] = T_STRING ( T_VARIABLE($site_slogan) ) ; } T_VARIABLE($site_title) = T_STRING ( , T_VARIABLE($site_fields) ) ; T_IF ( T_VARIABLE($site_fields) ) { T_VARIABLE($site_fields) [ T_LNUMBER ] = . T_VARIABLE($site_fields) [ T_LNUMBER ] . ; } T_VARIABLE($site_html) = T_STRING ( , T_VARIABLE($site_fields) ) ; T_IF ( T_VARIABLE($logo) T_BOOLEAN_OR T_VARIABLE($site_title) ) { T_PRINT . T_STRING ( T_VARIABLE($base_path) ) . . T_VARIABLE($site_title) . ; T_IF ( T_VARIABLE($logo) ) { T_PRINT . T_STRING ( T_VARIABLE($logo) ) . . T_VARIABLE($site_title) . ; } T_PRINT T_VARIABLE($site_html) . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($left) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($search_box) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($search_box) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($left) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($title) ) : T_PRINT . ( T_VARIABLE($tabs) ? : ) . . T_VARIABLE($title) . ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($help) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($messages) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($footer_message) . T_VARIABLE($footer) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($right) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($right) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML",0,1
"T_OPEN_TAG T_VARIABLE($info
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($sticky) ) { T_PRINT ; } T_CLOSE_TAG T_OPEN_TAG T_IF ( ! T_VARIABLE($status) ) { T_PRINT ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($picture) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($page) T_IS_EQUAL T_LNUMBER ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($node_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($submitted) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($submitted) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($taxonomy) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($terms) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($links) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($links) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head_title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($styles) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($scripts) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( T_VARIABLE($left) , T_VARIABLE($right) ) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($header) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_VARIABLE($site_fields) = T_ARRAY ( ) ; T_IF ( T_VARIABLE($site_name) ) { T_VARIABLE($site_fields) [ ] = T_STRING ( T_VARIABLE($site_name) ) ; } T_IF ( T_VARIABLE($site_slogan) ) { T_VARIABLE($site_fields) [ ] = T_STRING ( T_VARIABLE($site_slogan) ) ; } T_VARIABLE($site_title) = T_STRING ( , T_VARIABLE($site_fields) ) ; T_IF ( T_VARIABLE($site_fields) ) { T_VARIABLE($site_fields) [ T_LNUMBER ] = . T_VARIABLE($site_fields) [ T_LNUMBER ] . ; } T_VARIABLE($site_html) = T_STRING ( , T_VARIABLE($site_fields) ) ; T_IF ( T_VARIABLE($logo) T_BOOLEAN_OR T_VARIABLE($site_title) ) { T_PRINT . T_STRING ( T_VARIABLE($front_page) ) . . T_VARIABLE($site_title) . ; T_IF ( T_VARIABLE($logo) ) { T_PRINT . T_STRING ( T_VARIABLE($logo) ) . . T_VARIABLE($site_title) . ; } T_PRINT T_VARIABLE($site_html) . ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($primary_links) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($primary_links) , T_ARRAY ( T_DOUBLE_ARROW ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($secondary_links) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($secondary_links) , T_ARRAY ( T_DOUBLE_ARROW ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($left) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($search_box) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($search_box) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($left) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($breadcrumb) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($mission) ) : T_PRINT . T_VARIABLE($mission) . ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($tabs) ) : T_PRINT ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($title) ) : T_PRINT . ( T_VARIABLE($tabs) ? : ) . . T_VARIABLE($title) . ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($tabs) ) : T_PRINT . T_VARIABLE($tabs) . ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($tabs2) ) : T_PRINT . T_VARIABLE($tabs2) . ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($show_messages) T_BOOLEAN_AND T_VARIABLE($messages) ) : T_PRINT T_VARIABLE($messages) ; T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($help) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($feed_icons) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($footer_message) . T_VARIABLE($footer) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($right) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( ! T_VARIABLE($left) T_BOOLEAN_AND T_VARIABLE($search_box) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($search_box) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($right) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($closure) T_CLOSE_TAG T_INLINE_HTML",3,1
"T_OPEN_TAG T_FUNCTION(phptemplate_body_class) ( T_VARIABLE($left) , T_VARIABLE($right) ) { T_IF ( T_VARIABLE($left) T_IS_NOT_EQUAL T_BOOLEAN_AND T_VARIABLE($right) T_IS_NOT_EQUAL ) { T_VARIABLE($class) = ; } T_ELSE { T_IF ( T_VARIABLE($left) T_IS_NOT_EQUAL ) { T_VARIABLE($class) = ; } T_IF ( T_VARIABLE($right) T_IS_NOT_EQUAL ) { T_VARIABLE($class) = ; } } T_IF ( T_ISSET ( T_VARIABLE($class) ) ) { T_PRINT . T_VARIABLE($class) . ; } } T_FUNCTION(phptemplate_breadcrumb) ( T_VARIABLE($breadcrumb) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($breadcrumb) ) ) { T_RETURN . T_STRING ( , T_VARIABLE($breadcrumb) ) . ; } } T_FUNCTION(phptemplate_comment_wrapper) ( T_VARIABLE($content) , T_VARIABLE($node) ) { T_IF ( ! T_VARIABLE($content) T_BOOLEAN_OR T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL ) { T_RETURN . T_VARIABLE($content) . ; } T_ELSE { T_RETURN . T_STRING ( ) . . T_VARIABLE($content) . ; } } T_FUNCTION(phptemplate_preprocess_page) ( & T_VARIABLE($vars) ) { T_VARIABLE($vars) [ ] = T_STRING ( ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($vars) ) ; } } T_FUNCTION(phptemplate_menu_local_tasks) ( ) { T_RETURN T_STRING ( ) ; } T_FUNCTION(phptemplate_comment_submitted) ( T_VARIABLE($comment) ) { T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($comment) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) ) ) ; } T_FUNCTION(phptemplate_node_submitted) ( T_VARIABLE($node) ) { T_RETURN T_STRING ( , T_ARRAY ( T_DOUBLE_ARROW T_STRING ( , T_VARIABLE($node) ) , T_DOUBLE_ARROW T_STRING ( T_VARIABLE($node) T_OBJECT_OPERATOR T_STRING ) , ) ) ; } T_FUNCTION(phptemplate_get_ie_styles) ( ) { T_GLOBAL T_VARIABLE($language) ; T_VARIABLE($iecss) = . T_STRING ( ) . T_STRING ( ) . ; T_IF ( T_STRING ( ) T_BOOLEAN_AND T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_STRING ) { T_VARIABLE($iecss) T_CONCAT_EQUAL . T_STRING ( ) . T_STRING ( ) . ; } T_RETURN T_VARIABLE($iecss) ; }",5,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_ENCAPSED_AND_WHITESPACE T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_ENCAPSED_AND_WHITESPACE T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_ENCAPSED_AND_WHITESPACE T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($block) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($title) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT . T_VARIABLE($status) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($picture) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($picture) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($submitted) T_CLOSE_TAG T_OPEN_TAG T_IF ( T_VARIABLE($comment) T_OBJECT_OPERATOR T_STRING ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($new) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($signature) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($signature) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($links) T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($sticky) ) { T_PRINT ; } T_CLOSE_TAG T_OPEN_TAG T_IF ( ! T_VARIABLE($status) ) { T_PRINT ; } T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($picture) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($page) T_IS_EQUAL T_LNUMBER ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($node_url) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($submitted) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($terms) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($links) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($links) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML",0,0
"T_OPEN_TAG T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($language) T_OBJECT_OPERATOR T_STRING T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head_title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($head) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($styles) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($scripts) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($logo) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($front_page) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT ( T_VARIABLE($logo) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($site_name) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($front_page) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT ( T_VARIABLE($site_name) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($site_slogan) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT ( T_VARIABLE($site_slogan) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($primary_links) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($secondary_links) , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($search_box) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($header) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($left) T_IS_NOT_EQUAL ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($left) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($mission) T_IS_NOT_EQUAL ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($mission) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($title) T_IS_NOT_EQUAL ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($breadcrumb) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($title) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($tabs) T_IS_NOT_EQUAL ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($tabs) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($show_messages) T_BOOLEAN_AND T_VARIABLE($messages) T_IS_NOT_EQUAL ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($messages) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($help) T_IS_NOT_EQUAL ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($help) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($content) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($feed_icons) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($right) T_IS_NOT_EQUAL ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($right) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($primary_links) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($primary_links) , T_ARRAY ( T_DOUBLE_ARROW ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_ISSET ( T_VARIABLE($secondary_links) ) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_STRING ( , T_VARIABLE($secondary_links) , T_ARRAY ( T_DOUBLE_ARROW ) ) T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_IF ( T_VARIABLE($footer_message) T_BOOLEAN_OR T_VARIABLE($footer) ) : T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_PRINT T_VARIABLE($footer_message) . T_VARIABLE($footer) ; T_CLOSE_TAG T_INLINE_HTML T_OPEN_TAG T_ENDIF ; T_CLOSE_TAG T_OPEN_TAG T_PRINT T_VARIABLE($closure) ; T_CLOSE_TAG T_INLINE_HTML",3,1
"T_OPEN_TAG T_STRING ( , ) ; T_FUNCTION(db_add_column) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($column) , T_VARIABLE($type) , T_VARIABLE($attributes) = T_ARRAY ( ) ) { T_IF ( T_STRING ( , T_VARIABLE($attributes) ) T_LOGICAL_AND T_VARIABLE($attributes) [ ] ) { T_VARIABLE($not_null) = ; } T_IF ( T_STRING ( , T_VARIABLE($attributes) ) ) { T_IF ( T_STRING ( T_VARIABLE($attributes) [ ] ) ) { T_VARIABLE($default_val) = ; T_VARIABLE($default) = ; } T_ELSEIF ( T_VARIABLE($attributes) [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($default) = ; } T_ELSE { T_VARIABLE($default_val) = T_VARIABLE($attributes) [ T_STRING ] ; T_VARIABLE($default) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($attributes) [ T_STRING ] ; } } T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($type) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($default) ) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($default) ) ; } T_IF ( ! T_EMPTY ( T_VARIABLE($not_null) ) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($default) ) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($default_val) ) ; } T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column) T_ENCAPSED_AND_WHITESPACE ) ; } } T_FUNCTION(db_change_column) ( & T_VARIABLE($ret) , T_VARIABLE($table) , T_VARIABLE($column) , T_VARIABLE($column_new) , T_VARIABLE($type) , T_VARIABLE($attributes) = T_ARRAY ( ) ) { T_IF ( T_STRING ( , T_VARIABLE($attributes) ) T_LOGICAL_AND T_VARIABLE($attributes) [ ] ) { T_VARIABLE($not_null) = ; } T_IF ( T_STRING ( , T_VARIABLE($attributes) ) ) { T_IF ( T_STRING ( T_VARIABLE($attributes) [ ] ) ) { T_VARIABLE($default_val) = ; T_VARIABLE($default) = ; } T_ELSEIF ( T_VARIABLE($attributes) [ ] T_IS_IDENTICAL T_STRING ) { T_VARIABLE($default) = ; } T_ELSE { T_VARIABLE($default_val) = T_VARIABLE($attributes) [ T_STRING ] ; T_VARIABLE($default) = T_ENCAPSED_AND_WHITESPACE T_VARIABLE($attributes) [ T_STRING ] ; } } T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column) T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($column) . ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column_new) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($type) ) ; T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column_new) T_ENCAPSED_AND_WHITESPACE . T_VARIABLE($column) . ) ; T_IF ( T_VARIABLE($default) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column_new) T_ENCAPSED_AND_WHITESPACE T_VARIABLE($default) ) ; } T_IF ( T_VARIABLE($not_null) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . T_ENCAPSED_AND_WHITESPACE T_VARIABLE($column_new) T_ENCAPSED_AND_WHITESPACE ) ; } T_VARIABLE($ret) [ ] = T_STRING ( . T_VARIABLE($table) . . T_VARIABLE($column) . ) ; } T_FUNCTION(update_do_one) ( T_VARIABLE($module) , T_VARIABLE($number) , & T_VARIABLE($context) ) { T_IF ( ! T_EMPTY ( T_VARIABLE($context) [ ] [ T_VARIABLE($module) ] [ ] ) ) { T_RETURN ; } T_VARIABLE($function) = T_VARIABLE($module) . . T_VARIABLE($number) ; T_IF ( T_STRING ( T_VARIABLE($function) ) ) { T_VARIABLE($ret) = T_VARIABLE($function) ( T_VARIABLE($context) [ ] ) ; } T_IF ( T_ISSET ( T_VARIABLE($ret) [ ] ) ) { T_VARIABLE($context) [ ] = T_VARIABLE($ret) [ ] ; T_UNSET ( T_VARIABLE($ret) [ ] ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($context) [ ] [ T_VARIABLE($module) ] ) ) { T_VARIABLE($context) [ ] [ T_VARIABLE($module) ] = T_ARRAY ( ) ; } T_IF ( ! T_ISSET ( T_VARIABLE($context) [ ] [ T_VARIABLE($module) ] [ T_VARIABLE($number) ] ) ) { T_VARIABLE($context) [ ] [ T_VARIABLE($module) ] [ T_VARIABLE($number) ] = T_ARRAY ( ) ; } T_VARIABLE($context) [ ] [ T_VARIABLE($module) ] [ T_VARIABLE($number) ] = T_STRING ( T_VARIABLE($context) [ ] [ T_VARIABLE($module) ] [ T_VARIABLE($number) ] , T_VARIABLE($ret) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($ret) [ ] ) ) { T_VARIABLE($context) [ ] [ T_VARIABLE($module) ] [ ] = T_STRING ; } T_IF ( T_VARIABLE($context) [ ] T_IS_EQUAL T_LNUMBER T_BOOLEAN_AND T_EMPTY ( T_VARIABLE($context) [ ] [ T_VARIABLE($module) ] [ ] ) ) { T_STRING ( T_VARIABLE($module) , T_VARIABLE($number) ) ; } T_VARIABLE($context) [ ] = . T_STRING ( T_VARIABLE($module) ) . ; } T_FUNCTION(update_selection_page) ( ) { T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_STRING ( ) ; T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( ) ; T_STRING ( ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(update_script_selection_form) ( ) { T_VARIABLE($form) = T_ARRAY ( ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING , ) ; T_VARIABLE($form) [ ] [ ] = T_ARRAY ( ) ; T_VARIABLE($modules) = T_STRING ( T_STRING , T_STRING , T_STRING ) ; T_FOREACH ( T_VARIABLE($modules) T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($schema_version) ) { T_VARIABLE($updates) = T_STRING ( T_VARIABLE($module) ) ; T_IF ( ! T_STRING ( T_VARIABLE($module) ) T_BOOLEAN_AND T_VARIABLE($updates) T_IS_NOT_IDENTICAL T_STRING T_BOOLEAN_AND T_VARIABLE($schema_version) T_IS_GREATER_OR_EQUAL T_LNUMBER ) { T_VARIABLE($last_removed) = T_STRING ( T_VARIABLE($module) , ) ; T_IF ( T_VARIABLE($schema_version) < T_VARIABLE($last_removed) ) { T_VARIABLE($form) [ ] [ T_VARIABLE($module) ] = T_ARRAY ( T_DOUBLE_ARROW . T_VARIABLE($module) . . T_VARIABLE($schema_version) . . T_VARIABLE($last_removed) . . T_VARIABLE($module) . , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_VARIABLE($form) [ ] [ ] = T_STRING ; T_CONTINUE ; } T_VARIABLE($updates) = T_STRING ( T_VARIABLE($updates) ) ; T_VARIABLE($updates) [ ] = ; T_VARIABLE($default) = T_VARIABLE($schema_version) ; T_FOREACH ( T_STRING ( T_VARIABLE($updates) ) T_AS T_VARIABLE($update) ) { T_IF ( T_VARIABLE($update) > T_VARIABLE($schema_version) ) { T_VARIABLE($default) = T_VARIABLE($update) ; T_BREAK ; } } T_VARIABLE($form) [ ] [ T_VARIABLE($module) ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_VARIABLE($module) . , T_DOUBLE_ARROW T_VARIABLE($default) , T_DOUBLE_ARROW T_VARIABLE($updates) , ) ; } } T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW ) , ) ; T_VARIABLE($form) [ ] = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_RETURN T_VARIABLE($form) ; } T_FUNCTION(update_batch) ( ) { T_GLOBAL T_VARIABLE($base_url) ; T_VARIABLE($operations) = T_ARRAY ( ) ; T_FOREACH ( T_VARIABLE($_POST) [ ] T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($version) ) { T_STRING ( T_VARIABLE($module) , T_VARIABLE($version) - T_LNUMBER ) ; T_VARIABLE($updates) = T_STRING ( T_VARIABLE($module) ) ; T_VARIABLE($max_version) = T_STRING ( T_VARIABLE($updates) ) ; T_IF ( T_VARIABLE($version) T_IS_SMALLER_OR_EQUAL T_VARIABLE($max_version) ) { T_FOREACH ( T_VARIABLE($updates) T_AS T_VARIABLE($update) ) { T_IF ( T_VARIABLE($update) T_IS_GREATER_OR_EQUAL T_VARIABLE($version) ) { T_VARIABLE($operations) [ ] = T_ARRAY ( , T_ARRAY ( T_VARIABLE($module) , T_VARIABLE($update) ) ) ; } } } } T_VARIABLE($batch) = T_ARRAY ( T_DOUBLE_ARROW T_VARIABLE($operations) , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_STRING ( T_VARIABLE($batch) ) ; T_STRING ( T_VARIABLE($base_url) . , T_VARIABLE($base_url) . ) ; } T_FUNCTION(update_finished) ( T_VARIABLE($success) , T_VARIABLE($results) , T_VARIABLE($operations) ) { T_STRING ( ) ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($results) ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($success) ; T_VARIABLE($_SESSION) [ ] = T_VARIABLE($operations) ; } T_FUNCTION(update_results_page) ( ) { T_STRING ( ) ; T_VARIABLE($links) [ ] = . T_STRING ( ) . ; T_VARIABLE($links) [ ] = . T_STRING ( ) . ; T_STRING ( ) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($log_message) = . T_STRING ( ) . ; } T_ELSE { T_VARIABLE($log_message) = ; } T_IF ( T_VARIABLE($_SESSION) [ ] ) { T_VARIABLE($output) = . T_STRING ( ) . . T_VARIABLE($log_message) . ; } T_ELSE { T_LIST ( T_VARIABLE($module) , T_VARIABLE($version) ) = T_STRING ( T_STRING ( T_VARIABLE($_SESSION) [ ] ) ) ; T_VARIABLE($output) = . T_VARIABLE($version) . . T_VARIABLE($module) . . T_VARIABLE($log_message) ; T_IF ( T_STRING ( ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_IF ( ! T_EMPTY ( T_VARIABLE($GLOBALS) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; } T_VARIABLE($output) T_CONCAT_EQUAL T_STRING ( , T_VARIABLE($links) ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($_SESSION) [ ] ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($_SESSION) [ ] T_AS T_VARIABLE($module) T_DOUBLE_ARROW T_VARIABLE($updates) ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($module) . ; T_FOREACH ( T_VARIABLE($updates) T_AS T_VARIABLE($number) T_DOUBLE_ARROW T_VARIABLE($queries) ) { T_IF ( T_VARIABLE($number) T_IS_NOT_EQUAL ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($number) . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_FOREACH ( T_VARIABLE($queries) T_AS T_VARIABLE($query) ) { T_IF ( T_VARIABLE($query) [ ] ) { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($query) [ ] . ; } T_ELSE { T_VARIABLE($output) T_CONCAT_EQUAL . T_VARIABLE($query) [ ] . ; } } T_IF ( ! T_STRING ( T_VARIABLE($queries) ) ) { T_VARIABLE($output) T_CONCAT_EQUAL ; } } T_VARIABLE($output) T_CONCAT_EQUAL ; } } T_VARIABLE($output) T_CONCAT_EQUAL ; } T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; T_UNSET ( T_VARIABLE($_SESSION) [ ] ) ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(update_info_page) ( ) { T_STRING ( ) ; T_IF ( T_STRING ( ) ) { T_STRING ( , , T_STRING ) ; } T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($output) = ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL . T_STRING ( ) . . ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_VARIABLE($output) T_CONCAT_EQUAL ; T_RETURN T_VARIABLE($output) ; } T_FUNCTION(update_access_denied_page) ( ) { T_STRING ( ) ; T_RETURN ; } T_FUNCTION(update_create_batch_table) ( ) { T_IF ( T_STRING ( ) ) { T_RETURN ; } T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , ) ; T_VARIABLE($ret) = T_ARRAY ( ) ; T_STRING ( T_VARIABLE($ret) , , T_VARIABLE($schema) [ ] ) ; T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(update_fix_compatibility) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_VARIABLE($incompatible) = T_ARRAY ( ) ; T_VARIABLE($query) = T_STRING ( ) ; T_WHILE ( T_VARIABLE($result) = T_STRING ( T_VARIABLE($query) ) ) { T_IF ( T_STRING ( T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING , T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ) ) { T_VARIABLE($incompatible) [ ] = T_VARIABLE($result) T_OBJECT_OPERATOR T_STRING ; } } T_IF ( ! T_EMPTY ( T_VARIABLE($incompatible) ) ) { T_VARIABLE($ret) [ ] = T_STRING ( . T_STRING ( , T_VARIABLE($incompatible) ) . ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(update_check_incompatibility) ( T_VARIABLE($name) , T_VARIABLE($type) = ) { T_STATIC T_VARIABLE($themes) , T_VARIABLE($modules) ; T_IF ( T_EMPTY ( T_VARIABLE($themes) ) T_BOOLEAN_OR T_EMPTY ( T_VARIABLE($modules) ) ) { T_VARIABLE($themes) = T_STRING ( ) ; T_VARIABLE($modules) = T_STRING ( ) ; } T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($modules) [ T_VARIABLE($name) ] ) ) { T_VARIABLE($file) = T_VARIABLE($modules) [ T_VARIABLE($name) ] ; } T_ELSE T_IF ( T_VARIABLE($type) T_IS_EQUAL T_BOOLEAN_AND T_ISSET ( T_VARIABLE($themes) [ T_VARIABLE($name) ] ) ) { T_VARIABLE($file) = T_VARIABLE($themes) [ T_VARIABLE($name) ] ; } T_IF ( ! T_ISSET ( T_VARIABLE($file) ) T_BOOLEAN_OR ! T_ISSET ( T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) T_BOOLEAN_OR T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] T_IS_NOT_EQUAL T_STRING T_BOOLEAN_OR T_STRING ( T_STRING ( ) , T_VARIABLE($file) T_OBJECT_OPERATOR T_STRING [ ] ) < T_LNUMBER ) { T_RETURN T_STRING ; } T_RETURN T_STRING ; } T_FUNCTION(update_fix_d6_requirements) ( ) { T_VARIABLE($ret) = T_ARRAY ( ) ; T_IF ( T_STRING ( ) < T_LNUMBER T_BOOLEAN_AND ! T_STRING ( , T_STRING ) ) { T_VARIABLE($spec) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING ) ; T_STRING ( T_VARIABLE($ret) , , , T_VARIABLE($spec) ) ; T_STRING ( T_VARIABLE($ret) , , , T_VARIABLE($spec) ) ; T_STRING ( T_VARIABLE($ret) , , , T_VARIABLE($spec) ) ; T_STRING ( T_VARIABLE($ret) , , , T_VARIABLE($spec) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; } T_IF ( T_STRING ( ) ) { T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; T_STRING ( T_VARIABLE($ret) , , , T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) ) ; } T_STRING ( , T_STRING ) ; T_VARIABLE($schema) [ ] = T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_LNUMBER , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW T_STRING , T_DOUBLE_ARROW T_LNUMBER ) ) , T_DOUBLE_ARROW T_ARRAY ( T_DOUBLE_ARROW T_ARRAY ( ) ) , T_DOUBLE_ARROW T_ARRAY ( ) , ) ; T_STRING ( T_VARIABLE($ret) , , T_VARIABLE($schema) [ ] ) ; } T_RETURN T_VARIABLE($ret) ; } T_FUNCTION(update_task_list) ( T_VARIABLE($active) = T_STRING ) { T_VARIABLE($tasks) = T_ARRAY ( T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , T_DOUBLE_ARROW , ) ; T_STRING ( , T_STRING ( , T_VARIABLE($tasks) , T_VARIABLE($active) ) ) ; } T_FUNCTION(update_check_requirements) ( ) { T_VARIABLE($requirements) = T_STRING ( , , ) ; T_VARIABLE($severity) = T_STRING ( T_VARIABLE($requirements) ) ; T_IF ( T_VARIABLE($severity) T_IS_NOT_EQUAL T_STRING ) { T_FOREACH ( T_VARIABLE($requirements) T_AS T_VARIABLE($requirement) ) { T_IF ( T_ISSET ( T_VARIABLE($requirement) [ ] ) T_BOOLEAN_AND T_VARIABLE($requirement) [ ] T_IS_NOT_EQUAL T_STRING ) { T_VARIABLE($message) = T_ISSET ( T_VARIABLE($requirement) [ ] ) ? T_VARIABLE($requirement) [ ] : ; T_IF ( T_ISSET ( T_VARIABLE($requirement) [ ] ) T_BOOLEAN_AND T_VARIABLE($requirement) [ ] ) { T_VARIABLE($message) T_CONCAT_EQUAL . T_VARIABLE($requirement) [ ] . . T_VARIABLE($requirement) [ ] . ; } T_STRING ( T_VARIABLE($message) , ) ; } } } } T_STRING ( , T_STRING ) ; T_REQUIRE_ONCE ; T_VARIABLE($op) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : ; T_IF ( T_EMPTY ( T_VARIABLE($op) ) ) { T_STRING ( T_STRING ) ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_REQUIRE_ONCE ; T_INCLUDE_ONCE ; T_VARIABLE($module_list) [ ] [ ] = ; T_VARIABLE($module_list) [ ] [ ] = ; T_STRING ( T_STRING , T_STRING , T_STRING , T_VARIABLE($module_list) ) ; T_STRING ( , ) ; T_STRING ( , ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($messages) = T_STRING ( ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($messages) [ ] ) ) { T_STRING ( ) ; T_PRINT T_STRING ( , , T_STRING ) ; T_EXIT ; } T_STRING ( ) ; } T_STRING ( T_STRING ) ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( , T_STRING ) ; T_IF ( ! T_EMPTY ( T_VARIABLE($update_free_access) ) T_BOOLEAN_OR T_VARIABLE($user) T_OBJECT_OPERATOR T_STRING T_IS_EQUAL T_LNUMBER ) { T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_STRING ( ) ; T_STRING ( ) ; T_STRING ( ) ; T_VARIABLE($op) = T_ISSET ( T_VARIABLE($_REQUEST) [ ] ) ? T_VARIABLE($_REQUEST) [ ] : ; T_SWITCH ( T_VARIABLE($op) ) { T_CASE : T_VARIABLE($output) = T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($output) = T_STRING ( ) ; T_BREAK ; T_CASE : T_STRING ( ) ; T_BREAK ; T_CASE : T_VARIABLE($output) = T_STRING ( ) ; T_BREAK ; T_DEFAULT : T_STRING ( ) ; T_VARIABLE($output) = T_STRING ( ) ; T_BREAK ; } } T_ELSE { T_VARIABLE($output) = T_STRING ( ) ; } T_IF ( T_ISSET ( T_VARIABLE($output) ) T_BOOLEAN_AND T_VARIABLE($output) ) { T_VARIABLE($progress_page) = ( T_VARIABLE($batch) = T_STRING ( ) ) T_BOOLEAN_AND T_ISSET ( T_VARIABLE($batch) [ ] ) ; T_PRINT T_STRING ( , T_VARIABLE($output) , ! T_VARIABLE($progress_page) ) ; }",13,1
"T_OPEN_TAG T_INCLUDE_ONCE ; T_STRING ( T_STRING ) ; T_INCLUDE_ONCE ; T_INCLUDE_ONCE ; T_STRING ( T_STRING ( ) ) ;",0,0
